{"version":3,"sources":["webpack://sourcecred/webpack/bootstrap","webpack://sourcecred//home/kevin/Projects/sourceCred/sc-core/node_modules/deep-freeze/index.js","webpack://sourcecred//home/kevin/Projects/sourceCred/sc-core/node_modules/big-integer/BigInteger.js","webpack://sourcecred/external \"path\"","webpack://sourcecred//home/kevin/Projects/sourceCred/sc-core/node_modules/json-stable-stringify/index.js","webpack://sourcecred/external \"stream\"","webpack://sourcecred/(webpack)/buildin/module.js","webpack://sourcecred//home/kevin/Projects/sourceCred/sc-core/node_modules/cross-fetch/dist/node-ponyfill.js","webpack://sourcecred//home/kevin/Projects/sourceCred/sc-core/node_modules/lodash.isequal/index.js","webpack://sourcecred/external \"zlib\"","webpack://sourcecred//home/kevin/Projects/sourceCred/sc-core/node_modules/base-64/base64.js","webpack://sourcecred//home/kevin/Projects/sourceCred/sc-core/node_modules/entities/lib/index.js","webpack://sourcecred//home/kevin/Projects/sourceCred/sc-core/node_modules/lodash.findlast/index.js","webpack://sourcecred/external \"url\"","webpack://sourcecred//home/kevin/Projects/sourceCred/sc-core/node_modules/underscore/underscore.js","webpack://sourcecred/external \"buffer\"","webpack://sourcecred//home/kevin/Projects/sourceCred/sc-core/node_modules/bn.js/lib/bn.js","webpack://sourcecred//home/kevin/Projects/sourceCred/sc-core/node_modules/web3-utils/lib/index.js","webpack://sourcecred/external \"util\"","webpack://sourcecred/external \"http\"","webpack://sourcecred//home/kevin/Projects/sourceCred/sc-core/node_modules/entities/lib/decode.js","webpack://sourcecred//home/kevin/Projects/sourceCred/sc-core/node_modules/entities/lib/encode.js","webpack://sourcecred//home/kevin/Projects/sourceCred/sc-core/node_modules/number-to-bn/src/index.js","webpack://sourcecred//home/kevin/Projects/sourceCred/sc-core/node_modules/web3-utils/lib/utils.js","webpack://sourcecred//home/kevin/Projects/sourceCred/sc-core/node_modules/color-convert/conversions.js","webpack://sourcecred/external \"https\"","webpack://sourcecred//home/kevin/Projects/sourceCred/sc-core/node_modules/lodash.sortedindex/index.js","webpack://sourcecred//home/kevin/Projects/sourceCred/sc-core/node_modules/lodash.findlastindex/index.js","webpack://sourcecred//home/kevin/Projects/sourceCred/sc-core/node_modules/lodash.differenceby/index.js","webpack://sourcecred/../grainIntegration-csv/index.js","webpack://sourcecred//home/kevin/Projects/sourceCred/sc-core/node_modules/jsonify/index.js","webpack://sourcecred//home/kevin/Projects/sourceCred/sc-core/node_modules/jsonify/lib/parse.js","webpack://sourcecred//home/kevin/Projects/sourceCred/sc-core/node_modules/jsonify/lib/stringify.js","webpack://sourcecred//home/kevin/Projects/sourceCred/sc-core/node_modules/entities/lib/decode_codepoint.js","webpack://sourcecred//home/kevin/Projects/sourceCred/sc-core/node_modules/ethjs-unit/lib/index.js","webpack://sourcecred//home/kevin/Projects/sourceCred/sc-core/node_modules/ethjs-unit/node_modules/bn.js/lib/bn.js","webpack://sourcecred//home/kevin/Projects/sourceCred/sc-core/node_modules/number-to-bn/node_modules/bn.js/lib/bn.js","webpack://sourcecred//home/kevin/Projects/sourceCred/sc-core/node_modules/strip-hex-prefix/src/index.js","webpack://sourcecred//home/kevin/Projects/sourceCred/sc-core/node_modules/is-hex-prefixed/src/index.js","webpack://sourcecred//home/kevin/Projects/sourceCred/sc-core/node_modules/utf8/utf8.js","webpack://sourcecred//home/kevin/Projects/sourceCred/sc-core/node_modules/eth-lib/lib/hash.js","webpack://sourcecred//home/kevin/Projects/sourceCred/sc-core/node_modules/ethereum-bloom-filters/dist/index.js","webpack://sourcecred//home/kevin/Projects/sourceCred/sc-core/node_modules/ethereum-bloom-filters/dist/utils.js","webpack://sourcecred//home/kevin/Projects/sourceCred/sc-core/node_modules/js-sha3/src/sha3.js","webpack://sourcecred/(webpack)/buildin/amd-options.js","webpack://sourcecred//home/kevin/Projects/sourceCred/sc-core/node_modules/web3-utils/lib/soliditySha3.js","webpack://sourcecred//home/kevin/Projects/sourceCred/sc-core/node_modules/randombytes/index.js","webpack://sourcecred/external \"crypto\"","webpack://sourcecred/./src/util sync","webpack://sourcecred//home/kevin/Projects/sourceCred/sc-core/node_modules/node-fetch/lib/index.mjs","webpack://sourcecred//home/kevin/Projects/sourceCred/sc-core/node_modules/chalk/source/index.js","webpack://sourcecred//home/kevin/Projects/sourceCred/sc-core/node_modules/ansi-styles/index.js","webpack://sourcecred//home/kevin/Projects/sourceCred/sc-core/node_modules/color-convert/index.js","webpack://sourcecred//home/kevin/Projects/sourceCred/sc-core/node_modules/color-name/index.js","webpack://sourcecred//home/kevin/Projects/sourceCred/sc-core/node_modules/color-convert/route.js","webpack://sourcecred//home/kevin/Projects/sourceCred/sc-core/node_modules/supports-color/index.js","webpack://sourcecred/external \"os\"","webpack://sourcecred/external \"tty\"","webpack://sourcecred//home/kevin/Projects/sourceCred/sc-core/node_modules/supports-color/node_modules/has-flag/index.js","webpack://sourcecred//home/kevin/Projects/sourceCred/sc-core/node_modules/chalk/source/util.js","webpack://sourcecred//home/kevin/Projects/sourceCred/sc-core/node_modules/chalk/source/templates.js","webpack://sourcecred/../grainIntegration-csv/distributionToCsv.js","webpack://sourcecred/./src/util/map.js","webpack://sourcecred/./src/util/combo.js","webpack://sourcecred/./src/core/address.js","webpack://sourcecred/./src/util/compat.js","webpack://sourcecred/./src/util/null.js","webpack://sourcecred/./src/core/graph.js","webpack://sourcecred/./src/plugins/discourse/declaration.js","webpack://sourcecred/./src/plugins/discourse/address.js","webpack://sourcecred/./src/plugins/discord/declaration.js","webpack://sourcecred/./src/util/dedent.js","webpack://sourcecred/./src/core/weights.js","webpack://sourcecred/./src/plugins/discord/createGraph.js","webpack://sourcecred/./src/core/identity/name.js","webpack://sourcecred/./src/plugins/discord/createIdentities.js","webpack://sourcecred/./src/plugins/discord/utils.js","webpack://sourcecred/./src/plugins/initiatives/declaration.js","webpack://sourcecred/./src/plugins/github/nodes.js","webpack://sourcecred/./src/plugins/github/bots.js","webpack://sourcecred/./src/plugins/git/nodes.js","webpack://sourcecred/./src/plugins/github/graphqlTypes.js","webpack://sourcecred/./src/plugins/github/edges.js","webpack://sourcecred/./src/plugins/github/declaration.js","webpack://sourcecred/./src/plugins/ethereum/declaration.js","webpack://sourcecred/./src/util/jsonLog.js","webpack://sourcecred/./src/plugins/ethereum/ethAddressNode.js","webpack://sourcecred/./src/plugins/ethereum/createIdentities.js","webpack://sourcecred/./src/plugins/ethereum/ethAddress.js","webpack://sourcecred/./src/plugins/ethereum/utils.js","webpack://sourcecred/./src/analysis/types.js","webpack://sourcecred/./src/analysis/pluginDeclaration.js","webpack://sourcecred/./src/util/uuid.js","webpack://sourcecred/./src/util/getRandomValues.js","webpack://sourcecred/./src/core/identity/id.js","webpack://sourcecred/./src/core/identity/alias.js","webpack://sourcecred/./src/core/identity/identityType.js","webpack://sourcecred/./src/core/identity/identity.js","webpack://sourcecred/./src/core/ledger/currency.js","webpack://sourcecred/./src/api/currencyConfig.js","webpack://sourcecred/./src/core/ledger/grain.js","webpack://sourcecred//home/kevin/Projects/sourceCred/sc-core/node_modules/d3-array/src/sum.js","webpack://sourcecred/./src/core/ledger/nonnegativeGrain.js","webpack://sourcecred/./src/core/ledger/policies/balanced.js","webpack://sourcecred/./src/core/ledger/policies/immediate.js","webpack://sourcecred/./src/core/ledger/policies/recent.js","webpack://sourcecred/./src/core/ledger/policies/special.js","webpack://sourcecred/./src/core/ledger/policies/index.js","webpack://sourcecred/./src/core/ledger/grainAllocation.js","webpack://sourcecred/./src/core/ledger/distribution.js","webpack://sourcecred/./src/core/ledger/ledger.js","webpack://sourcecred/./src/core/ledger/identityProposal.js","webpack://sourcecred/./src/core/weightedGraph.js","webpack://sourcecred/./src/core/storage/textEncoding.js","webpack://sourcecred/./src/util/storage.js","webpack://sourcecred//home/kevin/Projects/sourceCred/sc-core/node_modules/pako/dist/pako.esm.mjs","webpack://sourcecred/./src/core/storage/zip.js","webpack://sourcecred/./src/core/storage/networkStorage.js","webpack://sourcecred/./src/api/pluginId.js","webpack://sourcecred/./src/plugins/external/defaultDeclaration.js","webpack://sourcecred/./src/plugins/external/plugin.js","webpack://sourcecred/./src/core/algorithm/graphToMarkovChain.js","webpack://sourcecred/./src/core/algorithm/distribution.js","webpack://sourcecred/./src/core/algorithm/markovChain.js","webpack://sourcecred/./src/core/trie.js","webpack://sourcecred/./src/core/algorithm/weightEvaluator.js","webpack://sourcecred/./src/util/sortBy.js","webpack://sourcecred//home/kevin/Projects/sourceCred/sc-core/node_modules/d3-time/src/interval.js","webpack://sourcecred//home/kevin/Projects/sourceCred/sc-core/node_modules/d3-time/src/utcWeek.js","webpack://sourcecred//home/kevin/Projects/sourceCred/sc-core/node_modules/d3-time/src/duration.js","webpack://sourcecred/./src/core/interval.js","webpack://sourcecred//home/kevin/Projects/sourceCred/sc-core/node_modules/d3-array/src/min.js","webpack://sourcecred//home/kevin/Projects/sourceCred/sc-core/node_modules/d3-array/src/max.js","webpack://sourcecred/./src/core/credrank/personalAttribution.js","webpack://sourcecred/./src/core/credrank/markovNode.js","webpack://sourcecred/./src/core/credrank/markovEdge.js","webpack://sourcecred/./src/core/credrank/nodeGadgets.js","webpack://sourcecred/./src/core/credrank/edgeGadgets.js","webpack://sourcecred/./src/core/credrank/markovProcessGraph.js","webpack://sourcecred/./src/core/credrank/credGraph.js","webpack://sourcecred/./src/core/credGrainView.js","webpack://sourcecred/./src/core/ledger/computeDistribution.js","webpack://sourcecred/./src/core/ledger/applyDistributions.js","webpack://sourcecred/./src/core/ledger/diffLedger.js","webpack://sourcecred/./src/core/ledger/utils.js","webpack://sourcecred/./src/core/ledger/credAccounts.js","webpack://sourcecred/./src/api/ledgerManager.js","webpack://sourcecred/./src/plugins/github/repoId.js","webpack://sourcecred/./src/api/ledgerStorage/github.js","webpack://sourcecred/./src/util/timestamp.js","webpack://sourcecred/./src/api/dependenciesConfig.js","webpack://sourcecred/./src/core/bonusMinting.js","webpack://sourcecred/./src/core/mintBudget.js","webpack://sourcecred/./src/core/credrank/compute.js","webpack://sourcecred/./src/api/config/personalAttributionsConfig.js","webpack://sourcecred/./src/api/main/credrank.js","webpack://sourcecred/./src/util/taskReporter.js","webpack://sourcecred/./src/core/references/cascadingReferenceDetector.js","webpack://sourcecred/./src/api/main/graph.js","webpack://sourcecred/./src/api/bundledGrainIntegrations.js","webpack://sourcecred/./src/api/grainConfig.js","webpack://sourcecred/./src/api/main/grain.js","webpack://sourcecred/./src/api/bundledDeclarations.js","webpack://sourcecred/./src/api/pluginBudgetConfig.js","webpack://sourcecred/./src/api/rawInstanceConfig.js","webpack://sourcecred/./src/util/pathNormalize.js","webpack://sourcecred/./src/core/storage/originStorage.js","webpack://sourcecred/./src/api/instance/readInstance.js","webpack://sourcecred/./src/api/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","deepFreeze","freeze","getOwnPropertyNames","forEach","prop","isFrozen","BASE","MAX_INT","MAX_INT_ARR","smallToArray","supportsNativeBigInt","BigInt","Integer","v","radix","alphabet","caseSensitive","parseBase","parseValue","BigInteger","sign","this","isSmall","SmallInteger","NativeBigInt","isPrecise","Math","floor","arrayToSmall","arr","trim","length","compareAbs","createArray","x","Array","truncate","ceil","add","a","b","sum","l_a","l_b","carry","base","push","addAny","addSmall","subtract","difference","a_l","b_l","borrow","subtractSmall","multiplyLong","product","a_i","j","multiplySmall","shiftLeft","concat","multiplySmallAndArray","square","divModSmall","lambda","q","remainder","divisor","quotient","divModAny","self","Error","negate","abs","comparison","quotientDigit","shift","result","divisorMostSignificantDigit","divMod1","guess","xlen","highx","highy","check","part","unshift","reverse","divMod2","qSign","mod","mSign","isBasicPrime","isUnit","equals","isEven","isDivisibleBy","lesser","millerRabinTest","nPrev","prev","divide","next","bigInt","modPow","plus","subtractAny","minus","small","multiply","l1","l2","multiplyKaratsuba","y","max","slice","ac","bd","abcd","times","_multiplyBySmall","divmod","over","pow","toString","_0","_1","_2","isNegative","exp","isZero","modInv","isPositive","isOdd","compare","Infinity","compareTo","eq","notEquals","neq","greater","gt","lt","greaterOrEquals","geq","lesserOrEquals","leq","isPrime","strict","bits","bitLength","logN","log","toJSNumber","isProbablePrime","iterations","rng","randBetween","lastT","lastR","zero","newT","one","newR","powersOfTwo","powers2Length","highestPower2","shift_isSmall","bitwise","fn","xSign","ySign","xRem","not","yRem","xDigit","yDigit","xDivMod","yDivMod","String","shiftRight","remQuo","and","or","xor","roughLOB","min","gcd","integerLogarithm","tmp","e","text","toLowerCase","absBase","alphabetValues","digits","start","parseBaseFromArray","val","toBase","apply","map","valueOf","neg","Number","out","left","digit","toBaseString","stringify","join","parseStringValue","split","decimalPlace","indexOf","test","parseNumberValue","toArray","str","toJSON","parseInt","minusOne","lcm","isInstance","usedRNG","random","low","range","restricted","top","fromArray","require","json","JSON","obj","opts","cmp","space","f","cycles","replacer","node","aobj","bobj","seen","parent","level","indent","colonSeparator","undefined","isArray","item","TypeError","keys","objectKeys","sort","keyValue","splice","has","webpackPolyfill","deprecate","paths","children","nodeFetch","realFetch","default","fetch","url","options","ponyfill","Headers","Request","Response","argsTag","mapTag","objectTag","setTag","reIsHostCtor","reIsUint","typedArrayTags","freeGlobal","global","freeSelf","root","Function","freeExports","nodeType","freeModule","moduleExports","freeProcess","process","nodeUtil","binding","nodeIsTypedArray","isTypedArray","arraySome","array","predicate","index","mapToArray","size","setToArray","set","uid","func","transform","arrayProto","funcProto","objectProto","coreJsData","funcToString","maskSrcKey","exec","IE_PROTO","nativeObjectToString","reIsNative","RegExp","replace","Buffer","Uint8Array","propertyIsEnumerable","symToStringTag","nativeGetSymbols","getOwnPropertySymbols","nativeIsBuffer","isBuffer","nativeKeys","arg","DataView","getNative","Map","Promise","Set","WeakMap","nativeCreate","dataViewCtorString","toSource","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","symbolValueOf","Hash","entries","clear","entry","ListCache","MapCache","SetCache","values","__data__","Stack","data","arrayLikeKeys","inherited","isArr","isArg","isArguments","isBuff","isType","skipIndexes","iteratee","baseTimes","isIndex","assocIndexOf","baseGetTag","isOwn","tag","unmasked","getRawTag","objectToString","baseIsArguments","isObjectLike","baseIsEqual","other","bitmask","customizer","stack","equalFunc","objIsArr","othIsArr","objTag","getTag","othTag","objIsObj","othIsObj","isSameTag","equalArrays","byteLength","byteOffset","buffer","message","convert","isPartial","stacked","equalByTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","objProps","getAllKeys","objLength","othLength","skipCtor","objValue","othValue","compared","objCtor","constructor","othCtor","equalObjects","baseIsEqualDeep","baseIsNative","isObject","isMasked","isFunction","baseKeys","Ctor","proto","arrLength","arrValue","othIndex","keysFunc","symbolsFunc","offset","arrayPush","baseGetAllKeys","getSymbols","getMapData","type","getValue","pop","pairs","LARGE_ARRAY_SIZE","resIndex","arrayFilter","symbol","ArrayBuffer","resolve","ctorString","arguments","isLength","baseUnary","window","InvalidCharacterError","error","TABLE","REGEX_SPACE_CHARACTERS","base64","input","padding","output","position","charCodeAt","charAt","bitStorage","bitCounter","fromCharCode","decodeXMLStrict","decodeHTML5Strict","decodeHTML4Strict","decodeHTML5","decodeHTML4","decodeHTMLStrict","decodeHTML","decodeXML","encodeHTML5","encodeHTML4","escapeUTF8","escape","encodeNonAsciiHTML","encodeHTML","encodeXML","encode","decodeStrict","decode","decode_1","encode_1","encode_2","decode_2","reIsDeepProp","reIsPlainProp","reLeadingDot","rePropName","reTrim","reEscapeChar","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","isHostObject","nativeMax","nativeMin","symbolToString","baseGet","path","isKey","castPath","toKey","baseHasIn","baseIteratee","identity","srcValue","isStrictComparable","matchesStrictComparable","defaultValue","hasFunc","hasPath","hasIn","UNORDERED_COMPARE_FLAG","baseMatchesProperty","source","matchData","getMatchData","noCustomizer","baseIsMatch","baseMatches","basePropertyDeep","stringToPath","cache","isSymbol","memoize","string","baseToString","match","number","quote","findIndexFunc","findLast","fromIndex","isBinary","toNumber","toFinite","fromRight","baseFindIndex","collection","iterable","isArrayLike","resolver","memoized","args","Cache","isArrayLikeObject","previousUnderscore","_","ArrayProto","ObjProto","SymbolProto","nativeIsArray","_wrapped","VERSION","builtinIteratee","optimizeCb","context","argCount","accumulator","cb","matcher","restArguments","startIndex","rest","baseCreate","shallowProperty","deepGet","MAX_ARRAY_INDEX","getLength","each","collect","results","currentKey","createReduce","dir","reducer","memo","initial","reduce","foldl","inject","reduceRight","foldr","find","detect","findIndex","findKey","filter","select","list","reject","every","all","some","any","contains","includes","include","guard","invoke","contextPath","method","pluck","where","attrs","findWhere","computed","lastComputed","shuffle","sample","clone","last","rand","temp","sortBy","criteria","right","group","behavior","partition","groupBy","indexBy","countBy","reStrSymbol","isString","pass","first","head","take","tail","drop","compact","Boolean","flatten","shallow","idx","len","without","otherArrays","uniq","unique","isSorted","isBoolean","union","arrays","intersection","argsLength","unzip","zip","createPredicateIndexFinder","findLastIndex","sortedIndex","high","mid","createIndexFinder","predicateFind","isNaN","lastIndexOf","stop","step","chunk","count","executeBound","sourceFunc","boundFunc","callingContext","bound","callArgs","partial","boundArgs","placeholder","bindAll","hasher","address","delay","wait","setTimeout","defer","throttle","timeout","previous","later","leading","now","throttled","remaining","clearTimeout","trailing","cancel","debounce","immediate","debounced","callNow","wrap","wrapper","compose","after","before","once","hasEnumBug","nonEnumerableProps","collectNonEnumProps","nonEnumIdx","allKeys","mapObject","invert","functions","methods","names","createAssigner","defaults","extend","extendOwn","assign","deepEq","keyInObj","pick","omit","props","tap","interceptor","isMatch","aStack","bStack","className","areArrays","aCtor","bCtor","isEqual","isEmpty","isElement","nodelist","document","childNodes","Int8Array","isFinite","parseFloat","isNumber","isNull","isUndefined","noConflict","constant","noop","propertyOf","matches","accum","Date","getTime","escapeMap","unescapeMap","createEscaper","escaper","testRegexp","replaceRegexp","unescape","fallback","idCounter","uniqueId","prefix","id","templateSettings","evaluate","interpolate","noMatch","escapes","escapeRegExp","escapeChar","template","settings","oldSettings","render","variable","argument","chain","instance","_chain","chainResult","mixin","assert","msg","inherits","ctor","superCtor","super_","TempCtor","BN","endian","isBN","negative","words","red","_init","wordSize","parseHex4Bits","parseHexByte","lowerBound","end","mul","num","_initNumber","_initArray","_parseHex","_parseBase","w","off","strip","limbLen","limbPow","total","word","imuln","_iaddn","copy","dest","_expand","_normSign","inspect","zeros","groupSizes","groupBases","smallMulTo","lo","k","ncarry","rword","maxJ","groupSize","groupBase","modn","idivn","ret","toBuffer","toArrayLike","ArrayType","reqLength","littleEndian","res","andln","iushrn","clz32","_countBits","_zeroBits","hi","zeroBits","toTwos","width","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","iuor","ior","uor","iuand","iand","uand","iuxor","ixor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","sub","comb10MulTo","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","jumboMulTo","FFTM","mulp","mulTo","hncarry","bigMulTo","makeRBT","N","revBin","rb","permute","rbt","rws","iws","rtws","itws","rtwdf","cos","PI","itwdf","sin","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","muln","sqr","isqr","toBitArray","iushln","carryMask","newCarry","ishln","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","bhi","diff","qj","div","positive","divn","umod","divRound","dm","half","r2","acc","egcd","A","B","C","D","g","yp","xp","im","jm","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gten","gte","ltn","lten","lte","eqn","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","imulK","_strip","outLen","mod3","nOne","lpow","z","inv","wnd","current","currentLen","mont","u","ethjsUnit","utils","soliditySha3","randombytes","_flattenTypes","includeTuple","puts","types","param","components","substring","suffix","arrayBracket","hexToAscii","hex","isHexStrict","code","substr","asciiToHex","getUnitValue","unit","unitMap","_fireError","emitter","callback","optionalData","listeners","catch","emit","removeAllListeners","_jsonInterfaceMethodToString","inputs","randomHex","isBigNumber","isHex","sha3","sha3Raw","keccak256","soliditySha3Raw","encodePacked","isAddress","checkAddressChecksum","toChecksumAddress","addressHash","checksumAddress","toUpperCase","toHex","toBN","bytesToHex","hexToBytes","hexToNumberString","hexToNumber","toDecimal","numberToHex","fromDecimal","hexToUtf8","hexToString","toUtf8","stripHexPrefix","utf8ToHex","stringToHex","fromUtf8","toAscii","fromAscii","toWei","fromWei","padLeft","leftPad","padRight","rightPad","toTwosComplement","isBloom","isUserEthereumAddressInBloom","isContractAddressInBloom","isTopic","isTopicInBloom","isInBloom","compareBlockNumbers","bnA","bnB","__importDefault","entities_json_1","legacy_json_1","xml_json_1","decode_codepoint_1","strictEntityRe","getStrictDecoder","getReplacer","sorter","secondChar","legacy","inverseXML","getInverseObj","xmlReplacer","getInverseReplacer","getASCIIEncoder","inverse","inverseHTML","htmlReplacer","single","multiple","_i","_a","reNonASCII","singleCharReplacer","getCodePoint","codePointAt","reEscapeChars","multiplier","formattedString","isHexPrefixed","stringArg","dividedToIntegerBy","numberToBN","utf8","ethereumBloomFilters","bytes","SHA3_NULL_S","returnValue","_Hash","bloom","ethereumAddress","contractAddress","topic","returnType","chars","hasPrefix","cssKeywords","reverseKeywords","rgb","channels","labels","hsl","hsv","hwb","cmyk","xyz","lab","lch","keyword","ansi16","ansi256","hcg","apple","gray","model","rdif","gdif","bdif","diffc","reversed","currentClosestKeyword","currentClosestDistance","distance","t2","t3","t1","smin","lmin","vmin","sl","wh","bl","ratio","y2","z2","atan2","hr","saturation","ansi","color","mult","rem","colorString","char","integer","chroma","grayscale","hue","pure","mg","nativeFloor","baseSortedIndex","retHighest","MAX_ARRAY_LENGTH","valIsNaN","valIsNull","valIsSymbol","valIsUndefined","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","setLow","baseSortedIndexBy","thisArg","arrayIncludes","baseIsNaN","baseIndexOf","arrayIncludesWith","comparator","cacheHas","spreadableSymbol","isConcatSpreadable","baseDifference","isCommon","valuesLength","arrayMap","outer","valuesIndex","isFlattenable","differenceBy","otherArgs","baseRest","baseFlatten","depth","isStrict","payoutDistributionToCsv","csvIntegration","payoutDistributions","_unused_config","csvString","transferredGrain","outputFile","fileName","content","parse","at","ch","escapee","uffff","white","reviver","walk","holder","gap","rep","escapable","meta","lastIndex","mind","decode_json_1","fromCodePoint","codePoint","negative1","getValueOfUnit","unitInput","unitValue","numberToString","toPrecision","weiInput","optionsInput","wei","baseLength","fraction","pad","whole","commify","etherInput","ether","comps","parseHex","byteArray","byteCount","byteIndex","stringFromCharCode","ucs2decode","extra","counter","checkScalarValue","createByte","encodeCodePoint","readContinuationByte","continuationByte","decodeSymbol","byte1","version","codePoints","byteString","ucs2encode","HEX_CHARS","KECCAK_PADDING","SHIFT","RC","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","b10","b11","b12","b13","b14","b15","b16","b17","b18","b19","b20","b21","b22","b23","b24","b25","b26","b27","b28","b29","b30","b31","b32","b33","b34","b35","b36","b37","b38","b39","b40","b41","b42","b43","b44","b45","b46","b47","b48","b49","keccak","state","blocks","blockCount","outputBlocks","reset","block","lastByteIndex","update","Keccak","keccak512","keccak256s","keccak512s","utils_1","hash","bitpos","codePointToInt","toByteArray","addSlice","isByteArray","keccak_256","INPUT_ERROR","WINDOW","JS_SHA3_NO_WINDOW","WEB_WORKER","JS_SHA3_NO_NODE_JS","versions","COMMON_JS","JS_SHA3_NO_COMMON_JS","AMD","ARRAY_BUFFER","JS_SHA3_NO_ARRAY_BUFFER","CSHAKE_PADDING","BITS","SHAKE_BITS","OUTPUT_TYPES","CSHAKE_BYTEPAD","JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW","isView","createOutputMethod","outputType","createShakeOutputMethod","outputBits","createCshakeOutputMethod","createKmacOutputMethod","createOutputMethods","createMethod","algorithms","bytepad","Kmac","methodNames","algorithm","methodName","newMethodName","finalized","extraBytes","notString","encodeString","strs","paddingBytes","finalize","arrayBuffer","Uint32Array","digest","__webpack_amd_options__","_parseNumber","_solidityPack","arraySize","startsWith","typesize","_parseTypeN","_processSolidityEncodePackedArgs","_parseTypeNArray","hexArgs","randomBytes","webpackEmptyContext","req","Readable","BUFFER","TYPE","Blob","blobParts","buffers","element","from","buf","ab","readable","_read","relativeStart","relativeEnd","span","slicedBuffer","blob","FetchError","systemError","errno","captureStackTrace","defineProperties","writable","configurable","INTERNALS","PassThrough","Body","body","_this","_ref","_ref$size","_ref$timeout","isURLSearchParams","isBlob","disturbed","on","err","consumeBody","_this4","alloc","stream","accumBytes","abort","resTimeout","append","delete","getAll","p1","p2","bodyUsed","getBoundary","pipe","extractContentType","getTotalBytes","getLengthSync","_lengthRetrievers","hasKnownLength","then","ct","headers","_this2","_this3","charset","convertBody","mixIn","desc","getOwnPropertyDescriptor","invalidTokenRegex","invalidHeaderCharRegex","validateName","validateValue","MAP","init","rawHeaders","raw","headerNames","headerName","iterator","pair","getHeaders","_pairs$i","createHeadersIterator","kind","INTERNAL","target","HeadersIteratorPrototype","setPrototypeOf","getPrototypeOf","_INTERNAL","done","exportNodeCompatibleHeaders","__proto__","hostHeaderKey","INTERNALS$1","STATUS_CODES","status","contentType","statusText","ok","redirected","INTERNALS$2","parse_url","format_url","format","streamDestructionSupported","isRequest","parsedURL","href","inputBody","signal","isAbortSignal","redirect","follow","compress","agent","AbortError","PassThrough$1","resolve_url","request","protocol","hostname","contentLengthValue","totalBytes","getNodeRequestOptions","send","response","destroy","aborted","abortAndFinalize","reqTimeout","removeEventListener","addEventListener","socket","createHeadersLenient","isRedirect","statusCode","location","locationURL","requestOpts","response_options","statusMessage","codings","zlibOptions","flush","Z_SYNC_FLUSH","finishFlush","createGunzip","createBrotliDecompress","createInflate","createInflateRaw","write","writeToStream","ansiStyles","stdout","stdoutColor","stderr","stderrColor","stringReplaceAll","stringEncaseCRLFWithFirstIndex","levelMapping","styles","ChalkClass","chalkFactory","chalk","isInteger","colorLevel","applyOptions","arguments_","chalkTag","Chalk","Instance","styleName","style","builder","createBuilder","createStyler","open","close","_styler","_isEmpty","visible","usedModels","styler","bgColor","_generator","openAll","closeAll","applyStyle","lfIndex","strings","firstString","parts","supportsColor","wrapAnsi16","wrapAnsi256","wrapAnsi16m","ansi2ansi","rgb2rgb","setLazyProperty","colorConvert","makeDynamicStyles","targetSpace","isBackground","sourceSpace","suite","codes","modifier","bold","dim","italic","underline","hidden","strikethrough","black","green","yellow","blue","magenta","cyan","blackBright","redBright","greenBright","yellowBright","blueBright","magentaBright","cyanBright","whiteBright","bgBlack","bgRed","bgGreen","bgYellow","bgBlue","bgMagenta","bgCyan","bgWhite","bgBlackBright","bgRedBright","bgGreenBright","bgYellowBright","bgBlueBright","bgMagentaBright","bgCyanBright","bgWhiteBright","bgGray","grey","bgGrey","groupName","conversions","route","fromModel","routes","toModel","wrappedFn","arg0","conversion","wrapRounded","wrapRaw","deriveBFS","graph","models","buildGraph","queue","adjacents","adjacent","link","to","wrapConversion","cur","os","tty","hasFlag","env","forceColor","translateLevel","hasBasic","has256","has16m","haveStream","streamIsTTY","TERM","platform","osRelease","release","CI_NAME","TEAMCITY_VERSION","COLORTERM","TERM_PROGRAM_VERSION","TERM_PROGRAM","FORCE_COLOR","isTTY","isatty","flag","argv","terminatorPosition","substringLength","endIndex","postfix","gotCR","TEMPLATE_REGEX","STYLE_REGEX","STRING_REGEX","ESCAPE_REGEX","ESCAPES","bracket","parseArguments","chunks","character","parseStyle","buildStyle","enabled","layer","temporary","escapeCharacter","errMessage","payoutAddress","amount","toObject","fromObject","pushValue","Parser","_f","parseOrThrow","success","failure","typename","boolean","null_","exactly","ts","expected","fmap","maybeT","orElse","parsers","errorFn","errors","parser","parsed","RenameFieldImpl","oldKey","super","requiredFields","optionalFields","newKeysSeen","fields","fieldsets","inputFields","required","newKey","tuple","ps","dict","valueParser","keyParser","rawKeys","rawKey","parsedKey","oldRawKey","rawValue","parsedValue","makeAddressModule","nonce","otherNonces","nonceWithSeparator","otherNoncesWithSeparators","outK","MapUtil","otherNonce","assertValid","what","assertValidParts","nullDelimited","fromParts","toParts","fromRaw","endsWith","otherNonceWithSeparator","otherName","empty","toCompat","compatInfo","fromCompat","expectedCompatInfo","handlers","expectedType","expectedVersion","wrappedParser","compatibleParser","wrapResult","parseResult","errorMessage","NodeAddress","EdgeAddress","COMPAT_INFO","Direction","IN","OUT","ANY","Graph","_modificationCount","_invariantsLastChecked","when","_cachedOrder","nodeOrder","edgeOrder","modificationCount","_nodes","_edges","_incidentEdges","_maybeCheckInvariants","_checkForComodification","since","_markModification","MAX_SAFE_INTEGER","_reference","inEdges","outEdges","_unreference","incidence","_getOrder","addNode","existingNode","deepEqual","strNode","nodeToString","strExisting","removeNode","hasNode","nodes","_nodesIterator","initialModificationCount","NullUtil","addEdge","edge","src","dst","existingEdge","timestampMs","strEdge","edgeToString","removeEdge","edges","strAddress","hasEdge","isDanglingEdge","showDangling","addressPrefix","srcPrefix","dstPrefix","_edgesIterator","neighbors","_neighbors","direction","adjacencies","adjacency","neighborNodeAddress","neighborNode","nodePrefix","edgePrefix","that","merge","sortedNodeAddresses","nodeAddressToSortedIndex","indexedEdges","srcIndex","dstIndex","indexedNodes","description","rawJSON","compatJson","nodesJSON","edgesJSON","sortedNodeAddressesJSON","graphs","contractNodes","contractions","remap","replacements","contracted","old","replacement","addr","newEdge","checkInvariants","_checkInvariants","referencedNodesEncountered","inEdgesSeen","outEdgesSeen","incidentEntries","baseNodeAccessor","vs","expectedBase","timestamp","edgeToStrings","edgeToParts","addressParts","srcParts","dstParts","compareGraphs","firstGraph","secondGraph","nodeDiffs","edgeDiffs","graphsAreEqual","firstNode","secondNode","second","firstEdge","secondEdge","topicNodeType","pluralName","defaultWeight","postNodeType","userNodeType","likeNodeType","topicContainsPostEdgeType","forwardName","backwardName","forwards","backwards","topicHasLikedPostEdgeType","postRepliesEdgeType","authorsTopicEdgeType","authorsPostEdgeType","createsLikeEdgeType","likesEdgeType","referencesPostEdgeType","referencesTopicEdgeType","referencesUserEdgeType","declaration","nodeTypes","edgeTypes","userTypes","topicAddress","serverUrl","postAddress","userAddress","username","likeAddress","like","postId","memberNodeType","messageNodeType","reactionNodeType","authorsMessageEdgeType","addsReactionEdgeType","reactsToEdgeType","mentionsEdgeType","propsEdgeType","dedent","lineLengths","line","trimLeft","trimAmount","trimmed","edgeWeightParser","nodeWeights","edgeWeights","resolvers","nodeResolver","_unused_a","_unused_b","edgeResolver","weights","existing","Parse_0_2_0","serialize_0_2_0","fromJSON","compareWeights","firstWeights","secondWeights","nodeWeightDiffs","edgeWeightDiffs","nodeAddresses","edgeAddresses","weightsAreEqual","memberAddress","member","user","bot","NAME_PATTERN","nameFromString","COERCE_PATTERN","coerce","createIdentity","nick","alias","discriminator","pluginName","createIdentities","repo","members","initiativeNodeType","_formatNodeEntryField","field","nodeEntryType","displayField","nodeEntryTypes","CONTRIBUTION","DEPENDENCY","REFERENCE","contributionEntryType","dependencyEntryType","referenceEntryType","dependsOnEdgeType","referencesEdgeType","contributesToEdgeType","contributesToEntryEdgeType","championsEdgeType","GITHUB_PREFIX","_githubAddress","REPO_TYPE","ISSUE_TYPE","PULL_TYPE","REVIEW_TYPE","COMMENT_TYPE","COMMIT_TYPE","USERLIKE_TYPE","USER_SUBTYPE","BOT_SUBTYPE","Prefix","issue","pull","review","comment","commit","userlike","reviewComment","issueComment","pullComment","loginAddress","fail","_unused_sc","_unused_gh","owner","pullNumber","subkind","subrest","issueNumber","reviewFragment","subtype","login","toRaw","GIT_PREFIX","_gitAddress","ReactionContent$Values","AUTHORS_TYPE","MERGED_AS_TYPE","HAS_PARENT_TYPE","REFERENCES_TYPE","REACTS_TYPE","CORRESPONDS_TO_COMMIT_TYPE","githubEdgeAddress","authors","mergedAs","references","hasParent","reacts","reactsThumbsUp","Reactions","THUMBS_UP","reactsHeart","HEART","reactsHooray","HOORAY","reactsRocket","ROCKET","correspondsToCommit","createEdge","author","GithubNode","githubCommit","gitCommit","GitNode","child","referrer","referent","reactionType","reactable","lengthEncode","lengthDecode","lengthString","allParts","multiLengthDecode","partses","authorParts","contentParts","pullParts","childParts","referrerParts","referentParts","rawReactionType","rest2","userParts","reactableParts","repoNodeType","issueNodeType","pullNodeType","reviewNodeType","commentNodeType","commitNodeType","botNodeType","authorsEdgeType","E","hasParentEdgeType","mergedAsEdgeType","reactsHeartEdgeType","reactsThumbsUpEdgeType","reactsHoorayEdgeType","reactsRocketEdgeType","correspondsToCommitEdgeType","ethAddressEntryType","JsonLog","_items","items","trimRight","_extractLogLines","nodeAddressForEthAddress","parseAddress","ethAddressParser","truncateEthAddress","ethAddresses","nodeTypeParser","G","edgeTypeParser","declarationParser","_RE_UNCLEAN","isClean","randomUuidUnchecked","crypto","getRandomValues","msCrypto","nodeCrypto","__non_webpack_require__","base64Encode","fromString","base64Decode","identityIdParser","IdentityTypes","USER","PROJECT","ORGANIZATION","BOT","IDENTITY_PREFIX","newIdentity","randomUuid","identityTypeParser","aliases","graphNode","identities","uuidParser","nameParser","aliasParser","protocolSymbolParser","evmChainParser","evmParser","chainId","tokenAddress","protocolParser","currencyParser","buildCurrency","defaultCurrencyConfig","decimals","currencyName","currencySuffix","decimalsToDisplay","integrationCurrency","integrationCurrencyParser","ZERO","DECIMAL_PRECISION","ONE","grain","fill","integerDigits","numCommasToInsert","formatAndTrim","multiplyFloat","floatProduct","divideFloat","dividend","fromInteger","fromFloatString","precision","dec","paddedDecimal","padEnd","fromApproximateFloat","toFloatRatio","numerator","denominator","splitBudget","budget","scores","totalScore","scoreRemaining","budgetRemaining","pieces","piece","xs","P","valueof","fromGrain","grainParser","numberOrFloatStringParser","balancedConfigParser","policyType","numIntervalsLookback","balancedPolicyParser","policy","immediateConfigParser","immediatePolicyParser","recentConfigParser","discount","toDiscount","recentPolicyParser","specialReceipts","recipient","specialConfigParser","specialPolicyParser","policyConfigParser","allocationPolicyParser","_validatePolicy","_validateAllocationBudget","amt","receipts","credGrainView","effectiveTimestamp","timeLimitedParticipants","withTimeScopeFromLookback","activeParticipants","shortTermCredPerIdentity","cred","amounts","immediateReceipts","decayedCredPerIdentity","credPerInterval","recentReceipts","totalCred","participant","targetGrainPerCred","grainEarned","floatUnderpayment","lookbackCred","grainAmounts","balancedReceipts","grainReceiptParser","allocationParser","Uuid","allocations","credTimestamp","Ledger","_ledgerEventLog","_nameToId","_lowercaseNames","_aliasAddressToIdentity","_accounts","_allocations","_distributions","_allocationsToDistributions","_grainIntegrationStatuses","accounts","account","_mutableAccount","nameAvailable","accountByAddress","identityId","accountByName","allocation","distribution","distributions","distributionByAllocationId","allocationId","distributionId","action","_createAndProcessEvent","_createIdentity","balance","paid","active","allocationHistory","payoutAddresses","mergedIdentityIds","mergeIdentities","_mergeIdentities","baseAccount","targetAccount","baseIdentity","targetIdentity","updatedAliases","transferAlias","innateAlias","updatedIdentity","credTimestampMs","renameIdentity","newName","_renameIdentity","existingIdentity","existingName","lowerCased","addAlias","_addAlias","activate","deactivate","_toggleActivation","distributeGrain","_distributeGrain","distributionParser","grainReceipt","_allocateGrain","_lastDistributionTimestamp","_shouldTrackGrainIntegration","transferGrain","_transferGrain","fromAccount","toAccount","changeIdentityType","newType","_changeIdentityType","setPayoutAddress","currency","_setPayoutAddress","currencyResult","enableIntegrationTracking","disableIntegrationTracking","_enableGrainIntegrationTracking","_disableGrainIntegrationTracking","markDistributionExecuted","_markDistributionExecuted","trackedDistributions","isGrainIntegrationExecuted","eventLog","ledger","_processEvent","serialize","jsonLog","ledgerEventParser","fromEventLog","lastDistributionTimestamp","_processAction","ledgerTimestamp","_latestTimestamp","ledgerEvent","_getTimestamp","uuid","params","createIdentityParser","identityParser","renameIdentityParser","changeIdentityTypeParser","addAliasParser","mergeIdentitiesParser","toggleActivationParser","distributeGrainParser","setPayoutAddressParser","transferGrainParser","actionParser","identityProposalsParser","ensureIdentityExists","proposal","existingAccount","checkAvailability","withPluginDiscriminator","withNumericDiscriminator","_chooseIdentityName","Weights","graphJSON","weightsJSON","overrideWeights","wg","overrides","encoder","decoder","TextEncoder","TextDecoder","importedTextDecoder","globalThis","importedTextEncoder","notFound","async","loadJson","storage","contents","loadJsonWithDefault","def","console","extra_lbits","extra_dbits","extra_blbits","bl_order","static_ltree","static_dtree","D_CODES","_dist_code","_length_code","MAX_MATCH","base_length","base_dist","StaticTreeDesc","static_tree","extra_bits","extra_base","elems","max_length","has_stree","static_l_desc","static_d_desc","static_bl_desc","TreeDesc","dyn_tree","stat_desc","max_code","d_code","dist","put_short","pending_buf","pending","send_bits","bi_valid","bi_buf","send_code","tree","bi_reverse","gen_codes","bl_count","next_code","MAX_BITS","init_block","LITERALS","dyn_ltree","dyn_dtree","bl_tree","END_BLOCK","opt_len","static_len","last_lit","bi_windup","smaller","_n2","_m2","pqdownheap","heap","heap_len","compress_block","ltree","dtree","lc","lx","d_buf","l_buf","build_tree","stree","heap_max","xbits","overflow","gen_bitlen","scan_tree","curlen","prevlen","nextlen","max_count","min_count","REP_3_6","REPZ_3_10","REPZ_11_138","send_tree","static_init_done","_tr_stored_block","stored_len","header","subarray","copy_block","trees","_tr_init","LENGTH_CODES","L_CODES","tr_static_init","l_desc","d_desc","bl_desc","_tr_flush_block","opt_lenb","static_lenb","max_blindex","strm","data_type","black_mask","detect_data_type","BL_CODES","build_bl_tree","strategy","lcodes","dcodes","blcodes","rank","send_all_trees","_tr_tally","lit_bufsize","_tr_align","STATIC_TREES","bi_flush","adler32_1","adler","pos","s1","s2","crcTable","table","makeTable","crc32_1","crc","2","1","0","constants","Z_NO_FLUSH","Z_PARTIAL_FLUSH","Z_FULL_FLUSH","Z_FINISH","Z_BLOCK","Z_TREES","Z_OK","Z_STREAM_END","Z_NEED_DICT","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_MEM_ERROR","Z_BUF_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_DEFAULT_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","Z_BINARY","Z_TEXT","Z_UNKNOWN","Z_DEFLATED","_tr_init$1","_tr_stored_block$1","_tr_flush_block$1","_tr_tally$1","_tr_align$1","Z_FIXED$1","Z_UNKNOWN$1","errorCode","zero$1","HASH","hash_shift","hash_mask","flush_pending","avail_out","pending_out","next_out","total_out","flush_block_only","block_start","strstart","put_byte","putShortMSB","read_buf","avail_in","next_in","total_in","longest_match","cur_match","chain_length","max_chain_length","scan","best_len","prev_length","nice_match","limit","w_size","_win","wmask","w_mask","strend","scan_end1","scan_end","good_match","lookahead","match_start","fill_window","_w_size","more","window_size","hash_size","insert","ins_h","deflate_fast","hash_head","bflush","match_length","max_lazy_match","MIN_MATCH$1","deflate_slow","max_insert","prev_match","match_available","Config","good_length","max_lazy","nice_length","max_chain","configuration_table","max_block_size","pending_buf_size","max_start","DeflateState","gzhead","gzindex","last_flush","w_bits","hash_bits","Uint16Array","HEAP_SIZE$1","MAX_BITS$1","deflateResetKeep","deflateReset","deflateInit2","windowBits","memLevel","deflate_1","deflateInit","deflateSetHeader","deflate","beg","old_flush","hcrc","time","level_flags","bstate","deflate_huff","deflate_rle","deflateEnd","deflateSetDictionary","dictionary","dictLength","tmpDict","avail","deflateInfo","_has","common","sources","STR_APPLY_UIA_OK","__","_utf8len","m_pos","str_len","buf_len","utf16buf","c_len","buf2binstring","zstream","Z_NO_FLUSH$1","Z_FULL_FLUSH$1","Z_FINISH$1","Z_OK$1","Z_STREAM_END$1","Z_DEFAULT_COMPRESSION$1","Z_DEFAULT_STRATEGY$1","Z_DEFLATED$1","Deflate","chunkSize","opt","gzip","ended","_dict_set","deflate$1","deflator","flush_mode","_flush_mode","onData","onEnd","deflate_1$1","deflateRaw","inffast","_in","_out","dmax","wsize","whave","wnext","s_window","hold","lcode","dcode","lmask","dmask","here","op","from_source","lencode","distcode","lenbits","distbits","dolen","dodist","sane","lbase","lext","dbase","dext","inftrees","lens","lens_index","table_index","work","incr","sym","curr","used","huff","base_index","MAXBITS","offs","here_bits","here_op","here_val","extra_index","Z_FINISH$2","Z_BLOCK$1","Z_OK$2","Z_STREAM_END$2","Z_STREAM_ERROR$1","Z_DATA_ERROR$1","Z_BUF_ERROR$1","Z_DEFLATED$2","zswap32","InflateState","havedict","flags","wbits","ncode","nlen","ndist","have","lendyn","distdyn","back","was","inflateResetKeep","Int32Array","inflateReset","inflateReset2","inflateInit2","lenfix","distfix","virgin","fixedtables","updatewindow","inflate_1","inflateInit","inflate","put","last_bits","last_op","last_val","hbuf","order","inf_leave","xflags","extra_len","inflateEnd","inflateGetHeader","inflateSetDictionary","dictid","inflateInfo","gzheader","toString$1","Z_NO_FLUSH$2","Z_FINISH$3","Z_OK$3","Z_STREAM_END$3","Z_NEED_DICT$1","Z_STREAM_ERROR$2","Z_DATA_ERROR$2","Z_MEM_ERROR$1","Inflate","inflate$1","inflator","last_avail_out","next_out_utf8","utf8str","inflate_1$1","inflateRaw","ungzip","Deflate$1","deflate$2","deflateRaw$1","gzip$1","Inflate$1","inflate$2","inflateRaw$1","ungzip$1","inflate_1$2","ZipStorage","baseStorage","_baseStorage","NetworkStorage","_base","resource","URL","regex","getPluginOwner","getPluginName","contributionNodeType","participantNodeType","participatedInEdgeType","FileNames","GRAPH","GRAPH_ZIP","DECLARATION","IDENTITIES","configParser","graphUrl","declarationUrl","identityProposalsUrl","ExternalPlugin","config","pluginId","defaultConfigDirectory","configDirectory","pathJoin","cacheDirectory","file","getConfig","getStorage","defaultDeclaration","_unused_ctx","_unused_reporter","_unused_rd","zipResult","weightedGraphFromJSON","Combo","declarationWeights","weightsForDeclaration","mergeWeights","addressFromUrl","adjacencySource","createConnections","edgeWeight","syntheticLoopWeight","totalOutWeight","processConnection","connection","priorOutWeight","weight","connections","normalization","newWeight","createNodeAddressMarkovChain","ntc","inNeighbors","createOrderedSparseMarkovChain","addressToIndex","theseNeighbors","neighbor","Float64Array","nodeAddressMarkovChainToOrderedSparseMarkovChain","newOrder","newIndices","oldIndices","newChain","oldNeighbors","newNeighbors","oldIndex","normalizeNeighbors","normalize","distributionToNodeDistribution","pi","probability","uniformDistribution","computeDelta","pi0","pi1","maxDelta","sparseMarkovChainFromTransitionMatrix","matrix","row","rowsum","column","sparseMarkovChainActionInto","seed","alpha","inDegree","sparseMarkovChainAction","findStationaryDistribution","gen","scratch","nIterations","maxIterations","verbose","convergenceDelta","convergenceThreshold","findStationaryDistributionGenerator","_unused_reject","yieldAfterMs","tick","EMPTY_ENTRY_SYMBOL","BaseTrie","addressModule","tmpEntry","getLast","NodeTrie","EdgeTrie","nodeWeightEvaluator","nodeTrie","pluckArgs","plucks","sortByCompare","valA","valB","t0","utcWeekday","newInterval","floori","offseti","interval","date","d0","d1","setTime","setUTCDate","getUTCDate","getUTCDay","setUTCHours","durationDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","intervalSequence","intervals","lastEndTime","startTimeMs","endTimeMs","intervalSequenceParser","partitionGraph","sortedNodes","sortedEdges","graphIntervals","nodeIndex","edgeIndex","nodeTimestamps","edgeTimestamps","allTimestamps","startMs","endMs","utcWeek","boundaries","weekIntervals","personalAttributionsParser","fromParticipantId","recipients","toParticipantId","proportions","proportionValue","IndexedPersonalAttributions","personalAttributions","epochStarts","pa","ar","proportion","validatePersonalAttributions","_index","_getIndexFromList","_validateIndex","personalAttribution","recipientsIndex","attributionRecipient","epochStart","_getSumProportionValue","toPersonalAttributions","recipientsForEpochAndParticipant","_getProportionValue","getProportionValue","relevantProportion","getSumProportionValue","attributionRecipients","proportionValues","mint","MarkovEdgeAddress","markovEdgeAddress","edgeAddress","markovEdgeAddressFromMarkovEdge","GADGET_NODE_PREFIX","seedGadget","accumulatorGadget","prefixLength","epochGadget","epochPrefixLength","uuidFromString","makeSeedGadget","seedIsSrc","markovEdge","transitionProbability","targetAddress","GADGET_EDGE_PREFIX","radiationGadget","seedMintGadget","payoutGadget","webbingEdgePrefix","forwardWebbingGadget","thisStart","lastStart","thisEpoch","lastEpoch","backwardWebbingGadget","personalAttributionGadget","participantParser","parametersParser","beta","gammaForward","gammaBackward","indexedEdgeParser","MarkovProcessGraph","participants","lastEpochEndMs","parameters","mintTransitionProbabilities","radiationTransitionProbabilities","indexedPersonalAttributions","_epochStarts","_lastEpochEndMs","_participants","_parameters","_radiationTransitionProbabilties","_mintTransitionProbabilties","_nodeIndex","_nodeOrder","_edgeIndex","virtualizedMarkovEdgeAddresses","_indexedPersonalAttributions","weightedGraph","_scoringAddressToId","_scoringAddresses","_nodeOutMasses","epochTransitionRemainder","valid","mae","recordTransitionProbability","pr","nwe","lastEpochStart","webbingAddress","totalNodeWeight","positiveNodeWeights","rewriteEpochNode","edgeTimestampMs","epochEndIndex","epochTimestampMs","unidirectionalGraphEdges","ewe","edgeTrie","edgeWeightEvaluator","srcNodes","graphEdge","datum","totalOutPr","outEdge","nodeAddress","virtualizedNodeAddresses","virtualizedNode","realAndVirtualNodes","es","markovNode","virtualizedMarkovEdge","toMarkovChain","nodeOutMasses","outMass","discrepancy","indexedMints","sumOfPersonalAttributions","personalAttributionAddress","jsonParser","markovNodeParser","CredGraph","markovProcessGraph","_mpg","_scores","_cred","_credFlow","credFlow","epochs","payoutMarkovEdge","mpg","markovProcessGraphJSONParser","credGrainViewParser","grainEarnedPerInterval","CredGrainView","_intervals","_credTotals","_grainTotals","allocationIndex","validateForGrainAllocation","totalCredPerInterval","withTimeScope","TimeScopedCredGrainView","intervalsBeforeEffective","totalGrainPerInterval","credGraph","graphParticipants","graphParticipant","_calculateGrainEarnedPerInterval","originalIntervals","inclusiveStartIndex","exclusiveEndIndex","computeDistribution","policies","validatedPolicy","computeAllocation","applyDistributions","currentTimestamp","allowMultipleDistributionsPerInterval","credIntervals","maxSimultaneousDistributions","completeIntervals","undistributedIntervals","sequence","_chooseDistributionIntervals","fromCredGraphAndLedger","allocationPolicies","diffLedger","diffBy","computeCredAccounts","grainAccounts","userlikeInfo","noIntervals","aliasAddresses","accountAddresses","unclaimedAliases","info","credAccount","_computeCredAccounts","LedgerManager","_storage","_ledger","initLogs","_getLocalChanges","remoteLedger","_getRemoteChanges","preWriteReloadRes","reloadLedger","postWriteReloadRes","localChanges","read","remoteChanges","event","stringToRepoId","validOwner","validRepo","makeRepoId","GithubStorage","_token","apiToken","_repoId","_branch","branch","_getRepoEndpoint","ENDPOINT","Authorization","query","variables","expression","blobSha","repository","oid","ledgerBlobRes","ledgerDataBase64","rawLedger","ledgerData","targetBranchResult","baseCommit","sha","uploadLedgerBlobResult","base_tree","uploadLedgerBlobTree","commitLedgerResult","parents","email","newLedgerCommit","toISO","timestampLike","validateTimestampMs","toISOString","fromISO","timestampISO","RangeError","asNumber","timestampISOParser","mintPeriodParser","startTime","dependencyConfigParser","periods","autoActivateOnIdentityCreation","autoInjectStartingPeriodWeight","computeBonusMinting","mintIntervals","totalMint","_computeMintIntervals","bonusIntervals","_bonusIntervals","nextIndex","BONUS_NODE_PREFIX","bonusNodeAddress","bonusNode","BONUS_EDGE_PREFIX","BONUS_EDGE_WEIGHT","bonusEdgeAddress","bonusEdge","intervalLengthParser","applyBudget","addresses","_anyCommonPrefixes","intervalLength","reweighting","newWeights","existingWeight","_reweightGraph","evaluator","reweightingsForEachBudget","inSortedOrder","budgetValue","_findCurrentBudgetValue","filteredAddresses","normalizer","_computeWeightNormalizer","_reweightingForEntry","_computeReweighting","currentPeriod","period","aws","totalWeight","aw","markovProcessGraphPagerank","defaultOptions","osmc","distributionResult","matchingScore","proportionParser","personalAttributionsConfigParser","fromParticipantName","toParticipantName","startDate","decimalProportion","credrank","pluginGraphs","weightOverrides","dependenciesWithIds","dependencies","dep","depId","contractedGraph","identityContractions","pluginsBudget","bonusMints","emptyWeights","createBonusGraph","toBonusPolicy","updatedPersonalAttributionsConfig","markovProcessGraphParameters","pagerankOptions","defaultParameters","new","computeCredrank","SilentTaskReporter","_activeTasks","_entries","taskId","finish","activeTasks","CascadingReferenceDetector","refs","ref","scope","taskReporter","rds","plugin","directoryContext","plugins","task","rd","referenceDetector","_hackyIdentityNameReferenceDetector","identityProposal","usernameToAddress","potentialUsername","prepped","allowedDeclarations","bundledGrainIntegrations","integrationKey","integration","function","immediatePerWeek","balancedPerWeek","recentPerWeek","recentWeeklyDecayRate","sinkIdentity","processDistributions","bundledGrainIntegrationParser","POSITIVE_ZERO","toNonnegativeGrain","allocationPoliciesDeprecated","toDistributionPolicy","grainConfig","getPluginDeclaration","mapping","githubDeclaration","discourseDeclaration","discordDeclaration","initiativesDeclaration","ethereumDeclaration","rawPeriodParser","rawParser","pluginIdParser","upgradeRawPeriod","bundledPlugins","assertPath","isAbsolute","CHAR_FORWARD_SLASH","trailingSeparator","allowAboveRoot","separator","isPathSeparator","lastSegmentLength","lastSlash","dots","lastSlashIndex","normalizeString","isPosixPathSeparator","OriginStorage","getNetworkReadInstance","ReadInstance","getOriginReadInstance","DEPENDENCIES_PATH","WEIGHT_OVERRIDES_PATH","BUDGET_PATH","GRAIN_PATH","CURRENCY_PATH","PERSONAL_ATTRIBUTIONS_PATH","RAW_INSTANCE_CONFIG_PATH","LEDGER_PATH","CREDGRAPH_PATH","CREDGRAINVIEW_PATH","GRAPHS_DIRECTORY","GRAPHS_PATH","_zipStorage","readPluginGraphs","readLedger","readWeightOverrides","readDependencies","readPluginsBudget","readPersonalAttributions","currencyDetails","readCredGraph","readGrainConfig","readCurrencyDetails","outputPath","createPluginGraphDirectory","credGraphPath","credGraphParser","ledgerPath","loadFileWithDefault","grainConfigPath","grainConfigParser","currencyDetailsPath","currencyConfigParser","pluginsConfigPath","rawConfigParser","pluginNames","readRawInstanceConfig","outputDir","createPluginDirectory","weightsPath","weightsParser","dependenciesPath","dependenciesParser","budgetPath","pluginBudgetParser","pluginIdFromString","pluginBudgetUpgrader","idParts","pluginOwner","pathComponents","api","graphApi","grainApi","readInstance","core","markovChain","graphToMarkovChain","ledgerUtils","manager","ConstructorPlugin","_weightedGraph","emptyWeightedGraph","_identityProposals","identityProposals","_declaration","github","githubEdges","githubNodes","ethereum","ethereumUtils","discourse","discourseAddress","discord","discordUtils","initiatives","coerceNameFromString"],"mappings":"+BACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QA0Df,OArDAF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,GAIjBlC,EAAoBA,EAAoBmC,EAAI,I,gBClFrDhC,EAAOD,QAAU,SAASkC,EAAYvB,GAYpC,OAXAC,OAAOuB,OAAOxB,GAEdC,OAAOwB,oBAAoBzB,GAAG0B,SAAQ,SAAUC,IAC1C3B,EAAEoB,eAAeO,IACN,OAAZ3B,EAAE2B,IACkB,iBAAZ3B,EAAE2B,IAAyC,mBAAZ3B,EAAE2B,IACxC1B,OAAO2B,SAAS5B,EAAE2B,KACpBJ,EAAWvB,EAAE2B,OAIV3B,I,iBCZT,gCACI,aAEA,IAAI6B,EAAO,IAEPC,EAAU,iBACVC,EAAcC,EAAaF,GAG3BG,EAAyC,mBAAXC,OAElC,SAASC,EAAQC,EAAGC,EAAOC,EAAUC,GACjC,YAAiB,IAANH,EAA0BD,EAAQ,QACxB,IAAVE,IAAyC,KAAVA,GAAiBC,GAA2BE,EAAUJ,EAAGC,EAAOC,EAAUC,GAC7GE,EAAWL,GAGtB,SAASM,EAAWlC,EAAOmC,GACvBC,KAAKpC,MAAQA,EACboC,KAAKD,KAAOA,EACZC,KAAKC,SAAU,EAInB,SAASC,EAAatC,GAClBoC,KAAKpC,MAAQA,EACboC,KAAKD,KAAOnC,EAAQ,EACpBoC,KAAKC,SAAU,EAInB,SAASE,EAAavC,GAClBoC,KAAKpC,MAAQA,EAIjB,SAASwC,EAAUhC,GACf,OAAQc,EAAUd,GAAKA,EAAIc,EAG/B,SAASE,EAAahB,GAClB,OAAIA,EAAI,IACG,CAACA,GACRA,EAAI,KACG,CAACA,EAAI,IAAKiC,KAAKC,MAAMlC,EAAI,MAC7B,CAACA,EAAI,IAAKiC,KAAKC,MAAMlC,EAAI,KAAO,IAAKiC,KAAKC,MAAMlC,EAAI,OAG/D,SAASmC,EAAaC,GAClBC,EAAKD,GACL,IAAIE,EAASF,EAAIE,OACjB,GAAIA,EAAS,GAAKC,EAAWH,EAAKrB,GAAe,EAC7C,OAAQuB,GACJ,KAAK,EAAG,OAAO,EACf,KAAK,EAAG,OAAOF,EAAI,GACnB,KAAK,EAAG,OAAOA,EAAI,GAAKA,EAAI,GAAKvB,EACjC,QAAS,OAAOuB,EAAI,IAAMA,EAAI,GAAKA,EAAI,GAAKvB,GAAQA,EAG5D,OAAOuB,EAGX,SAASC,EAAKjB,GAEV,IADA,IAAI7C,EAAI6C,EAAEkB,OACQ,IAAXlB,IAAI7C,KACX6C,EAAEkB,OAAS/D,EAAI,EAGnB,SAASiE,EAAYF,GAGjB,IAFA,IAAIG,EAAI,IAAIC,MAAMJ,GACd/D,GAAK,IACAA,EAAI+D,GACTG,EAAElE,GAAK,EAEX,OAAOkE,EAGX,SAASE,EAAS3C,GACd,OAAIA,EAAI,EAAUiC,KAAKC,MAAMlC,GACtBiC,KAAKW,KAAK5C,GAGrB,SAAS6C,EAAIC,EAAGC,GACZ,IAKIC,EAAKzE,EALL0E,EAAMH,EAAER,OACRY,EAAMH,EAAET,OACRjD,EAAI,IAAIqD,MAAMO,GACdE,EAAQ,EACRC,EAAOvC,EAEX,IAAKtC,EAAI,EAAGA,EAAI2E,EAAK3E,IAEjB4E,GADAH,EAAMF,EAAEvE,GAAKwE,EAAExE,GAAK4E,IACLC,EAAO,EAAI,EAC1B/D,EAAEd,GAAKyE,EAAMG,EAAQC,EAEzB,KAAO7E,EAAI0E,GAEPE,GADAH,EAAMF,EAAEvE,GAAK4E,KACGC,EAAO,EAAI,EAC3B/D,EAAEd,KAAOyE,EAAMG,EAAQC,EAG3B,OADID,EAAQ,GAAG9D,EAAEgE,KAAKF,GACf9D,EAGX,SAASiE,EAAOR,EAAGC,GACf,OAAID,EAAER,QAAUS,EAAET,OAAeO,EAAIC,EAAGC,GACjCF,EAAIE,EAAGD,GAGlB,SAASS,EAAST,EAAGK,GACjB,IAGIH,EAAKzE,EAHLC,EAAIsE,EAAER,OACNjD,EAAI,IAAIqD,MAAMlE,GACd4E,EAAOvC,EAEX,IAAKtC,EAAI,EAAGA,EAAIC,EAAGD,IACfyE,EAAMF,EAAEvE,GAAK6E,EAAOD,EACpBA,EAAQlB,KAAKC,MAAMc,EAAMI,GACzB/D,EAAEd,GAAKyE,EAAMG,EAAQC,EACrBD,GAAS,EAEb,KAAOA,EAAQ,GACX9D,EAAEd,KAAO4E,EAAQC,EACjBD,EAAQlB,KAAKC,MAAMiB,EAAQC,GAE/B,OAAO/D,EAoCX,SAASmE,EAASV,EAAGC,GACjB,IAKIxE,EAAGkF,EALHC,EAAMZ,EAAER,OACRqB,EAAMZ,EAAET,OACRjD,EAAI,IAAIqD,MAAMgB,GACdE,EAAS,EAGb,IAAKrF,EAAI,EAAGA,EAAIoF,EAAKpF,KACjBkF,EAAaX,EAAEvE,GAAKqF,EAASb,EAAExE,IACd,GACbkF,GALG5C,IAMH+C,EAAS,GACNA,EAAS,EAChBvE,EAAEd,GAAKkF,EAEX,IAAKlF,EAAIoF,EAAKpF,EAAImF,EAAKnF,IAAK,CAExB,MADAkF,EAAaX,EAAEvE,GAAKqF,GACH,GACZ,CACDvE,EAAEd,KAAOkF,EACT,MAHgBA,GAZb5C,IAiBPxB,EAAEd,GAAKkF,EAEX,KAAOlF,EAAImF,EAAKnF,IACZc,EAAEd,GAAKuE,EAAEvE,GAGb,OADA8D,EAAKhD,GACEA,EAmBX,SAASwE,EAAcf,EAAGC,EAAGpB,GACzB,IAIIpD,EAAGkF,EAJHjF,EAAIsE,EAAER,OACNjD,EAAI,IAAIqD,MAAMlE,GACd2E,GAASJ,EAGb,IAAKxE,EAAI,EAAGA,EAAIC,EAAGD,IACfkF,EAAaX,EAAEvE,GAAK4E,EACpBA,EAAQlB,KAAKC,MAAMuB,EAJZ5C,KAKP4C,GALO5C,IAMPxB,EAAEd,GAAKkF,EAAa,EAAIA,EANjB5C,IAMqC4C,EAGhD,MAAiB,iBADjBpE,EAAI8C,EAAa9C,KAETsC,IAAMtC,GAAKA,GACR,IAAIyC,EAAazC,IACnB,IAAIqC,EAAWrC,EAAGsC,GA0D/B,SAASmC,EAAahB,EAAGC,GACrB,IAKIgB,EAASZ,EAAO5E,EAAGyF,EALnBN,EAAMZ,EAAER,OACRqB,EAAMZ,EAAET,OAERjD,EAAImD,EADAkB,EAAMC,GAId,IAAKpF,EAAI,EAAGA,EAAImF,IAAOnF,EAAG,CACtByF,EAAMlB,EAAEvE,GACR,IAAK,IAAI0F,EAAI,EAAGA,EAAIN,IAAOM,EAEvBF,EAAUC,EADJjB,EAAEkB,GACc5E,EAAEd,EAAI0F,GAC5Bd,EAAQlB,KAAKC,MAAM6B,EAPhBlD,KAQHxB,EAAEd,EAAI0F,GAAKF,EARRlD,IAQkBsC,EACrB9D,EAAEd,EAAI0F,EAAI,IAAMd,EAIxB,OADAd,EAAKhD,GACEA,EAGX,SAAS6E,EAAcpB,EAAGC,GACtB,IAIIgB,EAASxF,EAJTC,EAAIsE,EAAER,OACNjD,EAAI,IAAIqD,MAAMlE,GACd4E,EAAOvC,EACPsC,EAAQ,EAEZ,IAAK5E,EAAI,EAAGA,EAAIC,EAAGD,IACfwF,EAAUjB,EAAEvE,GAAKwE,EAAII,EACrBA,EAAQlB,KAAKC,MAAM6B,EAAUX,GAC7B/D,EAAEd,GAAKwF,EAAUZ,EAAQC,EAE7B,KAAOD,EAAQ,GACX9D,EAAEd,KAAO4E,EAAQC,EACjBD,EAAQlB,KAAKC,MAAMiB,EAAQC,GAE/B,OAAO/D,EAGX,SAAS8E,EAAU1B,EAAGzC,GAElB,IADA,IAAIX,EAAI,GACDW,KAAM,GAAGX,EAAEgE,KAAK,GACvB,OAAOhE,EAAE+E,OAAO3B,GAmDpB,SAAS4B,EAAsBvB,EAAGC,EAAGpB,GACjC,OACW,IAAID,EADXoB,EAAIjC,EACkBqD,EAAcnB,EAAGD,GAErBgB,EAAaf,EAAG/B,EAAa8B,IAFJnB,GA0BnD,SAAS2C,EAAOxB,GAEZ,IAGIiB,EAASZ,EAAO5E,EAAGyF,EAHnBxF,EAAIsE,EAAER,OACNjD,EAAImD,EAAYhE,EAAIA,GAGxB,IAAKD,EAAI,EAAGA,EAAIC,EAAGD,IAAK,CAEpB4E,EAAQ,GADRa,EAAMlB,EAAEvE,IACUyF,EAClB,IAAK,IAAIC,EAAI1F,EAAG0F,EAAIzF,EAAGyF,IAEnBF,EAAeC,EADTlB,EAAEmB,GACE,EAAkB5E,EAAEd,EAAI0F,GAAKd,EACvCA,EAAQlB,KAAKC,MAAM6B,EARhBlD,KASHxB,EAAEd,EAAI0F,GAAKF,EATRlD,IASkBsC,EAEzB9D,EAAEd,EAAIC,GAAK2E,EAGf,OADAd,EAAKhD,GACEA,EA6GX,SAASkF,EAAY/E,EAAOgF,GACxB,IAGIjG,EAAGkG,EAAGC,EAAWC,EAHjBrC,EAAS9C,EAAM8C,OACfsC,EAAWpC,EAAYF,GAI3B,IADAoC,EAAY,EACPnG,EAAI+D,EAAS,EAAG/D,GAAK,IAAKA,EAG3BmG,GAFAC,EAJO9D,IAIG6D,EAAmBlF,EAAMjB,KACnCkG,EAAI9B,EAASgC,EAAUH,IACGA,EAC1BI,EAASrG,GAAS,EAAJkG,EAElB,MAAO,CAACG,EAAsB,EAAZF,GAGtB,SAASG,EAAUC,EAAM1D,GACrB,IAAI5B,EAAOQ,EAAIyB,EAAWL,GAC1B,GAAIH,EACA,MAAO,CAAC,IAAIc,EAAa+C,EAAKtF,MAAQQ,EAAER,OAAQ,IAAIuC,EAAa+C,EAAKtF,MAAQQ,EAAER,QAEpF,IACIoF,EADA9B,EAAIgC,EAAKtF,MAAOuD,EAAI/C,EAAER,MAE1B,GAAU,IAANuD,EAAS,MAAM,IAAIgC,MAAM,yBAC7B,GAAID,EAAKjD,QACL,OAAI7B,EAAE6B,QACK,CAAC,IAAIC,EAAaa,EAASG,EAAIC,IAAK,IAAIjB,EAAagB,EAAIC,IAE7D,CAAC5B,EAAQ,GAAI2D,GAExB,GAAI9E,EAAE6B,QAAS,CACX,GAAU,IAANkB,EAAS,MAAO,CAAC+B,EAAM3D,EAAQ,IACnC,IAAU,GAAN4B,EAAS,MAAO,CAAC+B,EAAKE,SAAU7D,EAAQ,IAC5C,IAAI8D,EAAMhD,KAAKgD,IAAIlC,GACnB,GAAIkC,EAAMpE,EAAM,CAEZ+D,EAAWzC,GADX3C,EAAQ+E,EAAYzB,EAAGmC,IACO,IAC9B,IAAIP,EAAYlF,EAAM,GAEtB,OADIsF,EAAKnD,OAAM+C,GAAaA,GACJ,iBAAbE,GACHE,EAAKnD,OAAS3B,EAAE2B,OAAMiD,GAAYA,GAC/B,CAAC,IAAI9C,EAAa8C,GAAW,IAAI9C,EAAa4C,KAElD,CAAC,IAAIhD,EAAWkD,EAAUE,EAAKnD,OAAS3B,EAAE2B,MAAO,IAAIG,EAAa4C,IAE7E3B,EAAI/B,EAAaiE,GAErB,IAAIC,EAAa3C,EAAWO,EAAGC,GAC/B,IAAoB,IAAhBmC,EAAmB,MAAO,CAAC/D,EAAQ,GAAI2D,GAC3C,GAAmB,IAAfI,EAAkB,MAAO,CAAC/D,EAAQ2D,EAAKnD,OAAS3B,EAAE2B,KAAO,GAAK,GAAIR,EAAQ,IAO9EyD,GAHIpF,EADAsD,EAAER,OAASS,EAAET,QAAU,IA/I/B,SAAiBQ,EAAGC,GAChB,IASIoC,EAAeC,EAAOjC,EAAOS,EAAQrF,EAAGC,EAAGiG,EAT3Cf,EAAMZ,EAAER,OACRqB,EAAMZ,EAAET,OACRc,EAAOvC,EACPwE,EAAS7C,EAAYO,EAAET,QACvBgD,EAA8BvC,EAAEY,EAAM,GAEtCa,EAASvC,KAAKW,KAAKQ,GAAQ,EAAIkC,IAC/BZ,EAAYR,EAAcpB,EAAG0B,GAC7BG,EAAUT,EAAcnB,EAAGyB,GAK/B,IAHIE,EAAUpC,QAAUoB,GAAKgB,EAAUrB,KAAK,GAC5CsB,EAAQtB,KAAK,GACbiC,EAA8BX,EAAQhB,EAAM,GACvCyB,EAAQ1B,EAAMC,EAAKyB,GAAS,EAAGA,IAAS,CASzC,IARAD,EAAgB/B,EAAO,EACnBsB,EAAUU,EAAQzB,KAAS2B,IAC3BH,EAAgBlD,KAAKC,OAAOwC,EAAUU,EAAQzB,GAAOP,EAAOsB,EAAUU,EAAQzB,EAAM,IAAM2B,IAG9FnC,EAAQ,EACRS,EAAS,EACTpF,EAAImG,EAAQrC,OACP/D,EAAI,EAAGA,EAAIC,EAAGD,IACf4E,GAASgC,EAAgBR,EAAQpG,GACjCkG,EAAIxC,KAAKC,MAAMiB,EAAQC,GACvBQ,GAAUc,EAAUU,EAAQ7G,IAAM4E,EAAQsB,EAAIrB,GAC9CD,EAAQsB,EACJb,EAAS,GACTc,EAAUU,EAAQ7G,GAAKqF,EAASR,EAChCQ,GAAU,IAEVc,EAAUU,EAAQ7G,GAAKqF,EACvBA,EAAS,GAGjB,KAAkB,IAAXA,GAAc,CAGjB,IAFAuB,GAAiB,EACjBhC,EAAQ,EACH5E,EAAI,EAAGA,EAAIC,EAAGD,KACf4E,GAASuB,EAAUU,EAAQ7G,GAAK6E,EAAOuB,EAAQpG,IACnC,GACRmG,EAAUU,EAAQ7G,GAAK4E,EAAQC,EAC/BD,EAAQ,IAERuB,EAAUU,EAAQ7G,GAAK4E,EACvBA,EAAQ,GAGhBS,GAAUT,EAEdkC,EAAOD,GAASD,EAIpB,OADAT,EAAYH,EAAYG,EAAWF,GAAQ,GACpC,CAACrC,EAAakD,GAASlD,EAAauC,IAyF/Ba,CAAQzC,EAAGC,GAtF3B,SAAiBD,EAAGC,GAQhB,IANA,IAKIyC,EAAOC,EAAMC,EAAOC,EAAOC,EAL3BlC,EAAMZ,EAAER,OACRqB,EAAMZ,EAAET,OACR+C,EAAS,GACTQ,EAAO,GAGJnC,GAGH,GAFAmC,EAAKC,QAAQhD,IAAIY,IACjBrB,EAAKwD,GACDtD,EAAWsD,EAAM9C,GAAK,EACtBsC,EAAOhC,KAAK,OADhB,CAKAqC,EAVO7E,IAUCgF,GADRJ,EAAOI,EAAKvD,QACQ,GAAYuD,EAAKJ,EAAO,GAC5CE,EAXO9E,IAWCkC,EAAEY,EAAM,GAAYZ,EAAEY,EAAM,GAChC8B,EAAO9B,IACP+B,EAbG7E,KAaM6E,EAAQ,IAErBF,EAAQvD,KAAKW,KAAK8C,EAAQC,GAC1B,EAAG,CAEC,GAAIpD,EADJqD,EAAQ1B,EAAcnB,EAAGyC,GACHK,IAAS,EAAG,MAClCL,UACKA,GACTH,EAAOhC,KAAKmC,GACZK,EAAOrC,EAASqC,EAAMD,GAG1B,OADAP,EAAOU,UACA,CAAC5D,EAAakD,GAASlD,EAAa0D,IAwD9BG,CAAQlD,EAAGC,IAEP,GACjB,IAAIkD,EAAQnB,EAAKnD,OAAS3B,EAAE2B,KACxBuE,EAAM1G,EAAM,GACZ2G,EAAQrB,EAAKnD,KASjB,MARwB,iBAAbiD,GACHqB,IAAOrB,GAAYA,GACvBA,EAAW,IAAI9C,EAAa8C,IACzBA,EAAW,IAAIlD,EAAWkD,EAAUqB,GACxB,iBAARC,GACHC,IAAOD,GAAOA,GAClBA,EAAM,IAAIpE,EAAaoE,IACpBA,EAAM,IAAIxE,EAAWwE,EAAKC,GAC1B,CAACvB,EAAUsB,GAwGtB,SAAS3D,EAAWO,EAAGC,GACnB,GAAID,EAAER,SAAWS,EAAET,OACf,OAAOQ,EAAER,OAASS,EAAET,OAAS,GAAK,EAEtC,IAAK,IAAI/D,EAAIuE,EAAER,OAAS,EAAG/D,GAAK,EAAGA,IAC/B,GAAIuE,EAAEvE,KAAOwE,EAAExE,GAAI,OAAOuE,EAAEvE,GAAKwE,EAAExE,GAAK,GAAK,EAEjD,OAAO,EAoLX,SAAS6H,EAAahF,GAClB,IAAIpB,EAAIoB,EAAE6D,MACV,OAAIjF,EAAEqG,cACFrG,EAAEsG,OAAO,IAAMtG,EAAEsG,OAAO,IAAMtG,EAAEsG,OAAO,OACvCtG,EAAEuG,UAAYvG,EAAEwG,cAAc,IAAMxG,EAAEwG,cAAc,QACpDxG,EAAEyG,OAAO,UAAb,IAIJ,SAASC,EAAgB1G,EAAG8C,GAKxB,IAJA,IAGIjE,EAAMN,EAAGkE,EAHTkE,EAAQ3G,EAAE4G,OACV7D,EAAI4D,EACJtH,EAAI,EAED0D,EAAEwD,UAAUxD,EAAIA,EAAE8D,OAAO,GAAIxH,IACpCyH,EAAM,IAAKvI,EAAI,EAAGA,EAAIuE,EAAER,OAAQ/D,IAC5B,IAAIyB,EAAEyG,OAAO3D,EAAEvE,OACfkE,EAAIsE,EAAOjE,EAAEvE,IAAIyI,OAAOjE,EAAG/C,IACrBqG,WAAY5D,EAAE6D,OAAOK,GAA3B,CACA,IAAK9H,EAAIQ,EAAI,EAAQ,GAALR,EAAQA,IAAK,CAEzB,IADA4D,EAAIA,EAAE6B,SAAS4B,IAAIlG,IACbqG,SAAU,OAAO,EACvB,GAAI5D,EAAE6D,OAAOK,GAAQ,SAASG,EAElC,OAAO,EAEX,OAAO,EA13BXpF,EAAWvB,UAAYlB,OAAOY,OAAOsB,EAAQhB,WAO7C2B,EAAa3B,UAAYlB,OAAOY,OAAOsB,EAAQhB,WAK/C4B,EAAa5B,UAAYlB,OAAOY,OAAOsB,EAAQhB,WA4F/CuB,EAAWvB,UAAU0C,IAAM,SAAUzB,GACjC,IAAIpB,EAAIyB,EAAWL,GACnB,GAAIQ,KAAKD,OAAS3B,EAAE2B,KAChB,OAAOC,KAAK4B,SAASxD,EAAEgF,UAE3B,IAAIlC,EAAIlB,KAAKpC,MAAOuD,EAAI/C,EAAER,MAC1B,OAAIQ,EAAE6B,QACK,IAAIH,EAAW6B,EAAST,EAAGb,KAAKgD,IAAIlC,IAAKnB,KAAKD,MAElD,IAAID,EAAW4B,EAAOR,EAAGC,GAAInB,KAAKD,OAE7CD,EAAWvB,UAAU8G,KAAOvF,EAAWvB,UAAU0C,IAEjDf,EAAa3B,UAAU0C,IAAM,SAAUzB,GACnC,IAAIpB,EAAIyB,EAAWL,GACf0B,EAAIlB,KAAKpC,MACb,GAAIsD,EAAI,IAAM9C,EAAE2B,KACZ,OAAOC,KAAK4B,SAASxD,EAAEgF,UAE3B,IAAIjC,EAAI/C,EAAER,MACV,GAAIQ,EAAE6B,QAAS,CACX,GAAIG,EAAUc,EAAIC,GAAI,OAAO,IAAIjB,EAAagB,EAAIC,GAClDA,EAAI/B,EAAaiB,KAAKgD,IAAIlC,IAE9B,OAAO,IAAIrB,EAAW6B,EAASR,EAAGd,KAAKgD,IAAInC,IAAKA,EAAI,IAExDhB,EAAa3B,UAAU8G,KAAOnF,EAAa3B,UAAU0C,IAErDd,EAAa5B,UAAU0C,IAAM,SAAUzB,GACnC,OAAO,IAAIW,EAAaH,KAAKpC,MAAQiC,EAAWL,GAAG5B,QAEvDuC,EAAa5B,UAAU8G,KAAOlF,EAAa5B,UAAU0C,IAoErDnB,EAAWvB,UAAUqD,SAAW,SAAUpC,GACtC,IAAIpB,EAAIyB,EAAWL,GACnB,GAAIQ,KAAKD,OAAS3B,EAAE2B,KAChB,OAAOC,KAAKiB,IAAI7C,EAAEgF,UAEtB,IAAIlC,EAAIlB,KAAKpC,MAAOuD,EAAI/C,EAAER,MAC1B,OAAIQ,EAAE6B,QACKgC,EAAcf,EAAGb,KAAKgD,IAAIlC,GAAInB,KAAKD,MA1ClD,SAAqBmB,EAAGC,EAAGpB,GACvB,IAAInC,EAQJ,OAPI+C,EAAWO,EAAGC,IAAM,EACpBvD,EAAQgE,EAASV,EAAGC,IAEpBvD,EAAQgE,EAAST,EAAGD,GACpBnB,GAAQA,GAGS,iBADrBnC,EAAQ2C,EAAa3C,KAEbmC,IAAMnC,GAASA,GACZ,IAAIsC,EAAatC,IAErB,IAAIkC,EAAWlC,EAAOmC,GA8BtBuF,CAAYpE,EAAGC,EAAGnB,KAAKD,OAElCD,EAAWvB,UAAUgH,MAAQzF,EAAWvB,UAAUqD,SAElD1B,EAAa3B,UAAUqD,SAAW,SAAUpC,GACxC,IAAIpB,EAAIyB,EAAWL,GACf0B,EAAIlB,KAAKpC,MACb,GAAIsD,EAAI,IAAM9C,EAAE2B,KACZ,OAAOC,KAAKiB,IAAI7C,EAAEgF,UAEtB,IAAIjC,EAAI/C,EAAER,MACV,OAAIQ,EAAE6B,QACK,IAAIC,EAAagB,EAAIC,GAEzBc,EAAcd,EAAGd,KAAKgD,IAAInC,GAAIA,GAAK,IAE9ChB,EAAa3B,UAAUgH,MAAQrF,EAAa3B,UAAUqD,SAEtDzB,EAAa5B,UAAUqD,SAAW,SAAUpC,GACxC,OAAO,IAAIW,EAAaH,KAAKpC,MAAQiC,EAAWL,GAAG5B,QAEvDuC,EAAa5B,UAAUgH,MAAQpF,EAAa5B,UAAUqD,SAEtD9B,EAAWvB,UAAU6E,OAAS,WAC1B,OAAO,IAAItD,EAAWE,KAAKpC,OAAQoC,KAAKD,OAE5CG,EAAa3B,UAAU6E,OAAS,WAC5B,IAAIrD,EAAOC,KAAKD,KACZyF,EAAQ,IAAItF,GAAcF,KAAKpC,OAEnC,OADA4H,EAAMzF,MAAQA,EACPyF,GAEXrF,EAAa5B,UAAU6E,OAAS,WAC5B,OAAO,IAAIjD,GAAcH,KAAKpC,QAGlCkC,EAAWvB,UAAU8E,IAAM,WACvB,OAAO,IAAIvD,EAAWE,KAAKpC,OAAO,IAEtCsC,EAAa3B,UAAU8E,IAAM,WACzB,OAAO,IAAInD,EAAaG,KAAKgD,IAAIrD,KAAKpC,SAE1CuC,EAAa5B,UAAU8E,IAAM,WACzB,OAAO,IAAIlD,EAAaH,KAAKpC,OAAS,EAAIoC,KAAKpC,OAASoC,KAAKpC,QA2EjEkC,EAAWvB,UAAUkH,SAAW,SAAUjG,GACtC,IAGI6D,EARcqC,EAAIC,EAKlBvH,EAAIyB,EAAWL,GACf0B,EAAIlB,KAAKpC,MAAOuD,EAAI/C,EAAER,MACtBmC,EAAOC,KAAKD,OAAS3B,EAAE2B,KAE3B,GAAI3B,EAAE6B,QAAS,CACX,GAAU,IAANkB,EAAS,OAAO5B,EAAQ,GAC5B,GAAU,IAAN4B,EAAS,OAAOnB,KACpB,IAAW,IAAPmB,EAAU,OAAOnB,KAAKoD,SAE1B,IADAC,EAAMhD,KAAKgD,IAAIlC,IACLlC,EACN,OAAO,IAAIa,EAAWwC,EAAcpB,EAAGmC,GAAMtD,GAEjDoB,EAAI/B,EAAaiE,GAErB,OAnBkBqC,EAmBDxE,EAAER,OAnBGiF,EAmBKxE,EAAET,OAClB,IAAIZ,GAnBP,KAAQ4F,EAAK,KAAQC,EAAK,MAAWD,EAAKC,EAAK,EAvB3D,SAASC,EAAkB/E,EAAGgF,GAC1B,IAAIzH,EAAIiC,KAAKyF,IAAIjF,EAAEH,OAAQmF,EAAEnF,QAE7B,GAAItC,GAAK,GAAI,OAAO8D,EAAarB,EAAGgF,GACpCzH,EAAIiC,KAAKW,KAAK5C,EAAI,GAElB,IAAI+C,EAAIN,EAAEkF,MAAM3H,GACZ8C,EAAIL,EAAEkF,MAAM,EAAG3H,GACfnB,EAAI4I,EAAEE,MAAM3H,GACZpB,EAAI6I,EAAEE,MAAM,EAAG3H,GAEf4H,EAAKJ,EAAkB1E,EAAGlE,GAC1BiJ,EAAKL,EAAkBzE,EAAGlE,GAC1BiJ,EAAON,EAAkBlE,EAAOR,EAAGC,GAAIO,EAAO1E,EAAGC,IAEjDkF,EAAUT,EAAOA,EAAOsE,EAAIzD,EAAUX,EAASA,EAASsE,EAAMF,GAAKC,GAAK7H,IAAKmE,EAAU0D,EAAI,EAAI7H,IAEnG,OADAqC,EAAK0B,GACEA,EAyBmByD,CAAkB1E,EAAGC,GACzBe,EAAahB,EAAGC,GADapB,IAIvDD,EAAWvB,UAAU4H,MAAQrG,EAAWvB,UAAUkH,SAQlDvF,EAAa3B,UAAU6H,iBAAmB,SAAUlF,GAChD,OAAId,EAAUc,EAAEtD,MAAQoC,KAAKpC,OAClB,IAAIsC,EAAagB,EAAEtD,MAAQoC,KAAKpC,OAEpC6E,EAAsBpC,KAAKgD,IAAInC,EAAEtD,OAAQwB,EAAaiB,KAAKgD,IAAIrD,KAAKpC,QAASoC,KAAKD,OAASmB,EAAEnB,OAExGD,EAAWvB,UAAU6H,iBAAmB,SAAUlF,GAC9C,OAAgB,IAAZA,EAAEtD,MAAoB2B,EAAQ,GAClB,IAAZ2B,EAAEtD,MAAoBoC,MACT,IAAbkB,EAAEtD,MAAqBoC,KAAKoD,SACzBX,EAAsBpC,KAAKgD,IAAInC,EAAEtD,OAAQoC,KAAKpC,MAAOoC,KAAKD,OAASmB,EAAEnB,OAEhFG,EAAa3B,UAAUkH,SAAW,SAAUjG,GACxC,OAAOK,EAAWL,GAAG4G,iBAAiBpG,OAE1CE,EAAa3B,UAAU4H,MAAQjG,EAAa3B,UAAUkH,SAEtDtF,EAAa5B,UAAUkH,SAAW,SAAUjG,GACxC,OAAO,IAAIW,EAAaH,KAAKpC,MAAQiC,EAAWL,GAAG5B,QAEvDuC,EAAa5B,UAAU4H,MAAQhG,EAAa5B,UAAUkH,SAuBtD3F,EAAWvB,UAAUmE,OAAS,WAC1B,OAAO,IAAI5C,EAAW4C,EAAO1C,KAAKpC,QAAQ,IAG9CsC,EAAa3B,UAAUmE,OAAS,WAC5B,IAAI9E,EAAQoC,KAAKpC,MAAQoC,KAAKpC,MAC9B,OAAIwC,EAAUxC,GAAe,IAAIsC,EAAatC,GACvC,IAAIkC,EAAW4C,EAAOtD,EAAaiB,KAAKgD,IAAIrD,KAAKpC,UAAU,IAGtEuC,EAAa5B,UAAUmE,OAAS,SAAUlD,GACtC,OAAO,IAAIW,EAAaH,KAAKpC,MAAQoC,KAAKpC,QAqK9CkC,EAAWvB,UAAU8H,OAAS,SAAU7G,GACpC,IAAIiE,EAASR,EAAUjD,KAAMR,GAC7B,MAAO,CACHwD,SAAUS,EAAO,GACjBX,UAAWW,EAAO,KAG1BtD,EAAa5B,UAAU8H,OAASnG,EAAa3B,UAAU8H,OAASvG,EAAWvB,UAAU8H,OAGrFvG,EAAWvB,UAAU0G,OAAS,SAAUzF,GACpC,OAAOyD,EAAUjD,KAAMR,GAAG,IAE9BW,EAAa5B,UAAU+H,KAAOnG,EAAa5B,UAAU0G,OAAS,SAAUzF,GACpE,OAAO,IAAIW,EAAaH,KAAKpC,MAAQiC,EAAWL,GAAG5B,QAEvDsC,EAAa3B,UAAU+H,KAAOpG,EAAa3B,UAAU0G,OAASnF,EAAWvB,UAAU+H,KAAOxG,EAAWvB,UAAU0G,OAE/GnF,EAAWvB,UAAU+F,IAAM,SAAU9E,GACjC,OAAOyD,EAAUjD,KAAMR,GAAG,IAE9BW,EAAa5B,UAAU+F,IAAMnE,EAAa5B,UAAUuE,UAAY,SAAUtD,GACtE,OAAO,IAAIW,EAAaH,KAAKpC,MAAQiC,EAAWL,GAAG5B,QAEvDsC,EAAa3B,UAAUuE,UAAY5C,EAAa3B,UAAU+F,IAAMxE,EAAWvB,UAAUuE,UAAYhD,EAAWvB,UAAU+F,IAEtHxE,EAAWvB,UAAUgI,IAAM,SAAU/G,GACjC,IAGI5B,EAAOiD,EAAGgF,EAHVzH,EAAIyB,EAAWL,GACf0B,EAAIlB,KAAKpC,MACTuD,EAAI/C,EAAER,MAEV,GAAU,IAANuD,EAAS,OAAO5B,EAAQ,GAC5B,GAAU,IAAN2B,EAAS,OAAO3B,EAAQ,GAC5B,GAAU,IAAN2B,EAAS,OAAO3B,EAAQ,GAC5B,IAAW,IAAP2B,EAAU,OAAO9C,EAAEuG,SAAWpF,EAAQ,GAAKA,GAAS,GACxD,GAAInB,EAAE2B,KACF,OAAOR,EAAQ,GAEnB,IAAKnB,EAAE6B,QAAS,MAAM,IAAIkD,MAAM,gBAAkB/E,EAAEoI,WAAa,kBACjE,GAAIxG,KAAKC,SACDG,EAAUxC,EAAQyC,KAAKkG,IAAIrF,EAAGC,IAC9B,OAAO,IAAIjB,EAAaa,EAASnD,IAIzC,IAFAiD,EAAIb,KACJ6F,EAAItG,EAAQ,IAEA,EAAJ4B,IACA0E,EAAIA,EAAEM,MAAMtF,KACVM,GAEI,IAANA,GACJA,GAAK,EACLN,EAAIA,EAAE6B,SAEV,OAAOmD,GAEX3F,EAAa3B,UAAUgI,IAAMzG,EAAWvB,UAAUgI,IAElDpG,EAAa5B,UAAUgI,IAAM,SAAU/G,GACnC,IAAIpB,EAAIyB,EAAWL,GACf0B,EAAIlB,KAAKpC,MAAOuD,EAAI/C,EAAER,MACtB6I,EAAKnH,OAAO,GAAIoH,EAAKpH,OAAO,GAAIqH,EAAKrH,OAAO,GAChD,GAAI6B,IAAMsF,EAAI,OAAOlH,EAAQ,GAC7B,GAAI2B,IAAMuF,EAAI,OAAOlH,EAAQ,GAC7B,GAAI2B,IAAMwF,EAAI,OAAOnH,EAAQ,GAC7B,GAAI2B,IAAM5B,QAAQ,GAAI,OAAOlB,EAAEuG,SAAWpF,EAAQ,GAAKA,GAAS,GAChE,GAAInB,EAAEwI,aAAc,OAAO,IAAIzG,EAAasG,GAG5C,IAFA,IAAI5F,EAAIb,KACJ6F,EAAItG,EAAQ,IAEP4B,EAAIuF,KAAQA,IACbb,EAAIA,EAAEM,MAAMtF,KACVM,GAEFA,IAAMsF,GACVtF,GAAKwF,EACL9F,EAAIA,EAAE6B,SAEV,OAAOmD,GAGX/F,EAAWvB,UAAU6G,OAAS,SAAUyB,EAAKvC,GAGzC,GAFAuC,EAAMhH,EAAWgH,IACjBvC,EAAMzE,EAAWyE,IACTwC,SAAU,MAAM,IAAI3D,MAAM,qCAClC,IAAI1F,EAAI8B,EAAQ,GACZiC,EAAOxB,KAAKsE,IAAIA,GAKpB,IAJIuC,EAAID,eACJC,EAAMA,EAAIpB,SAASlG,GAAS,IAC5BiC,EAAOA,EAAKuF,OAAOzC,IAEhBuC,EAAIG,cAAc,CACrB,GAAIxF,EAAKsF,SAAU,OAAOvH,EAAQ,GAC9BsH,EAAII,UAASxJ,EAAIA,EAAEgI,SAASjE,GAAM8C,IAAIA,IAC1CuC,EAAMA,EAAI5B,OAAO,GACjBzD,EAAOA,EAAKkB,SAAS4B,IAAIA,GAE7B,OAAO7G,GAEX0C,EAAa5B,UAAU6G,OAASlF,EAAa3B,UAAU6G,OAAStF,EAAWvB,UAAU6G,OAYrFtF,EAAWvB,UAAUoC,WAAa,SAAUnB,GACxC,IAAIpB,EAAIyB,EAAWL,GACf0B,EAAIlB,KAAKpC,MACTuD,EAAI/C,EAAER,MACV,OAAIQ,EAAE6B,QAAgB,EACfU,EAAWO,EAAGC,IAEzBjB,EAAa3B,UAAUoC,WAAa,SAAUnB,GAC1C,IAAIpB,EAAIyB,EAAWL,GACf0B,EAAIb,KAAKgD,IAAIrD,KAAKpC,OAClBuD,EAAI/C,EAAER,MACV,OAAIQ,EAAE6B,QAEKiB,KADPC,EAAId,KAAKgD,IAAIlC,IACI,EAAID,EAAIC,EAAI,GAAK,GAE9B,GAEZhB,EAAa5B,UAAUoC,WAAa,SAAUnB,GAC1C,IAAI0B,EAAIlB,KAAKpC,MACTuD,EAAItB,EAAWL,GAAG5B,MAGtB,OAFAsD,EAAIA,GAAK,EAAIA,GAAKA,MAClBC,EAAIA,GAAK,EAAIA,GAAKA,GACD,EAAID,EAAIC,EAAI,GAAK,GAGtCrB,EAAWvB,UAAU2I,QAAU,SAAU1H,GAGrC,GAAIA,IAAM2H,IACN,OAAQ,EAEZ,GAAI3H,KAAO2H,IACP,OAAO,EAGX,IAAI/I,EAAIyB,EAAWL,GACf0B,EAAIlB,KAAKpC,MACTuD,EAAI/C,EAAER,MACV,OAAIoC,KAAKD,OAAS3B,EAAE2B,KACT3B,EAAE2B,KAAO,GAAK,EAErB3B,EAAE6B,QACKD,KAAKD,MAAQ,EAAI,EAErBY,EAAWO,EAAGC,IAAMnB,KAAKD,MAAQ,EAAI,IAEhDD,EAAWvB,UAAU6I,UAAYtH,EAAWvB,UAAU2I,QAEtDhH,EAAa3B,UAAU2I,QAAU,SAAU1H,GACvC,GAAIA,IAAM2H,IACN,OAAQ,EAEZ,GAAI3H,KAAO2H,IACP,OAAO,EAGX,IAAI/I,EAAIyB,EAAWL,GACf0B,EAAIlB,KAAKpC,MACTuD,EAAI/C,EAAER,MACV,OAAIQ,EAAE6B,QACKiB,GAAKC,EAAI,EAAID,EAAIC,EAAI,GAAK,EAEjCD,EAAI,IAAM9C,EAAE2B,KACLmB,EAAI,GAAK,EAAI,EAEjBA,EAAI,EAAI,GAAK,GAExBhB,EAAa3B,UAAU6I,UAAYlH,EAAa3B,UAAU2I,QAE1D/G,EAAa5B,UAAU2I,QAAU,SAAU1H,GACvC,GAAIA,IAAM2H,IACN,OAAQ,EAEZ,GAAI3H,KAAO2H,IACP,OAAO,EAEX,IAAIjG,EAAIlB,KAAKpC,MACTuD,EAAItB,EAAWL,GAAG5B,MACtB,OAAOsD,IAAMC,EAAI,EAAID,EAAIC,EAAI,GAAK,GAEtChB,EAAa5B,UAAU6I,UAAYjH,EAAa5B,UAAU2I,QAE1DpH,EAAWvB,UAAUmG,OAAS,SAAUlF,GACpC,OAA2B,IAApBQ,KAAKkH,QAAQ1H,IAExBW,EAAa5B,UAAU8I,GAAKlH,EAAa5B,UAAUmG,OAASxE,EAAa3B,UAAU8I,GAAKnH,EAAa3B,UAAUmG,OAAS5E,EAAWvB,UAAU8I,GAAKvH,EAAWvB,UAAUmG,OAEvK5E,EAAWvB,UAAU+I,UAAY,SAAU9H,GACvC,OAA2B,IAApBQ,KAAKkH,QAAQ1H,IAExBW,EAAa5B,UAAUgJ,IAAMpH,EAAa5B,UAAU+I,UAAYpH,EAAa3B,UAAUgJ,IAAMrH,EAAa3B,UAAU+I,UAAYxH,EAAWvB,UAAUgJ,IAAMzH,EAAWvB,UAAU+I,UAEhLxH,EAAWvB,UAAUiJ,QAAU,SAAUhI,GACrC,OAAOQ,KAAKkH,QAAQ1H,GAAK,GAE7BW,EAAa5B,UAAUkJ,GAAKtH,EAAa5B,UAAUiJ,QAAUtH,EAAa3B,UAAUkJ,GAAKvH,EAAa3B,UAAUiJ,QAAU1H,EAAWvB,UAAUkJ,GAAK3H,EAAWvB,UAAUiJ,QAEzK1H,EAAWvB,UAAUsG,OAAS,SAAUrF,GACpC,OAAOQ,KAAKkH,QAAQ1H,GAAK,GAE7BW,EAAa5B,UAAUmJ,GAAKvH,EAAa5B,UAAUsG,OAAS3E,EAAa3B,UAAUmJ,GAAKxH,EAAa3B,UAAUsG,OAAS/E,EAAWvB,UAAUmJ,GAAK5H,EAAWvB,UAAUsG,OAEvK/E,EAAWvB,UAAUoJ,gBAAkB,SAAUnI,GAC7C,OAAOQ,KAAKkH,QAAQ1H,IAAM,GAE9BW,EAAa5B,UAAUqJ,IAAMzH,EAAa5B,UAAUoJ,gBAAkBzH,EAAa3B,UAAUqJ,IAAM1H,EAAa3B,UAAUoJ,gBAAkB7H,EAAWvB,UAAUqJ,IAAM9H,EAAWvB,UAAUoJ,gBAE5L7H,EAAWvB,UAAUsJ,eAAiB,SAAUrI,GAC5C,OAAOQ,KAAKkH,QAAQ1H,IAAM,GAE9BW,EAAa5B,UAAUuJ,IAAM3H,EAAa5B,UAAUsJ,eAAiB3H,EAAa3B,UAAUuJ,IAAM5H,EAAa3B,UAAUsJ,eAAiB/H,EAAWvB,UAAUuJ,IAAMhI,EAAWvB,UAAUsJ,eAE1L/H,EAAWvB,UAAUoG,OAAS,WAC1B,OAA+B,IAAP,EAAhB3E,KAAKpC,MAAM,KAEvBsC,EAAa3B,UAAUoG,OAAS,WAC5B,OAA4B,IAAP,EAAb3E,KAAKpC,QAEjBuC,EAAa5B,UAAUoG,OAAS,WAC5B,OAAQ3E,KAAKpC,MAAQ0B,OAAO,MAAQA,OAAO,IAG/CQ,EAAWvB,UAAU0I,MAAQ,WACzB,OAA+B,IAAP,EAAhBjH,KAAKpC,MAAM,KAEvBsC,EAAa3B,UAAU0I,MAAQ,WAC3B,OAA4B,IAAP,EAAbjH,KAAKpC,QAEjBuC,EAAa5B,UAAU0I,MAAQ,WAC3B,OAAQjH,KAAKpC,MAAQ0B,OAAO,MAAQA,OAAO,IAG/CQ,EAAWvB,UAAUyI,WAAa,WAC9B,OAAQhH,KAAKD,MAEjBG,EAAa3B,UAAUyI,WAAa,WAChC,OAAOhH,KAAKpC,MAAQ,GAExBuC,EAAa5B,UAAUyI,WAAa9G,EAAa3B,UAAUyI,WAE3DlH,EAAWvB,UAAUqI,WAAa,WAC9B,OAAO5G,KAAKD,MAEhBG,EAAa3B,UAAUqI,WAAa,WAChC,OAAO5G,KAAKpC,MAAQ,GAExBuC,EAAa5B,UAAUqI,WAAa1G,EAAa3B,UAAUqI,WAE3D9G,EAAWvB,UAAUkG,OAAS,WAC1B,OAAO,GAEXvE,EAAa3B,UAAUkG,OAAS,WAC5B,OAAgC,IAAzBpE,KAAKgD,IAAIrD,KAAKpC,QAEzBuC,EAAa5B,UAAUkG,OAAS,WAC5B,OAAOzE,KAAKqD,MAAMzF,QAAU0B,OAAO,IAGvCQ,EAAWvB,UAAUuI,OAAS,WAC1B,OAAO,GAEX5G,EAAa3B,UAAUuI,OAAS,WAC5B,OAAsB,IAAf9G,KAAKpC,OAEhBuC,EAAa5B,UAAUuI,OAAS,WAC5B,OAAO9G,KAAKpC,QAAU0B,OAAO,IAGjCQ,EAAWvB,UAAUqG,cAAgB,SAAUpF,GAC3C,IAAIpB,EAAIyB,EAAWL,GACnB,OAAIpB,EAAE0I,aACF1I,EAAEqG,WACkB,IAApBrG,EAAEuC,WAAW,GAAiBX,KAAK2E,SAChC3E,KAAKsE,IAAIlG,GAAG0I,YAEvB3G,EAAa5B,UAAUqG,cAAgB1E,EAAa3B,UAAUqG,cAAgB9E,EAAWvB,UAAUqG,cAgCnG9E,EAAWvB,UAAUwJ,QAAU,SAAUC,GACrC,IAAID,EAAUvD,EAAaxE,MAC3B,QAt5BR,IAs5BY+H,EAAuB,OAAOA,EAClC,IAAI3J,EAAI4B,KAAKqD,MACT4E,EAAO7J,EAAE8J,YACb,GAAID,GAAQ,GACR,OAAOnD,EAAgB1G,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAGvE,IAFA,IAAI+J,EAAO9H,KAAK+H,IAAI,GAAKH,EAAKI,aAC1BxK,EAAIwC,KAAKW,MAAiB,IAAXgH,EAAoB,EAAI3H,KAAKkG,IAAI4B,EAAM,GAAMA,GACvDjH,EAAI,GAAIvE,EAAI,EAAGA,EAAIkB,EAAGlB,IAC3BuE,EAAEO,KAAK0D,EAAOxI,EAAI,IAEtB,OAAOmI,EAAgB1G,EAAG8C,IAE9Bf,EAAa5B,UAAUwJ,QAAU7H,EAAa3B,UAAUwJ,QAAUjI,EAAWvB,UAAUwJ,QAEvFjI,EAAWvB,UAAU+J,gBAAkB,SAAUC,EAAYC,GACzD,IAAIT,EAAUvD,EAAaxE,MAC3B,QAt6BR,IAs6BY+H,EAAuB,OAAOA,EAGlC,IAFA,IAAI3J,EAAI4B,KAAKqD,MACTxF,OAx6BZ,IAw6BgB0K,EAA2B,EAAIA,EAC9BrH,EAAI,GAAIvE,EAAI,EAAGA,EAAIkB,EAAGlB,IAC3BuE,EAAEO,KAAK0D,EAAOsD,YAAY,EAAGrK,EAAEmH,MAAM,GAAIiD,IAE7C,OAAO1D,EAAgB1G,EAAG8C,IAE9Bf,EAAa5B,UAAU+J,gBAAkBpI,EAAa3B,UAAU+J,gBAAkBxI,EAAWvB,UAAU+J,gBAEvGxI,EAAWvB,UAAUwI,OAAS,SAAU3I,GAEpC,IADA,IAA8EyE,EAAG6F,EAAOC,EAApF9K,EAAIsH,EAAOyD,KAAMC,EAAO1D,EAAO2D,IAAKrL,EAAIoC,EAAWzB,GAAI2K,EAAO/I,KAAKqD,OAC/D0F,EAAKjC,UACTjE,EAAIpF,EAAEwH,OAAO8D,GACbL,EAAQ7K,EACR8K,EAAQlL,EACRI,EAAIgL,EACJpL,EAAIsL,EACJF,EAAOH,EAAM9G,SAASiB,EAAE4C,SAASoD,IACjCE,EAAOJ,EAAM/G,SAASiB,EAAE4C,SAASsD,IAErC,IAAKtL,EAAEgH,SAAU,MAAM,IAAItB,MAAMnD,KAAKwG,WAAa,QAAUpI,EAAEoI,WAAa,qBAI5E,OAHsB,IAAlB3I,EAAEqJ,QAAQ,KACVrJ,EAAIA,EAAEoD,IAAI7C,IAEV4B,KAAK4G,aACE/I,EAAEuF,SAENvF,GAGXsC,EAAa5B,UAAUwI,OAAS7G,EAAa3B,UAAUwI,OAASjH,EAAWvB,UAAUwI,OAErFjH,EAAWvB,UAAU2G,KAAO,WACxB,IAAItH,EAAQoC,KAAKpC,MACjB,OAAIoC,KAAKD,KACEkC,EAAcrE,EAAO,EAAGoC,KAAKD,MAEjC,IAAID,EAAW6B,EAAS/D,EAAO,GAAIoC,KAAKD,OAEnDG,EAAa3B,UAAU2G,KAAO,WAC1B,IAAItH,EAAQoC,KAAKpC,MACjB,OAAIA,EAAQ,EAAIsB,EAAgB,IAAIgB,EAAatC,EAAQ,GAClD,IAAIkC,EAAWX,GAAa,IAEvCgB,EAAa5B,UAAU2G,KAAO,WAC1B,OAAO,IAAI/E,EAAaH,KAAKpC,MAAQ0B,OAAO,KAGhDQ,EAAWvB,UAAUyG,KAAO,WACxB,IAAIpH,EAAQoC,KAAKpC,MACjB,OAAIoC,KAAKD,KACE,IAAID,EAAW6B,EAAS/D,EAAO,IAAI,GAEvCqE,EAAcrE,EAAO,EAAGoC,KAAKD,OAExCG,EAAa3B,UAAUyG,KAAO,WAC1B,IAAIpH,EAAQoC,KAAKpC,MACjB,OAAIA,EAAQ,GAAKsB,EAAgB,IAAIgB,EAAatC,EAAQ,GACnD,IAAIkC,EAAWX,GAAa,IAEvCgB,EAAa5B,UAAUyG,KAAO,WAC1B,OAAO,IAAI7E,EAAaH,KAAKpC,MAAQ0B,OAAO,KAIhD,IADA,IAAI0J,EAAc,CAAC,GACZ,EAAIA,EAAYA,EAAYtI,OAAS,IAAMzB,GAAM+J,EAAYvH,KAAK,EAAIuH,EAAYA,EAAYtI,OAAS,IAC9G,IAAIuI,EAAgBD,EAAYtI,OAAQwI,EAAgBF,EAAYC,EAAgB,GAEpF,SAASE,EAAc/K,GACnB,OAAOiC,KAAKgD,IAAIjF,IAAMa,EAsC1B,SAASmK,EAAQvI,EAAGgF,EAAGwD,GACnBxD,EAAIhG,EAAWgG,GAOf,IANA,IAAIyD,EAAQzI,EAAE+F,aAAc2C,EAAQ1D,EAAEe,aAClC4C,EAAOF,EAAQzI,EAAE4I,MAAQ5I,EACzB6I,EAAOH,EAAQ1D,EAAE4D,MAAQ5D,EACzB8D,EAAS,EAAGC,EAAS,EACrBC,EAAU,KAAMC,EAAU,KAC1BrG,EAAS,IACL+F,EAAK1C,WAAa4C,EAAK5C,UAE3B6C,GADAE,EAAU5G,EAAUuG,EAAMN,IACT,GAAGb,aAChBiB,IACAK,EAAST,EAAgB,EAAIS,GAIjCC,GADAE,EAAU7G,EAAUyG,EAAMR,IACT,GAAGb,aAChBkB,IACAK,EAASV,EAAgB,EAAIU,GAGjCJ,EAAOK,EAAQ,GACfH,EAAOI,EAAQ,GACfrG,EAAOhC,KAAK4H,EAAGM,EAAQC,IAG3B,IADA,IAAIxI,EAA2C,IAArCiI,EAAGC,EAAQ,EAAI,EAAGC,EAAQ,EAAI,GAAWpE,GAAQ,GAAKA,EAAO,GAC9DxI,EAAI8G,EAAO/C,OAAS,EAAG/D,GAAK,EAAGA,GAAK,EACzCyE,EAAMA,EAAIqE,SAASyD,GAAejI,IAAIkE,EAAO1B,EAAO9G,KAExD,OAAOyE,EAhEXtB,EAAWvB,UAAUgE,UAAY,SAAU/C,GACvC,IAAIpB,EAAIyB,EAAWL,GAAG6I,aACtB,IAAKc,EAAc/K,GACf,MAAM,IAAI+E,MAAM4G,OAAO3L,GAAK,+BAEhC,GAAIA,EAAI,EAAG,OAAO4B,KAAKgK,YAAY5L,GACnC,IAAIqF,EAASzD,KACb,GAAIyD,EAAOqD,SAAU,OAAOrD,EAC5B,KAAOrF,GAAK6K,GACRxF,EAASA,EAAOgC,SAASyD,GACzB9K,GAAK6K,EAAgB,EAEzB,OAAOxF,EAAOgC,SAASuD,EAAY5K,KAEvC+B,EAAa5B,UAAUgE,UAAYrC,EAAa3B,UAAUgE,UAAYzC,EAAWvB,UAAUgE,UAE3FzC,EAAWvB,UAAUyL,WAAa,SAAUxK,GACxC,IAAIyK,EACA7L,EAAIyB,EAAWL,GAAG6I,aACtB,IAAKc,EAAc/K,GACf,MAAM,IAAI+E,MAAM4G,OAAO3L,GAAK,+BAEhC,GAAIA,EAAI,EAAG,OAAO4B,KAAKuC,WAAWnE,GAElC,IADA,IAAIqF,EAASzD,KACN5B,GAAK6K,GAAe,CACvB,GAAIxF,EAAOqD,UAAarD,EAAOmD,cAAgBnD,EAAOgB,SAAW,OAAOhB,EAExEA,GADAwG,EAAShH,EAAUQ,EAAQyF,IACX,GAAGtC,aAAeqD,EAAO,GAAGjF,OAASiF,EAAO,GAC5D7L,GAAK6K,EAAgB,EAGzB,OADAgB,EAAShH,EAAUQ,EAAQuF,EAAY5K,KACzB,GAAGwI,aAAeqD,EAAO,GAAGjF,OAASiF,EAAO,IAE9D9J,EAAa5B,UAAUyL,WAAa9J,EAAa3B,UAAUyL,WAAalK,EAAWvB,UAAUyL,WAkC7FlK,EAAWvB,UAAUkL,IAAM,WACvB,OAAOzJ,KAAKoD,SAAS4B,QAEzB7E,EAAa5B,UAAUkL,IAAMvJ,EAAa3B,UAAUkL,IAAM3J,EAAWvB,UAAUkL,IAE/E3J,EAAWvB,UAAU2L,IAAM,SAAU9L,GACjC,OAAOgL,EAAQpJ,KAAM5B,GAAG,SAAU8C,EAAGC,GAAK,OAAOD,EAAIC,MAEzDhB,EAAa5B,UAAU2L,IAAMhK,EAAa3B,UAAU2L,IAAMpK,EAAWvB,UAAU2L,IAE/EpK,EAAWvB,UAAU4L,GAAK,SAAU/L,GAChC,OAAOgL,EAAQpJ,KAAM5B,GAAG,SAAU8C,EAAGC,GAAK,OAAOD,EAAIC,MAEzDhB,EAAa5B,UAAU4L,GAAKjK,EAAa3B,UAAU4L,GAAKrK,EAAWvB,UAAU4L,GAE7ErK,EAAWvB,UAAU6L,IAAM,SAAUhM,GACjC,OAAOgL,EAAQpJ,KAAM5B,GAAG,SAAU8C,EAAGC,GAAK,OAAOD,EAAIC,MAEzDhB,EAAa5B,UAAU6L,IAAMlK,EAAa3B,UAAU6L,IAAMtK,EAAWvB,UAAU6L,IAG/E,SAASC,EAASjM,GAGd,IAAIoB,EAAIpB,EAAER,MACNiD,EAAiB,iBAANrB,EAAiBA,EALpB,GAAK,GAMI,iBAANA,EAAiBA,EAAIF,OANxB,GAAK,IAOLE,EAAE,GAAKA,EAAE,GAAKP,EAPQ,WAQlC,OAAO4B,GAAKA,EA0BhB,SAASiF,EAAI5E,EAAGC,GAGZ,OAFAD,EAAIrB,EAAWqB,GACfC,EAAItB,EAAWsB,GACRD,EAAEsG,QAAQrG,GAAKD,EAAIC,EAE9B,SAASmJ,EAAIpJ,EAAGC,GAGZ,OAFAD,EAAIrB,EAAWqB,GACfC,EAAItB,EAAWsB,GACRD,EAAE2D,OAAO1D,GAAKD,EAAIC,EAE7B,SAASoJ,EAAIrJ,EAAGC,GAGZ,GAFAD,EAAIrB,EAAWqB,GAAGmC,MAClBlC,EAAItB,EAAWsB,GAAGkC,MACdnC,EAAEwD,OAAOvD,GAAI,OAAOD,EACxB,GAAIA,EAAE4F,SAAU,OAAO3F,EACvB,GAAIA,EAAE2F,SAAU,OAAO5F,EAEvB,IADA,IAAoBjE,EAAGY,EAAnBb,EAAIuC,EAAQ,GACT2B,EAAEyD,UAAYxD,EAAEwD,UACnB1H,EAAIqN,EAAID,EAASnJ,GAAImJ,EAASlJ,IAC9BD,EAAIA,EAAE+D,OAAOhI,GACbkE,EAAIA,EAAE8D,OAAOhI,GACbD,EAAIA,EAAEyI,SAASxI,GAEnB,KAAOiE,EAAEyD,UACLzD,EAAIA,EAAE+D,OAAOoF,EAASnJ,IAE1B,EAAG,CACC,KAAOC,EAAEwD,UACLxD,EAAIA,EAAE8D,OAAOoF,EAASlJ,IAEtBD,EAAEsG,QAAQrG,KACVtD,EAAIsD,EAAGA,EAAID,EAAGA,EAAIrD,GAEtBsD,EAAIA,EAAES,SAASV,UACTC,EAAE2F,UACZ,OAAO9J,EAAEyH,SAAWvD,EAAIA,EAAEuE,SAASzI,GA/CvC8C,EAAWvB,UAAU2J,UAAY,WAC7B,IAAI9J,EAAI4B,KAIR,OAHI5B,EAAEgJ,UAAUjC,EAAO,IAAM,IACzB/G,EAAIA,EAAEgF,SAASxB,SAASuD,EAAO,KAEJ,IAA3B/G,EAAEgJ,UAAUjC,EAAO,IACZA,EAAO,GAEXA,EAnBX,SAASqF,EAAiB5M,EAAO4D,GAC7B,GAAIA,EAAK4F,UAAUxJ,IAAU,EAAG,CAC5B,IAAI6M,EAAMD,EAAiB5M,EAAO4D,EAAKkB,OAAOlB,IAC1C/C,EAAIgM,EAAIhM,EACRiM,EAAID,EAAIC,EACR7M,EAAIY,EAAEgH,SAASjE,GACnB,OAAO3D,EAAEuJ,UAAUxJ,IAAU,EAAI,CAAEa,EAAGZ,EAAG6M,EAAO,EAAJA,EAAQ,GAAM,CAAEjM,EAAGA,EAAGiM,EAAO,EAAJA,GAEzE,MAAO,CAAEjM,EAAG0G,EAAO,GAAIuF,EAAG,GAWZF,CAAiBpM,EAAG+G,EAAO,IAAIuF,GAAGzJ,IAAIkE,EAAO,KAE/DhF,EAAa5B,UAAU2J,UAAYhI,EAAa3B,UAAU2J,UAAYpI,EAAWvB,UAAU2J,UA8D3F,IAAItI,EAAY,SAAU+K,EAAMnJ,EAAM9B,EAAUC,GAC5CD,EAAWA,GA9pCQ,uCA+pCnBiL,EAAOZ,OAAOY,GACThL,IACDgL,EAAOA,EAAKC,cACZlL,EAAWA,EAASkL,eAExB,IACIjO,EADA+D,EAASiK,EAAKjK,OAEdmK,EAAUxK,KAAKgD,IAAI7B,GACnBsJ,EAAiB,GACrB,IAAKnO,EAAI,EAAGA,EAAI+C,EAASgB,OAAQ/D,IAC7BmO,EAAepL,EAAS/C,IAAMA,EAElC,IAAKA,EAAI,EAAGA,EAAI+D,EAAQ/D,IAAK,CAEzB,GAAU,OADNK,EAAI2N,EAAKhO,MAETK,KAAK8N,GACDA,EAAe9N,IAAM6N,GAAS,CAC9B,GAAU,MAAN7N,GAAyB,IAAZ6N,EAAe,SAChC,MAAM,IAAI1H,MAAMnG,EAAI,iCAAmCwE,EAAO,MAI1EA,EAAO3B,EAAW2B,GAClB,IAAIuJ,EAAS,GACTnE,EAAyB,MAAZ+D,EAAK,GACtB,IAAKhO,EAAIiK,EAAa,EAAI,EAAGjK,EAAIgO,EAAKjK,OAAQ/D,IAAK,CAC/C,IAAIK,EACJ,IADIA,EAAI2N,EAAKhO,MACJmO,EAAgBC,EAAOtJ,KAAK5B,EAAWiL,EAAe9N,SAC1D,IAAU,MAANA,EAKJ,MAAM,IAAImG,MAAMnG,EAAI,6BAJrB,IAAIgO,EAAQrO,EACZ,GAAKA,UAA0B,MAAZgO,EAAKhO,IAAcA,EAAIgO,EAAKjK,QAC/CqK,EAAOtJ,KAAK5B,EAAW8K,EAAK5E,MAAMiF,EAAQ,EAAGrO,MAIrD,OAAOsO,EAAmBF,EAAQvJ,EAAMoF,IAG5C,SAASqE,EAAmBF,EAAQvJ,EAAMoF,GACtC,IAAwCjK,EAApCuO,EAAM3L,EAAQ,GAAIgH,EAAMhH,EAAQ,GACpC,IAAK5C,EAAIoO,EAAOrK,OAAS,EAAG/D,GAAK,EAAGA,IAChCuO,EAAMA,EAAIjK,IAAI8J,EAAOpO,GAAGwJ,MAAMI,IAC9BA,EAAMA,EAAIJ,MAAM3E,GAEpB,OAAOoF,EAAasE,EAAI9H,SAAW8H,EAWvC,SAASC,EAAO/M,EAAGoD,GAEf,IADAA,EAAO2D,EAAO3D,IACLsF,SAAU,CACf,GAAI1I,EAAE0I,SAAU,MAAO,CAAElJ,MAAO,CAAC,GAAIgJ,YAAY,GACjD,MAAM,IAAIzD,MAAM,6CAEpB,GAAI3B,EAAKkD,QAAQ,GAAI,CACjB,GAAItG,EAAE0I,SAAU,MAAO,CAAElJ,MAAO,CAAC,GAAIgJ,YAAY,GACjD,GAAIxI,EAAEwI,aACF,MAAO,CACHhJ,MAAO,GAAG4E,OAAO4I,MAAM,GAAItK,MAAMsK,MAAM,KAAMtK,OAAO1C,EAAEiK,eACjDgD,IAAIvK,MAAMvC,UAAU+M,QAAS,CAAC,EAAG,KAEtC1E,YAAY,GAGpB,IAAIpG,EAAMM,MAAMsK,MAAM,KAAMtK,MAAM1C,EAAEiK,aAAe,IAC9CgD,IAAIvK,MAAMvC,UAAU+M,QAAS,CAAC,EAAG,IAEtC,OADA9K,EAAI0D,QAAQ,CAAC,IACN,CACHtG,MAAO,GAAG4E,OAAO4I,MAAM,GAAI5K,GAC3BoG,YAAY,GAIpB,IAAI2E,GAAM,EAKV,GAJInN,EAAEwI,cAAgBpF,EAAKwF,eACvBuE,GAAM,EACNnN,EAAIA,EAAEiF,OAEN7B,EAAKiD,SACL,OAAIrG,EAAE0I,SAAiB,CAAElJ,MAAO,CAAC,GAAIgJ,YAAY,GAE1C,CACHhJ,MAAOkD,MAAMsK,MAAM,KAAMtK,MAAM1C,EAAEiK,eAC5BgD,IAAIG,OAAOjN,UAAU+M,QAAS,GACnC1E,WAAY2E,GAKpB,IAFA,IACclF,EADVoF,EAAM,GACNC,EAAOtN,EACJsN,EAAK9E,cAAgB8E,EAAK/K,WAAWa,IAAS,GAAG,CACpD6E,EAASqF,EAAKrF,OAAO7E,GACrBkK,EAAOrF,EAAOrD,SACd,IAAI2I,EAAQtF,EAAOvD,UACf6I,EAAM/E,eACN+E,EAAQnK,EAAK+D,MAAMoG,GAAOtI,MAC1BqI,EAAOA,EAAKxG,QAEhBuG,EAAIhK,KAAKkK,EAAMtD,cAGnB,OADAoD,EAAIhK,KAAKiK,EAAKrD,cACP,CAAEzK,MAAO6N,EAAItH,UAAWyC,WAAY2E,GAG/C,SAASK,EAAaxN,EAAGoD,EAAM9B,GAC3B,IAAIc,EAAM2K,EAAO/M,EAAGoD,GACpB,OAAQhB,EAAIoG,WAAa,IAAM,IAAMpG,EAAI5C,MAAMyN,KAAI,SAAUxK,GACzD,OAlER,SAAmB8K,EAAOjM,GAEtB,OAAIiM,GADJjM,EAAWA,GA/sCQ,wCAgtCEgB,OACVhB,EAASiM,GAEb,IAAMA,EAAQ,IA6DVE,CAAUhL,EAAGnB,MACrBoM,KAAK,IAkDZ,SAASC,EAAiBvM,GACtB,GAAIY,GAAWZ,GAAI,CACf,IAAIqB,GAAKrB,EACT,GAAIqB,IAAME,EAASF,GACf,OAAOxB,EAAuB,IAAIc,EAAab,OAAOuB,IAAM,IAAIX,EAAaW,GACjF,MAAM,IAAIsC,MAAM,oBAAsB3D,GAE1C,IAAIO,EAAgB,MAATP,EAAE,GACTO,IAAMP,EAAIA,EAAEuG,MAAM,IACtB,IAAIiG,EAAQxM,EAAEwM,MAAM,MACpB,GAAIA,EAAMtL,OAAS,EAAG,MAAM,IAAIyC,MAAM,oBAAsB6I,EAAMF,KAAK,MACvE,GAAqB,IAAjBE,EAAMtL,OAAc,CACpB,IAAImG,EAAMmF,EAAM,GAGhB,GAFe,MAAXnF,EAAI,KAAYA,EAAMA,EAAId,MAAM,KACpCc,GAAOA,KACK9F,EAAS8F,KAASzG,EAAUyG,GAAM,MAAM,IAAI1D,MAAM,oBAAsB0D,EAAM,6BAC1F,IAAI8D,EAAOqB,EAAM,GACbC,EAAetB,EAAKuB,QAAQ,KAKhC,GAJID,GAAgB,IAChBpF,GAAO8D,EAAKjK,OAASuL,EAAe,EACpCtB,EAAOA,EAAK5E,MAAM,EAAGkG,GAAgBtB,EAAK5E,MAAMkG,EAAe,IAE/DpF,EAAM,EAAG,MAAM,IAAI1D,MAAM,sDAE7B3D,EADAmL,GAAQ,IAAK7J,MAAM+F,EAAM,GAAIiF,KAAK,KAItC,IADc,kBAAkBK,KAAK3M,GACvB,MAAM,IAAI2D,MAAM,oBAAsB3D,GACpD,GAAIH,EACA,OAAO,IAAIc,EAAab,OAAOS,EAAO,IAAMP,EAAIA,IAGpD,IADA,IAAI/B,EAAI,GAAIqI,EAAMtG,EAAEkB,OAAsB4J,EAAMxE,EAr2CrC,EAs2CJA,EAAM,GACTrI,EAAEgE,MAAMjC,EAAEuG,MAAMuE,EAAKxE,KACrBwE,GAx2CO,GAy2CG,IAAGA,EAAM,GACnBxE,GA12CO,EA62CX,OADArF,EAAKhD,GACE,IAAIqC,EAAWrC,EAAGsC,GAc7B,SAASF,EAAWL,GAChB,MAAiB,iBAANA,EAZf,SAA0BA,GACtB,GAAIH,EACA,OAAO,IAAIc,EAAab,OAAOE,IAEnC,GAAIY,EAAUZ,GAAI,CACd,GAAIA,IAAMuB,EAASvB,GAAI,MAAM,IAAI2D,MAAM3D,EAAI,uBAC3C,OAAO,IAAIU,EAAaV,GAE5B,OAAOuM,EAAiBvM,EAAEgH,YAKf4F,CAAiB5M,GAEX,iBAANA,EACAuM,EAAiBvM,GAEX,iBAANA,EACA,IAAIW,EAAaX,GAErBA,EA9GXM,EAAWvB,UAAU8N,QAAU,SAAU5M,GACrC,OAAO0L,EAAOnL,KAAMP,IAGxBS,EAAa3B,UAAU8N,QAAU,SAAU5M,GACvC,OAAO0L,EAAOnL,KAAMP,IAGxBU,EAAa5B,UAAU8N,QAAU,SAAU5M,GACvC,OAAO0L,EAAOnL,KAAMP,IAGxBK,EAAWvB,UAAUiI,SAAW,SAAU/G,EAAOC,GAE7C,QAzyCR,IAwyCYD,IAAqBA,EAAQ,IACnB,KAAVA,EAAc,OAAOmM,EAAa5L,KAAMP,EAAOC,GAEnD,IADA,IAA2EiM,EAAvEnM,EAAIQ,KAAKpC,MAAOhB,EAAI4C,EAAEkB,OAAQ4L,EAAMvC,OAAOvK,IAAI5C,MAC1CA,GAAK,GACV+O,EAAQ5B,OAAOvK,EAAE5C,IACjB0P,GAH4D,UAG/CvG,MAAM4F,EAAMjL,QAAUiL,EAGvC,OADW3L,KAAKD,KAAO,IAAM,IACfuM,GAGlBpM,EAAa3B,UAAUiI,SAAW,SAAU/G,EAAOC,GAE/C,YArzCR,IAozCYD,IAAqBA,EAAQ,IACpB,IAATA,EAAoBmM,EAAa5L,KAAMP,EAAOC,GAC3CqK,OAAO/J,KAAKpC,QAGvBuC,EAAa5B,UAAUiI,SAAWtG,EAAa3B,UAAUiI,SAEzDrG,EAAa5B,UAAUgO,OAASzM,EAAWvB,UAAUgO,OAASrM,EAAa3B,UAAUgO,OAAS,WAAc,OAAOvM,KAAKwG,YAExH1G,EAAWvB,UAAU+M,QAAU,WAC3B,OAAOkB,SAASxM,KAAKwG,WAAY,KAErC1G,EAAWvB,UAAU8J,WAAavI,EAAWvB,UAAU+M,QAEvDpL,EAAa3B,UAAU+M,QAAU,WAC7B,OAAOtL,KAAKpC,OAEhBsC,EAAa3B,UAAU8J,WAAanI,EAAa3B,UAAU+M,QAC3DnL,EAAa5B,UAAU+M,QAAUnL,EAAa5B,UAAU8J,WAAa,WACjE,OAAOmE,SAASxM,KAAKwG,WAAY,KAqErC,IAAK,IAAI7J,EAAI,EAAGA,EAAI,IAAMA,IACtB4C,EAAQ5C,GAAKkD,EAAWlD,GACpBA,EAAI,IAAG4C,GAAS5C,GAAKkD,GAAYlD,IAiBzC,OAdA4C,EAAQuJ,IAAMvJ,EAAQ,GACtBA,EAAQqJ,KAAOrJ,EAAQ,GACvBA,EAAQkN,SAAWlN,GAAS,GAC5BA,EAAQuG,IAAMA,EACdvG,EAAQ+K,IAAMA,EACd/K,EAAQgL,IAAMA,EACdhL,EAAQmN,IA1QR,SAAaxL,EAAGC,GAGZ,OAFAD,EAAIrB,EAAWqB,GAAGmC,MAClBlC,EAAItB,EAAWsB,GAAGkC,MACXnC,EAAE+D,OAAOsF,EAAIrJ,EAAGC,IAAIsE,SAAStE,IAwQxC5B,EAAQoN,WAAa,SAAU9L,GAAK,OAAOA,aAAaf,GAAce,aAAaX,GAAgBW,aAAaV,GAChHZ,EAAQkJ,YAvQR,SAAqBvH,EAAGC,EAAGqH,GACvBtH,EAAIrB,EAAWqB,GACfC,EAAItB,EAAWsB,GACf,IAAIyL,EAAUpE,GAAOnI,KAAKwM,OACtBC,EAAMxC,EAAIpJ,EAAGC,GACb4L,EADwBjH,EAAI5E,EAAGC,GAClBS,SAASkL,GAAK7L,IAAI,GACnC,GAAI8L,EAAM9M,QAAS,OAAO6M,EAAI7L,IAAIZ,KAAKC,MAAMsM,IAAYG,IAGzD,IAFA,IAAIhC,EAASI,EAAO4B,EAAO9N,GAAMrB,MAC7B6F,EAAS,GAAIuJ,GAAa,EACrBrQ,EAAI,EAAGA,EAAIoO,EAAOrK,OAAQ/D,IAAK,CACpC,IAAIsQ,EAAMD,EAAajC,EAAOpO,GAAKsC,EAC/B0M,EAAQ5K,EAAS6L,IAAYK,GACjCxJ,EAAOhC,KAAKkK,GACRA,EAAQsB,IAAKD,GAAa,GAElC,OAAOF,EAAI7L,IAAI1B,EAAQ2N,UAAUzJ,EAAQxE,GAAM,KA0PnDM,EAAQ2N,UAAY,SAAUnC,EAAQvJ,EAAMoF,GACxC,OAAOqE,EAAmBF,EAAOM,IAAIxL,GAAaA,EAAW2B,GAAQ,IAAKoF,IAGvErH,EA/5CX,GAm6CqC7C,EAAO8B,eAAe,aACvD9B,EAAOD,QAAU0I,QAOhB,KAFD,aACI,OAAOA,GACV,gC,kCC36CLzI,EAAOD,QAAU0Q,QAAQ,S,gBCAzB,IAAIC,EAAuB,oBAATC,KAAuBA,KAAO,EAAQ,IAExD3Q,EAAOD,QAAU,SAAU6Q,EAAKC,GACvBA,IAAMA,EAAO,IACE,mBAATA,IAAqBA,EAAO,CAAEC,IAAKD,IAC9C,IAAIE,EAAQF,EAAKE,OAAS,GACL,iBAAVA,IAAoBA,EAAQ3M,MAAM2M,EAAM,GAAG3B,KAAK,MAC3D,IAGiC4B,EAH7BC,EAAiC,kBAAhBJ,EAAKI,QAAwBJ,EAAKI,OACnDC,EAAWL,EAAKK,UAAY,SAAS1P,EAAKN,GAAS,OAAOA,GAE1D4P,EAAMD,EAAKC,MAAkBE,EAQ9BH,EAAKC,IAPG,SAAUK,GACb,OAAO,SAAU3M,EAAGC,GAChB,IAAI2M,EAAO,CAAE5P,IAAKgD,EAAGtD,MAAOiQ,EAAK3M,IAC7B6M,EAAO,CAAE7P,IAAKiD,EAAGvD,MAAOiQ,EAAK1M,IACjC,OAAOuM,EAAEI,EAAMC,MAKvBC,EAAO,GACX,OAAO,SAAUnC,EAAWoC,EAAQ/P,EAAK2P,EAAMK,GAC3C,IAAIC,EAASV,EAAS,KAAO,IAAI3M,MAAMoN,EAAQ,GAAGpC,KAAK2B,GAAU,GAC7DW,EAAiBX,EAAQ,KAAO,IAQpC,GANII,GAAQA,EAAKtB,QAAiC,mBAAhBsB,EAAKtB,SACnCsB,EAAOA,EAAKtB,eAKH8B,KAFbR,EAAOD,EAAS9Q,KAAKmR,EAAQ/P,EAAK2P,IAElC,CAGA,GAAoB,iBAATA,GAA8B,OAATA,EAC5B,OAAOT,EAAKvB,UAAUgC,GAE1B,GAAIS,EAAQT,GAAO,CAEf,IADA,IAAIpC,EAAM,GACD9O,EAAI,EAAGA,EAAIkR,EAAKnN,OAAQ/D,IAAK,CAClC,IAAI4R,EAAO1C,EAAUgC,EAAMlR,EAAGkR,EAAKlR,GAAIuR,EAAM,IAAMd,EAAKvB,UAAU,MAClEJ,EAAIhK,KAAK0M,EAASV,EAAQc,GAE9B,MAAO,IAAM9C,EAAIK,KAAK,KAAOqC,EAAS,IAGtC,IAA4B,IAAxBH,EAAK9B,QAAQ2B,GAAc,CAC3B,GAAIF,EAAQ,OAAOP,EAAKvB,UAAU,aAClC,MAAM,IAAI2C,UAAU,yCAEnBR,EAAKvM,KAAKoM,GAEf,IAAIY,EAAOC,EAAWb,GAAMc,KAAKnB,GAAOA,EAAIK,IAE5C,IADIpC,EAAM,GACD9O,EAAI,EAAGA,EAAI8R,EAAK/N,OAAQ/D,IAAK,CAClC,IACIiB,EAAQiO,EAAUgC,EADlB3P,EAAMuQ,EAAK9R,GACkBkR,EAAK3P,GAAMgQ,EAAM,GAElD,GAAItQ,EAAJ,CAEA,IAAIgR,EAAWxB,EAAKvB,UAAU3N,GACxBkQ,EACAxQ,EAEN6N,EAAIhK,KAAK0M,EAASV,EAAQmB,IAG9B,OADAZ,EAAKa,OAAOb,EAAK9B,QAAQ2B,GAAO,GACzB,IAAMpC,EAAIK,KAAK,KAAOqC,EAAS,KA9CvC,CAgDJ,CAAE,GAAIb,GAAO,GAAIA,EAAK,IAG7B,IAAIgB,EAAUxN,MAAMwN,SAAW,SAAUzN,GACrC,MAA+B,mBAAxB,GAAG2F,SAAS1J,KAAK+D,IAGxB6N,EAAarR,OAAOoR,MAAQ,SAAUnB,GACtC,IAAIwB,EAAMzR,OAAOkB,UAAUC,gBAAkB,WAAc,OAAO,GAC9DiQ,EAAO,GACX,IAAK,IAAIvQ,KAAOoP,EACRwB,EAAIhS,KAAKwQ,EAAKpP,IAAMuQ,EAAKhN,KAAKvD,GAEtC,OAAOuQ,I,cClFX/R,EAAOD,QAAU0Q,QAAQ,W,cCAzBzQ,EAAOD,QAAU,SAASC,GAoBzB,OAnBKA,EAAOqS,kBACXrS,EAAOsS,UAAY,aACnBtS,EAAOuS,MAAQ,GAEVvS,EAAOwS,WAAUxS,EAAOwS,SAAW,IACxC7R,OAAOC,eAAeZ,EAAQ,SAAU,CACvCa,YAAY,EACZC,IAAK,WACJ,OAAOd,EAAOE,KAGhBS,OAAOC,eAAeZ,EAAQ,KAAM,CACnCa,YAAY,EACZC,IAAK,WACJ,OAAOd,EAAOC,KAGhBD,EAAOqS,gBAAkB,GAEnBrS,I,gBCpBR,MAAMyS,EAAY,EAAQ,IACpBC,EAAYD,EAAUE,SAAWF,EAEjCG,EAAQ,SAAUC,EAAKC,GAM3B,MAHI,QAAQrD,KAAKoD,KACfA,EAAM,SAAWA,GAEZH,EAAUtS,KAAKkD,KAAMuP,EAAKC,IAGnCF,EAAMG,UAAW,EAEjB/S,EAAOD,QAAUA,EAAU6S,EAC3B7S,EAAQ6S,MAAQA,EAChB7S,EAAQiT,QAAUP,EAAUO,QAC5BjT,EAAQkT,QAAUR,EAAUQ,QAC5BlT,EAAQmT,SAAWT,EAAUS,SAG7BnT,EAAQ4S,QAAUC,G,iBCrBlB,YAUA,IAaIO,EAAU,qBAQVC,EAAS,eAGTC,EAAY,kBAIZC,EAAS,eAyBTC,EAAe,8BAGfC,EAAW,mBAGXC,EAAiB,GACrBA,EAxBiB,yBAwBYA,EAvBZ,yBAwBjBA,EAvBc,sBAuBYA,EAtBX,uBAuBfA,EAtBe,uBAsBYA,EArBZ,uBAsBfA,EArBsB,8BAqBYA,EApBlB,wBAqBhBA,EApBgB,yBAoBY,EAC5BA,EAAeN,GAAWM,EAnDX,kBAoDfA,EAhCqB,wBAgCYA,EAlDnB,oBAmDdA,EAhCkB,qBAgCYA,EAlDhB,iBAmDdA,EAlDe,kBAkDYA,EAjDb,qBAkDdA,EAAeL,GAAUK,EA/CT,mBAgDhBA,EAAeJ,GAAaI,EA3CZ,mBA4ChBA,EAAeH,GAAUG,EA1CT,mBA2ChBA,EAxCiB,qBAwCY,EAG7B,IAAIC,EAA8B,iBAAVC,QAAsBA,QAAUA,OAAOhT,SAAWA,QAAUgT,OAGhFC,EAA0B,iBAARpN,MAAoBA,MAAQA,KAAK7F,SAAWA,QAAU6F,KAGxEqN,EAAOH,GAAcE,GAAYE,SAAS,cAATA,GAGjCC,EAA4ChU,IAAYA,EAAQiU,UAAYjU,EAG5EkU,EAAaF,GAAgC,iBAAV/T,GAAsBA,IAAWA,EAAOgU,UAAYhU,EAGvFkU,EAAgBD,GAAcA,EAAWlU,UAAYgU,EAGrDI,EAAcD,GAAiBR,EAAWU,QAG1CC,EAAY,WACd,IACE,OAAOF,GAAeA,EAAYG,SAAWH,EAAYG,QAAQ,QACjE,MAAOtG,KAHI,GAOXuG,EAAmBF,GAAYA,EAASG,aAuD5C,SAASC,EAAUC,EAAOC,GAIxB,IAHA,IAAIC,GAAS,EACT5Q,EAAkB,MAAT0Q,EAAgB,EAAIA,EAAM1Q,SAE9B4Q,EAAQ5Q,GACf,GAAI2Q,EAAUD,EAAME,GAAQA,EAAOF,GACjC,OAAO,EAGX,OAAO,EAkET,SAASG,EAAWlG,GAClB,IAAIiG,GAAS,EACT7N,EAAS3C,MAAMuK,EAAImG,MAKvB,OAHAnG,EAAIvM,SAAQ,SAASlB,EAAOM,GAC1BuF,IAAS6N,GAAS,CAACpT,EAAKN,MAEnB6F,EAwBT,SAASgO,EAAWC,GAClB,IAAIJ,GAAS,EACT7N,EAAS3C,MAAM4Q,EAAIF,MAKvB,OAHAE,EAAI5S,SAAQ,SAASlB,GACnB6F,IAAS6N,GAAS1T,KAEb6F,EAIT,IAeMkO,EAvCWC,EAAMC,EAwBnBC,EAAahR,MAAMvC,UACnBwT,EAAYvB,SAASjS,UACrByT,EAAc3U,OAAOkB,UAGrB0T,EAAa1B,EAAK,sBAGlB2B,EAAeH,EAAUvL,SAGzBhI,EAAiBwT,EAAYxT,eAG7B2T,GACER,EAAM,SAASS,KAAKH,GAAcA,EAAWxD,MAAQwD,EAAWxD,KAAK4D,UAAY,KACvE,iBAAmBV,EAAO,GAQtCW,EAAuBN,EAAYxL,SAGnC+L,EAAaC,OAAO,IACtBN,EAAapV,KAAK0B,GAAgBiU,QA7PjB,sBA6PuC,QACvDA,QAAQ,yDAA0D,SAAW,KAI5EC,EAAS9B,EAAgBL,EAAKmC,YAASrE,EACvC3Q,EAAS6S,EAAK7S,OACdiV,EAAapC,EAAKoC,WAClBC,EAAuBZ,EAAYY,qBACnC/D,EAASiD,EAAWjD,OACpBgE,EAAiBnV,EAASA,EAAOC,iBAAc0Q,EAG/CyE,EAAmBzV,OAAO0V,sBAC1BC,EAAiBN,EAASA,EAAOO,cAAW5E,EAC5C6E,GAnEatB,EAmEQvU,OAAOoR,KAnEToD,EAmEexU,OAlE7B,SAAS8V,GACd,OAAOvB,EAAKC,EAAUsB,MAoEtBC,EAAWC,GAAU9C,EAAM,YAC3B+C,EAAMD,GAAU9C,EAAM,OACtBgD,EAAUF,GAAU9C,EAAM,WAC1BiD,EAAMH,GAAU9C,EAAM,OACtBkD,EAAUJ,GAAU9C,EAAM,WAC1BmD,EAAeL,GAAUhW,OAAQ,UAGjCsW,EAAqBC,GAASR,GAC9BS,EAAgBD,GAASN,GACzBQ,EAAoBF,GAASL,GAC7BQ,EAAgBH,GAASJ,GACzBQ,EAAoBJ,GAASH,GAG7BQ,EAAcvW,EAASA,EAAOa,eAAY8P,EAC1C6F,GAAgBD,EAAcA,EAAY3I,aAAU+C,EASxD,SAAS8F,GAAKC,GACZ,IAAI9C,GAAS,EACT5Q,EAAoB,MAAX0T,EAAkB,EAAIA,EAAQ1T,OAG3C,IADAV,KAAKqU,UACI/C,EAAQ5Q,GAAQ,CACvB,IAAI4T,EAAQF,EAAQ9C,GACpBtR,KAAK0R,IAAI4C,EAAM,GAAIA,EAAM,KA+F7B,SAASC,GAAUH,GACjB,IAAI9C,GAAS,EACT5Q,EAAoB,MAAX0T,EAAkB,EAAIA,EAAQ1T,OAG3C,IADAV,KAAKqU,UACI/C,EAAQ5Q,GAAQ,CACvB,IAAI4T,EAAQF,EAAQ9C,GACpBtR,KAAK0R,IAAI4C,EAAM,GAAIA,EAAM,KA4G7B,SAASE,GAASJ,GAChB,IAAI9C,GAAS,EACT5Q,EAAoB,MAAX0T,EAAkB,EAAIA,EAAQ1T,OAG3C,IADAV,KAAKqU,UACI/C,EAAQ5Q,GAAQ,CACvB,IAAI4T,EAAQF,EAAQ9C,GACpBtR,KAAK0R,IAAI4C,EAAM,GAAIA,EAAM,KA+F7B,SAASG,GAASC,GAChB,IAAIpD,GAAS,EACT5Q,EAAmB,MAAVgU,EAAiB,EAAIA,EAAOhU,OAGzC,IADAV,KAAK2U,SAAW,IAAIH,KACXlD,EAAQ5Q,GACfV,KAAKiB,IAAIyT,EAAOpD,IA2CpB,SAASsD,GAAMR,GACb,IAAIS,EAAO7U,KAAK2U,SAAW,IAAIJ,GAAUH,GACzCpU,KAAKwR,KAAOqD,EAAKrD,KAmGnB,SAASsD,GAAclX,EAAOmX,GAC5B,IAAIC,EAAQ1G,GAAQ1Q,GAChBqX,GAASD,GAASE,GAAYtX,GAC9BuX,GAAUH,IAAUC,GAAShC,GAASrV,GACtCwX,GAAUJ,IAAUC,IAAUE,GAAUjE,GAAatT,GACrDyX,EAAcL,GAASC,GAASE,GAAUC,EAC1C3R,EAAS4R,EAloBf,SAAmBjX,EAAGkX,GAIpB,IAHA,IAAIhE,GAAS,EACT7N,EAAS3C,MAAM1C,KAEVkT,EAAQlT,GACfqF,EAAO6N,GAASgE,EAAShE,GAE3B,OAAO7N,EA2nBoB8R,CAAU3X,EAAM8C,OAAQqJ,QAAU,GACzDrJ,EAAS+C,EAAO/C,OAEpB,IAAK,IAAIxC,KAAON,GACTmX,IAAavW,EAAe1B,KAAKc,EAAOM,IACvCmX,IAEQ,UAAPnX,GAECiX,IAAkB,UAAPjX,GAA0B,UAAPA,IAE9BkX,IAAkB,UAAPlX,GAA0B,cAAPA,GAA8B,cAAPA,IAEtDsX,GAAQtX,EAAKwC,KAElB+C,EAAOhC,KAAKvD,GAGhB,OAAOuF,EAWT,SAASgS,GAAarE,EAAOlT,GAE3B,IADA,IAAIwC,EAAS0Q,EAAM1Q,OACZA,KACL,GAAI2G,GAAG+J,EAAM1Q,GAAQ,GAAIxC,GACvB,OAAOwC,EAGX,OAAQ,EA0BV,SAASgV,GAAW9X,GAClB,OAAa,MAATA,OACeyQ,IAAVzQ,EAt1BQ,qBARL,gBAg2BJiV,GAAkBA,KAAkBxV,OAAOO,GA0arD,SAAmBA,GACjB,IAAI+X,EAAQnX,EAAe1B,KAAKc,EAAOiV,GACnC+C,EAAMhY,EAAMiV,GAEhB,IACEjV,EAAMiV,QAAkBxE,EACxB,IAAIwH,GAAW,EACf,MAAOnL,IAET,IAAIjH,EAAS6O,EAAqBxV,KAAKc,GACnCiY,IACEF,EACF/X,EAAMiV,GAAkB+C,SAEjBhY,EAAMiV,IAGjB,OAAOpP,EA1bHqS,CAAUlY,GA4iBhB,SAAwBA,GACtB,OAAO0U,EAAqBxV,KAAKc,GA5iB7BmY,CAAenY,GAUrB,SAASoY,GAAgBpY,GACvB,OAAOqY,GAAarY,IAAU8X,GAAW9X,IAAUiS,EAiBrD,SAASqG,GAAYtY,EAAOuY,EAAOC,EAASC,EAAYC,GACtD,OAAI1Y,IAAUuY,IAGD,MAATvY,GAA0B,MAATuY,IAAmBF,GAAarY,KAAWqY,GAAaE,GACpEvY,GAAUA,GAASuY,GAAUA,EAmBxC,SAAyB9X,EAAQ8X,EAAOC,EAASC,EAAYE,EAAWD,GACtE,IAAIE,EAAWlI,GAAQjQ,GACnBoY,EAAWnI,GAAQ6H,GACnBO,EAASF,EAl6BA,iBAk6BsBG,GAAOtY,GACtCuY,EAASH,EAn6BA,iBAm6BsBE,GAAOR,GAKtCU,GAHJH,EAASA,GAAU7G,EAAUE,EAAY2G,IAGhB3G,EACrB+G,GAHJF,EAASA,GAAU/G,EAAUE,EAAY6G,IAGhB7G,EACrBgH,EAAYL,GAAUE,EAE1B,GAAIG,GAAa9D,GAAS5U,GAAS,CACjC,IAAK4U,GAASkD,GACZ,OAAO,EAETK,GAAW,EACXK,GAAW,EAEb,GAAIE,IAAcF,EAEhB,OADAP,IAAUA,EAAQ,IAAI1B,IACd4B,GAAYtF,GAAa7S,GAC7B2Y,GAAY3Y,EAAQ8X,EAAOC,EAASC,EAAYE,EAAWD,GAiKnE,SAAoBjY,EAAQ8X,EAAOP,EAAKQ,EAASC,EAAYE,EAAWD,GACtE,OAAQV,GACN,IApkCc,oBAqkCZ,GAAKvX,EAAO4Y,YAAcd,EAAMc,YAC3B5Y,EAAO6Y,YAAcf,EAAMe,WAC9B,OAAO,EAET7Y,EAASA,EAAO8Y,OAChBhB,EAAQA,EAAMgB,OAEhB,IA7kCiB,uBA8kCf,QAAK9Y,EAAO4Y,YAAcd,EAAMc,aAC3BV,EAAU,IAAI5D,EAAWtU,GAAS,IAAIsU,EAAWwD,KAKxD,IAtmCU,mBAumCV,IAtmCU,gBAumCV,IAlmCY,kBAqmCV,OAAO9O,IAAIhJ,GAAS8X,GAEtB,IA3mCW,iBA4mCT,OAAO9X,EAAOnB,MAAQiZ,EAAMjZ,MAAQmB,EAAO+Y,SAAWjB,EAAMiB,QAE9D,IArmCY,kBAsmCZ,IApmCY,kBAwmCV,OAAO/Y,GAAW8X,EAAQ,GAE5B,KAAKrG,EACH,IAAIuH,EAAU9F,EAEhB,KAAKvB,EACH,IAAIsH,EAroCiB,EAqoCLlB,EAGhB,GAFAiB,IAAYA,EAAU5F,GAElBpT,EAAOmT,MAAQ2E,EAAM3E,OAAS8F,EAChC,OAAO,EAGT,IAAIC,EAAUjB,EAAM9Y,IAAIa,GACxB,GAAIkZ,EACF,OAAOA,GAAWpB,EAEpBC,GA/oCuB,EAkpCvBE,EAAM5E,IAAIrT,EAAQ8X,GAClB,IAAI1S,EAASuT,GAAYK,EAAQhZ,GAASgZ,EAAQlB,GAAQC,EAASC,EAAYE,EAAWD,GAE1F,OADAA,EAAc,OAAEjY,GACToF,EAET,IAhoCY,kBAioCV,GAAIyQ,GACF,OAAOA,GAAcpX,KAAKuB,IAAW6V,GAAcpX,KAAKqZ,GAG9D,OAAO,EA9NDqB,CAAWnZ,EAAQ8X,EAAOO,EAAQN,EAASC,EAAYE,EAAWD,GAExE,KAj8ByB,EAi8BnBF,GAAiC,CACrC,IAAIqB,EAAeZ,GAAYrY,EAAe1B,KAAKuB,EAAQ,eACvDqZ,EAAeZ,GAAYtY,EAAe1B,KAAKqZ,EAAO,eAE1D,GAAIsB,GAAgBC,EAAc,CAChC,IAAIC,EAAeF,EAAepZ,EAAOT,QAAUS,EAC/CuZ,EAAeF,EAAevB,EAAMvY,QAAUuY,EAGlD,OADAG,IAAUA,EAAQ,IAAI1B,IACf2B,EAAUoB,EAAcC,EAAcxB,EAASC,EAAYC,IAGtE,IAAKS,EACH,OAAO,EAGT,OADAT,IAAUA,EAAQ,IAAI1B,IA6NxB,SAAsBvW,EAAQ8X,EAAOC,EAASC,EAAYE,EAAWD,GACnE,IAAIgB,EA9qCqB,EA8qCTlB,EACZyB,EAAWC,GAAWzZ,GACtB0Z,EAAYF,EAASnX,OAErBsX,EADWF,GAAW3B,GACDzV,OAEzB,GAAIqX,GAAaC,IAAcV,EAC7B,OAAO,EAET,IAAIhG,EAAQyG,EACZ,KAAOzG,KAAS,CACd,IAAIpT,EAAM2Z,EAASvG,GACnB,KAAMgG,EAAYpZ,KAAOiY,EAAQ3X,EAAe1B,KAAKqZ,EAAOjY,IAC1D,OAAO,EAIX,IAAIqZ,EAAUjB,EAAM9Y,IAAIa,GACxB,GAAIkZ,GAAWjB,EAAM9Y,IAAI2Y,GACvB,OAAOoB,GAAWpB,EAEpB,IAAI1S,GAAS,EACb6S,EAAM5E,IAAIrT,EAAQ8X,GAClBG,EAAM5E,IAAIyE,EAAO9X,GAEjB,IAAI4Z,EAAWX,EACf,OAAShG,EAAQyG,GAAW,CAC1B7Z,EAAM2Z,EAASvG,GACf,IAAI4G,EAAW7Z,EAAOH,GAClBia,EAAWhC,EAAMjY,GAErB,GAAImY,EACF,IAAI+B,EAAWd,EACXjB,EAAW8B,EAAUD,EAAUha,EAAKiY,EAAO9X,EAAQiY,GACnDD,EAAW6B,EAAUC,EAAUja,EAAKG,EAAQ8X,EAAOG,GAGzD,UAAmBjI,IAAb+J,EACGF,IAAaC,GAAY5B,EAAU2B,EAAUC,EAAU/B,EAASC,EAAYC,GAC7E8B,GACD,CACL3U,GAAS,EACT,MAEFwU,IAAaA,EAAkB,eAAP/Z,GAE1B,GAAIuF,IAAWwU,EAAU,CACvB,IAAII,EAAUha,EAAOia,YACjBC,EAAUpC,EAAMmC,YAGhBD,GAAWE,KACV,gBAAiBla,MAAU,gBAAiB8X,IACzB,mBAAXkC,GAAyBA,aAAmBA,GACjC,mBAAXE,GAAyBA,aAAmBA,IACvD9U,GAAS,GAKb,OAFA6S,EAAc,OAAEjY,GAChBiY,EAAc,OAAEH,GACT1S,EAzRA+U,CAAana,EAAQ8X,EAAOC,EAASC,EAAYE,EAAWD,GA3D5DmC,CAAgB7a,EAAOuY,EAAOC,EAASC,EAAYH,GAAaI,IAsEzE,SAASoC,GAAa9a,GACpB,SAAK+a,GAAS/a,IAwahB,SAAkBgU,GAChB,QAASO,GAAeA,KAAcP,EAzadgH,CAAShb,MAGnBib,GAAWjb,GAAS2U,EAAatC,GAChC9D,KAAKyH,GAAShW,IAsB/B,SAASkb,GAASza,GAChB,GAyZI0a,GADenb,EAxZFS,IAyZGT,EAAM0a,YACtBU,EAAwB,mBAARD,GAAsBA,EAAKxa,WAAcyT,EAEtDpU,IAAUob,EA3Zf,OAAO9F,EAAW7U,GAuZtB,IAAqBT,EACfmb,EACAC,EAvZAvV,EAAS,GACb,IAAK,IAAIvF,KAAOb,OAAOgB,GACjBG,EAAe1B,KAAKuB,EAAQH,IAAe,eAAPA,GACtCuF,EAAOhC,KAAKvD,GAGhB,OAAOuF,EAgBT,SAASuT,GAAY5F,EAAO+E,EAAOC,EAASC,EAAYE,EAAWD,GACjE,IAAIgB,EAlhCqB,EAkhCTlB,EACZ6C,EAAY7H,EAAM1Q,OAClBsX,EAAY7B,EAAMzV,OAEtB,GAAIuY,GAAajB,KAAeV,GAAaU,EAAYiB,GACvD,OAAO,EAGT,IAAI1B,EAAUjB,EAAM9Y,IAAI4T,GACxB,GAAImG,GAAWjB,EAAM9Y,IAAI2Y,GACvB,OAAOoB,GAAWpB,EAEpB,IAAI7E,GAAS,EACT7N,GAAS,EACTuK,EA/hCuB,EA+hCfoI,EAAoC,IAAI3B,QAAWpG,EAM/D,IAJAiI,EAAM5E,IAAIN,EAAO+E,GACjBG,EAAM5E,IAAIyE,EAAO/E,KAGRE,EAAQ2H,GAAW,CAC1B,IAAIC,EAAW9H,EAAME,GACjB6G,EAAWhC,EAAM7E,GAErB,GAAI+E,EACF,IAAI+B,EAAWd,EACXjB,EAAW8B,EAAUe,EAAU5H,EAAO6E,EAAO/E,EAAOkF,GACpDD,EAAW6C,EAAUf,EAAU7G,EAAOF,EAAO+E,EAAOG,GAE1D,QAAiBjI,IAAb+J,EAAwB,CAC1B,GAAIA,EACF,SAEF3U,GAAS,EACT,MAGF,GAAIuK,GACF,IAAKmD,EAAUgF,GAAO,SAASgC,EAAUgB,GACnC,GA72Bajb,EA62BOib,GAANnL,EA52BXc,IAAI5Q,KA62BFgb,IAAaf,GAAY5B,EAAU2C,EAAUf,EAAU/B,EAASC,EAAYC,IAC/E,OAAOtI,EAAKvM,KAAK0X,GA/2B/B,IAAyBjb,KAi3BX,CACNuF,GAAS,EACT,YAEG,GACDyV,IAAaf,IACX5B,EAAU2C,EAAUf,EAAU/B,EAASC,EAAYC,GACpD,CACL7S,GAAS,EACT,OAKJ,OAFA6S,EAAc,OAAElF,GAChBkF,EAAc,OAAEH,GACT1S,EAyKT,SAASqU,GAAWzZ,GAClB,OApZF,SAAwBA,EAAQ+a,EAAUC,GACxC,IAAI5V,EAAS2V,EAAS/a,GACtB,OAAOiQ,GAAQjQ,GAAUoF,EAhuB3B,SAAmB2N,EAAOsD,GAKxB,IAJA,IAAIpD,GAAS,EACT5Q,EAASgU,EAAOhU,OAChB4Y,EAASlI,EAAM1Q,SAEV4Q,EAAQ5Q,GACf0Q,EAAMkI,EAAShI,GAASoD,EAAOpD,GAEjC,OAAOF,EAwtB2BmI,CAAU9V,EAAQ4V,EAAYhb,IAkZzDmb,CAAenb,EAAQoQ,GAAMgL,IAWtC,SAASC,GAAWrO,EAAKnN,GACvB,IAsHiBN,EACb+b,EAvHA9E,EAAOxJ,EAAIsJ,SACf,OAuHgB,WADZgF,SADa/b,EArHAM,KAuHmB,UAARyb,GAA4B,UAARA,GAA4B,WAARA,EACrD,cAAV/b,EACU,OAAVA,GAxHDiX,EAAmB,iBAAP3W,EAAkB,SAAW,QACzC2W,EAAKxJ,IAWX,SAASgI,GAAUhV,EAAQH,GACzB,IAAIN,EAxjCN,SAAkBS,EAAQH,GACxB,OAAiB,MAAVG,OAAiBgQ,EAAYhQ,EAAOH,GAujC/B0b,CAASvb,EAAQH,GAC7B,OAAOwa,GAAa9a,GAASA,OAAQyQ,EAp2BvC8F,GAAK5V,UAAU8V,MAvEf,WACErU,KAAK2U,SAAWjB,EAAeA,EAAa,MAAQ,GACpD1T,KAAKwR,KAAO,GAsEd2C,GAAK5V,UAAkB,OAzDvB,SAAoBL,GAClB,IAAIuF,EAASzD,KAAK8O,IAAI5Q,WAAe8B,KAAK2U,SAASzW,GAEnD,OADA8B,KAAKwR,MAAQ/N,EAAS,EAAI,EACnBA,GAuDT0Q,GAAK5V,UAAUf,IA3Cf,SAAiBU,GACf,IAAI2W,EAAO7U,KAAK2U,SAChB,GAAIjB,EAAc,CAChB,IAAIjQ,EAASoR,EAAK3W,GAClB,MA3YiB,8BA2YVuF,OAA4B4K,EAAY5K,EAEjD,OAAOjF,EAAe1B,KAAK+X,EAAM3W,GAAO2W,EAAK3W,QAAOmQ,GAsCtD8F,GAAK5V,UAAUuQ,IA1Bf,SAAiB5Q,GACf,IAAI2W,EAAO7U,KAAK2U,SAChB,OAAOjB,OAA8BrF,IAAdwG,EAAK3W,GAAsBM,EAAe1B,KAAK+X,EAAM3W,IAyB9EiW,GAAK5V,UAAUmT,IAZf,SAAiBxT,EAAKN,GACpB,IAAIiX,EAAO7U,KAAK2U,SAGhB,OAFA3U,KAAKwR,MAAQxR,KAAK8O,IAAI5Q,GAAO,EAAI,EACjC2W,EAAK3W,GAAQwV,QAA0BrF,IAAVzQ,EA3aV,4BA2akDA,EAC9DoC,MAuHTuU,GAAUhW,UAAU8V,MApFpB,WACErU,KAAK2U,SAAW,GAChB3U,KAAKwR,KAAO,GAmFd+C,GAAUhW,UAAkB,OAvE5B,SAAyBL,GACvB,IAAI2W,EAAO7U,KAAK2U,SACZrD,EAAQmE,GAAaZ,EAAM3W,GAE/B,QAAIoT,EAAQ,KAIRA,GADYuD,EAAKnU,OAAS,EAE5BmU,EAAKgF,MAELhL,EAAO/R,KAAK+X,EAAMvD,EAAO,KAEzBtR,KAAKwR,MACA,IA0DT+C,GAAUhW,UAAUf,IA9CpB,SAAsBU,GACpB,IAAI2W,EAAO7U,KAAK2U,SACZrD,EAAQmE,GAAaZ,EAAM3W,GAE/B,OAAOoT,EAAQ,OAAIjD,EAAYwG,EAAKvD,GAAO,IA2C7CiD,GAAUhW,UAAUuQ,IA/BpB,SAAsB5Q,GACpB,OAAOuX,GAAazV,KAAK2U,SAAUzW,IAAQ,GA+B7CqW,GAAUhW,UAAUmT,IAlBpB,SAAsBxT,EAAKN,GACzB,IAAIiX,EAAO7U,KAAK2U,SACZrD,EAAQmE,GAAaZ,EAAM3W,GAQ/B,OANIoT,EAAQ,KACRtR,KAAKwR,KACPqD,EAAKpT,KAAK,CAACvD,EAAKN,KAEhBiX,EAAKvD,GAAO,GAAK1T,EAEZoC,MAyGTwU,GAASjW,UAAU8V,MAtEnB,WACErU,KAAKwR,KAAO,EACZxR,KAAK2U,SAAW,CACd,KAAQ,IAAIR,GACZ,IAAO,IAAKb,GAAOiB,IACnB,OAAU,IAAIJ,KAkElBK,GAASjW,UAAkB,OArD3B,SAAwBL,GACtB,IAAIuF,EAASiW,GAAW1Z,KAAM9B,GAAa,OAAEA,GAE7C,OADA8B,KAAKwR,MAAQ/N,EAAS,EAAI,EACnBA,GAmDT+Q,GAASjW,UAAUf,IAvCnB,SAAqBU,GACnB,OAAOwb,GAAW1Z,KAAM9B,GAAKV,IAAIU,IAuCnCsW,GAASjW,UAAUuQ,IA3BnB,SAAqB5Q,GACnB,OAAOwb,GAAW1Z,KAAM9B,GAAK4Q,IAAI5Q,IA2BnCsW,GAASjW,UAAUmT,IAdnB,SAAqBxT,EAAKN,GACxB,IAAIiX,EAAO6E,GAAW1Z,KAAM9B,GACxBsT,EAAOqD,EAAKrD,KAIhB,OAFAqD,EAAKnD,IAAIxT,EAAKN,GACdoC,KAAKwR,MAAQqD,EAAKrD,MAAQA,EAAO,EAAI,EAC9BxR,MAyDTyU,GAASlW,UAAU0C,IAAMwT,GAASlW,UAAUkD,KAnB5C,SAAqB7D,GAEnB,OADAoC,KAAK2U,SAASjD,IAAI9T,EA3qBC,6BA4qBZoC,MAkBTyU,GAASlW,UAAUuQ,IANnB,SAAqBlR,GACnB,OAAOoC,KAAK2U,SAAS7F,IAAIlR,IAqG3BgX,GAAMrW,UAAU8V,MA3EhB,WACErU,KAAK2U,SAAW,IAAIJ,GACpBvU,KAAKwR,KAAO,GA0EdoD,GAAMrW,UAAkB,OA9DxB,SAAqBL,GACnB,IAAI2W,EAAO7U,KAAK2U,SACZlR,EAASoR,EAAa,OAAE3W,GAG5B,OADA8B,KAAKwR,KAAOqD,EAAKrD,KACV/N,GA0DTmR,GAAMrW,UAAUf,IA9ChB,SAAkBU,GAChB,OAAO8B,KAAK2U,SAASnX,IAAIU,IA8C3B0W,GAAMrW,UAAUuQ,IAlChB,SAAkB5Q,GAChB,OAAO8B,KAAK2U,SAAS7F,IAAI5Q,IAkC3B0W,GAAMrW,UAAUmT,IArBhB,SAAkBxT,EAAKN,GACrB,IAAIiX,EAAO7U,KAAK2U,SAChB,GAAIE,aAAgBN,GAAW,CAC7B,IAAIuF,EAAQjF,EAAKF,SACjB,IAAKrB,GAAQwG,EAAMpZ,OAASqZ,IAG1B,OAFAD,EAAMrY,KAAK,CAACvD,EAAKN,IACjBoC,KAAKwR,OAASqD,EAAKrD,KACZxR,KAET6U,EAAO7U,KAAK2U,SAAW,IAAIH,GAASsF,GAItC,OAFAjF,EAAKnD,IAAIxT,EAAKN,GACdoC,KAAKwR,KAAOqD,EAAKrD,KACVxR,MA+hBT,IAAIyZ,GAAc3G,EAA+B,SAASzU,GACxD,OAAc,MAAVA,EACK,IAETA,EAAShB,OAAOgB,GA9sClB,SAAqB+S,EAAOC,GAM1B,IALA,IAAIC,GAAS,EACT5Q,EAAkB,MAAT0Q,EAAgB,EAAIA,EAAM1Q,OACnCsZ,EAAW,EACXvW,EAAS,KAEJ6N,EAAQ5Q,GAAQ,CACvB,IAAI9C,EAAQwT,EAAME,GACdD,EAAUzT,EAAO0T,EAAOF,KAC1B3N,EAAOuW,KAAcpc,GAGzB,OAAO6F,EAmsCAwW,CAAYnH,EAAiBzU,IAAS,SAAS6b,GACpD,OAAOtH,EAAqB9V,KAAKuB,EAAQ6b,QAsd7C,WACE,MAAO,IA5cLvD,GAASjB,GAkCb,SAASF,GAAQ5X,EAAO8C,GAEtB,SADAA,EAAmB,MAAVA,EAt2CY,iBAs2CwBA,KAE1B,iBAAT9C,GAAqBsS,EAAS/D,KAAKvO,KAC1CA,GAAS,GAAKA,EAAQ,GAAK,GAAKA,EAAQ8C,EA4D7C,SAASkT,GAAShC,GAChB,GAAY,MAARA,EAAc,CAChB,IACE,OAAOM,EAAapV,KAAK8U,GACzB,MAAOlH,IACT,IACE,OAAQkH,EAAO,GACf,MAAOlH,KAEX,MAAO,GAmCT,SAASrD,GAAGzJ,EAAOuY,GACjB,OAAOvY,IAAUuY,GAAUvY,GAAUA,GAASuY,GAAUA,GA5IrD/C,GA7yCa,qBA6yCDuD,GAAO,IAAIvD,EAAS,IAAI+G,YAAY,MAChD7G,GAAOqD,GAAO,IAAIrD,IAAQxD,GAC1ByD,GAzzCY,oBAyzCDoD,GAAOpD,EAAQ6G,YAC1B5G,GAAOmD,GAAO,IAAInD,IAAQxD,GAC1ByD,GApzCY,oBAozCDkD,GAAO,IAAIlD,MACzBkD,GAAS,SAAS/Y,GAChB,IAAI6F,EAASiS,GAAW9X,GACpBmb,EAAOtV,GAAUsM,EAAYnS,EAAM0a,iBAAcjK,EACjDgM,EAAatB,EAAOnF,GAASmF,GAAQ,GAEzC,GAAIsB,EACF,OAAQA,GACN,KAAK1G,EAAoB,MAzzCf,oBA0zCV,KAAKE,EAAe,OAAO/D,EAC3B,KAAKgE,EAAmB,MAr0Cf,mBAs0CT,KAAKC,EAAe,OAAO/D,EAC3B,KAAKgE,EAAmB,MAh0Cf,mBAm0Cb,OAAOvQ,IA8IX,IAAIyR,GAAcc,GAAgB,WAAa,OAAOsE,UAApB,IAAsCtE,GAAkB,SAASpY,GACjG,OAAOqY,GAAarY,IAAUY,EAAe1B,KAAKc,EAAO,YACtDgV,EAAqB9V,KAAKc,EAAO,WA0BlC0Q,GAAUxN,MAAMwN,QAgDpB,IAAI2E,GAAWD,GA4Of,WACE,OAAO,GA1LT,SAAS6F,GAAWjb,GAClB,IAAK+a,GAAS/a,GACZ,OAAO,EAIT,IAAIgY,EAAMF,GAAW9X,GACrB,MApmDY,qBAomDLgY,GAnmDI,8BAmmDcA,GAxmDZ,0BAwmD6BA,GA7lD7B,kBA6lDgDA,EA6B/D,SAAS2E,GAAS3c,GAChB,MAAuB,iBAATA,GACZA,GAAS,GAAKA,EAAQ,GAAK,GAAKA,GA5oDb,iBAwqDvB,SAAS+a,GAAS/a,GAChB,IAAI+b,SAAc/b,EAClB,OAAgB,MAATA,IAA0B,UAAR+b,GAA4B,YAARA,GA2B/C,SAAS1D,GAAarY,GACpB,OAAgB,MAATA,GAAiC,iBAATA,EAoBjC,IAAIsT,GAAeD,EAhiDnB,SAAmBW,GACjB,OAAO,SAAShU,GACd,OAAOgU,EAAKhU,IA8hDsB4c,CAAUvJ,GAnvBhD,SAA0BrT,GACxB,OAAOqY,GAAarY,IAClB2c,GAAS3c,EAAM8C,WAAayP,EAAeuF,GAAW9X,KA+wB1D,SAAS6Q,GAAKpQ,GACZ,OA1NgB,OADGT,EA2NAS,IA1NKkc,GAAS3c,EAAM8C,UAAYmY,GAAWjb,GA0NjCkX,GAAczW,GAAUya,GAASza,GA3NhE,IAAqBT,EAqQrBlB,EAAOD,QAlNP,SAAiBmB,EAAOuY,GACtB,OAAOD,GAAYtY,EAAOuY,M,kCCtmD5BzZ,EAAOD,QAAU0Q,QAAQ,S,iCCAzB,iFACE,SAASoD,GAGV,IAAIE,EAA4ChU,EAQ5C2T,GAL0C1T,GAC7CA,EAAOD,QAI0B,iBAAV4T,QAAsBA,QAC1CD,EAAWC,SAAWD,GAAcA,EAAWqK,OAMnD,IAAIC,EAAwB,SAAStD,GACpCpX,KAAKoX,QAAUA,IAEhBsD,EAAsBnc,UAAY,IAAI4E,OACNjG,KAAO,wBAEvC,IAAIyd,EAAQ,SAASvD,GAGpB,MAAM,IAAIsD,EAAsBtD,IAG7BwD,EAAQ,mEAERC,EAAyB,eAsGzBC,EAAS,CACZ,OA3DY,SAASC,GACrBA,EAAQhR,OAAOgR,GACX,aAAa5O,KAAK4O,IAGrBJ,EACC,6EAcF,IAVA,IAGIzZ,EACAC,EACAnE,EACAma,EANA6D,EAAUD,EAAMra,OAAS,EACzBua,EAAS,GACTC,GAAY,EAMZxa,EAASqa,EAAMra,OAASsa,IAEnBE,EAAWxa,GAEnBQ,EAAI6Z,EAAMI,WAAWD,IAAa,GAClC/Z,EAAI4Z,EAAMI,aAAaD,IAAa,EACpCle,EAAI+d,EAAMI,aAAaD,GAIvBD,GACCL,EAAMQ,QAJPjE,EAASjW,EAAIC,EAAInE,IAIO,GAAK,IAC5B4d,EAAMQ,OAAOjE,GAAU,GAAK,IAC5ByD,EAAMQ,OAAOjE,GAAU,EAAI,IAC3ByD,EAAMQ,OAAgB,GAATjE,GAuBf,OAnBe,GAAX6D,GACH9Z,EAAI6Z,EAAMI,WAAWD,IAAa,EAClC/Z,EAAI4Z,EAAMI,aAAaD,GAEvBD,GACCL,EAAMQ,QAFPjE,EAASjW,EAAIC,IAEW,IACvByZ,EAAMQ,OAAQjE,GAAU,EAAK,IAC7ByD,EAAMQ,OAAQjE,GAAU,EAAK,IAC7B,KAEoB,GAAX6D,IACV7D,EAAS4D,EAAMI,WAAWD,GAC1BD,GACCL,EAAMQ,OAAOjE,GAAU,GACvByD,EAAMQ,OAAQjE,GAAU,EAAK,IAC7B,MAIK8D,GAKP,OAlGY,SAASF,GAGrB,IAAIra,GAFJqa,EAAQhR,OAAOgR,GACbtI,QAAQoI,EAAwB,KACfna,OACfA,EAAS,GAAK,IAEjBA,GADAqa,EAAQA,EAAMtI,QAAQ,OAAQ,KACf/R,SAGfA,EAAS,GAAK,GAEd,iBAAiByL,KAAK4O,KAEtBJ,EACC,yEAQF,IALA,IACIU,EACAlE,EAFAmE,EAAa,EAGbL,EAAS,GACTC,GAAY,IACPA,EAAWxa,GACnByW,EAASyD,EAAM1O,QAAQ6O,EAAMK,OAAOF,IACpCG,EAAaC,EAAa,EAAiB,GAAbD,EAAkBlE,EAASA,EAErDmE,IAAe,IAElBL,GAAUlR,OAAOwR,aAChB,IAAOF,KAAgB,EAAIC,EAAa,KAI3C,OAAOL,GAkEP,QAAW,cAYV,KAFD,aACC,OAAOH,GACP,8BArJF,K,kDCADzd,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,IACtDnB,EAAQ+e,gBAAkB/e,EAAQgf,kBAAoBhf,EAAQif,kBAAoBjf,EAAQkf,YAAclf,EAAQmf,YAAcnf,EAAQof,iBAAmBpf,EAAQqf,WAAarf,EAAQsf,UAAYtf,EAAQuf,YAAcvf,EAAQwf,YAAcxf,EAAQyf,WAAazf,EAAQ0f,OAAS1f,EAAQ2f,mBAAqB3f,EAAQ4f,WAAa5f,EAAQ6f,UAAY7f,EAAQ8f,OAAS9f,EAAQ+f,aAAe/f,EAAQggB,YAAS,EACnZ,IAAIC,EAAW,EAAQ,IACnBC,EAAW,EAAQ,IAWvBlgB,EAAQggB,OAHR,SAAgB5H,EAAM3G,GAClB,QAASA,GAASA,GAAS,EAAIwO,EAASX,UAAYW,EAASZ,YAAYjH,IAa7EpY,EAAQ+f,aAHR,SAAsB3H,EAAM3G,GACxB,QAASA,GAASA,GAAS,EAAIwO,EAASX,UAAYW,EAASb,kBAAkBhH,IAanFpY,EAAQ8f,OAHR,SAAgB1H,EAAM3G,GAClB,QAASA,GAASA,GAAS,EAAIyO,EAASL,UAAYK,EAASN,YAAYxH,IAG7E,IAAI+H,EAAW,EAAQ,IACvBvf,OAAOC,eAAeb,EAAS,YAAa,CAAEc,YAAY,EAAMC,IAAK,WAAc,OAAOof,EAASN,aACnGjf,OAAOC,eAAeb,EAAS,aAAc,CAAEc,YAAY,EAAMC,IAAK,WAAc,OAAOof,EAASP,cACpGhf,OAAOC,eAAeb,EAAS,qBAAsB,CAAEc,YAAY,EAAMC,IAAK,WAAc,OAAOof,EAASR,sBAC5G/e,OAAOC,eAAeb,EAAS,SAAU,CAAEc,YAAY,EAAMC,IAAK,WAAc,OAAOof,EAAST,UAChG9e,OAAOC,eAAeb,EAAS,aAAc,CAAEc,YAAY,EAAMC,IAAK,WAAc,OAAOof,EAASV,cAEpG7e,OAAOC,eAAeb,EAAS,cAAe,CAAEc,YAAY,EAAMC,IAAK,WAAc,OAAOof,EAASP,cACrGhf,OAAOC,eAAeb,EAAS,cAAe,CAAEc,YAAY,EAAMC,IAAK,WAAc,OAAOof,EAASP,cACrG,IAAIQ,EAAW,EAAQ,IACvBxf,OAAOC,eAAeb,EAAS,YAAa,CAAEc,YAAY,EAAMC,IAAK,WAAc,OAAOqf,EAASd,aACnG1e,OAAOC,eAAeb,EAAS,aAAc,CAAEc,YAAY,EAAMC,IAAK,WAAc,OAAOqf,EAASf,cACpGze,OAAOC,eAAeb,EAAS,mBAAoB,CAAEc,YAAY,EAAMC,IAAK,WAAc,OAAOqf,EAAShB,oBAE1Gxe,OAAOC,eAAeb,EAAS,cAAe,CAAEc,YAAY,EAAMC,IAAK,WAAc,OAAOqf,EAASf,cACrGze,OAAOC,eAAeb,EAAS,cAAe,CAAEc,YAAY,EAAMC,IAAK,WAAc,OAAOqf,EAASf,cACrGze,OAAOC,eAAeb,EAAS,oBAAqB,CAAEc,YAAY,EAAMC,IAAK,WAAc,OAAOqf,EAAShB,oBAC3Gxe,OAAOC,eAAeb,EAAS,oBAAqB,CAAEc,YAAY,EAAMC,IAAK,WAAc,OAAOqf,EAAShB,oBAC3Gxe,OAAOC,eAAeb,EAAS,kBAAmB,CAAEc,YAAY,EAAMC,IAAK,WAAc,OAAOqf,EAASd,c,iBCxDzG,YAUA,IAmBIlM,EAAU,qBAOVC,EAAS,eAETC,EAAY,kBAGZC,EAAS,eAkBT8M,EAAe,mDACfC,EAAgB,QAChBC,EAAe,MACfC,EAAa,mGASbC,EAAS,aAGTC,EAAe,WAGfC,EAAa,qBAGbC,EAAa,aAGbpN,EAAe,8BAGfqN,EAAY,cAGZpN,EAAW,mBAGXC,EAAiB,GACrBA,EA7CiB,yBA6CYA,EA5CZ,yBA6CjBA,EA5Cc,sBA4CYA,EA3CX,uBA4CfA,EA3Ce,uBA2CYA,EA1CZ,uBA2CfA,EA1CsB,8BA0CYA,EAzClB,wBA0ChBA,EAzCgB,yBAyCY,EAC5BA,EAAeN,GAAWM,EApEX,kBAqEfA,EArDqB,wBAqDYA,EApEnB,oBAqEdA,EArDkB,qBAqDYA,EApEhB,iBAqEdA,EApEe,kBAoEYA,EAnEb,qBAoEdA,EAAeL,GAAUK,EAjET,mBAkEhBA,EAAeJ,GAAaI,EA/DZ,mBAgEhBA,EAAeH,GAAUG,EA9DT,mBA+DhBA,EA7DiB,qBA6DY,EAG7B,IAAIoN,EAAe/Q,SAGf4D,EAA8B,iBAAVC,QAAsBA,QAAUA,OAAOhT,SAAWA,QAAUgT,OAGhFC,EAA0B,iBAARpN,MAAoBA,MAAQA,KAAK7F,SAAWA,QAAU6F,KAGxEqN,EAAOH,GAAcE,GAAYE,SAAS,cAATA,GAGjCC,EAA4ChU,IAAYA,EAAQiU,UAAYjU,EAG5EkU,EAAaF,GAAgC,iBAAV/T,GAAsBA,IAAWA,EAAOgU,UAAYhU,EAMvFmU,EAHgBF,GAAcA,EAAWlU,UAAYgU,GAGtBL,EAAWU,QAG1CC,EAAY,WACd,IACE,OAAOF,GAAeA,EAAYG,QAAQ,QAC1C,MAAOtG,KAHI,GAOXuG,EAAmBF,GAAYA,EAASG,aAY5C,SAASC,EAAUC,EAAOC,GAIxB,IAHA,IAAIC,GAAS,EACT5Q,EAAS0Q,EAAQA,EAAM1Q,OAAS,IAE3B4Q,EAAQ5Q,GACf,GAAI2Q,EAAUD,EAAME,GAAQA,EAAOF,GACjC,OAAO,EAGX,OAAO,EA0FT,SAASoM,EAAa5f,GAGpB,IAAI6F,GAAS,EACb,GAAa,MAAT7F,GAA0C,mBAAlBA,EAAM4I,SAChC,IACE/C,KAAY7F,EAAQ,IACpB,MAAO8M,IAEX,OAAOjH,EAUT,SAAS8N,EAAWlG,GAClB,IAAIiG,GAAS,EACT7N,EAAS3C,MAAMuK,EAAImG,MAKvB,OAHAnG,EAAIvM,SAAQ,SAASlB,EAAOM,GAC1BuF,IAAS6N,GAAS,CAACpT,EAAKN,MAEnB6F,EAwBT,SAASgO,EAAWC,GAClB,IAAIJ,GAAS,EACT7N,EAAS3C,MAAM4Q,EAAIF,MAKvB,OAHAE,EAAI5S,SAAQ,SAASlB,GACnB6F,IAAS6N,GAAS1T,KAEb6F,EAIT,IASMkO,EAjCWC,EAAMC,EAwBnBC,EAAahR,MAAMvC,UACnBwT,EAAYvB,SAASjS,UACrByT,EAAc3U,OAAOkB,UAGrB0T,EAAa1B,EAAK,sBAGlB4B,GACER,EAAM,SAASS,KAAKH,GAAcA,EAAWxD,MAAQwD,EAAWxD,KAAK4D,UAAY,KACvE,iBAAmBV,EAAO,GAItCO,EAAeH,EAAUvL,SAGzBhI,EAAiBwT,EAAYxT,eAO7BuX,EAAiB/D,EAAYxL,SAG7B+L,EAAaC,OAAO,IACtBN,EAAapV,KAAK0B,GAAgBiU,QA/QjB,sBA+QuC,QACvDA,QAAQ,yDAA0D,SAAW,KAI5E/U,EAAS6S,EAAK7S,OACdiV,EAAapC,EAAKoC,WAClBC,EAAuBZ,EAAYY,qBACnC/D,EAASiD,EAAWjD,OAGpBqE,GA/DatB,EA+DQvU,OAAOoR,KA/DToD,EA+DexU,OA9D7B,SAAS8V,GACd,OAAOvB,EAAKC,EAAUsB,MA8DtBsK,EAAYpd,KAAKyF,IACjB4X,EAAYrd,KAAKiK,IAGjB8I,EAAWC,GAAU9C,EAAM,YAC3B+C,EAAMD,GAAU9C,EAAM,OACtBgD,EAAUF,GAAU9C,EAAM,WAC1BiD,EAAMH,GAAU9C,EAAM,OACtBkD,GAAUJ,GAAU9C,EAAM,WAC1BmD,GAAeL,GAAUhW,OAAQ,UAGjCsW,GAAqBC,GAASR,GAC9BS,GAAgBD,GAASN,GACzBQ,GAAoBF,GAASL,GAC7BQ,GAAgBH,GAASJ,GACzBQ,GAAoBJ,GAASH,IAG7BQ,GAAcvW,EAASA,EAAOa,eAAY8P,EAC1C6F,GAAgBD,GAAcA,GAAY3I,aAAU+C,EACpDsP,GAAiB1J,GAAcA,GAAYzN,cAAW6H,EAS1D,SAAS8F,GAAKC,GACZ,IAAI9C,GAAS,EACT5Q,EAAS0T,EAAUA,EAAQ1T,OAAS,EAGxC,IADAV,KAAKqU,UACI/C,EAAQ5Q,GAAQ,CACvB,IAAI4T,EAAQF,EAAQ9C,GACpBtR,KAAK0R,IAAI4C,EAAM,GAAIA,EAAM,KA2F7B,SAASC,GAAUH,GACjB,IAAI9C,GAAS,EACT5Q,EAAS0T,EAAUA,EAAQ1T,OAAS,EAGxC,IADAV,KAAKqU,UACI/C,EAAQ5Q,GAAQ,CACvB,IAAI4T,EAAQF,EAAQ9C,GACpBtR,KAAK0R,IAAI4C,EAAM,GAAIA,EAAM,KAyG7B,SAASE,GAASJ,GAChB,IAAI9C,GAAS,EACT5Q,EAAS0T,EAAUA,EAAQ1T,OAAS,EAGxC,IADAV,KAAKqU,UACI/C,EAAQ5Q,GAAQ,CACvB,IAAI4T,EAAQF,EAAQ9C,GACpBtR,KAAK0R,IAAI4C,EAAM,GAAIA,EAAM,KAwF7B,SAASG,GAASC,GAChB,IAAIpD,GAAS,EACT5Q,EAASgU,EAASA,EAAOhU,OAAS,EAGtC,IADAV,KAAK2U,SAAW,IAAIH,KACXlD,EAAQ5Q,GACfV,KAAKiB,IAAIyT,EAAOpD,IA2CpB,SAASsD,GAAMR,GACbpU,KAAK2U,SAAW,IAAIJ,GAAUH,GA4FhC,SAASU,GAAclX,EAAOmX,GAG5B,IAAItR,EAAU6K,GAAQ1Q,IAAUsX,GAAYtX,GA/mB9C,SAAmBQ,EAAGkX,GAIpB,IAHA,IAAIhE,GAAS,EACT7N,EAAS3C,MAAM1C,KAEVkT,EAAQlT,GACfqF,EAAO6N,GAASgE,EAAShE,GAE3B,OAAO7N,EAymBH8R,CAAU3X,EAAM8C,OAAQqJ,QACxB,GAEArJ,EAAS+C,EAAO/C,OAChB2U,IAAgB3U,EAEpB,IAAK,IAAIxC,KAAON,GACTmX,IAAavW,EAAe1B,KAAKc,EAAOM,IACvCmX,IAAuB,UAAPnX,GAAmBsX,GAAQtX,EAAKwC,KACpD+C,EAAOhC,KAAKvD,GAGhB,OAAOuF,EAWT,SAASgS,GAAarE,EAAOlT,GAE3B,IADA,IAAIwC,EAAS0Q,EAAM1Q,OACZA,KACL,GAAI2G,GAAG+J,EAAM1Q,GAAQ,GAAIxC,GACvB,OAAOwC,EAGX,OAAQ,EAWV,SAASkd,GAAQvf,EAAQwf,GAMvB,IAHA,IAAIvM,EAAQ,EACR5Q,GAHJmd,EAAOC,GAAMD,EAAMxf,GAAU,CAACwf,GAAQE,GAASF,IAG7Bnd,OAED,MAAVrC,GAAkBiT,EAAQ5Q,GAC/BrC,EAASA,EAAO2f,GAAMH,EAAKvM,OAE7B,OAAQA,GAASA,GAAS5Q,EAAUrC,OAASgQ,EAsB/C,SAAS4P,GAAU5f,EAAQH,GACzB,OAAiB,MAAVG,GAAkBH,KAAOb,OAAOgB,GAkBzC,SAAS6X,GAAYtY,EAAOuY,EAAOE,EAAYD,EAASE,GACtD,OAAI1Y,IAAUuY,IAGD,MAATvY,GAA0B,MAATuY,IAAmBwC,GAAS/a,KAAWqY,GAAaE,GAChEvY,GAAUA,GAASuY,GAAUA,EAoBxC,SAAyB9X,EAAQ8X,EAAOI,EAAWF,EAAYD,EAASE,GACtE,IAAIE,EAAWlI,GAAQjQ,GACnBoY,EAAWnI,GAAQ6H,GACnBO,EAz5BS,iBA05BTE,EA15BS,iBA45BRJ,IAEHE,GADAA,EAASC,GAAOtY,KACGwR,EAAUE,EAAY2G,GAEtCD,IAEHG,GADAA,EAASD,GAAOR,KACGtG,EAAUE,EAAY6G,GAE3C,IAAIC,EAAWH,GAAU3G,IAAcyN,EAAanf,GAChDyY,EAAWF,GAAU7G,IAAcyN,EAAarH,GAChDY,EAAYL,GAAUE,EAE1B,GAAIG,IAAcF,EAEhB,OADAP,IAAUA,EAAQ,IAAI1B,IACd4B,GAAYtF,GAAa7S,GAC7B2Y,GAAY3Y,EAAQ8X,EAAOI,EAAWF,EAAYD,EAASE,GAsVnE,SAAoBjY,EAAQ8X,EAAOP,EAAKW,EAAWF,EAAYD,EAASE,GACtE,OAAQV,GACN,IAlvCc,oBAmvCZ,GAAKvX,EAAO4Y,YAAcd,EAAMc,YAC3B5Y,EAAO6Y,YAAcf,EAAMe,WAC9B,OAAO,EAET7Y,EAASA,EAAO8Y,OAChBhB,EAAQA,EAAMgB,OAEhB,IA3vCiB,uBA4vCf,QAAK9Y,EAAO4Y,YAAcd,EAAMc,aAC3BV,EAAU,IAAI5D,EAAWtU,GAAS,IAAIsU,EAAWwD,KAKxD,IAjxCU,mBAkxCV,IAjxCU,gBAkxCV,IA7wCY,kBAgxCV,OAAO9O,IAAIhJ,GAAS8X,GAEtB,IAtxCW,iBAuxCT,OAAO9X,EAAOnB,MAAQiZ,EAAMjZ,MAAQmB,EAAO+Y,SAAWjB,EAAMiB,QAE9D,IAlxCY,kBAmxCZ,IAjxCY,kBAqxCV,OAAO/Y,GAAW8X,EAAQ,GAE5B,KAAKrG,EACH,IAAIuH,EAAU9F,EAEhB,KAAKvB,EACH,IAAIsH,EAjzCiB,EAizCLlB,EAGhB,GAFAiB,IAAYA,EAAU5F,GAElBpT,EAAOmT,MAAQ2E,EAAM3E,OAAS8F,EAChC,OAAO,EAGT,IAAIC,EAAUjB,EAAM9Y,IAAIa,GACxB,GAAIkZ,EACF,OAAOA,GAAWpB,EAEpBC,GA7zCuB,EAg0CvBE,EAAM5E,IAAIrT,EAAQ8X,GAClB,IAAI1S,EAASuT,GAAYK,EAAQhZ,GAASgZ,EAAQlB,GAAQI,EAAWF,EAAYD,EAASE,GAE1F,OADAA,EAAc,OAAEjY,GACToF,EAET,IA7yCY,kBA8yCV,GAAIyQ,GACF,OAAOA,GAAcpX,KAAKuB,IAAW6V,GAAcpX,KAAKqZ,GAG9D,OAAO,EAnZDqB,CAAWnZ,EAAQ8X,EAAOO,EAAQH,EAAWF,EAAYD,EAASE,GAExE,KAx7ByB,EAw7BnBF,GAAiC,CACrC,IAAIqB,EAAeZ,GAAYrY,EAAe1B,KAAKuB,EAAQ,eACvDqZ,EAAeZ,GAAYtY,EAAe1B,KAAKqZ,EAAO,eAE1D,GAAIsB,GAAgBC,EAAc,CAChC,IAAIC,EAAeF,EAAepZ,EAAOT,QAAUS,EAC/CuZ,EAAeF,EAAevB,EAAMvY,QAAUuY,EAGlD,OADAG,IAAUA,EAAQ,IAAI1B,IACf2B,EAAUoB,EAAcC,EAAcvB,EAAYD,EAASE,IAGtE,IAAKS,EACH,OAAO,EAGT,OADAT,IAAUA,EAAQ,IAAI1B,IAmZxB,SAAsBvW,EAAQ8X,EAAOI,EAAWF,EAAYD,EAASE,GACnE,IAAIgB,EA31CqB,EA21CTlB,EACZyB,EAAWpJ,GAAKpQ,GAChB0Z,EAAYF,EAASnX,OAErBsX,EADWvJ,GAAK0H,GACKzV,OAEzB,GAAIqX,GAAaC,IAAcV,EAC7B,OAAO,EAET,IAAIhG,EAAQyG,EACZ,KAAOzG,KAAS,CACd,IAAIpT,EAAM2Z,EAASvG,GACnB,KAAMgG,EAAYpZ,KAAOiY,EAAQ3X,EAAe1B,KAAKqZ,EAAOjY,IAC1D,OAAO,EAIX,IAAIqZ,EAAUjB,EAAM9Y,IAAIa,GACxB,GAAIkZ,GAAWjB,EAAM9Y,IAAI2Y,GACvB,OAAOoB,GAAWpB,EAEpB,IAAI1S,GAAS,EACb6S,EAAM5E,IAAIrT,EAAQ8X,GAClBG,EAAM5E,IAAIyE,EAAO9X,GAEjB,IAAI4Z,EAAWX,EACf,OAAShG,EAAQyG,GAAW,CAC1B7Z,EAAM2Z,EAASvG,GACf,IAAI4G,EAAW7Z,EAAOH,GAClBia,EAAWhC,EAAMjY,GAErB,GAAImY,EACF,IAAI+B,EAAWd,EACXjB,EAAW8B,EAAUD,EAAUha,EAAKiY,EAAO9X,EAAQiY,GACnDD,EAAW6B,EAAUC,EAAUja,EAAKG,EAAQ8X,EAAOG,GAGzD,UAAmBjI,IAAb+J,EACGF,IAAaC,GAAY5B,EAAU2B,EAAUC,EAAU9B,EAAYD,EAASE,GAC7E8B,GACD,CACL3U,GAAS,EACT,MAEFwU,IAAaA,EAAkB,eAAP/Z,GAE1B,GAAIuF,IAAWwU,EAAU,CACvB,IAAII,EAAUha,EAAOia,YACjBC,EAAUpC,EAAMmC,YAGhBD,GAAWE,KACV,gBAAiBla,MAAU,gBAAiB8X,IACzB,mBAAXkC,GAAyBA,aAAmBA,GACjC,mBAAXE,GAAyBA,aAAmBA,IACvD9U,GAAS,GAKb,OAFA6S,EAAc,OAAEjY,GAChBiY,EAAc,OAAEH,GACT1S,EA/cA+U,CAAana,EAAQ8X,EAAOI,EAAWF,EAAYD,EAASE,GA1D5DmC,CAAgB7a,EAAOuY,EAAOD,GAAaG,EAAYD,EAASE,IA2HzE,SAASoC,GAAa9a,GACpB,SAAK+a,GAAS/a,IA0jBhB,SAAkBgU,GAChB,QAASO,GAAeA,KAAcP,EA3jBdgH,CAAShb,MAGlBib,GAAWjb,IAAU4f,EAAa5f,GAAU2U,EAAatC,GACzD9D,KAAKyH,GAAShW,IAsB/B,SAASsgB,GAAatgB,GAGpB,MAAoB,mBAATA,EACFA,EAEI,MAATA,EACKugB,GAEW,iBAATvgB,EACF0Q,GAAQ1Q,GAoDnB,SAA6BigB,EAAMO,GACjC,GAAIN,GAAMD,IAASQ,GAAmBD,GACpC,OAAOE,GAAwBN,GAAMH,GAAOO,GAE9C,OAAO,SAAS/f,GACd,IAAI6Z,EA2pCR,SAAa7Z,EAAQwf,EAAMU,GACzB,IAAI9a,EAAmB,MAAVpF,OAAiBgQ,EAAYuP,GAAQvf,EAAQwf,GAC1D,YAAkBxP,IAAX5K,EAAuB8a,EAAe9a,EA7pC5BjG,CAAIa,EAAQwf,GAC3B,YAAqBxP,IAAb6J,GAA0BA,IAAakG,EAyrCnD,SAAe/f,EAAQwf,GACrB,OAAiB,MAAVxf,GA7yBT,SAAiBA,EAAQwf,EAAMW,GAC7BX,EAAOC,GAAMD,EAAMxf,GAAU,CAACwf,GAAQE,GAASF,GAE/C,IAAIpa,EACA6N,GAAS,EACT5Q,EAASmd,EAAKnd,OAElB,OAAS4Q,EAAQ5Q,GAAQ,CACvB,IAAIxC,EAAM8f,GAAMH,EAAKvM,IACrB,KAAM7N,EAAmB,MAAVpF,GAAkBmgB,EAAQngB,EAAQH,IAC/C,MAEFG,EAASA,EAAOH,GAElB,GAAIuF,EACF,OAAOA,EAGT,SADI/C,EAASrC,EAASA,EAAOqC,OAAS,IACnB6Z,GAAS7Z,IAAW8U,GAAQtX,EAAKwC,KACjD4N,GAAQjQ,IAAW6W,GAAY7W,IA0xBTogB,CAAQpgB,EAAQwf,EAAMI,IAzrCzCS,CAAMrgB,EAAQwf,GACd3H,GAAYkI,EAAUlG,OAAU7J,EAAWsQ,IA3D3CC,CAAoBhhB,EAAM,GAAIA,EAAM,IAiC5C,SAAqBihB,GACnB,IAAIC,EA+VN,SAAsBzgB,GACpB,IAAIoF,EAASgL,GAAKpQ,GACdqC,EAAS+C,EAAO/C,OAEpB,KAAOA,KAAU,CACf,IAAIxC,EAAMuF,EAAO/C,GACb9C,EAAQS,EAAOH,GAEnBuF,EAAO/C,GAAU,CAACxC,EAAKN,EAAOygB,GAAmBzgB,IAEnD,OAAO6F,EAzWSsb,CAAaF,GAC7B,GAAwB,GAApBC,EAAUpe,QAAeoe,EAAU,GAAG,GACxC,OAAOR,GAAwBQ,EAAU,GAAG,GAAIA,EAAU,GAAG,IAE/D,OAAO,SAASzgB,GACd,OAAOA,IAAWwgB,GAjItB,SAAqBxgB,EAAQwgB,EAAQC,EAAWzI,GAC9C,IAAI/E,EAAQwN,EAAUpe,OAClBA,EAAS4Q,EACT0N,GAAgB3I,EAEpB,GAAc,MAAVhY,EACF,OAAQqC,EAGV,IADArC,EAAShB,OAAOgB,GACTiT,KAAS,CACd,IAAIuD,EAAOiK,EAAUxN,GACrB,GAAK0N,GAAgBnK,EAAK,GAClBA,EAAK,KAAOxW,EAAOwW,EAAK,MACtBA,EAAK,KAAMxW,GAEnB,OAAO,EAGX,OAASiT,EAAQ5Q,GAAQ,CAEvB,IAAIxC,GADJ2W,EAAOiK,EAAUxN,IACF,GACX4G,EAAW7Z,EAAOH,GAClBkgB,EAAWvJ,EAAK,GAEpB,GAAImK,GAAgBnK,EAAK,IACvB,QAAiBxG,IAAb6J,KAA4Bha,KAAOG,GACrC,OAAO,MAEJ,CACL,IAAIiY,EAAQ,IAAI1B,GAChB,GAAIyB,EACF,IAAI5S,EAAS4S,EAAW6B,EAAUkG,EAAUlgB,EAAKG,EAAQwgB,EAAQvI,GAEnE,UAAiBjI,IAAX5K,EACEyS,GAAYkI,EAAUlG,EAAU7B,EAAYsI,EAA+CrI,GAC3F7S,GAEN,OAAO,GAIb,OAAO,EAwFuBwb,CAAY5gB,EAAQwgB,EAAQC,IAtCpDI,CAAYthB,GAg0CXkgB,GADSD,EA7zCAjgB,IAr4BIM,EAmsEc8f,GAAMH,GAlsEjC,SAASxf,GACd,OAAiB,MAAVA,OAAiBgQ,EAAYhQ,EAAOH,KAs8B/C,SAA0B2f,GACxB,OAAO,SAASxf,GACd,OAAOuf,GAAQvf,EAAQwf,IAyvCwBsB,CAAiBtB,GADpE,IAAkBA,EAlsEI3f,EA+4BtB,SAAS4a,GAASza,GAChB,GAmhBI0a,GADenb,EAlhBFS,IAmhBGT,EAAM0a,YACtBU,EAAwB,mBAARD,GAAsBA,EAAKxa,WAAcyT,EAEtDpU,IAAUob,EArhBf,OAAO9F,EAAW7U,GAihBtB,IAAqBT,EACfmb,EACAC,EAjhBAvV,EAAS,GACb,IAAK,IAAIvF,KAAOb,OAAOgB,GACjBG,EAAe1B,KAAKuB,EAAQH,IAAe,eAAPA,GACtCuF,EAAOhC,KAAKvD,GAGhB,OAAOuF,EAgFT,SAASsa,GAASngB,GAChB,OAAO0Q,GAAQ1Q,GAASA,EAAQwhB,GAAaxhB,GAqC/C,SAASoZ,GAAY5F,EAAO+E,EAAOI,EAAWF,EAAYD,EAASE,GACjE,IAAIgB,EA7rCqB,EA6rCTlB,EACZ6C,EAAY7H,EAAM1Q,OAClBsX,EAAY7B,EAAMzV,OAEtB,GAAIuY,GAAajB,KAAeV,GAAaU,EAAYiB,GACvD,OAAO,EAGT,IAAI1B,EAAUjB,EAAM9Y,IAAI4T,GACxB,GAAImG,GAAWjB,EAAM9Y,IAAI2Y,GACvB,OAAOoB,GAAWpB,EAEpB,IAAI7E,GAAS,EACT7N,GAAS,EACTuK,EA5sCuB,EA4sCfoI,EAAoC,IAAI3B,QAAWpG,EAM/D,IAJAiI,EAAM5E,IAAIN,EAAO+E,GACjBG,EAAM5E,IAAIyE,EAAO/E,KAGRE,EAAQ2H,GAAW,CAC1B,IAAIC,EAAW9H,EAAME,GACjB6G,EAAWhC,EAAM7E,GAErB,GAAI+E,EACF,IAAI+B,EAAWd,EACXjB,EAAW8B,EAAUe,EAAU5H,EAAO6E,EAAO/E,EAAOkF,GACpDD,EAAW6C,EAAUf,EAAU7G,EAAOF,EAAO+E,EAAOG,GAE1D,QAAiBjI,IAAb+J,EAAwB,CAC1B,GAAIA,EACF,SAEF3U,GAAS,EACT,MAGF,GAAIuK,GACF,IAAKmD,EAAUgF,GAAO,SAASgC,EAAUgB,GACnC,IAAKnL,EAAKc,IAAIqK,KACTD,IAAaf,GAAY5B,EAAU2C,EAAUf,EAAU9B,EAAYD,EAASE,IAC/E,OAAOtI,EAAK/M,IAAIkY,MAEhB,CACN1V,GAAS,EACT,YAEG,GACDyV,IAAaf,IACX5B,EAAU2C,EAAUf,EAAU9B,EAAYD,EAASE,GACpD,CACL7S,GAAS,EACT,OAKJ,OAFA6S,EAAc,OAAElF,GAChBkF,EAAc,OAAEH,GACT1S,EA4KT,SAASiW,GAAWrO,EAAKnN,GACvB,IAmJiBN,EACb+b,EApJA9E,EAAOxJ,EAAIsJ,SACf,OAoJgB,WADZgF,SADa/b,EAlJAM,KAoJmB,UAARyb,GAA4B,UAARA,GAA4B,WAARA,EACrD,cAAV/b,EACU,OAAVA,GArJDiX,EAAmB,iBAAP3W,EAAkB,SAAW,QACzC2W,EAAKxJ,IA+BX,SAASgI,GAAUhV,EAAQH,GACzB,IAAIN,EA3uCN,SAAkBS,EAAQH,GACxB,OAAiB,MAAVG,OAAiBgQ,EAAYhQ,EAAOH,GA0uC/B0b,CAASvb,EAAQH,GAC7B,OAAOwa,GAAa9a,GAASA,OAAQyQ,EAzgCvC8F,GAAK5V,UAAU8V,MAnEf,WACErU,KAAK2U,SAAWjB,GAAeA,GAAa,MAAQ,IAmEtDS,GAAK5V,UAAkB,OAtDvB,SAAoBL,GAClB,OAAO8B,KAAK8O,IAAI5Q,WAAe8B,KAAK2U,SAASzW,IAsD/CiW,GAAK5V,UAAUf,IA1Cf,SAAiBU,GACf,IAAI2W,EAAO7U,KAAK2U,SAChB,GAAIjB,GAAc,CAChB,IAAIjQ,EAASoR,EAAK3W,GAClB,MA9ZiB,8BA8ZVuF,OAA4B4K,EAAY5K,EAEjD,OAAOjF,EAAe1B,KAAK+X,EAAM3W,GAAO2W,EAAK3W,QAAOmQ,GAqCtD8F,GAAK5V,UAAUuQ,IAzBf,SAAiB5Q,GACf,IAAI2W,EAAO7U,KAAK2U,SAChB,OAAOjB,QAA6BrF,IAAdwG,EAAK3W,GAAqBM,EAAe1B,KAAK+X,EAAM3W,IAwB5EiW,GAAK5V,UAAUmT,IAXf,SAAiBxT,EAAKN,GAGpB,OAFWoC,KAAK2U,SACXzW,GAAQwV,SAA0BrF,IAAVzQ,EA7bV,4BA6bkDA,EAC9DoC,MAoHTuU,GAAUhW,UAAU8V,MAjFpB,WACErU,KAAK2U,SAAW,IAiFlBJ,GAAUhW,UAAkB,OArE5B,SAAyBL,GACvB,IAAI2W,EAAO7U,KAAK2U,SACZrD,EAAQmE,GAAaZ,EAAM3W,GAE/B,QAAIoT,EAAQ,KAIRA,GADYuD,EAAKnU,OAAS,EAE5BmU,EAAKgF,MAELhL,EAAO/R,KAAK+X,EAAMvD,EAAO,IAEpB,IAyDTiD,GAAUhW,UAAUf,IA7CpB,SAAsBU,GACpB,IAAI2W,EAAO7U,KAAK2U,SACZrD,EAAQmE,GAAaZ,EAAM3W,GAE/B,OAAOoT,EAAQ,OAAIjD,EAAYwG,EAAKvD,GAAO,IA0C7CiD,GAAUhW,UAAUuQ,IA9BpB,SAAsB5Q,GACpB,OAAOuX,GAAazV,KAAK2U,SAAUzW,IAAQ,GA8B7CqW,GAAUhW,UAAUmT,IAjBpB,SAAsBxT,EAAKN,GACzB,IAAIiX,EAAO7U,KAAK2U,SACZrD,EAAQmE,GAAaZ,EAAM3W,GAO/B,OALIoT,EAAQ,EACVuD,EAAKpT,KAAK,CAACvD,EAAKN,IAEhBiX,EAAKvD,GAAO,GAAK1T,EAEZoC,MAkGTwU,GAASjW,UAAU8V,MA/DnB,WACErU,KAAK2U,SAAW,CACd,KAAQ,IAAIR,GACZ,IAAO,IAAKb,GAAOiB,IACnB,OAAU,IAAIJ,KA4DlBK,GAASjW,UAAkB,OA/C3B,SAAwBL,GACtB,OAAOwb,GAAW1Z,KAAM9B,GAAa,OAAEA,IA+CzCsW,GAASjW,UAAUf,IAnCnB,SAAqBU,GACnB,OAAOwb,GAAW1Z,KAAM9B,GAAKV,IAAIU,IAmCnCsW,GAASjW,UAAUuQ,IAvBnB,SAAqB5Q,GACnB,OAAOwb,GAAW1Z,KAAM9B,GAAK4Q,IAAI5Q,IAuBnCsW,GAASjW,UAAUmT,IAVnB,SAAqBxT,EAAKN,GAExB,OADA8b,GAAW1Z,KAAM9B,GAAKwT,IAAIxT,EAAKN,GACxBoC,MAyDTyU,GAASlW,UAAU0C,IAAMwT,GAASlW,UAAUkD,KAnB5C,SAAqB7D,GAEnB,OADAoC,KAAK2U,SAASjD,IAAI9T,EAnrBC,6BAorBZoC,MAkBTyU,GAASlW,UAAUuQ,IANnB,SAAqBlR,GACnB,OAAOoC,KAAK2U,SAAS7F,IAAIlR,IA6F3BgX,GAAMrW,UAAU8V,MApEhB,WACErU,KAAK2U,SAAW,IAAIJ,IAoEtBK,GAAMrW,UAAkB,OAxDxB,SAAqBL,GACnB,OAAO8B,KAAK2U,SAAiB,OAAEzW,IAwDjC0W,GAAMrW,UAAUf,IA5ChB,SAAkBU,GAChB,OAAO8B,KAAK2U,SAASnX,IAAIU,IA4C3B0W,GAAMrW,UAAUuQ,IAhChB,SAAkB5Q,GAChB,OAAO8B,KAAK2U,SAAS7F,IAAI5Q,IAgC3B0W,GAAMrW,UAAUmT,IAnBhB,SAAkBxT,EAAKN,GACrB,IAAIyhB,EAAQrf,KAAK2U,SACjB,GAAI0K,aAAiB9K,GAAW,CAC9B,IAAIuF,EAAQuF,EAAM1K,SAClB,IAAKrB,GAAQwG,EAAMpZ,OAASqZ,IAE1B,OADAD,EAAMrY,KAAK,CAACvD,EAAKN,IACVoC,KAETqf,EAAQrf,KAAK2U,SAAW,IAAIH,GAASsF,GAGvC,OADAuF,EAAM3N,IAAIxT,EAAKN,GACRoC,MA2rBT,IAAI2W,GAzmBJ,SAAoB/Y,GAClB,OAAOmY,EAAejZ,KAAKc,IA0qB7B,SAAS4X,GAAQ5X,EAAO8C,GAEtB,SADAA,EAAmB,MAAVA,EAhhDY,iBAghDwBA,KAE1B,iBAAT9C,GAAqBsS,EAAS/D,KAAKvO,KAC1CA,GAAS,GAAKA,EAAQ,GAAK,GAAKA,EAAQ8C,EAW7C,SAASod,GAAMlgB,EAAOS,GACpB,GAAIiQ,GAAQ1Q,GACV,OAAO,EAET,IAAI+b,SAAc/b,EAClB,QAAY,UAAR+b,GAA4B,UAARA,GAA4B,WAARA,GAC/B,MAAT/b,IAAiB0hB,GAAS1hB,MAGvBmf,EAAc5Q,KAAKvO,KAAWkf,EAAa3Q,KAAKvO,IAC1C,MAAVS,GAAkBT,KAASP,OAAOgB,IAkDvC,SAASggB,GAAmBzgB,GAC1B,OAAOA,GAAUA,IAAU+a,GAAS/a,GAYtC,SAAS0gB,GAAwBpgB,EAAKkgB,GACpC,OAAO,SAAS/f,GACd,OAAc,MAAVA,IAGGA,EAAOH,KAASkgB,SACP/P,IAAb+P,GAA2BlgB,KAAOb,OAAOgB,OA5J3C+U,GA17Ca,qBA07CDuD,GAAO,IAAIvD,EAAS,IAAI+G,YAAY,MAChD7G,GAAOqD,GAAO,IAAIrD,IAAQxD,GAC1ByD,GAp8CY,oBAo8CDoD,GAAOpD,EAAQ6G,YAC1B5G,GAAOmD,GAAO,IAAInD,IAAQxD,GAC1ByD,IAj8CY,oBAi8CDkD,GAAO,IAAIlD,OACzBkD,GAAS,SAAS/Y,GAChB,IAAI6F,EAASsS,EAAejZ,KAAKc,GAC7Bmb,EAAOtV,GAAUsM,EAAYnS,EAAM0a,iBAAcjK,EACjDgM,EAAatB,EAAOnF,GAASmF,QAAQ1K,EAEzC,GAAIgM,EACF,OAAQA,GACN,KAAK1G,GAAoB,MAt8Cf,oBAu8CV,KAAKE,GAAe,OAAO/D,EAC3B,KAAKgE,GAAmB,MAh9Cf,mBAi9CT,KAAKC,GAAe,OAAO/D,EAC3B,KAAKgE,GAAmB,MA78Cf,mBAg9Cb,OAAOvQ,IAoJX,IAAI2b,GAAeG,IAAQ,SAASC,GAymBpC,IAAkB5hB,EAxmBhB4hB,EAymBgB,OADA5hB,EAxmBE4hB,GAymBK,GAnmCzB,SAAsB5hB,GAEpB,GAAoB,iBAATA,EACT,OAAOA,EAET,GAAI0hB,GAAS1hB,GACX,OAAO+f,GAAiBA,GAAe7gB,KAAKc,GAAS,GAEvD,IAAI6F,EAAU7F,EAAQ,GACtB,MAAkB,KAAV6F,GAAkB,EAAI7F,IAAU,IAAa,KAAO6F,EA0lChCgc,CAAa7hB,GAvmBzC,IAAI6F,EAAS,GAOb,OANIuZ,EAAa7Q,KAAKqT,IACpB/b,EAAOhC,KAAK,IAEd+d,EAAO/M,QAAQwK,GAAY,SAASyC,EAAOC,EAAQC,EAAOJ,GACxD/b,EAAOhC,KAAKme,EAAQJ,EAAO/M,QAAQ0K,EAAc,MAASwC,GAAUD,MAE/Djc,KAUT,SAASua,GAAMpgB,GACb,GAAoB,iBAATA,GAAqB0hB,GAAS1hB,GACvC,OAAOA,EAET,IAAI6F,EAAU7F,EAAQ,GACtB,MAAkB,KAAV6F,GAAkB,EAAI7F,IAlpDjB,IAkpDwC,KAAO6F,EAU9D,SAASmQ,GAAShC,GAChB,GAAY,MAARA,EAAc,CAChB,IACE,OAAOM,EAAapV,KAAK8U,GACzB,MAAOlH,IACT,IACE,OAAQkH,EAAO,GACf,MAAOlH,KAEX,MAAO,GA0ET,IAjlBoBmV,GAilBhBC,IAjlBgBD,GA8iBpB,SAAuBzO,EAAOC,EAAW0O,GACvC,IAAIrf,EAAS0Q,EAAQA,EAAM1Q,OAAS,EACpC,IAAKA,EACH,OAAQ,EAEV,IA0cI+C,EACAX,EA3cAwO,EAAQ5Q,EAAS,EAOrB,YANkB2N,IAAd0R,IAycAtc,EAvCN,SAAkB7F,GAChB,OAAKA,GAGLA,EAgEF,SAAkBA,GAChB,GAAoB,iBAATA,EACT,OAAOA,EAET,GAAI0hB,GAAS1hB,GACX,OA1rEM,IA4rER,GAAI+a,GAAS/a,GAAQ,CACnB,IAAIuY,EAAgC,mBAAjBvY,EAAM0N,QAAwB1N,EAAM0N,UAAY1N,EACnEA,EAAQ+a,GAASxC,GAAUA,EAAQ,GAAMA,EAE3C,GAAoB,iBAATvY,EACT,OAAiB,IAAVA,EAAcA,GAASA,EAEhCA,EAAQA,EAAM6U,QAAQyK,EAAQ,IAC9B,IAAI8C,EAAW3C,EAAWlR,KAAKvO,GAC/B,OAAQoiB,GAAY1C,EAAUnR,KAAKvO,GAC/B2f,EAAa3f,EAAMmI,MAAM,GAAIia,EAAW,EAAI,GAC3C5C,EAAWjR,KAAKvO,GAvsEb,KAusE6BA,EAlF7BqiB,CAASriB,MAxnEJ,KAynEaA,KAAU,IAvnEpB,uBAwnEFA,EAAQ,GAAK,EAAI,GAGxBA,GAAUA,EAAQA,EAAQ,EAPd,IAAVA,EAAcA,EAAQ,EAqClBsiB,CAxcOH,GAychBjd,EAAYW,EAAS,EAzcvB6N,EA2cK7N,GAAWA,EAAUX,EAAYW,EAASX,EAAYW,EAAU,EA1crE6N,EAAQyO,EAAY,EAChBtC,EAAU/c,EAAS4Q,EAAO,GAC1BoM,EAAUpM,EAAO5Q,EAAS,IA/jDlC,SAAuB0Q,EAAOC,EAAW0O,EAAWI,GAIlD,IAHA,IAAIzf,EAAS0Q,EAAM1Q,OACf4Q,EAAQyO,GAAaI,EAAY,GAAK,GAElCA,EAAY7O,MAAYA,EAAQ5Q,GACtC,GAAI2Q,EAAUD,EAAME,GAAQA,EAAOF,GACjC,OAAOE,EAGX,OAAQ,EAwjDD8O,CAAchP,EAAO8M,GAAa7M,GAAeC,GAAO,IAzjBxD,SAAS+O,EAAYhP,EAAW0O,GACrC,IAAIO,EAAWjjB,OAAOgjB,GACtB,IAAKE,GAAYF,GAAa,CAC5B,IAAI/K,EAAW4I,GAAa7M,GAC5BgP,EAAa5R,GAAK4R,GAClBhP,EAAY,SAASnT,GAAO,OAAOoX,EAASgL,EAASpiB,GAAMA,EAAKoiB,IAElE,IAAIhP,EAAQuO,GAAcQ,EAAYhP,EAAW0O,GACjD,OAAOzO,GAAS,EAAIgP,EAAShL,EAAW+K,EAAW/O,GAASA,QAASjD,IAsnBzE,SAASkR,GAAQ3N,EAAM4O,GACrB,GAAmB,mBAAR5O,GAAuB4O,GAA+B,mBAAZA,EACnD,MAAM,IAAIhS,UAzyDQ,uBA2yDpB,IAAIiS,EAAW,WACb,IAAIC,EAAOpG,UACPpc,EAAMsiB,EAAWA,EAASpV,MAAMpL,KAAM0gB,GAAQA,EAAK,GACnDrB,EAAQoB,EAASpB,MAErB,GAAIA,EAAMvQ,IAAI5Q,GACZ,OAAOmhB,EAAM7hB,IAAIU,GAEnB,IAAIuF,EAASmO,EAAKxG,MAAMpL,KAAM0gB,GAE9B,OADAD,EAASpB,MAAQA,EAAM3N,IAAIxT,EAAKuF,GACzBA,GAGT,OADAgd,EAASpB,MAAQ,IAAKE,GAAQoB,OAASnM,IAChCiM,EAsCT,SAASpZ,GAAGzJ,EAAOuY,GACjB,OAAOvY,IAAUuY,GAAUvY,GAAUA,GAASuY,GAAUA,EAqB1D,SAASjB,GAAYtX,GAEnB,OAmFF,SAA2BA,GACzB,OAAOqY,GAAarY,IAAU2iB,GAAY3iB,GApFnCgjB,CAAkBhjB,IAAUY,EAAe1B,KAAKc,EAAO,aAC1DgV,EAAqB9V,KAAKc,EAAO,WAAamY,EAAejZ,KAAKc,IAAUiS,GA3DlF0P,GAAQoB,MAAQnM,GAqFhB,IAAIlG,GAAUxN,MAAMwN,QA2BpB,SAASiS,GAAY3iB,GACnB,OAAgB,MAATA,GAAiB2c,GAAS3c,EAAM8C,UAAYmY,GAAWjb,GAiDhE,SAASib,GAAWjb,GAGlB,IAAIgY,EAAM+C,GAAS/a,GAASmY,EAAejZ,KAAKc,GAAS,GACzD,MA78DY,qBA68DLgY,GA58DI,8BA48DcA,EA6B3B,SAAS2E,GAAS3c,GAChB,MAAuB,iBAATA,GACZA,GAAS,GAAKA,EAAQ,GAAK,GAAKA,GAt/Db,iBAkhEvB,SAAS+a,GAAS/a,GAChB,IAAI+b,SAAc/b,EAClB,QAASA,IAAkB,UAAR+b,GAA4B,YAARA,GA2BzC,SAAS1D,GAAarY,GACpB,QAASA,GAAyB,iBAATA,EAoB3B,SAAS0hB,GAAS1hB,GAChB,MAAuB,iBAATA,GACXqY,GAAarY,IAnjEF,mBAmjEYmY,EAAejZ,KAAKc,GAoBhD,IAAIsT,GAAeD,EAj5DnB,SAAmBW,GACjB,OAAO,SAAShU,GACd,OAAOgU,EAAKhU,IA+4DsB4c,CAAUvJ,GAtkChD,SAA0BrT,GACxB,OAAOqY,GAAarY,IAClB2c,GAAS3c,EAAM8C,WAAayP,EAAe4F,EAAejZ,KAAKc,KAuyCnE,SAAS6Q,GAAKpQ,GACZ,OAAOkiB,GAAYliB,GAAUyW,GAAczW,GAAUya,GAASza,GAmBhE,SAAS8f,GAASvgB,GAChB,OAAOA,EA6BTlB,EAAOD,QAAUqjB,K,kCCv4EjBpjB,EAAOD,QAAU0Q,QAAQ,Q,iBCAzB,mBAKC,WAQC,IAAIoD,EAAsB,iBAARrN,MAAoBA,KAAKA,OAASA,MAAQA,MACjC,iBAAVmN,QAAsBA,OAAOA,SAAWA,QAAUA,QACzDrQ,MACA,GAGN6gB,EAAqBtQ,EAAKuQ,EAG1BC,EAAajgB,MAAMvC,UAAWyiB,EAAW3jB,OAAOkB,UAChD0iB,EAAgC,oBAAXvjB,OAAyBA,OAAOa,UAAY,KAGjEkD,EAAOsf,EAAWtf,KAClBsE,EAAQgb,EAAWhb,MACnBS,EAAWwa,EAASxa,SACpBhI,EAAiBwiB,EAASxiB,eAI1B0iB,EAAgBpgB,MAAMwN,QACtB4E,EAAa7V,OAAOoR,KACpBiF,EAAerW,OAAOY,OAGtB8a,EAAO,aAGP+H,EAAI,SAASxT,GACf,OAAIA,aAAewT,EAAUxT,EACvBtN,gBAAgB8gB,OACtB9gB,KAAKmhB,SAAW7T,GADiB,IAAIwT,EAAExT,IASH7Q,EAAQiU,SAM5CH,EAAKuQ,EAAIA,IAL4BpkB,EAAOgU,UAAYhU,EAAOD,UAC7DA,EAAUC,EAAOD,QAAUqkB,GAE7BrkB,EAAQqkB,EAAIA,GAMdA,EAAEM,QAAU,QAKZ,IAmBIC,EAnBAC,EAAa,SAAS1P,EAAM2P,EAASC,GACvC,QAAgB,IAAZD,EAAoB,OAAO3P,EAC/B,OAAoB,MAAZ4P,EAAmB,EAAIA,GAC7B,KAAK,EAAG,OAAO,SAAS5jB,GACtB,OAAOgU,EAAK9U,KAAKykB,EAAS3jB,IAG5B,KAAK,EAAG,OAAO,SAASA,EAAO0T,EAAO+O,GACpC,OAAOzO,EAAK9U,KAAKykB,EAAS3jB,EAAO0T,EAAO+O,IAE1C,KAAK,EAAG,OAAO,SAASoB,EAAa7jB,EAAO0T,EAAO+O,GACjD,OAAOzO,EAAK9U,KAAKykB,EAASE,EAAa7jB,EAAO0T,EAAO+O,IAGzD,OAAO,WACL,OAAOzO,EAAKxG,MAAMmW,EAASjH,aAS3BoH,EAAK,SAAS9jB,EAAO2jB,EAASC,GAChC,OAAIV,EAAExL,WAAa+L,EAAwBP,EAAExL,SAAS1X,EAAO2jB,GAChD,MAAT3jB,EAAsBkjB,EAAE3C,SACxB2C,EAAEjI,WAAWjb,GAAe0jB,EAAW1jB,EAAO2jB,EAASC,GACvDV,EAAEnI,SAAS/a,KAAWkjB,EAAExS,QAAQ1Q,GAAekjB,EAAEa,QAAQ/jB,GACtDkjB,EAAExiB,SAASV,IAMpBkjB,EAAExL,SAAW+L,EAAkB,SAASzjB,EAAO2jB,GAC7C,OAAOG,EAAG9jB,EAAO2jB,EAASpa,MAQ5B,IAAIya,EAAgB,SAAShQ,EAAMiQ,GAEjC,OADAA,EAA2B,MAAdA,EAAqBjQ,EAAKlR,OAAS,GAAKmhB,EAC9C,WAIL,IAHA,IAAInhB,EAASL,KAAKyF,IAAIwU,UAAU5Z,OAASmhB,EAAY,GACjDC,EAAOhhB,MAAMJ,GACb4Q,EAAQ,EACLA,EAAQ5Q,EAAQ4Q,IACrBwQ,EAAKxQ,GAASgJ,UAAUhJ,EAAQuQ,GAElC,OAAQA,GACN,KAAK,EAAG,OAAOjQ,EAAK9U,KAAKkD,KAAM8hB,GAC/B,KAAK,EAAG,OAAOlQ,EAAK9U,KAAKkD,KAAMsa,UAAU,GAAIwH,GAC7C,KAAK,EAAG,OAAOlQ,EAAK9U,KAAKkD,KAAMsa,UAAU,GAAIA,UAAU,GAAIwH,GAE7D,IAAIpB,EAAO5f,MAAM+gB,EAAa,GAC9B,IAAKvQ,EAAQ,EAAGA,EAAQuQ,EAAYvQ,IAClCoP,EAAKpP,GAASgJ,UAAUhJ,GAG1B,OADAoP,EAAKmB,GAAcC,EACZlQ,EAAKxG,MAAMpL,KAAM0gB,KAKxBqB,EAAa,SAASxjB,GACxB,IAAKuiB,EAAEnI,SAASpa,GAAY,MAAO,GACnC,GAAImV,EAAc,OAAOA,EAAanV,GACtCwa,EAAKxa,UAAYA,EACjB,IAAIkF,EAAS,IAAIsV,EAEjB,OADAA,EAAKxa,UAAY,KACVkF,GAGLue,EAAkB,SAAS9jB,GAC7B,OAAO,SAASoP,GACd,OAAc,MAAPA,OAAc,EAASA,EAAIpP,KAIlC4Q,EAAM,SAASxB,EAAKuQ,GACtB,OAAc,MAAPvQ,GAAe9O,EAAe1B,KAAKwQ,EAAKuQ,IAG7CoE,EAAU,SAAS3U,EAAKuQ,GAE1B,IADA,IAAInd,EAASmd,EAAKnd,OACT/D,EAAI,EAAGA,EAAI+D,EAAQ/D,IAAK,CAC/B,GAAW,MAAP2Q,EAAa,OACjBA,EAAMA,EAAIuQ,EAAKlhB,IAEjB,OAAO+D,EAAS4M,OAAM,GAOpB4U,EAAkB7hB,KAAKkG,IAAI,EAAG,IAAM,EACpC4b,EAAYH,EAAgB,UAC5BzB,EAAc,SAASF,GACzB,IAAI3f,EAASyhB,EAAU9B,GACvB,MAAwB,iBAAV3f,GAAsBA,GAAU,GAAKA,GAAUwhB,GAS/DpB,EAAEsB,KAAOtB,EAAEhiB,QAAU,SAASwO,EAAKgI,EAAUiM,GAE3C,IAAI5kB,EAAG+D,EACP,GAFA4U,EAAWgM,EAAWhM,EAAUiM,GAE5BhB,EAAYjT,GACd,IAAK3Q,EAAI,EAAG+D,EAAS4M,EAAI5M,OAAQ/D,EAAI+D,EAAQ/D,IAC3C2Y,EAAShI,EAAI3Q,GAAIA,EAAG2Q,OAEjB,CACL,IAAImB,EAAOqS,EAAErS,KAAKnB,GAClB,IAAK3Q,EAAI,EAAG+D,EAAS+N,EAAK/N,OAAQ/D,EAAI+D,EAAQ/D,IAC5C2Y,EAAShI,EAAImB,EAAK9R,IAAK8R,EAAK9R,GAAI2Q,GAGpC,OAAOA,GAITwT,EAAEzV,IAAMyV,EAAEuB,QAAU,SAAS/U,EAAKgI,EAAUiM,GAC1CjM,EAAWoM,EAAGpM,EAAUiM,GAIxB,IAHA,IAAI9S,GAAQ8R,EAAYjT,IAAQwT,EAAErS,KAAKnB,GACnC5M,GAAU+N,GAAQnB,GAAK5M,OACvB4hB,EAAUxhB,MAAMJ,GACX4Q,EAAQ,EAAGA,EAAQ5Q,EAAQ4Q,IAAS,CAC3C,IAAIiR,EAAa9T,EAAOA,EAAK6C,GAASA,EACtCgR,EAAQhR,GAASgE,EAAShI,EAAIiV,GAAaA,EAAYjV,GAEzD,OAAOgV,GAIT,IAAIE,EAAe,SAASC,GAG1B,IAAIC,EAAU,SAASpV,EAAKgI,EAAUqN,EAAMC,GAC1C,IAAInU,GAAQ8R,EAAYjT,IAAQwT,EAAErS,KAAKnB,GACnC5M,GAAU+N,GAAQnB,GAAK5M,OACvB4Q,EAAQmR,EAAM,EAAI,EAAI/hB,EAAS,EAKnC,IAJKkiB,IACHD,EAAOrV,EAAImB,EAAOA,EAAK6C,GAASA,GAChCA,GAASmR,GAEJnR,GAAS,GAAKA,EAAQ5Q,EAAQ4Q,GAASmR,EAAK,CACjD,IAAIF,EAAa9T,EAAOA,EAAK6C,GAASA,EACtCqR,EAAOrN,EAASqN,EAAMrV,EAAIiV,GAAaA,EAAYjV,GAErD,OAAOqV,GAGT,OAAO,SAASrV,EAAKgI,EAAUqN,EAAMpB,GACnC,IAAIqB,EAAUtI,UAAU5Z,QAAU,EAClC,OAAOgiB,EAAQpV,EAAKgU,EAAWhM,EAAUiM,EAAS,GAAIoB,EAAMC,KAMhE9B,EAAE+B,OAAS/B,EAAEgC,MAAQhC,EAAEiC,OAASP,EAAa,GAG7C1B,EAAEkC,YAAclC,EAAEmC,MAAQT,GAAc,GAGxC1B,EAAEoC,KAAOpC,EAAEqC,OAAS,SAAS7V,EAAK+D,EAAWkQ,GAC3C,IACIrjB,GADYqiB,EAAYjT,GAAOwT,EAAEsC,UAAYtC,EAAEuC,SAC/B/V,EAAK+D,EAAWkQ,GACpC,QAAY,IAARrjB,IAA2B,IAATA,EAAY,OAAOoP,EAAIpP,IAK/C4iB,EAAEwC,OAASxC,EAAEyC,OAAS,SAASjW,EAAK+D,EAAWkQ,GAC7C,IAAIe,EAAU,GAKd,OAJAjR,EAAYqQ,EAAGrQ,EAAWkQ,GAC1BT,EAAEsB,KAAK9U,GAAK,SAAS1P,EAAO0T,EAAOkS,GAC7BnS,EAAUzT,EAAO0T,EAAOkS,IAAOlB,EAAQ7gB,KAAK7D,MAE3C0kB,GAITxB,EAAE2C,OAAS,SAASnW,EAAK+D,EAAWkQ,GAClC,OAAOT,EAAEwC,OAAOhW,EAAKwT,EAAE1d,OAAOse,EAAGrQ,IAAakQ,IAKhDT,EAAE4C,MAAQ5C,EAAE6C,IAAM,SAASrW,EAAK+D,EAAWkQ,GACzClQ,EAAYqQ,EAAGrQ,EAAWkQ,GAG1B,IAFA,IAAI9S,GAAQ8R,EAAYjT,IAAQwT,EAAErS,KAAKnB,GACnC5M,GAAU+N,GAAQnB,GAAK5M,OAClB4Q,EAAQ,EAAGA,EAAQ5Q,EAAQ4Q,IAAS,CAC3C,IAAIiR,EAAa9T,EAAOA,EAAK6C,GAASA,EACtC,IAAKD,EAAU/D,EAAIiV,GAAaA,EAAYjV,GAAM,OAAO,EAE3D,OAAO,GAKTwT,EAAE8C,KAAO9C,EAAE+C,IAAM,SAASvW,EAAK+D,EAAWkQ,GACxClQ,EAAYqQ,EAAGrQ,EAAWkQ,GAG1B,IAFA,IAAI9S,GAAQ8R,EAAYjT,IAAQwT,EAAErS,KAAKnB,GACnC5M,GAAU+N,GAAQnB,GAAK5M,OAClB4Q,EAAQ,EAAGA,EAAQ5Q,EAAQ4Q,IAAS,CAC3C,IAAIiR,EAAa9T,EAAOA,EAAK6C,GAASA,EACtC,GAAID,EAAU/D,EAAIiV,GAAaA,EAAYjV,GAAM,OAAO,EAE1D,OAAO,GAKTwT,EAAEgD,SAAWhD,EAAEiD,SAAWjD,EAAEkD,QAAU,SAAS1W,EAAKiB,EAAMwR,EAAWkE,GAGnE,OAFK1D,EAAYjT,KAAMA,EAAMwT,EAAEpM,OAAOpH,KACd,iBAAbyS,GAAyBkE,KAAOlE,EAAY,GAChDe,EAAE5U,QAAQoB,EAAKiB,EAAMwR,IAAc,GAI5Ce,EAAEoD,OAAStC,GAAc,SAAStU,EAAKuQ,EAAM6C,GAC3C,IAAIyD,EAAavS,EAOjB,OANIkP,EAAEjI,WAAWgF,GACfjM,EAAOiM,EACEiD,EAAExS,QAAQuP,KACnBsG,EAActG,EAAK9X,MAAM,GAAI,GAC7B8X,EAAOA,EAAKA,EAAKnd,OAAS,IAErBogB,EAAEzV,IAAIiC,GAAK,SAASiU,GACzB,IAAI6C,EAASxS,EACb,IAAKwS,EAAQ,CAIX,GAHID,GAAeA,EAAYzjB,SAC7B6gB,EAAUU,EAAQV,EAAS4C,IAEd,MAAX5C,EAAiB,OACrB6C,EAAS7C,EAAQ1D,GAEnB,OAAiB,MAAVuG,EAAiBA,EAASA,EAAOhZ,MAAMmW,EAASb,SAK3DI,EAAEuD,MAAQ,SAAS/W,EAAKpP,GACtB,OAAO4iB,EAAEzV,IAAIiC,EAAKwT,EAAExiB,SAASJ,KAK/B4iB,EAAEwD,MAAQ,SAAShX,EAAKiX,GACtB,OAAOzD,EAAEwC,OAAOhW,EAAKwT,EAAEa,QAAQ4C,KAKjCzD,EAAE0D,UAAY,SAASlX,EAAKiX,GAC1B,OAAOzD,EAAEoC,KAAK5V,EAAKwT,EAAEa,QAAQ4C,KAI/BzD,EAAEhb,IAAM,SAASwH,EAAKgI,EAAUiM,GAC9B,IACI3jB,EAAO6mB,EADPhhB,GAAU0D,IAAUud,GAAgBvd,IAExC,GAAgB,MAAZmO,GAAuC,iBAAZA,GAAyC,iBAAVhI,EAAI,IAAyB,MAAPA,EAElF,IAAK,IAAI3Q,EAAI,EAAG+D,GADhB4M,EAAMiT,EAAYjT,GAAOA,EAAMwT,EAAEpM,OAAOpH,IACX5M,OAAQ/D,EAAI+D,EAAQ/D,IAElC,OADbiB,EAAQ0P,EAAI3Q,KACSiB,EAAQ6F,IAC3BA,EAAS7F,QAIb0X,EAAWoM,EAAGpM,EAAUiM,GACxBT,EAAEsB,KAAK9U,GAAK,SAAS9N,EAAG8R,EAAOkS,KAC7BiB,EAAWnP,EAAS9V,EAAG8R,EAAOkS,IACfkB,GAAgBD,KAActd,KAAY1D,KAAY0D,OACnE1D,EAASjE,EACTklB,EAAeD,MAIrB,OAAOhhB,GAITqd,EAAExW,IAAM,SAASgD,EAAKgI,EAAUiM,GAC9B,IACI3jB,EAAO6mB,EADPhhB,EAAS0D,IAAUud,EAAevd,IAEtC,GAAgB,MAAZmO,GAAuC,iBAAZA,GAAyC,iBAAVhI,EAAI,IAAyB,MAAPA,EAElF,IAAK,IAAI3Q,EAAI,EAAG+D,GADhB4M,EAAMiT,EAAYjT,GAAOA,EAAMwT,EAAEpM,OAAOpH,IACX5M,OAAQ/D,EAAI+D,EAAQ/D,IAElC,OADbiB,EAAQ0P,EAAI3Q,KACSiB,EAAQ6F,IAC3BA,EAAS7F,QAIb0X,EAAWoM,EAAGpM,EAAUiM,GACxBT,EAAEsB,KAAK9U,GAAK,SAAS9N,EAAG8R,EAAOkS,KAC7BiB,EAAWnP,EAAS9V,EAAG8R,EAAOkS,IACfkB,GAAgBD,IAAatd,KAAY1D,IAAW0D,OACjE1D,EAASjE,EACTklB,EAAeD,MAIrB,OAAOhhB,GAITqd,EAAE6D,QAAU,SAASrX,GACnB,OAAOwT,EAAE8D,OAAOtX,EAAKnG,MAOvB2Z,EAAE8D,OAAS,SAAStX,EAAKlP,EAAG6lB,GAC1B,GAAS,MAAL7lB,GAAa6lB,EAEf,OADK1D,EAAYjT,KAAMA,EAAMwT,EAAEpM,OAAOpH,IAC/BA,EAAIwT,EAAEjU,OAAOS,EAAI5M,OAAS,IAEnC,IAAIkkB,EAASrE,EAAYjT,GAAOwT,EAAE+D,MAAMvX,GAAOwT,EAAEpM,OAAOpH,GACpD5M,EAASyhB,EAAUyC,GACvBxmB,EAAIiC,KAAKyF,IAAIzF,KAAKiK,IAAIlM,EAAGsC,GAAS,GAElC,IADA,IAAIokB,EAAOpkB,EAAS,EACX4Q,EAAQ,EAAGA,EAAQlT,EAAGkT,IAAS,CACtC,IAAIyT,EAAOjE,EAAEjU,OAAOyE,EAAOwT,GACvBE,EAAOJ,EAAOtT,GAClBsT,EAAOtT,GAASsT,EAAOG,GACvBH,EAAOG,GAAQC,EAEjB,OAAOJ,EAAO7e,MAAM,EAAG3H,IAIzB0iB,EAAEmE,OAAS,SAAS3X,EAAKgI,EAAUiM,GACjC,IAAIjQ,EAAQ,EAEZ,OADAgE,EAAWoM,EAAGpM,EAAUiM,GACjBT,EAAEuD,MAAMvD,EAAEzV,IAAIiC,GAAK,SAAS1P,EAAOM,EAAKslB,GAC7C,MAAO,CACL5lB,MAAOA,EACP0T,MAAOA,IACP4T,SAAU5P,EAAS1X,EAAOM,EAAKslB,OAEhC7U,MAAK,SAASjD,EAAMyZ,GACrB,IAAIjkB,EAAIwK,EAAKwZ,SACT/jB,EAAIgkB,EAAMD,SACd,GAAIhkB,IAAMC,EAAG,CACX,GAAID,EAAIC,QAAW,IAAND,EAAc,OAAO,EAClC,GAAIA,EAAIC,QAAW,IAANA,EAAc,OAAQ,EAErC,OAAOuK,EAAK4F,MAAQ6T,EAAM7T,SACxB,UAIN,IAAI8T,EAAQ,SAASC,EAAUC,GAC7B,OAAO,SAAShY,EAAKgI,EAAUiM,GAC7B,IAAI9d,EAAS6hB,EAAY,CAAC,GAAI,IAAM,GAMpC,OALAhQ,EAAWoM,EAAGpM,EAAUiM,GACxBT,EAAEsB,KAAK9U,GAAK,SAAS1P,EAAO0T,GAC1B,IAAIpT,EAAMoX,EAAS1X,EAAO0T,EAAOhE,GACjC+X,EAAS5hB,EAAQ7F,EAAOM,MAEnBuF,IAMXqd,EAAEyE,QAAUH,GAAM,SAAS3hB,EAAQ7F,EAAOM,GACpC4Q,EAAIrL,EAAQvF,GAAMuF,EAAOvF,GAAKuD,KAAK7D,GAAa6F,EAAOvF,GAAO,CAACN,MAKrEkjB,EAAE0E,QAAUJ,GAAM,SAAS3hB,EAAQ7F,EAAOM,GACxCuF,EAAOvF,GAAON,KAMhBkjB,EAAE2E,QAAUL,GAAM,SAAS3hB,EAAQ7F,EAAOM,GACpC4Q,EAAIrL,EAAQvF,GAAMuF,EAAOvF,KAAauF,EAAOvF,GAAO,KAG1D,IAAIwnB,EAAc,mEAElB5E,EAAEzU,QAAU,SAASiB,GACnB,OAAKA,EACDwT,EAAExS,QAAQhB,GAAavH,EAAMjJ,KAAKwQ,GAClCwT,EAAE6E,SAASrY,GAENA,EAAIoS,MAAMgG,GAEfnF,EAAYjT,GAAawT,EAAEzV,IAAIiC,EAAKwT,EAAE3C,UACnC2C,EAAEpM,OAAOpH,GAPC,IAWnBwT,EAAEtP,KAAO,SAASlE,GAChB,OAAW,MAAPA,EAAoB,EACjBiT,EAAYjT,GAAOA,EAAI5M,OAASogB,EAAErS,KAAKnB,GAAK5M,QAKrDogB,EAAEwE,UAAYF,GAAM,SAAS3hB,EAAQ7F,EAAOgoB,GAC1CniB,EAAOmiB,EAAO,EAAI,GAAGnkB,KAAK7D,MACzB,GAQHkjB,EAAE+E,MAAQ/E,EAAEgF,KAAOhF,EAAEiF,KAAO,SAAS3U,EAAOhT,EAAG6lB,GAC7C,OAAa,MAAT7S,GAAiBA,EAAM1Q,OAAS,EAAe,MAALtC,OAAY,EAAS,GAC1D,MAALA,GAAa6lB,EAAc7S,EAAM,GAC9B0P,EAAE8B,QAAQxR,EAAOA,EAAM1Q,OAAStC,IAMzC0iB,EAAE8B,QAAU,SAASxR,EAAOhT,EAAG6lB,GAC7B,OAAOle,EAAMjJ,KAAKsU,EAAO,EAAG/Q,KAAKyF,IAAI,EAAGsL,EAAM1Q,QAAe,MAALtC,GAAa6lB,EAAQ,EAAI7lB,MAKnF0iB,EAAEgE,KAAO,SAAS1T,EAAOhT,EAAG6lB,GAC1B,OAAa,MAAT7S,GAAiBA,EAAM1Q,OAAS,EAAe,MAALtC,OAAY,EAAS,GAC1D,MAALA,GAAa6lB,EAAc7S,EAAMA,EAAM1Q,OAAS,GAC7CogB,EAAEgB,KAAK1Q,EAAO/Q,KAAKyF,IAAI,EAAGsL,EAAM1Q,OAAStC,KAMlD0iB,EAAEgB,KAAOhB,EAAEkF,KAAOlF,EAAEmF,KAAO,SAAS7U,EAAOhT,EAAG6lB,GAC5C,OAAOle,EAAMjJ,KAAKsU,EAAY,MAALhT,GAAa6lB,EAAQ,EAAI7lB,IAIpD0iB,EAAEoF,QAAU,SAAS9U,GACnB,OAAO0P,EAAEwC,OAAOlS,EAAO+U,UAIzB,IAAIC,EAAU,SAASrL,EAAOsL,EAASre,EAAQiT,GAG7C,IADA,IAAIqL,GADJrL,EAASA,GAAU,IACFva,OACR/D,EAAI,EAAG+D,EAASyhB,EAAUpH,GAAQpe,EAAI+D,EAAQ/D,IAAK,CAC1D,IAAIiB,EAAQmd,EAAMpe,GAClB,GAAI4jB,EAAY3iB,KAAWkjB,EAAExS,QAAQ1Q,IAAUkjB,EAAE5L,YAAYtX,IAE3D,GAAIyoB,EAEF,IADA,IAAIhkB,EAAI,EAAGkkB,EAAM3oB,EAAM8C,OAChB2B,EAAIkkB,GAAKtL,EAAOqL,KAAS1oB,EAAMyE,UAEtC+jB,EAAQxoB,EAAOyoB,EAASre,EAAQiT,GAChCqL,EAAMrL,EAAOva,YAELsH,IACViT,EAAOqL,KAAS1oB,GAGpB,OAAOqd,GAIT6F,EAAEsF,QAAU,SAAShV,EAAOiV,GAC1B,OAAOD,EAAQhV,EAAOiV,GAAS,IAIjCvF,EAAE0F,QAAU5E,GAAc,SAASxQ,EAAOqV,GACxC,OAAO3F,EAAEjf,WAAWuP,EAAOqV,MAS7B3F,EAAE4F,KAAO5F,EAAE6F,OAAS,SAASvV,EAAOwV,EAAUtR,EAAUiM,GACjDT,EAAE+F,UAAUD,KACfrF,EAAUjM,EACVA,EAAWsR,EACXA,GAAW,GAEG,MAAZtR,IAAkBA,EAAWoM,EAAGpM,EAAUiM,IAG9C,IAFA,IAAI9d,EAAS,GACTuK,EAAO,GACFrR,EAAI,EAAG+D,EAASyhB,EAAU/Q,GAAQzU,EAAI+D,EAAQ/D,IAAK,CAC1D,IAAIiB,EAAQwT,EAAMzU,GACd8nB,EAAWnP,EAAWA,EAAS1X,EAAOjB,EAAGyU,GAASxT,EAClDgpB,IAAatR,GACV3Y,GAAKqR,IAASyW,GAAUhhB,EAAOhC,KAAK7D,GACzCoQ,EAAOyW,GACEnP,EACJwL,EAAEgD,SAAS9V,EAAMyW,KACpBzW,EAAKvM,KAAKgjB,GACVhhB,EAAOhC,KAAK7D,IAEJkjB,EAAEgD,SAASrgB,EAAQ7F,IAC7B6F,EAAOhC,KAAK7D,GAGhB,OAAO6F,GAKTqd,EAAEgG,MAAQlF,GAAc,SAASmF,GAC/B,OAAOjG,EAAE4F,KAAKN,EAAQW,GAAQ,GAAM,OAKtCjG,EAAEkG,aAAe,SAAS5V,GAGxB,IAFA,IAAI3N,EAAS,GACTwjB,EAAa3M,UAAU5Z,OAClB/D,EAAI,EAAG+D,EAASyhB,EAAU/Q,GAAQzU,EAAI+D,EAAQ/D,IAAK,CAC1D,IAAI4R,EAAO6C,EAAMzU,GACjB,IAAImkB,EAAEgD,SAASrgB,EAAQ8K,GAAvB,CACA,IAAIlM,EACJ,IAAKA,EAAI,EAAGA,EAAI4kB,GACTnG,EAAEgD,SAASxJ,UAAUjY,GAAIkM,GADJlM,KAGxBA,IAAM4kB,GAAYxjB,EAAOhC,KAAK8M,IAEpC,OAAO9K,GAKTqd,EAAEjf,WAAa+f,GAAc,SAASxQ,EAAO0Q,GAE3C,OADAA,EAAOsE,EAAQtE,GAAM,GAAM,GACpBhB,EAAEwC,OAAOlS,GAAO,SAASxT,GAC9B,OAAQkjB,EAAEgD,SAAShC,EAAMlkB,SAM7BkjB,EAAEoG,MAAQ,SAAS9V,GAIjB,IAHA,IAAI1Q,EAAS0Q,GAAS0P,EAAEhb,IAAIsL,EAAO+Q,GAAWzhB,QAAU,EACpD+C,EAAS3C,MAAMJ,GAEV4Q,EAAQ,EAAGA,EAAQ5Q,EAAQ4Q,IAClC7N,EAAO6N,GAASwP,EAAEuD,MAAMjT,EAAOE,GAEjC,OAAO7N,GAKTqd,EAAEqG,IAAMvF,EAAcd,EAAEoG,OAKxBpG,EAAEziB,OAAS,SAASmlB,EAAM9O,GAExB,IADA,IAAIjR,EAAS,GACJ9G,EAAI,EAAG+D,EAASyhB,EAAUqB,GAAO7mB,EAAI+D,EAAQ/D,IAChD+X,EACFjR,EAAO+f,EAAK7mB,IAAM+X,EAAO/X,GAEzB8G,EAAO+f,EAAK7mB,GAAG,IAAM6mB,EAAK7mB,GAAG,GAGjC,OAAO8G,GAIT,IAAI2jB,EAA6B,SAAS3E,GACxC,OAAO,SAASrR,EAAOC,EAAWkQ,GAChClQ,EAAYqQ,EAAGrQ,EAAWkQ,GAG1B,IAFA,IAAI7gB,EAASyhB,EAAU/Q,GACnBE,EAAQmR,EAAM,EAAI,EAAI/hB,EAAS,EAC5B4Q,GAAS,GAAKA,EAAQ5Q,EAAQ4Q,GAASmR,EAC5C,GAAIpR,EAAUD,EAAME,GAAQA,EAAOF,GAAQ,OAAOE,EAEpD,OAAQ,IAKZwP,EAAEsC,UAAYgE,EAA2B,GACzCtG,EAAEuG,cAAgBD,GAA4B,GAI9CtG,EAAEwG,YAAc,SAASlW,EAAO9D,EAAKgI,EAAUiM,GAI7C,IAFA,IAAI3jB,GADJ0X,EAAWoM,EAAGpM,EAAUiM,EAAS,IACZjU,GACjBR,EAAM,EAAGya,EAAOpF,EAAU/Q,GACvBtE,EAAMya,GAAM,CACjB,IAAIC,EAAMnnB,KAAKC,OAAOwM,EAAMya,GAAQ,GAChCjS,EAASlE,EAAMoW,IAAQ5pB,EAAOkP,EAAM0a,EAAM,EAAQD,EAAOC,EAE/D,OAAO1a,GAIT,IAAI2a,EAAoB,SAAShF,EAAKiF,EAAeJ,GACnD,OAAO,SAASlW,EAAO7C,EAAM+X,GAC3B,IAAI3pB,EAAI,EAAG+D,EAASyhB,EAAU/Q,GAC9B,GAAkB,iBAAPkV,EACL7D,EAAM,EACR9lB,EAAI2pB,GAAO,EAAIA,EAAMjmB,KAAKyF,IAAIwgB,EAAM5lB,EAAQ/D,GAE5C+D,EAAS4lB,GAAO,EAAIjmB,KAAKiK,IAAIgc,EAAM,EAAG5lB,GAAU4lB,EAAM5lB,EAAS,OAE5D,GAAI4mB,GAAehB,GAAO5lB,EAE/B,OAAO0Q,EADPkV,EAAMgB,EAAYlW,EAAO7C,MACHA,EAAO+X,GAAO,EAEtC,GAAI/X,GAASA,EAEX,OADA+X,EAAMoB,EAAc3hB,EAAMjJ,KAAKsU,EAAOzU,EAAG+D,GAASogB,EAAE6G,SACtC,EAAIrB,EAAM3pB,GAAK,EAE/B,IAAK2pB,EAAM7D,EAAM,EAAI9lB,EAAI+D,EAAS,EAAG4lB,GAAO,GAAKA,EAAM5lB,EAAQ4lB,GAAO7D,EACpE,GAAIrR,EAAMkV,KAAS/X,EAAM,OAAO+X,EAElC,OAAQ,IAQZxF,EAAE5U,QAAUub,EAAkB,EAAG3G,EAAEsC,UAAWtC,EAAEwG,aAChDxG,EAAE8G,YAAcH,GAAmB,EAAG3G,EAAEuG,eAKxCvG,EAAE/T,MAAQ,SAAS/B,EAAO6c,EAAMC,GAClB,MAARD,IACFA,EAAO7c,GAAS,EAChBA,EAAQ,GAEL8c,IACHA,EAAOD,EAAO7c,GAAS,EAAI,GAM7B,IAHA,IAAItK,EAASL,KAAKyF,IAAIzF,KAAKW,MAAM6mB,EAAO7c,GAAS8c,GAAO,GACpD/a,EAAQjM,MAAMJ,GAET4lB,EAAM,EAAGA,EAAM5lB,EAAQ4lB,IAAOtb,GAAS8c,EAC9C/a,EAAMuZ,GAAOtb,EAGf,OAAO+B,GAKT+T,EAAEiH,MAAQ,SAAS3W,EAAO4W,GACxB,GAAa,MAATA,GAAiBA,EAAQ,EAAG,MAAO,GAGvC,IAFA,IAAIvkB,EAAS,GACT9G,EAAI,EAAG+D,EAAS0Q,EAAM1Q,OACnB/D,EAAI+D,GACT+C,EAAOhC,KAAKsE,EAAMjJ,KAAKsU,EAAOzU,EAAGA,GAAKqrB,IAExC,OAAOvkB,GAQT,IAAIwkB,EAAe,SAASC,EAAYC,EAAW5G,EAAS6G,EAAgB1H,GAC1E,KAAM0H,aAA0BD,GAAY,OAAOD,EAAW9c,MAAMmW,EAASb,GAC7E,IAAIxd,EAAO6e,EAAWmG,EAAW3pB,WAC7BkF,EAASykB,EAAW9c,MAAMlI,EAAMwd,GACpC,OAAII,EAAEnI,SAASlV,GAAgBA,EACxBP,GAMT4d,EAAE3iB,KAAOyjB,GAAc,SAAShQ,EAAM2P,EAASb,GAC7C,IAAKI,EAAEjI,WAAWjH,GAAO,MAAM,IAAIpD,UAAU,qCAC7C,IAAI6Z,EAAQzG,GAAc,SAAS0G,GACjC,OAAOL,EAAarW,EAAMyW,EAAO9G,EAASvhB,KAAM0gB,EAAKle,OAAO8lB,OAE9D,OAAOD,KAOTvH,EAAEyH,QAAU3G,GAAc,SAAShQ,EAAM4W,GACvC,IAAIC,EAAc3H,EAAEyH,QAAQE,YACxBJ,EAAQ,WAGV,IAFA,IAAInN,EAAW,EAAGxa,EAAS8nB,EAAU9nB,OACjCggB,EAAO5f,MAAMJ,GACR/D,EAAI,EAAGA,EAAI+D,EAAQ/D,IAC1B+jB,EAAK/jB,GAAK6rB,EAAU7rB,KAAO8rB,EAAcnO,UAAUY,KAAcsN,EAAU7rB,GAE7E,KAAOue,EAAWZ,UAAU5Z,QAAQggB,EAAKjf,KAAK6Y,UAAUY,MACxD,OAAO+M,EAAarW,EAAMyW,EAAOroB,KAAMA,KAAM0gB,IAE/C,OAAO2H,KAGTvH,EAAEyH,QAAQE,YAAc3H,EAKxBA,EAAE4H,QAAU9G,GAAc,SAAStU,EAAKmB,GAEtC,IAAI6C,GADJ7C,EAAO2X,EAAQ3X,GAAM,GAAO,IACX/N,OACjB,GAAI4Q,EAAQ,EAAG,MAAM,IAAInO,MAAM,yCAC/B,KAAOmO,KAAS,CACd,IAAIpT,EAAMuQ,EAAK6C,GACfhE,EAAIpP,GAAO4iB,EAAE3iB,KAAKmP,EAAIpP,GAAMoP,OAKhCwT,EAAEvB,QAAU,SAAS3N,EAAM+W,GACzB,IAAIpJ,EAAU,SAASrhB,GACrB,IAAImhB,EAAQE,EAAQF,MAChBuJ,EAAU,IAAMD,EAASA,EAAOvd,MAAMpL,KAAMsa,WAAapc,GAE7D,OADK4Q,EAAIuQ,EAAOuJ,KAAUvJ,EAAMuJ,GAAWhX,EAAKxG,MAAMpL,KAAMsa,YACrD+E,EAAMuJ,IAGf,OADArJ,EAAQF,MAAQ,GACTE,GAKTuB,EAAE+H,MAAQjH,GAAc,SAAShQ,EAAMkX,EAAMpI,GAC3C,OAAOqI,YAAW,WAChB,OAAOnX,EAAKxG,MAAM,KAAMsV,KACvBoI,MAKLhI,EAAEkI,MAAQlI,EAAEyH,QAAQzH,EAAE+H,MAAO/H,EAAG,GAOhCA,EAAEmI,SAAW,SAASrX,EAAMkX,EAAMtZ,GAChC,IAAI0Z,EAAS3H,EAASb,EAAMjd,EACxB0lB,EAAW,EACV3Z,IAASA,EAAU,IAExB,IAAI4Z,EAAQ,WACVD,GAA+B,IAApB3Z,EAAQ6Z,QAAoB,EAAIvI,EAAEwI,MAC7CJ,EAAU,KACVzlB,EAASmO,EAAKxG,MAAMmW,EAASb,GACxBwI,IAAS3H,EAAUb,EAAO,OAG7B6I,EAAY,WACd,IAAID,EAAMxI,EAAEwI,MACPH,IAAgC,IAApB3Z,EAAQ6Z,UAAmBF,EAAWG,GACvD,IAAIE,EAAYV,GAAQQ,EAAMH,GAc9B,OAbA5H,EAAUvhB,KACV0gB,EAAOpG,UACHkP,GAAa,GAAKA,EAAYV,GAC5BI,IACFO,aAAaP,GACbA,EAAU,MAEZC,EAAWG,EACX7lB,EAASmO,EAAKxG,MAAMmW,EAASb,GACxBwI,IAAS3H,EAAUb,EAAO,OACrBwI,IAAgC,IAArB1Z,EAAQka,WAC7BR,EAAUH,WAAWK,EAAOI,IAEvB/lB,GAST,OANA8lB,EAAUI,OAAS,WACjBF,aAAaP,GACbC,EAAW,EACXD,EAAU3H,EAAUb,EAAO,MAGtB6I,GAOTzI,EAAE8I,SAAW,SAAShY,EAAMkX,EAAMe,GAChC,IAAIX,EAASzlB,EAET2lB,EAAQ,SAAS7H,EAASb,GAC5BwI,EAAU,KACNxI,IAAMjd,EAASmO,EAAKxG,MAAMmW,EAASb,KAGrCoJ,EAAYlI,GAAc,SAASlB,GAErC,GADIwI,GAASO,aAAaP,GACtBW,EAAW,CACb,IAAIE,GAAWb,EACfA,EAAUH,WAAWK,EAAON,GACxBiB,IAAStmB,EAASmO,EAAKxG,MAAMpL,KAAM0gB,SAEvCwI,EAAUpI,EAAE+H,MAAMO,EAAON,EAAM9oB,KAAM0gB,GAGvC,OAAOjd,KAQT,OALAqmB,EAAUH,OAAS,WACjBF,aAAaP,GACbA,EAAU,MAGLY,GAMThJ,EAAEkJ,KAAO,SAASpY,EAAMqY,GACtB,OAAOnJ,EAAEyH,QAAQ0B,EAASrY,IAI5BkP,EAAE1d,OAAS,SAASiO,GAClB,OAAO,WACL,OAAQA,EAAUjG,MAAMpL,KAAMsa,aAMlCwG,EAAEoJ,QAAU,WACV,IAAIxJ,EAAOpG,UACPtP,EAAQ0V,EAAKhgB,OAAS,EAC1B,OAAO,WAGL,IAFA,IAAI/D,EAAIqO,EACJvH,EAASid,EAAK1V,GAAOI,MAAMpL,KAAMsa,WAC9B3d,KAAK8G,EAASid,EAAK/jB,GAAGG,KAAKkD,KAAMyD,GACxC,OAAOA,IAKXqd,EAAEqJ,MAAQ,SAAShkB,EAAOyL,GACxB,OAAO,WACL,KAAMzL,EAAQ,EACZ,OAAOyL,EAAKxG,MAAMpL,KAAMsa,aAM9BwG,EAAEsJ,OAAS,SAASjkB,EAAOyL,GACzB,IAAI+Q,EACJ,OAAO,WAKL,QAJMxc,EAAQ,IACZwc,EAAO/Q,EAAKxG,MAAMpL,KAAMsa,YAEtBnU,GAAS,IAAGyL,EAAO,MAChB+Q,IAMX7B,EAAEuJ,KAAOvJ,EAAEyH,QAAQzH,EAAEsJ,OAAQ,GAE7BtJ,EAAEc,cAAgBA,EAMlB,IAAI0I,GAAc,CAAC9jB,SAAU,MAAMoM,qBAAqB,YACpD2X,EAAqB,CAAC,UAAW,gBAAiB,WACpD,uBAAwB,iBAAkB,kBAExCC,EAAsB,SAASld,EAAKmB,GACtC,IAAIgc,EAAaF,EAAmB7pB,OAChC4X,EAAchL,EAAIgL,YAClBU,EAAQ8H,EAAEjI,WAAWP,IAAgBA,EAAY/Z,WAAayiB,EAG9DjiB,EAAO,cAGX,IAFI+P,EAAIxB,EAAKvO,KAAU+hB,EAAEgD,SAASrV,EAAM1P,IAAO0P,EAAKhN,KAAK1C,GAElD0rB,MACL1rB,EAAOwrB,EAAmBE,MACdnd,GAAOA,EAAIvO,KAAUia,EAAMja,KAAU+hB,EAAEgD,SAASrV,EAAM1P,IAChE0P,EAAKhN,KAAK1C,IAOhB+hB,EAAErS,KAAO,SAASnB,GAChB,IAAKwT,EAAEnI,SAASrL,GAAM,MAAO,GAC7B,GAAI4F,EAAY,OAAOA,EAAW5F,GAClC,IAAImB,EAAO,GACX,IAAK,IAAIvQ,KAAOoP,EAASwB,EAAIxB,EAAKpP,IAAMuQ,EAAKhN,KAAKvD,GAGlD,OADIosB,GAAYE,EAAoBld,EAAKmB,GAClCA,GAITqS,EAAE4J,QAAU,SAASpd,GACnB,IAAKwT,EAAEnI,SAASrL,GAAM,MAAO,GAC7B,IAAImB,EAAO,GACX,IAAK,IAAIvQ,KAAOoP,EAAKmB,EAAKhN,KAAKvD,GAG/B,OADIosB,GAAYE,EAAoBld,EAAKmB,GAClCA,GAITqS,EAAEpM,OAAS,SAASpH,GAIlB,IAHA,IAAImB,EAAOqS,EAAErS,KAAKnB,GACd5M,EAAS+N,EAAK/N,OACdgU,EAAS5T,MAAMJ,GACV/D,EAAI,EAAGA,EAAI+D,EAAQ/D,IAC1B+X,EAAO/X,GAAK2Q,EAAImB,EAAK9R,IAEvB,OAAO+X,GAKToM,EAAE6J,UAAY,SAASrd,EAAKgI,EAAUiM,GACpCjM,EAAWoM,EAAGpM,EAAUiM,GAIxB,IAHA,IAAI9S,EAAOqS,EAAErS,KAAKnB,GACd5M,EAAS+N,EAAK/N,OACd4hB,EAAU,GACLhR,EAAQ,EAAGA,EAAQ5Q,EAAQ4Q,IAAS,CAC3C,IAAIiR,EAAa9T,EAAK6C,GACtBgR,EAAQC,GAAcjN,EAAShI,EAAIiV,GAAaA,EAAYjV,GAE9D,OAAOgV,GAKTxB,EAAEhH,MAAQ,SAASxM,GAIjB,IAHA,IAAImB,EAAOqS,EAAErS,KAAKnB,GACd5M,EAAS+N,EAAK/N,OACdoZ,EAAQhZ,MAAMJ,GACT/D,EAAI,EAAGA,EAAI+D,EAAQ/D,IAC1Bmd,EAAMnd,GAAK,CAAC8R,EAAK9R,GAAI2Q,EAAImB,EAAK9R,KAEhC,OAAOmd,GAITgH,EAAE8J,OAAS,SAAStd,GAGlB,IAFA,IAAI7J,EAAS,GACTgL,EAAOqS,EAAErS,KAAKnB,GACT3Q,EAAI,EAAG+D,EAAS+N,EAAK/N,OAAQ/D,EAAI+D,EAAQ/D,IAChD8G,EAAO6J,EAAImB,EAAK9R,KAAO8R,EAAK9R,GAE9B,OAAO8G,GAKTqd,EAAE+J,UAAY/J,EAAEgK,QAAU,SAASxd,GACjC,IAAIyd,EAAQ,GACZ,IAAK,IAAI7sB,KAAOoP,EACVwT,EAAEjI,WAAWvL,EAAIpP,KAAO6sB,EAAMtpB,KAAKvD,GAEzC,OAAO6sB,EAAMpc,QAIf,IAAIqc,EAAiB,SAAS5R,EAAU6R,GACtC,OAAO,SAAS3d,GACd,IAAI5M,EAAS4Z,UAAU5Z,OAEvB,GADIuqB,IAAU3d,EAAMjQ,OAAOiQ,IACvB5M,EAAS,GAAY,MAAP4M,EAAa,OAAOA,EACtC,IAAK,IAAIgE,EAAQ,EAAGA,EAAQ5Q,EAAQ4Q,IAIlC,IAHA,IAAIuN,EAASvE,UAAUhJ,GACnB7C,EAAO2K,EAASyF,GAChBjiB,EAAI6R,EAAK/N,OACJ/D,EAAI,EAAGA,EAAIC,EAAGD,IAAK,CAC1B,IAAIuB,EAAMuQ,EAAK9R,GACVsuB,QAAyB,IAAb3d,EAAIpP,KAAiBoP,EAAIpP,GAAO2gB,EAAO3gB,IAG5D,OAAOoP,IAKXwT,EAAEoK,OAASF,EAAelK,EAAE4J,SAI5B5J,EAAEqK,UAAYrK,EAAEsK,OAASJ,EAAelK,EAAErS,MAG1CqS,EAAEuC,QAAU,SAAS/V,EAAK+D,EAAWkQ,GACnClQ,EAAYqQ,EAAGrQ,EAAWkQ,GAE1B,IADA,IAAwBrjB,EAApBuQ,EAAOqS,EAAErS,KAAKnB,GACT3Q,EAAI,EAAG+D,EAAS+N,EAAK/N,OAAQ/D,EAAI+D,EAAQ/D,IAEhD,GAAI0U,EAAU/D,EADdpP,EAAMuQ,EAAK9R,IACauB,EAAKoP,GAAM,OAAOpP,GAK9C,IA+EImJ,EAAIgkB,EA/EJC,EAAW,SAAS1tB,EAAOM,EAAKoP,GAClC,OAAOpP,KAAOoP,GAIhBwT,EAAEyK,KAAO3J,GAAc,SAAStU,EAAKmB,GACnC,IAAIhL,EAAS,GAAI6R,EAAW7G,EAAK,GACjC,GAAW,MAAPnB,EAAa,OAAO7J,EACpBqd,EAAEjI,WAAWvD,IACX7G,EAAK/N,OAAS,IAAG4U,EAAWgM,EAAWhM,EAAU7G,EAAK,KAC1DA,EAAOqS,EAAE4J,QAAQpd,KAEjBgI,EAAWgW,EACX7c,EAAO2X,EAAQ3X,GAAM,GAAO,GAC5BnB,EAAMjQ,OAAOiQ,IAEf,IAAK,IAAI3Q,EAAI,EAAG+D,EAAS+N,EAAK/N,OAAQ/D,EAAI+D,EAAQ/D,IAAK,CACrD,IAAIuB,EAAMuQ,EAAK9R,GACXiB,EAAQ0P,EAAIpP,GACZoX,EAAS1X,EAAOM,EAAKoP,KAAM7J,EAAOvF,GAAON,GAE/C,OAAO6F,KAITqd,EAAE0K,KAAO5J,GAAc,SAAStU,EAAKmB,GACnC,IAAwB8S,EAApBjM,EAAW7G,EAAK,GAUpB,OATIqS,EAAEjI,WAAWvD,IACfA,EAAWwL,EAAE1d,OAAOkS,GAChB7G,EAAK/N,OAAS,IAAG6gB,EAAU9S,EAAK,MAEpCA,EAAOqS,EAAEzV,IAAI+a,EAAQ3X,GAAM,GAAO,GAAQ1E,QAC1CuL,EAAW,SAAS1X,EAAOM,GACzB,OAAQ4iB,EAAEgD,SAASrV,EAAMvQ,KAGtB4iB,EAAEyK,KAAKje,EAAKgI,EAAUiM,MAI/BT,EAAEmK,SAAWD,EAAelK,EAAE4J,SAAS,GAKvC5J,EAAE7iB,OAAS,SAASM,EAAWktB,GAC7B,IAAIhoB,EAASse,EAAWxjB,GAExB,OADIktB,GAAO3K,EAAEqK,UAAU1nB,EAAQgoB,GACxBhoB,GAITqd,EAAE+D,MAAQ,SAASvX,GACjB,OAAKwT,EAAEnI,SAASrL,GACTwT,EAAExS,QAAQhB,GAAOA,EAAIvH,QAAU+a,EAAEoK,OAAO,GAAI5d,GADtBA,GAO/BwT,EAAE4K,IAAM,SAASpe,EAAKqe,GAEpB,OADAA,EAAYre,GACLA,GAITwT,EAAE8K,QAAU,SAASvtB,EAAQkmB,GAC3B,IAAI9V,EAAOqS,EAAErS,KAAK8V,GAAQ7jB,EAAS+N,EAAK/N,OACxC,GAAc,MAAVrC,EAAgB,OAAQqC,EAE5B,IADA,IAAI4M,EAAMjQ,OAAOgB,GACR1B,EAAI,EAAGA,EAAI+D,EAAQ/D,IAAK,CAC/B,IAAIuB,EAAMuQ,EAAK9R,GACf,GAAI4nB,EAAMrmB,KAASoP,EAAIpP,MAAUA,KAAOoP,GAAM,OAAO,EAEvD,OAAO,GAMTjG,EAAK,SAASnG,EAAGC,EAAG0qB,EAAQC,GAG1B,GAAI5qB,IAAMC,EAAG,OAAa,IAAND,GAAW,EAAIA,GAAM,EAAIC,EAE7C,GAAS,MAALD,GAAkB,MAALC,EAAW,OAAO,EAEnC,GAAID,GAAMA,EAAG,OAAOC,GAAMA,EAE1B,IAAIwY,SAAczY,EAClB,OAAa,aAATyY,GAAgC,WAATA,GAAiC,iBAALxY,IAChDkqB,EAAOnqB,EAAGC,EAAG0qB,EAAQC,IAI9BT,EAAS,SAASnqB,EAAGC,EAAG0qB,EAAQC,GAE1B5qB,aAAa4f,IAAG5f,EAAIA,EAAEigB,UACtBhgB,aAAa2f,IAAG3f,EAAIA,EAAEggB,UAE1B,IAAI4K,EAAYvlB,EAAS1J,KAAKoE,GAC9B,GAAI6qB,IAAcvlB,EAAS1J,KAAKqE,GAAI,OAAO,EAC3C,OAAQ4qB,GAEN,IAAK,kBAEL,IAAK,kBAGH,MAAO,GAAK7qB,GAAM,GAAKC,EACzB,IAAK,kBAGH,OAAKD,IAAOA,GAAWC,IAAOA,EAEhB,IAAND,EAAU,GAAKA,GAAM,EAAIC,GAAKD,IAAOC,EAC/C,IAAK,gBACL,IAAK,mBAIH,OAAQD,IAAOC,EACjB,IAAK,kBACH,OAAO8f,EAAY3V,QAAQxO,KAAKoE,KAAO+f,EAAY3V,QAAQxO,KAAKqE,GAGpE,IAAI6qB,EAA0B,mBAAdD,EAChB,IAAKC,EAAW,CACd,GAAgB,iBAAL9qB,GAA6B,iBAALC,EAAe,OAAO,EAIzD,IAAI8qB,EAAQ/qB,EAAEoX,YAAa4T,EAAQ/qB,EAAEmX,YACrC,GAAI2T,IAAUC,KAAWpL,EAAEjI,WAAWoT,IAAUA,aAAiBA,GACxCnL,EAAEjI,WAAWqT,IAAUA,aAAiBA,IACzC,gBAAiBhrB,GAAK,gBAAiBC,EAC7D,OAAO,EASX2qB,EAASA,GAAU,GAEnB,IADA,IAAIprB,GAFJmrB,EAASA,GAAU,IAECnrB,OACbA,KAGL,GAAImrB,EAAOnrB,KAAYQ,EAAG,OAAO4qB,EAAOprB,KAAYS,EAQtD,GAJA0qB,EAAOpqB,KAAKP,GACZ4qB,EAAOrqB,KAAKN,GAGR6qB,EAAW,CAGb,IADAtrB,EAASQ,EAAER,UACIS,EAAET,OAAQ,OAAO,EAEhC,KAAOA,KACL,IAAK2G,EAAGnG,EAAER,GAASS,EAAET,GAASmrB,EAAQC,GAAS,OAAO,MAEnD,CAEL,IAAsB5tB,EAAlBuQ,EAAOqS,EAAErS,KAAKvN,GAGlB,GAFAR,EAAS+N,EAAK/N,OAEVogB,EAAErS,KAAKtN,GAAGT,SAAWA,EAAQ,OAAO,EACxC,KAAOA,KAGL,GADAxC,EAAMuQ,EAAK/N,IACLoO,EAAI3N,EAAGjD,KAAQmJ,EAAGnG,EAAEhD,GAAMiD,EAAEjD,GAAM2tB,EAAQC,GAAU,OAAO,EAMrE,OAFAD,EAAOhS,MACPiS,EAAOjS,OACA,GAITiH,EAAEqL,QAAU,SAASjrB,EAAGC,GACtB,OAAOkG,EAAGnG,EAAGC,IAKf2f,EAAEsL,QAAU,SAAS9e,GACnB,OAAW,MAAPA,IACAiT,EAAYjT,KAASwT,EAAExS,QAAQhB,IAAQwT,EAAE6E,SAASrY,IAAQwT,EAAE5L,YAAY5H,IAA6B,IAAfA,EAAI5M,OAChE,IAAvBogB,EAAErS,KAAKnB,GAAK5M,SAIrBogB,EAAEuL,UAAY,SAAS/e,GACrB,SAAUA,GAAwB,IAAjBA,EAAIoD,WAKvBoQ,EAAExS,QAAU4S,GAAiB,SAAS5T,GACpC,MAA8B,mBAAvB9G,EAAS1J,KAAKwQ,IAIvBwT,EAAEnI,SAAW,SAASrL,GACpB,IAAIqM,SAAcrM,EAClB,MAAgB,aAATqM,GAAgC,WAATA,KAAuBrM,GAIvDwT,EAAEsB,KAAK,CAAC,YAAa,WAAY,SAAU,SAAU,OAAQ,SAAU,QAAS,SAAU,MAAO,UAAW,MAAO,YAAY,SAASllB,GACtI4jB,EAAE,KAAO5jB,GAAQ,SAASoQ,GACxB,OAAO9G,EAAS1J,KAAKwQ,KAAS,WAAapQ,EAAO,QAMjD4jB,EAAE5L,YAAYoF,aACjBwG,EAAE5L,YAAc,SAAS5H,GACvB,OAAOwB,EAAIxB,EAAK,YAMpB,IAAIgf,EAAW/b,EAAKgc,UAAYhc,EAAKgc,SAASC,WACM,iBAAbC,WAA4C,mBAAZH,IACrExL,EAAEjI,WAAa,SAASvL,GACtB,MAAqB,mBAAPA,IAAqB,IAKvCwT,EAAE4L,SAAW,SAASpf,GACpB,OAAQwT,EAAExB,SAAShS,IAAQof,SAASpf,KAASqa,MAAMgF,WAAWrf,KAIhEwT,EAAE6G,MAAQ,SAASra,GACjB,OAAOwT,EAAE8L,SAAStf,IAAQqa,MAAMra,IAIlCwT,EAAE+F,UAAY,SAASvZ,GACrB,OAAe,IAARA,IAAwB,IAARA,GAAwC,qBAAvB9G,EAAS1J,KAAKwQ,IAIxDwT,EAAE+L,OAAS,SAASvf,GAClB,OAAe,OAARA,GAITwT,EAAEgM,YAAc,SAASxf,GACvB,YAAe,IAARA,GAKTwT,EAAEhS,IAAM,SAASxB,EAAKuQ,GACpB,IAAKiD,EAAExS,QAAQuP,GACb,OAAO/O,EAAIxB,EAAKuQ,GAGlB,IADA,IAAInd,EAASmd,EAAKnd,OACT/D,EAAI,EAAGA,EAAI+D,EAAQ/D,IAAK,CAC/B,IAAIuB,EAAM2f,EAAKlhB,GACf,GAAW,MAAP2Q,IAAgB9O,EAAe1B,KAAKwQ,EAAKpP,GAC3C,OAAO,EAEToP,EAAMA,EAAIpP,GAEZ,QAASwC,GAQXogB,EAAEiM,WAAa,WAEb,OADAxc,EAAKuQ,EAAID,EACF7gB,MAIT8gB,EAAE3C,SAAW,SAASvgB,GACpB,OAAOA,GAITkjB,EAAEkM,SAAW,SAASpvB,GACpB,OAAO,WACL,OAAOA,IAIXkjB,EAAEmM,KAAO,aAITnM,EAAExiB,SAAW,SAASuf,GACpB,OAAKiD,EAAExS,QAAQuP,GAGR,SAASvQ,GACd,OAAO2U,EAAQ3U,EAAKuQ,IAHbmE,EAAgBnE,IAQ3BiD,EAAEoM,WAAa,SAAS5f,GACtB,OAAW,MAAPA,EACK,aAEF,SAASuQ,GACd,OAAQiD,EAAExS,QAAQuP,GAAoBoE,EAAQ3U,EAAKuQ,GAAzBvQ,EAAIuQ,KAMlCiD,EAAEa,QAAUb,EAAEqM,QAAU,SAAS5I,GAE/B,OADAA,EAAQzD,EAAEqK,UAAU,GAAI5G,GACjB,SAASjX,GACd,OAAOwT,EAAE8K,QAAQte,EAAKiX,KAK1BzD,EAAE3a,MAAQ,SAAS/H,EAAGkX,EAAUiM,GAC9B,IAAI6L,EAAQtsB,MAAMT,KAAKyF,IAAI,EAAG1H,IAC9BkX,EAAWgM,EAAWhM,EAAUiM,EAAS,GACzC,IAAK,IAAI5kB,EAAI,EAAGA,EAAIyB,EAAGzB,IAAKywB,EAAMzwB,GAAK2Y,EAAS3Y,GAChD,OAAOywB,GAITtM,EAAEjU,OAAS,SAASvC,EAAKxE,GAKvB,OAJW,MAAPA,IACFA,EAAMwE,EACNA,EAAM,GAEDA,EAAMjK,KAAKC,MAAMD,KAAKwM,UAAY/G,EAAMwE,EAAM,KAIvDwW,EAAEwI,IAAM+D,KAAK/D,KAAO,WAClB,OAAO,IAAI+D,MAAOC,WAIpB,IAAIC,EAAY,CACd,IAAK,QACL,IAAK,OACL,IAAK,OACL,IAAK,SACL,IAAK,SACL,IAAK,UAEHC,EAAc1M,EAAE8J,OAAO2C,GAGvBE,EAAgB,SAASpiB,GAC3B,IAAIqiB,EAAU,SAAShO,GACrB,OAAOrU,EAAIqU,IAGTb,EAAS,MAAQiC,EAAErS,KAAKpD,GAAKS,KAAK,KAAO,IACzC6hB,EAAanb,OAAOqM,GACpB+O,EAAgBpb,OAAOqM,EAAQ,KACnC,OAAO,SAASW,GAEd,OADAA,EAAmB,MAAVA,EAAiB,GAAK,GAAKA,EAC7BmO,EAAWxhB,KAAKqT,GAAUA,EAAO/M,QAAQmb,EAAeF,GAAWlO,IAG9EsB,EAAE3E,OAASsR,EAAcF,GACzBzM,EAAE+M,SAAWJ,EAAcD,GAK3B1M,EAAErd,OAAS,SAAS6J,EAAKuQ,EAAMiQ,GACxBhN,EAAExS,QAAQuP,KAAOA,EAAO,CAACA,IAC9B,IAAInd,EAASmd,EAAKnd,OAClB,IAAKA,EACH,OAAOogB,EAAEjI,WAAWiV,GAAYA,EAAShxB,KAAKwQ,GAAOwgB,EAEvD,IAAK,IAAInxB,EAAI,EAAGA,EAAI+D,EAAQ/D,IAAK,CAC/B,IAAIoC,EAAc,MAAPuO,OAAc,EAASA,EAAIuQ,EAAKlhB,SAC9B,IAAToC,IACFA,EAAO+uB,EACPnxB,EAAI+D,GAEN4M,EAAMwT,EAAEjI,WAAW9Z,GAAQA,EAAKjC,KAAKwQ,GAAOvO,EAE9C,OAAOuO,GAKT,IAAIygB,EAAY,EAChBjN,EAAEkN,SAAW,SAASC,GACpB,IAAIC,IAAOH,EAAY,GACvB,OAAOE,EAASA,EAASC,EAAKA,GAKhCpN,EAAEqN,iBAAmB,CACnBC,SAAU,kBACVC,YAAa,mBACblS,OAAQ,oBAMV,IAAImS,EAAU,OAIVC,EAAU,CACZ,IAAK,IACL,KAAM,KACN,KAAM,IACN,KAAM,IACN,SAAU,QACV,SAAU,SAGRC,EAAe,4BAEfC,EAAa,SAAS/O,GACxB,MAAO,KAAO6O,EAAQ7O,IAOxBoB,EAAE4N,SAAW,SAAS/jB,EAAMgkB,EAAUC,IAC/BD,GAAYC,IAAaD,EAAWC,GACzCD,EAAW7N,EAAEmK,SAAS,GAAI0D,EAAU7N,EAAEqN,kBAGtC,IAiCIU,EAjCAlN,EAAUnP,OAAO,EAClBmc,EAASxS,QAAUmS,GAASzP,QAC5B8P,EAASN,aAAeC,GAASzP,QACjC8P,EAASP,UAAYE,GAASzP,QAC/B/S,KAAK,KAAO,KAAM,KAGhBwF,EAAQ,EACRuN,EAAS,SACblU,EAAK8H,QAAQkP,GAAS,SAASjC,EAAOvD,EAAQkS,EAAaD,EAAU9U,GAanE,OAZAuF,GAAUlU,EAAK5E,MAAMuL,EAAOgI,GAAQ7G,QAAQ+b,EAAcC,GAC1Dnd,EAAQgI,EAASoG,EAAMhf,OAEnByb,EACF0C,GAAU,cAAgB1C,EAAS,iCAC1BkS,EACTxP,GAAU,cAAgBwP,EAAc,uBAC/BD,IACTvP,GAAU,OAASuP,EAAW,YAIzB1O,KAETb,GAAU,OAGL8P,EAASG,WAAUjQ,EAAS,mBAAqBA,EAAS,OAE/DA,EAAS,4FAEPA,EAAS,gBAGX,IACEgQ,EAAS,IAAIre,SAASme,EAASG,UAAY,MAAO,IAAKjQ,GACvD,MAAOnU,GAEP,MADAA,EAAEmU,OAASA,EACLnU,EAGR,IAAIgkB,EAAW,SAAS7Z,GACtB,OAAOga,EAAO/xB,KAAKkD,KAAM6U,EAAMiM,IAI7BiO,EAAWJ,EAASG,UAAY,MAGpC,OAFAJ,EAAS7P,OAAS,YAAckQ,EAAW,OAASlQ,EAAS,IAEtD6P,GAIT5N,EAAEkO,MAAQ,SAAS1hB,GACjB,IAAI2hB,EAAWnO,EAAExT,GAEjB,OADA2hB,EAASC,QAAS,EACXD,GAUT,IAAIE,EAAc,SAASF,EAAU3hB,GACnC,OAAO2hB,EAASC,OAASpO,EAAExT,GAAK0hB,QAAU1hB,GAI5CwT,EAAEsO,MAAQ,SAAS9hB,GASjB,OARAwT,EAAEsB,KAAKtB,EAAE+J,UAAUvd,IAAM,SAASpQ,GAChC,IAAI0U,EAAOkP,EAAE5jB,GAAQoQ,EAAIpQ,GACzB4jB,EAAEviB,UAAUrB,GAAQ,WAClB,IAAIwjB,EAAO,CAAC1gB,KAAKmhB,UAEjB,OADA1f,EAAK2J,MAAMsV,EAAMpG,WACV6U,EAAYnvB,KAAM4R,EAAKxG,MAAM0V,EAAGJ,QAGpCI,GAITA,EAAEsO,MAAMtO,GAGRA,EAAEsB,KAAK,CAAC,MAAO,OAAQ,UAAW,QAAS,OAAQ,SAAU,YAAY,SAASllB,GAChF,IAAIknB,EAASrD,EAAW7jB,GACxB4jB,EAAEviB,UAAUrB,GAAQ,WAClB,IAAIoQ,EAAMtN,KAAKmhB,SAGf,OAFAiD,EAAOhZ,MAAMkC,EAAKgN,WACJ,UAATpd,GAA6B,WAATA,GAAqC,IAAfoQ,EAAI5M,eAAqB4M,EAAI,GACrE6hB,EAAYnvB,KAAMsN,OAK7BwT,EAAEsB,KAAK,CAAC,SAAU,OAAQ,UAAU,SAASllB,GAC3C,IAAIknB,EAASrD,EAAW7jB,GACxB4jB,EAAEviB,UAAUrB,GAAQ,WAClB,OAAOiyB,EAAYnvB,KAAMokB,EAAOhZ,MAAMpL,KAAKmhB,SAAU7G,gBAKzDwG,EAAEviB,UAAUX,MAAQ,WAClB,OAAOoC,KAAKmhB,UAKdL,EAAEviB,UAAU+M,QAAUwV,EAAEviB,UAAUgO,OAASuU,EAAEviB,UAAUX,MAEvDkjB,EAAEviB,UAAUiI,SAAW,WACrB,OAAOuD,OAAO/J,KAAKmhB,gBAalB,KAFwB,EAAF,WACrB,OAAOL,GACR,QAFoB,OAEpB,aAppDL,K,kCCLApkB,EAAOD,QAAU0Q,QAAQ,W,iBCAzB,2BACE,aAGA,SAASkiB,EAAQnkB,EAAKokB,GACpB,IAAKpkB,EAAK,MAAM,IAAI/H,MAAMmsB,GAAO,oBAKnC,SAASC,EAAUC,EAAMC,GACvBD,EAAKE,OAASD,EACd,IAAIE,EAAW,aACfA,EAASpxB,UAAYkxB,EAAUlxB,UAC/BixB,EAAKjxB,UAAY,IAAIoxB,EACrBH,EAAKjxB,UAAU+Z,YAAckX,EAK/B,SAASI,EAAIjQ,EAAQne,EAAMquB,GACzB,GAAID,EAAGE,KAAKnQ,GACV,OAAOA,EAGT3f,KAAK+vB,SAAW,EAChB/vB,KAAKgwB,MAAQ,KACbhwB,KAAKU,OAAS,EAGdV,KAAKiwB,IAAM,KAEI,OAAXtQ,IACW,OAATne,GAA0B,OAATA,IACnBquB,EAASruB,EACTA,EAAO,IAGTxB,KAAKkwB,MAAMvQ,GAAU,EAAGne,GAAQ,GAAIquB,GAAU,OAYlD,IAAInd,EATkB,iBAAXhW,EACTA,EAAOD,QAAUmzB,EAEjBnzB,EAAQmzB,GAAKA,EAGfA,EAAGA,GAAKA,EACRA,EAAGO,SAAW,GAGd,IAEIzd,EADoB,oBAAX+H,aAAmD,IAAlBA,OAAO/H,OACxC+H,OAAO/H,OAEP,EAAQ,IAAUA,OAE7B,MAAOhI,IAgIT,SAAS0lB,EAAe5Q,EAAQlO,GAC9B,IAAItU,EAAIwiB,EAAOrE,WAAW7J,GAE1B,OAAItU,GAAK,IAAMA,GAAK,GACXA,EAAI,GAEFA,GAAK,IAAMA,GAAK,IAClBA,EAAI,GAGHA,EAAI,GAAM,GAItB,SAASqzB,EAAc7Q,EAAQ8Q,EAAYhf,GACzC,IAAI7T,EAAI2yB,EAAc5Q,EAAQlO,GAI9B,OAHIA,EAAQ,GAAKgf,IACf7yB,GAAK2yB,EAAc5Q,EAAQlO,EAAQ,IAAM,GAEpC7T,EA8CT,SAASmC,EAAW0M,EAAKtB,EAAOulB,EAAKC,GAGnC,IAFA,IAAI/yB,EAAI,EACJ8oB,EAAMlmB,KAAKiK,IAAIgC,EAAI5L,OAAQ6vB,GACtB5zB,EAAIqO,EAAOrO,EAAI4pB,EAAK5pB,IAAK,CAChC,IAAIK,EAAIsP,EAAI6O,WAAWxe,GAAK,GAE5Bc,GAAK+yB,EAIH/yB,GADET,GAAK,GACFA,EAAI,GAAK,GAGLA,GAAK,GACTA,EAAI,GAAK,GAITA,EAGT,OAAOS,EAnNTmyB,EAAGE,KAAO,SAAeW,GACvB,OAAIA,aAAeb,GAIJ,OAARa,GAA+B,iBAARA,GAC5BA,EAAInY,YAAY6X,WAAaP,EAAGO,UAAYrvB,MAAMwN,QAAQmiB,EAAIT,QAGlEJ,EAAG9pB,IAAM,SAAc4F,EAAMyZ,GAC3B,OAAIzZ,EAAK8B,IAAI2X,GAAS,EAAUzZ,EACzByZ,GAGTyK,EAAGtlB,IAAM,SAAcoB,EAAMyZ,GAC3B,OAAIzZ,EAAK8B,IAAI2X,GAAS,EAAUzZ,EACzByZ,GAGTyK,EAAGrxB,UAAU2xB,MAAQ,SAAevQ,EAAQne,EAAMquB,GAChD,GAAsB,iBAAXlQ,EACT,OAAO3f,KAAK0wB,YAAY/Q,EAAQne,EAAMquB,GAGxC,GAAsB,iBAAXlQ,EACT,OAAO3f,KAAK2wB,WAAWhR,EAAQne,EAAMquB,GAG1B,QAATruB,IACFA,EAAO,IAET6tB,EAAO7tB,KAAiB,EAAPA,IAAaA,GAAQ,GAAKA,GAAQ,IAGnD,IAAIwJ,EAAQ,EACM,OAFlB2U,EAASA,EAAOnZ,WAAWiM,QAAQ,OAAQ,KAEhC,KACTzH,IACAhL,KAAK+vB,SAAW,GAGd/kB,EAAQ2U,EAAOjf,SACJ,KAATc,EACFxB,KAAK4wB,UAAUjR,EAAQ3U,EAAO6kB,IAE9B7vB,KAAK6wB,WAAWlR,EAAQne,EAAMwJ,GACf,OAAX6kB,GACF7vB,KAAK2wB,WAAW3wB,KAAKqM,UAAW7K,EAAMquB,MAM9CD,EAAGrxB,UAAUmyB,YAAc,SAAsB/Q,EAAQne,EAAMquB,GACzDlQ,EAAS,IACX3f,KAAK+vB,SAAW,EAChBpQ,GAAUA,GAERA,EAAS,UACX3f,KAAKgwB,MAAQ,CAAW,SAATrQ,GACf3f,KAAKU,OAAS,GACLif,EAAS,kBAClB3f,KAAKgwB,MAAQ,CACF,SAATrQ,EACCA,EAAS,SAAa,UAEzB3f,KAAKU,OAAS,IAEd2uB,EAAO1P,EAAS,kBAChB3f,KAAKgwB,MAAQ,CACF,SAATrQ,EACCA,EAAS,SAAa,SACvB,GAEF3f,KAAKU,OAAS,GAGD,OAAXmvB,GAGJ7vB,KAAK2wB,WAAW3wB,KAAKqM,UAAW7K,EAAMquB,IAGxCD,EAAGrxB,UAAUoyB,WAAa,SAAqBhR,EAAQne,EAAMquB,GAG3D,GADAR,EAAgC,iBAAlB1P,EAAOjf,QACjBif,EAAOjf,QAAU,EAGnB,OAFAV,KAAKgwB,MAAQ,CAAE,GACfhwB,KAAKU,OAAS,EACPV,KAGTA,KAAKU,OAASL,KAAKW,KAAK2e,EAAOjf,OAAS,GACxCV,KAAKgwB,MAAQ,IAAIlvB,MAAMd,KAAKU,QAC5B,IAAK,IAAI/D,EAAI,EAAGA,EAAIqD,KAAKU,OAAQ/D,IAC/BqD,KAAKgwB,MAAMrzB,GAAK,EAGlB,IAAI0F,EAAGyuB,EACHC,EAAM,EACV,GAAe,OAAXlB,EACF,IAAKlzB,EAAIgjB,EAAOjf,OAAS,EAAG2B,EAAI,EAAG1F,GAAK,EAAGA,GAAK,EAC9Cm0B,EAAInR,EAAOhjB,GAAMgjB,EAAOhjB,EAAI,IAAM,EAAMgjB,EAAOhjB,EAAI,IAAM,GACzDqD,KAAKgwB,MAAM3tB,IAAOyuB,GAAKC,EAAO,SAC9B/wB,KAAKgwB,MAAM3tB,EAAI,GAAMyuB,IAAO,GAAKC,EAAQ,UACzCA,GAAO,KACI,KACTA,GAAO,GACP1uB,UAGC,GAAe,OAAXwtB,EACT,IAAKlzB,EAAI,EAAG0F,EAAI,EAAG1F,EAAIgjB,EAAOjf,OAAQ/D,GAAK,EACzCm0B,EAAInR,EAAOhjB,GAAMgjB,EAAOhjB,EAAI,IAAM,EAAMgjB,EAAOhjB,EAAI,IAAM,GACzDqD,KAAKgwB,MAAM3tB,IAAOyuB,GAAKC,EAAO,SAC9B/wB,KAAKgwB,MAAM3tB,EAAI,GAAMyuB,IAAO,GAAKC,EAAQ,UACzCA,GAAO,KACI,KACTA,GAAO,GACP1uB,KAIN,OAAOrC,KAAKgxB,SAyBdpB,EAAGrxB,UAAUqyB,UAAY,SAAoBjR,EAAQ3U,EAAO6kB,GAE1D7vB,KAAKU,OAASL,KAAKW,MAAM2e,EAAOjf,OAASsK,GAAS,GAClDhL,KAAKgwB,MAAQ,IAAIlvB,MAAMd,KAAKU,QAC5B,IAAK,IAAI/D,EAAI,EAAGA,EAAIqD,KAAKU,OAAQ/D,IAC/BqD,KAAKgwB,MAAMrzB,GAAK,EAIlB,IAGIm0B,EAHAC,EAAM,EACN1uB,EAAI,EAGR,GAAe,OAAXwtB,EACF,IAAKlzB,EAAIgjB,EAAOjf,OAAS,EAAG/D,GAAKqO,EAAOrO,GAAK,EAC3Cm0B,EAAIT,EAAa1Q,EAAQ3U,EAAOrO,IAAMo0B,EACtC/wB,KAAKgwB,MAAM3tB,IAAU,SAAJyuB,EACbC,GAAO,IACTA,GAAO,GACP1uB,GAAK,EACLrC,KAAKgwB,MAAM3tB,IAAMyuB,IAAM,IAEvBC,GAAO,OAKX,IAAKp0B,GADagjB,EAAOjf,OAASsK,GACX,GAAM,EAAIA,EAAQ,EAAIA,EAAOrO,EAAIgjB,EAAOjf,OAAQ/D,GAAK,EAC1Em0B,EAAIT,EAAa1Q,EAAQ3U,EAAOrO,IAAMo0B,EACtC/wB,KAAKgwB,MAAM3tB,IAAU,SAAJyuB,EACbC,GAAO,IACTA,GAAO,GACP1uB,GAAK,EACLrC,KAAKgwB,MAAM3tB,IAAMyuB,IAAM,IAEvBC,GAAO,EAKb/wB,KAAKgxB,SA2BPpB,EAAGrxB,UAAUsyB,WAAa,SAAqBlR,EAAQne,EAAMwJ,GAE3DhL,KAAKgwB,MAAQ,CAAE,GACfhwB,KAAKU,OAAS,EAGd,IAAK,IAAIuwB,EAAU,EAAGC,EAAU,EAAGA,GAAW,SAAWA,GAAW1vB,EAClEyvB,IAEFA,IACAC,EAAWA,EAAU1vB,EAAQ,EAO7B,IALA,IAAI2vB,EAAQxR,EAAOjf,OAASsK,EACxB1G,EAAM6sB,EAAQF,EACdV,EAAMlwB,KAAKiK,IAAI6mB,EAAOA,EAAQ7sB,GAAO0G,EAErComB,EAAO,EACFz0B,EAAIqO,EAAOrO,EAAI4zB,EAAK5zB,GAAKs0B,EAChCG,EAAOxxB,EAAU+f,EAAQhjB,EAAGA,EAAIs0B,EAASzvB,GAEzCxB,KAAKqxB,MAAMH,GACPlxB,KAAKgwB,MAAM,GAAKoB,EAAO,SACzBpxB,KAAKgwB,MAAM,IAAMoB,EAEjBpxB,KAAKsxB,OAAOF,GAIhB,GAAY,IAAR9sB,EAAW,CACb,IAAIiC,EAAM,EAGV,IAFA6qB,EAAOxxB,EAAU+f,EAAQhjB,EAAGgjB,EAAOjf,OAAQc,GAEtC7E,EAAI,EAAGA,EAAI2H,EAAK3H,IACnB4J,GAAO/E,EAGTxB,KAAKqxB,MAAM9qB,GACPvG,KAAKgwB,MAAM,GAAKoB,EAAO,SACzBpxB,KAAKgwB,MAAM,IAAMoB,EAEjBpxB,KAAKsxB,OAAOF,GAIhBpxB,KAAKgxB,SAGPpB,EAAGrxB,UAAUgzB,KAAO,SAAeC,GACjCA,EAAKxB,MAAQ,IAAIlvB,MAAMd,KAAKU,QAC5B,IAAK,IAAI/D,EAAI,EAAGA,EAAIqD,KAAKU,OAAQ/D,IAC/B60B,EAAKxB,MAAMrzB,GAAKqD,KAAKgwB,MAAMrzB,GAE7B60B,EAAK9wB,OAASV,KAAKU,OACnB8wB,EAAKzB,SAAW/vB,KAAK+vB,SACrByB,EAAKvB,IAAMjwB,KAAKiwB,KAGlBL,EAAGrxB,UAAUsmB,MAAQ,WACnB,IAAIpnB,EAAI,IAAImyB,EAAG,MAEf,OADA5vB,KAAKuxB,KAAK9zB,GACHA,GAGTmyB,EAAGrxB,UAAUkzB,QAAU,SAAkBjgB,GACvC,KAAOxR,KAAKU,OAAS8Q,GACnBxR,KAAKgwB,MAAMhwB,KAAKU,UAAY,EAE9B,OAAOV,MAIT4vB,EAAGrxB,UAAUyyB,MAAQ,WACnB,KAAOhxB,KAAKU,OAAS,GAAqC,IAAhCV,KAAKgwB,MAAMhwB,KAAKU,OAAS,IACjDV,KAAKU,SAEP,OAAOV,KAAK0xB,aAGd9B,EAAGrxB,UAAUmzB,UAAY,WAKvB,OAHoB,IAAhB1xB,KAAKU,QAAkC,IAAlBV,KAAKgwB,MAAM,KAClChwB,KAAK+vB,SAAW,GAEX/vB,MAGT4vB,EAAGrxB,UAAUozB,QAAU,WACrB,OAAQ3xB,KAAKiwB,IAAM,UAAY,SAAWjwB,KAAKwG,SAAS,IAAM,KAiChE,IAAIorB,EAAQ,CACV,GACA,IACA,KACA,MACA,OACA,QACA,SACA,UACA,WACA,YACA,aACA,cACA,eACA,gBACA,iBACA,kBACA,mBACA,oBACA,qBACA,sBACA,uBACA,wBACA,yBACA,0BACA,2BACA,6BAGEC,EAAa,CACf,EAAG,EACH,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EACvB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAGhBC,EAAa,CACf,EAAG,EACH,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAC5D,SAAU,IAAU,SAAU,SAAU,SAAU,QAAS,SAC3D,SAAU,SAAU,SAAU,SAAU,KAAU,QAAS,QAC3D,QAAS,QAAS,QAAS,SAAU,SAAU,SAAU,SACzD,MAAU,SAAU,SAAU,SAAU,SAAU,SAAU,UAsjB9D,SAASC,EAAY7uB,EAAMutB,EAAKhlB,GAC9BA,EAAIskB,SAAWU,EAAIV,SAAW7sB,EAAK6sB,SACnC,IAAIxJ,EAAOrjB,EAAKxC,OAAS+vB,EAAI/vB,OAAU,EACvC+K,EAAI/K,OAAS6lB,EACbA,EAAOA,EAAM,EAAK,EAGlB,IAAIrlB,EAAoB,EAAhBgC,EAAK8sB,MAAM,GACf7uB,EAAmB,EAAfsvB,EAAIT,MAAM,GACdvyB,EAAIyD,EAAIC,EAER6wB,EAAS,SAAJv0B,EACL8D,EAAS9D,EAAI,SAAa,EAC9BgO,EAAIukB,MAAM,GAAKgC,EAEf,IAAK,IAAIC,EAAI,EAAGA,EAAI1L,EAAK0L,IAAK,CAM5B,IAHA,IAAIC,EAAS3wB,IAAU,GACnB4wB,EAAgB,SAAR5wB,EACR6wB,EAAO/xB,KAAKiK,IAAI2nB,EAAGxB,EAAI/vB,OAAS,GAC3B2B,EAAIhC,KAAKyF,IAAI,EAAGmsB,EAAI/uB,EAAKxC,OAAS,GAAI2B,GAAK+vB,EAAM/vB,IAAK,CAC7D,IAAI1F,EAAKs1B,EAAI5vB,EAAK,EAIlB6vB,IADAz0B,GAFAyD,EAAoB,EAAhBgC,EAAK8sB,MAAMrzB,KACfwE,EAAmB,EAAfsvB,EAAIT,MAAM3tB,IACF8vB,GACG,SAAa,EAC5BA,EAAY,SAAJ10B,EAEVgO,EAAIukB,MAAMiC,GAAa,EAARE,EACf5wB,EAAiB,EAAT2wB,EAQV,OANc,IAAV3wB,EACFkK,EAAIukB,MAAMiC,GAAa,EAAR1wB,EAEfkK,EAAI/K,SAGC+K,EAAIulB,QAzlBbpB,EAAGrxB,UAAUiI,SAAW,SAAmBhF,EAAMwZ,GAI/C,IAAIvP,EACJ,GAHAuP,EAAoB,EAAVA,GAAe,EAGZ,MAJbxZ,EAAOA,GAAQ,KAIa,QAATA,EAAgB,CACjCiK,EAAM,GAGN,IAFA,IAAIslB,EAAM,EACNxvB,EAAQ,EACH5E,EAAI,EAAGA,EAAIqD,KAAKU,OAAQ/D,IAAK,CACpC,IAAIm0B,EAAI9wB,KAAKgwB,MAAMrzB,GACfy0B,GAA+B,UAArBN,GAAKC,EAAOxvB,IAAmBiF,SAAS,IAGpDiF,EADY,KADdlK,EAASuvB,IAAO,GAAKC,EAAQ,WACVp0B,IAAMqD,KAAKU,OAAS,EAC/BkxB,EAAM,EAAIR,EAAK1wB,QAAU0wB,EAAO3lB,EAEhC2lB,EAAO3lB,GAEfslB,GAAO,IACI,KACTA,GAAO,GACPp0B,KAMJ,IAHc,IAAV4E,IACFkK,EAAMlK,EAAMiF,SAAS,IAAMiF,GAEtBA,EAAI/K,OAASsa,GAAY,GAC9BvP,EAAM,IAAMA,EAKd,OAHsB,IAAlBzL,KAAK+vB,WACPtkB,EAAM,IAAMA,GAEPA,EAGT,GAAIjK,KAAiB,EAAPA,IAAaA,GAAQ,GAAKA,GAAQ,GAAI,CAElD,IAAI6wB,EAAYR,EAAWrwB,GAEvB8wB,EAAYR,EAAWtwB,GAC3BiK,EAAM,GACN,IAAIzO,EAAIgD,KAAK6kB,QAEb,IADA7nB,EAAE+yB,SAAW,GACL/yB,EAAE8J,UAAU,CAClB,IAAIrJ,EAAIT,EAAEu1B,KAAKD,GAAW9rB,SAAShF,GAMjCiK,GALFzO,EAAIA,EAAEw1B,MAAMF,IAELxrB,SAGCrJ,EAAIgO,EAFJmmB,EAAMS,EAAY50B,EAAEiD,QAAUjD,EAAIgO,EAQ5C,IAHIzL,KAAK8G,WACP2E,EAAM,IAAMA,GAEPA,EAAI/K,OAASsa,GAAY,GAC9BvP,EAAM,IAAMA,EAKd,OAHsB,IAAlBzL,KAAK+vB,WACPtkB,EAAM,IAAMA,GAEPA,EAGT4jB,GAAO,EAAO,oCAGhBO,EAAGrxB,UAAU0hB,SAAW,WACtB,IAAIwS,EAAMzyB,KAAKgwB,MAAM,GASrB,OARoB,IAAhBhwB,KAAKU,OACP+xB,GAAuB,SAAhBzyB,KAAKgwB,MAAM,GACO,IAAhBhwB,KAAKU,QAAkC,IAAlBV,KAAKgwB,MAAM,GAEzCyC,GAAO,iBAAoC,SAAhBzyB,KAAKgwB,MAAM,GAC7BhwB,KAAKU,OAAS,GACvB2uB,GAAO,EAAO,8CAEU,IAAlBrvB,KAAK+vB,UAAmB0C,EAAMA,GAGxC7C,EAAGrxB,UAAUgO,OAAS,WACpB,OAAOvM,KAAKwG,SAAS,KAGvBopB,EAAGrxB,UAAUm0B,SAAW,SAAmB7C,EAAQnvB,GAEjD,OADA2uB,OAAyB,IAAX3c,GACP1S,KAAK2yB,YAAYjgB,EAAQmd,EAAQnvB,IAG1CkvB,EAAGrxB,UAAU8N,QAAU,SAAkBwjB,EAAQnvB,GAC/C,OAAOV,KAAK2yB,YAAY7xB,MAAO+uB,EAAQnvB,IAGzCkvB,EAAGrxB,UAAUo0B,YAAc,SAAsBC,EAAW/C,EAAQnvB,GAClE,IAAIuW,EAAajX,KAAKiX,aAClB4b,EAAYnyB,GAAUL,KAAKyF,IAAI,EAAGmR,GACtCoY,EAAOpY,GAAc4b,EAAW,yCAChCxD,EAAOwD,EAAY,EAAG,+BAEtB7yB,KAAKgxB,QACL,IAGI7vB,EAAGxE,EAHHm2B,EAA0B,OAAXjD,EACfkD,EAAM,IAAIH,EAAUC,GAGpBhwB,EAAI7C,KAAK6kB,QACb,GAAKiO,EAYE,CACL,IAAKn2B,EAAI,GAAIkG,EAAEiE,SAAUnK,IACvBwE,EAAI0B,EAAEmwB,MAAM,KACZnwB,EAAEowB,OAAO,GAETF,EAAIp2B,GAAKwE,EAGX,KAAOxE,EAAIk2B,EAAWl2B,IACpBo2B,EAAIp2B,GAAK,MArBM,CAEjB,IAAKA,EAAI,EAAGA,EAAIk2B,EAAY5b,EAAYta,IACtCo2B,EAAIp2B,GAAK,EAGX,IAAKA,EAAI,GAAIkG,EAAEiE,SAAUnK,IACvBwE,EAAI0B,EAAEmwB,MAAM,KACZnwB,EAAEowB,OAAO,GAETF,EAAIF,EAAYl2B,EAAI,GAAKwE,EAe7B,OAAO4xB,GAGL1yB,KAAK6yB,MACPtD,EAAGrxB,UAAU40B,WAAa,SAAqBrC,GAC7C,OAAO,GAAKzwB,KAAK6yB,MAAMpC,IAGzBlB,EAAGrxB,UAAU40B,WAAa,SAAqBrC,GAC7C,IAAIjzB,EAAIizB,EACJrzB,EAAI,EAiBR,OAhBII,GAAK,OACPJ,GAAK,GACLI,KAAO,IAELA,GAAK,KACPJ,GAAK,EACLI,KAAO,GAELA,GAAK,IACPJ,GAAK,EACLI,KAAO,GAELA,GAAK,IACPJ,GAAK,EACLI,KAAO,GAEFJ,EAAII,GAIf+xB,EAAGrxB,UAAU60B,UAAY,SAAoBtC,GAE3C,GAAU,IAANA,EAAS,OAAO,GAEpB,IAAIjzB,EAAIizB,EACJrzB,EAAI,EAoBR,OAnBqB,IAAZ,KAAJI,KACHJ,GAAK,GACLI,KAAO,IAEU,IAAV,IAAJA,KACHJ,GAAK,EACLI,KAAO,GAES,IAAT,GAAJA,KACHJ,GAAK,EACLI,KAAO,GAES,IAAT,EAAJA,KACHJ,GAAK,EACLI,KAAO,GAES,IAAT,EAAJA,IACHJ,IAEKA,GAITmyB,EAAGrxB,UAAU2J,UAAY,WACvB,IAAI4oB,EAAI9wB,KAAKgwB,MAAMhwB,KAAKU,OAAS,GAC7B2yB,EAAKrzB,KAAKmzB,WAAWrC,GACzB,OAA2B,IAAnB9wB,KAAKU,OAAS,GAAU2yB,GAiBlCzD,EAAGrxB,UAAU+0B,SAAW,WACtB,GAAItzB,KAAK8G,SAAU,OAAO,EAG1B,IADA,IAAIrJ,EAAI,EACCd,EAAI,EAAGA,EAAIqD,KAAKU,OAAQ/D,IAAK,CACpC,IAAIwE,EAAInB,KAAKozB,UAAUpzB,KAAKgwB,MAAMrzB,IAElC,GADAc,GAAK0D,EACK,KAANA,EAAU,MAEhB,OAAO1D,GAGTmyB,EAAGrxB,UAAU0Y,WAAa,WACxB,OAAO5W,KAAKW,KAAKhB,KAAKkI,YAAc,IAGtC0nB,EAAGrxB,UAAUg1B,OAAS,SAAiBC,GACrC,OAAsB,IAAlBxzB,KAAK+vB,SACA/vB,KAAKqD,MAAMowB,MAAMD,GAAOE,MAAM,GAEhC1zB,KAAK6kB,SAGd+K,EAAGrxB,UAAUo1B,SAAW,SAAmBH,GACzC,OAAIxzB,KAAK4zB,MAAMJ,EAAQ,GACdxzB,KAAK6zB,KAAKL,GAAOE,MAAM,GAAGI,OAE5B9zB,KAAK6kB,SAGd+K,EAAGrxB,UAAUw1B,MAAQ,WACnB,OAAyB,IAAlB/zB,KAAK+vB,UAIdH,EAAGrxB,UAAUgN,IAAM,WACjB,OAAOvL,KAAK6kB,QAAQiP,QAGtBlE,EAAGrxB,UAAUu1B,KAAO,WAKlB,OAJK9zB,KAAK8G,WACR9G,KAAK+vB,UAAY,GAGZ/vB,MAIT4vB,EAAGrxB,UAAUy1B,KAAO,SAAevD,GACjC,KAAOzwB,KAAKU,OAAS+vB,EAAI/vB,QACvBV,KAAKgwB,MAAMhwB,KAAKU,UAAY,EAG9B,IAAK,IAAI/D,EAAI,EAAGA,EAAI8zB,EAAI/vB,OAAQ/D,IAC9BqD,KAAKgwB,MAAMrzB,GAAKqD,KAAKgwB,MAAMrzB,GAAK8zB,EAAIT,MAAMrzB,GAG5C,OAAOqD,KAAKgxB,SAGdpB,EAAGrxB,UAAU01B,IAAM,SAAcxD,GAE/B,OADApB,EAA0C,IAAlCrvB,KAAK+vB,SAAWU,EAAIV,WACrB/vB,KAAKg0B,KAAKvD,IAInBb,EAAGrxB,UAAU4L,GAAK,SAAasmB,GAC7B,OAAIzwB,KAAKU,OAAS+vB,EAAI/vB,OAAeV,KAAK6kB,QAAQoP,IAAIxD,GAC/CA,EAAI5L,QAAQoP,IAAIj0B,OAGzB4vB,EAAGrxB,UAAU21B,IAAM,SAAczD,GAC/B,OAAIzwB,KAAKU,OAAS+vB,EAAI/vB,OAAeV,KAAK6kB,QAAQmP,KAAKvD,GAChDA,EAAI5L,QAAQmP,KAAKh0B,OAI1B4vB,EAAGrxB,UAAU41B,MAAQ,SAAgB1D,GAEnC,IAAItvB,EAEFA,EADEnB,KAAKU,OAAS+vB,EAAI/vB,OAChB+vB,EAEAzwB,KAGN,IAAK,IAAIrD,EAAI,EAAGA,EAAIwE,EAAET,OAAQ/D,IAC5BqD,KAAKgwB,MAAMrzB,GAAKqD,KAAKgwB,MAAMrzB,GAAK8zB,EAAIT,MAAMrzB,GAK5C,OAFAqD,KAAKU,OAASS,EAAET,OAETV,KAAKgxB,SAGdpB,EAAGrxB,UAAU61B,KAAO,SAAe3D,GAEjC,OADApB,EAA0C,IAAlCrvB,KAAK+vB,SAAWU,EAAIV,WACrB/vB,KAAKm0B,MAAM1D,IAIpBb,EAAGrxB,UAAU2L,IAAM,SAAcumB,GAC/B,OAAIzwB,KAAKU,OAAS+vB,EAAI/vB,OAAeV,KAAK6kB,QAAQuP,KAAK3D,GAChDA,EAAI5L,QAAQuP,KAAKp0B,OAG1B4vB,EAAGrxB,UAAU81B,KAAO,SAAe5D,GACjC,OAAIzwB,KAAKU,OAAS+vB,EAAI/vB,OAAeV,KAAK6kB,QAAQsP,MAAM1D,GACjDA,EAAI5L,QAAQsP,MAAMn0B,OAI3B4vB,EAAGrxB,UAAU+1B,MAAQ,SAAgB7D,GAEnC,IAAIvvB,EACAC,EACAnB,KAAKU,OAAS+vB,EAAI/vB,QACpBQ,EAAIlB,KACJmB,EAAIsvB,IAEJvvB,EAAIuvB,EACJtvB,EAAInB,MAGN,IAAK,IAAIrD,EAAI,EAAGA,EAAIwE,EAAET,OAAQ/D,IAC5BqD,KAAKgwB,MAAMrzB,GAAKuE,EAAE8uB,MAAMrzB,GAAKwE,EAAE6uB,MAAMrzB,GAGvC,GAAIqD,OAASkB,EACX,KAAOvE,EAAIuE,EAAER,OAAQ/D,IACnBqD,KAAKgwB,MAAMrzB,GAAKuE,EAAE8uB,MAAMrzB,GAM5B,OAFAqD,KAAKU,OAASQ,EAAER,OAETV,KAAKgxB,SAGdpB,EAAGrxB,UAAUg2B,KAAO,SAAe9D,GAEjC,OADApB,EAA0C,IAAlCrvB,KAAK+vB,SAAWU,EAAIV,WACrB/vB,KAAKs0B,MAAM7D,IAIpBb,EAAGrxB,UAAU6L,IAAM,SAAcqmB,GAC/B,OAAIzwB,KAAKU,OAAS+vB,EAAI/vB,OAAeV,KAAK6kB,QAAQ0P,KAAK9D,GAChDA,EAAI5L,QAAQ0P,KAAKv0B,OAG1B4vB,EAAGrxB,UAAUi2B,KAAO,SAAe/D,GACjC,OAAIzwB,KAAKU,OAAS+vB,EAAI/vB,OAAeV,KAAK6kB,QAAQyP,MAAM7D,GACjDA,EAAI5L,QAAQyP,MAAMt0B,OAI3B4vB,EAAGrxB,UAAUk1B,MAAQ,SAAgBD,GACnCnE,EAAwB,iBAAVmE,GAAsBA,GAAS,GAE7C,IAAIiB,EAAsC,EAAxBp0B,KAAKW,KAAKwyB,EAAQ,IAChCkB,EAAWlB,EAAQ,GAGvBxzB,KAAKyxB,QAAQgD,GAETC,EAAW,GACbD,IAIF,IAAK,IAAI93B,EAAI,EAAGA,EAAI83B,EAAa93B,IAC/BqD,KAAKgwB,MAAMrzB,GAAsB,UAAhBqD,KAAKgwB,MAAMrzB,GAS9B,OALI+3B,EAAW,IACb10B,KAAKgwB,MAAMrzB,IAAMqD,KAAKgwB,MAAMrzB,GAAM,UAAc,GAAK+3B,GAIhD10B,KAAKgxB,SAGdpB,EAAGrxB,UAAUs1B,KAAO,SAAeL,GACjC,OAAOxzB,KAAK6kB,QAAQ4O,MAAMD,IAI5B5D,EAAGrxB,UAAUo2B,KAAO,SAAeC,EAAK1pB,GACtCmkB,EAAsB,iBAARuF,GAAoBA,GAAO,GAEzC,IAAI7D,EAAO6D,EAAM,GAAM,EACnBC,EAAOD,EAAM,GAUjB,OARA50B,KAAKyxB,QAAQV,EAAM,GAGjB/wB,KAAKgwB,MAAMe,GADT7lB,EACgBlL,KAAKgwB,MAAMe,GAAQ,GAAK8D,EAExB70B,KAAKgwB,MAAMe,KAAS,GAAK8D,GAGtC70B,KAAKgxB,SAIdpB,EAAGrxB,UAAUu2B,KAAO,SAAerE,GACjC,IAAIhzB,EAkBAyD,EAAGC,EAfP,GAAsB,IAAlBnB,KAAK+vB,UAAmC,IAAjBU,EAAIV,SAI7B,OAHA/vB,KAAK+vB,SAAW,EAChBtyB,EAAIuC,KAAK+0B,KAAKtE,GACdzwB,KAAK+vB,UAAY,EACV/vB,KAAK0xB,YAGP,GAAsB,IAAlB1xB,KAAK+vB,UAAmC,IAAjBU,EAAIV,SAIpC,OAHAU,EAAIV,SAAW,EACftyB,EAAIuC,KAAK+0B,KAAKtE,GACdA,EAAIV,SAAW,EACRtyB,EAAEi0B,YAKP1xB,KAAKU,OAAS+vB,EAAI/vB,QACpBQ,EAAIlB,KACJmB,EAAIsvB,IAEJvvB,EAAIuvB,EACJtvB,EAAInB,MAIN,IADA,IAAIuB,EAAQ,EACH5E,EAAI,EAAGA,EAAIwE,EAAET,OAAQ/D,IAC5Bc,GAAkB,EAAbyD,EAAE8uB,MAAMrzB,KAAwB,EAAbwE,EAAE6uB,MAAMrzB,IAAU4E,EAC1CvB,KAAKgwB,MAAMrzB,GAAS,SAAJc,EAChB8D,EAAQ9D,IAAM,GAEhB,KAAiB,IAAV8D,GAAe5E,EAAIuE,EAAER,OAAQ/D,IAClCc,GAAkB,EAAbyD,EAAE8uB,MAAMrzB,IAAU4E,EACvBvB,KAAKgwB,MAAMrzB,GAAS,SAAJc,EAChB8D,EAAQ9D,IAAM,GAIhB,GADAuC,KAAKU,OAASQ,EAAER,OACF,IAAVa,EACFvB,KAAKgwB,MAAMhwB,KAAKU,QAAUa,EAC1BvB,KAAKU,cAEA,GAAIQ,IAAMlB,KACf,KAAOrD,EAAIuE,EAAER,OAAQ/D,IACnBqD,KAAKgwB,MAAMrzB,GAAKuE,EAAE8uB,MAAMrzB,GAI5B,OAAOqD,MAIT4vB,EAAGrxB,UAAU0C,IAAM,SAAcwvB,GAC/B,IAAIsC,EACJ,OAAqB,IAAjBtC,EAAIV,UAAoC,IAAlB/vB,KAAK+vB,UAC7BU,EAAIV,SAAW,EACfgD,EAAM/yB,KAAKg1B,IAAIvE,GACfA,EAAIV,UAAY,EACTgD,GACmB,IAAjBtC,EAAIV,UAAoC,IAAlB/vB,KAAK+vB,UACpC/vB,KAAK+vB,SAAW,EAChBgD,EAAMtC,EAAIuE,IAAIh1B,MACdA,KAAK+vB,SAAW,EACTgD,GAGL/yB,KAAKU,OAAS+vB,EAAI/vB,OAAeV,KAAK6kB,QAAQiQ,KAAKrE,GAEhDA,EAAI5L,QAAQiQ,KAAK90B,OAI1B4vB,EAAGrxB,UAAUw2B,KAAO,SAAetE,GAEjC,GAAqB,IAAjBA,EAAIV,SAAgB,CACtBU,EAAIV,SAAW,EACf,IAAItyB,EAAIuC,KAAK80B,KAAKrE,GAElB,OADAA,EAAIV,SAAW,EACRtyB,EAAEi0B,YAGJ,GAAsB,IAAlB1xB,KAAK+vB,SAId,OAHA/vB,KAAK+vB,SAAW,EAChB/vB,KAAK80B,KAAKrE,GACVzwB,KAAK+vB,SAAW,EACT/vB,KAAK0xB,YAId,IAWIxwB,EAAGC,EAXHqM,EAAMxN,KAAKwN,IAAIijB,GAGnB,GAAY,IAARjjB,EAIF,OAHAxN,KAAK+vB,SAAW,EAChB/vB,KAAKU,OAAS,EACdV,KAAKgwB,MAAM,GAAK,EACThwB,KAKLwN,EAAM,GACRtM,EAAIlB,KACJmB,EAAIsvB,IAEJvvB,EAAIuvB,EACJtvB,EAAInB,MAIN,IADA,IAAIuB,EAAQ,EACH5E,EAAI,EAAGA,EAAIwE,EAAET,OAAQ/D,IAE5B4E,GADA9D,GAAkB,EAAbyD,EAAE8uB,MAAMrzB,KAAwB,EAAbwE,EAAE6uB,MAAMrzB,IAAU4E,IAC7B,GACbvB,KAAKgwB,MAAMrzB,GAAS,SAAJc,EAElB,KAAiB,IAAV8D,GAAe5E,EAAIuE,EAAER,OAAQ/D,IAElC4E,GADA9D,GAAkB,EAAbyD,EAAE8uB,MAAMrzB,IAAU4E,IACV,GACbvB,KAAKgwB,MAAMrzB,GAAS,SAAJc,EAIlB,GAAc,IAAV8D,GAAe5E,EAAIuE,EAAER,QAAUQ,IAAMlB,KACvC,KAAOrD,EAAIuE,EAAER,OAAQ/D,IACnBqD,KAAKgwB,MAAMrzB,GAAKuE,EAAE8uB,MAAMrzB,GAU5B,OANAqD,KAAKU,OAASL,KAAKyF,IAAI9F,KAAKU,OAAQ/D,GAEhCuE,IAAMlB,OACRA,KAAK+vB,SAAW,GAGX/vB,KAAKgxB,SAIdpB,EAAGrxB,UAAUy2B,IAAM,SAAcvE,GAC/B,OAAOzwB,KAAK6kB,QAAQkQ,KAAKtE,IA+C3B,IAAIwE,EAAc,SAAsB/xB,EAAMutB,EAAKhlB,GACjD,IAIIumB,EACAxK,EACA6L,EANAnyB,EAAIgC,EAAK8sB,MACT7uB,EAAIsvB,EAAIT,MACR5yB,EAAIqO,EAAIukB,MACRhzB,EAAI,EAIJk4B,EAAY,EAAPh0B,EAAE,GACPi0B,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPn0B,EAAE,GACPo0B,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPt0B,EAAE,GACPu0B,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPz0B,EAAE,GACP00B,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP50B,EAAE,GACP60B,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP/0B,EAAE,GACPg1B,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPl1B,EAAE,GACPm1B,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPr1B,EAAE,GACPs1B,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPx1B,EAAE,GACPy1B,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP31B,EAAE,GACP41B,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP71B,EAAE,GACP81B,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPh2B,EAAE,GACPi2B,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPn2B,EAAE,GACPo2B,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPt2B,EAAE,GACPu2B,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPz2B,EAAE,GACP02B,EAAW,KAALD,EACNE,GAAMF,IAAO,GACbG,GAAY,EAAP52B,EAAE,GACP62B,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbG,GAAY,EAAP/2B,EAAE,GACPg3B,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbG,GAAY,EAAPl3B,EAAE,GACPm3B,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbG,GAAY,EAAPr3B,EAAE,GACPs3B,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbG,GAAY,EAAPx3B,EAAE,GACPy3B,GAAW,KAALD,GACNE,GAAMF,KAAO,GAEjBltB,EAAIskB,SAAW7sB,EAAK6sB,SAAWU,EAAIV,SACnCtkB,EAAI/K,OAAS,GAMb,IAAIo4B,IAAQ97B,GAJZg1B,EAAK3xB,KAAK04B,KAAK5D,EAAK8B,IAIE,KAAa,MAFnCzP,GADAA,EAAMnnB,KAAK04B,KAAK5D,EAAK+B,IACR72B,KAAK04B,KAAK3D,EAAK6B,GAAQ,KAEU,IAAO,EACrDj6B,IAFAq2B,EAAKhzB,KAAK04B,KAAK3D,EAAK8B,KAEP1P,IAAQ,IAAO,IAAMsR,KAAO,IAAO,EAChDA,IAAM,SAEN9G,EAAK3xB,KAAK04B,KAAKzD,EAAK2B,GAEpBzP,GADAA,EAAMnnB,KAAK04B,KAAKzD,EAAK4B,IACR72B,KAAK04B,KAAKxD,EAAK0B,GAAQ,EACpC5D,EAAKhzB,KAAK04B,KAAKxD,EAAK2B,GAKpB,IAAI8B,IAAQh8B,GAJZg1B,EAAMA,EAAK3xB,KAAK04B,KAAK5D,EAAKiC,GAAQ,GAIZ,KAAa,MAFnC5P,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK5D,EAAKkC,GAAQ,GACvBh3B,KAAK04B,KAAK3D,EAAKgC,GAAQ,KAEU,IAAO,EACrDp6B,IAFAq2B,EAAMA,EAAKhzB,KAAK04B,KAAK3D,EAAKiC,GAAQ,IAErB7P,IAAQ,IAAO,IAAMwR,KAAO,IAAO,EAChDA,IAAM,SAENhH,EAAK3xB,KAAK04B,KAAKtD,EAAKwB,GAEpBzP,GADAA,EAAMnnB,KAAK04B,KAAKtD,EAAKyB,IACR72B,KAAK04B,KAAKrD,EAAKuB,GAAQ,EACpC5D,EAAKhzB,KAAK04B,KAAKrD,EAAKwB,GACpBlF,EAAMA,EAAK3xB,KAAK04B,KAAKzD,EAAK8B,GAAQ,EAElC5P,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKzD,EAAK+B,GAAQ,GACvBh3B,KAAK04B,KAAKxD,EAAK6B,GAAQ,EACpC/D,EAAMA,EAAKhzB,KAAK04B,KAAKxD,EAAK8B,GAAQ,EAKlC,IAAI4B,IAAQj8B,GAJZg1B,EAAMA,EAAK3xB,KAAK04B,KAAK5D,EAAKoC,GAAQ,GAIZ,KAAa,MAFnC/P,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK5D,EAAKqC,GAAQ,GACvBn3B,KAAK04B,KAAK3D,EAAKmC,GAAQ,KAEU,IAAO,EACrDv6B,IAFAq2B,EAAMA,EAAKhzB,KAAK04B,KAAK3D,EAAKoC,GAAQ,IAErBhQ,IAAQ,IAAO,IAAMyR,KAAO,IAAO,EAChDA,IAAM,SAENjH,EAAK3xB,KAAK04B,KAAKnD,EAAKqB,GAEpBzP,GADAA,EAAMnnB,KAAK04B,KAAKnD,EAAKsB,IACR72B,KAAK04B,KAAKlD,EAAKoB,GAAQ,EACpC5D,EAAKhzB,KAAK04B,KAAKlD,EAAKqB,GACpBlF,EAAMA,EAAK3xB,KAAK04B,KAAKtD,EAAK2B,GAAQ,EAElC5P,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKtD,EAAK4B,GAAQ,GACvBh3B,KAAK04B,KAAKrD,EAAK0B,GAAQ,EACpC/D,EAAMA,EAAKhzB,KAAK04B,KAAKrD,EAAK2B,GAAQ,EAClCrF,EAAMA,EAAK3xB,KAAK04B,KAAKzD,EAAKiC,GAAQ,EAElC/P,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKzD,EAAKkC,GAAQ,GACvBn3B,KAAK04B,KAAKxD,EAAKgC,GAAQ,EACpClE,EAAMA,EAAKhzB,KAAK04B,KAAKxD,EAAKiC,GAAQ,EAKlC,IAAI0B,IAAQl8B,GAJZg1B,EAAMA,EAAK3xB,KAAK04B,KAAK5D,EAAKuC,GAAQ,GAIZ,KAAa,MAFnClQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK5D,EAAKwC,GAAQ,GACvBt3B,KAAK04B,KAAK3D,EAAKsC,GAAQ,KAEU,IAAO,EACrD16B,IAFAq2B,EAAMA,EAAKhzB,KAAK04B,KAAK3D,EAAKuC,GAAQ,IAErBnQ,IAAQ,IAAO,IAAM0R,KAAO,IAAO,EAChDA,IAAM,SAENlH,EAAK3xB,KAAK04B,KAAKhD,EAAKkB,GAEpBzP,GADAA,EAAMnnB,KAAK04B,KAAKhD,EAAKmB,IACR72B,KAAK04B,KAAK/C,EAAKiB,GAAQ,EACpC5D,EAAKhzB,KAAK04B,KAAK/C,EAAKkB,GACpBlF,EAAMA,EAAK3xB,KAAK04B,KAAKnD,EAAKwB,GAAQ,EAElC5P,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKnD,EAAKyB,GAAQ,GACvBh3B,KAAK04B,KAAKlD,EAAKuB,GAAQ,EACpC/D,EAAMA,EAAKhzB,KAAK04B,KAAKlD,EAAKwB,GAAQ,EAClCrF,EAAMA,EAAK3xB,KAAK04B,KAAKtD,EAAK8B,GAAQ,EAElC/P,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKtD,EAAK+B,GAAQ,GACvBn3B,KAAK04B,KAAKrD,EAAK6B,GAAQ,EACpClE,EAAMA,EAAKhzB,KAAK04B,KAAKrD,EAAK8B,GAAQ,EAClCxF,EAAMA,EAAK3xB,KAAK04B,KAAKzD,EAAKoC,GAAQ,EAElClQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKzD,EAAKqC,GAAQ,GACvBt3B,KAAK04B,KAAKxD,EAAKmC,GAAQ,EACpCrE,EAAMA,EAAKhzB,KAAK04B,KAAKxD,EAAKoC,GAAQ,EAKlC,IAAIwB,IAAQn8B,GAJZg1B,EAAMA,EAAK3xB,KAAK04B,KAAK5D,EAAK0C,GAAQ,GAIZ,KAAa,MAFnCrQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK5D,EAAK2C,IAAQ,GACvBz3B,KAAK04B,KAAK3D,EAAKyC,GAAQ,KAEU,IAAO,EACrD76B,IAFAq2B,EAAMA,EAAKhzB,KAAK04B,KAAK3D,EAAK0C,IAAQ,IAErBtQ,IAAQ,IAAO,IAAM2R,KAAO,IAAO,EAChDA,IAAM,SAENnH,EAAK3xB,KAAK04B,KAAK7C,EAAKe,GAEpBzP,GADAA,EAAMnnB,KAAK04B,KAAK7C,EAAKgB,IACR72B,KAAK04B,KAAK5C,EAAKc,GAAQ,EACpC5D,EAAKhzB,KAAK04B,KAAK5C,EAAKe,GACpBlF,EAAMA,EAAK3xB,KAAK04B,KAAKhD,EAAKqB,GAAQ,EAElC5P,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKhD,EAAKsB,GAAQ,GACvBh3B,KAAK04B,KAAK/C,EAAKoB,GAAQ,EACpC/D,EAAMA,EAAKhzB,KAAK04B,KAAK/C,EAAKqB,GAAQ,EAClCrF,EAAMA,EAAK3xB,KAAK04B,KAAKnD,EAAK2B,GAAQ,EAElC/P,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKnD,EAAK4B,GAAQ,GACvBn3B,KAAK04B,KAAKlD,EAAK0B,GAAQ,EACpClE,EAAMA,EAAKhzB,KAAK04B,KAAKlD,EAAK2B,GAAQ,EAClCxF,EAAMA,EAAK3xB,KAAK04B,KAAKtD,EAAKiC,GAAQ,EAElClQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKtD,EAAKkC,GAAQ,GACvBt3B,KAAK04B,KAAKrD,EAAKgC,GAAQ,EACpCrE,EAAMA,EAAKhzB,KAAK04B,KAAKrD,EAAKiC,GAAQ,EAClC3F,EAAMA,EAAK3xB,KAAK04B,KAAKzD,EAAKuC,GAAQ,EAElCrQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKzD,EAAKwC,IAAQ,GACvBz3B,KAAK04B,KAAKxD,EAAKsC,GAAQ,EACpCxE,EAAMA,EAAKhzB,KAAK04B,KAAKxD,EAAKuC,IAAQ,EAKlC,IAAIsB,IAAQp8B,GAJZg1B,EAAMA,EAAK3xB,KAAK04B,KAAK5D,EAAK6C,IAAQ,GAIZ,KAAa,MAFnCxQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK5D,EAAK8C,IAAQ,GACvB53B,KAAK04B,KAAK3D,EAAK4C,IAAQ,KAEU,IAAO,EACrDh7B,IAFAq2B,EAAMA,EAAKhzB,KAAK04B,KAAK3D,EAAK6C,IAAQ,IAErBzQ,IAAQ,IAAO,IAAM4R,KAAO,IAAO,EAChDA,IAAM,SAENpH,EAAK3xB,KAAK04B,KAAK1C,EAAKY,GAEpBzP,GADAA,EAAMnnB,KAAK04B,KAAK1C,EAAKa,IACR72B,KAAK04B,KAAKzC,EAAKW,GAAQ,EACpC5D,EAAKhzB,KAAK04B,KAAKzC,EAAKY,GACpBlF,EAAMA,EAAK3xB,KAAK04B,KAAK7C,EAAKkB,GAAQ,EAElC5P,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK7C,EAAKmB,GAAQ,GACvBh3B,KAAK04B,KAAK5C,EAAKiB,GAAQ,EACpC/D,EAAMA,EAAKhzB,KAAK04B,KAAK5C,EAAKkB,GAAQ,EAClCrF,EAAMA,EAAK3xB,KAAK04B,KAAKhD,EAAKwB,GAAQ,EAElC/P,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKhD,EAAKyB,GAAQ,GACvBn3B,KAAK04B,KAAK/C,EAAKuB,GAAQ,EACpClE,EAAMA,EAAKhzB,KAAK04B,KAAK/C,EAAKwB,GAAQ,EAClCxF,EAAMA,EAAK3xB,KAAK04B,KAAKnD,EAAK8B,GAAQ,EAElClQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKnD,EAAK+B,GAAQ,GACvBt3B,KAAK04B,KAAKlD,EAAK6B,GAAQ,EACpCrE,EAAMA,EAAKhzB,KAAK04B,KAAKlD,EAAK8B,GAAQ,EAClC3F,EAAMA,EAAK3xB,KAAK04B,KAAKtD,EAAKoC,GAAQ,EAElCrQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKtD,EAAKqC,IAAQ,GACvBz3B,KAAK04B,KAAKrD,EAAKmC,GAAQ,EACpCxE,EAAMA,EAAKhzB,KAAK04B,KAAKrD,EAAKoC,IAAQ,EAClC9F,EAAMA,EAAK3xB,KAAK04B,KAAKzD,EAAK0C,IAAQ,EAElCxQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKzD,EAAK2C,IAAQ,GACvB53B,KAAK04B,KAAKxD,EAAKyC,IAAQ,EACpC3E,EAAMA,EAAKhzB,KAAK04B,KAAKxD,EAAK0C,IAAQ,EAKlC,IAAIoB,IAAQr8B,GAJZg1B,EAAMA,EAAK3xB,KAAK04B,KAAK5D,EAAKgD,IAAQ,GAIZ,KAAa,MAFnC3Q,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK5D,EAAKiD,IAAQ,GACvB/3B,KAAK04B,KAAK3D,EAAK+C,IAAQ,KAEU,IAAO,EACrDn7B,IAFAq2B,EAAMA,EAAKhzB,KAAK04B,KAAK3D,EAAKgD,IAAQ,IAErB5Q,IAAQ,IAAO,IAAM6R,KAAO,IAAO,EAChDA,IAAM,SAENrH,EAAK3xB,KAAK04B,KAAKvC,EAAKS,GAEpBzP,GADAA,EAAMnnB,KAAK04B,KAAKvC,EAAKU,IACR72B,KAAK04B,KAAKtC,EAAKQ,GAAQ,EACpC5D,EAAKhzB,KAAK04B,KAAKtC,EAAKS,GACpBlF,EAAMA,EAAK3xB,KAAK04B,KAAK1C,EAAKe,GAAQ,EAElC5P,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK1C,EAAKgB,GAAQ,GACvBh3B,KAAK04B,KAAKzC,EAAKc,GAAQ,EACpC/D,EAAMA,EAAKhzB,KAAK04B,KAAKzC,EAAKe,GAAQ,EAClCrF,EAAMA,EAAK3xB,KAAK04B,KAAK7C,EAAKqB,GAAQ,EAElC/P,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK7C,EAAKsB,GAAQ,GACvBn3B,KAAK04B,KAAK5C,EAAKoB,GAAQ,EACpClE,EAAMA,EAAKhzB,KAAK04B,KAAK5C,EAAKqB,GAAQ,EAClCxF,EAAMA,EAAK3xB,KAAK04B,KAAKhD,EAAK2B,GAAQ,EAElClQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKhD,EAAK4B,GAAQ,GACvBt3B,KAAK04B,KAAK/C,EAAK0B,GAAQ,EACpCrE,EAAMA,EAAKhzB,KAAK04B,KAAK/C,EAAK2B,GAAQ,EAClC3F,EAAMA,EAAK3xB,KAAK04B,KAAKnD,EAAKiC,GAAQ,EAElCrQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKnD,EAAKkC,IAAQ,GACvBz3B,KAAK04B,KAAKlD,EAAKgC,GAAQ,EACpCxE,EAAMA,EAAKhzB,KAAK04B,KAAKlD,EAAKiC,IAAQ,EAClC9F,EAAMA,EAAK3xB,KAAK04B,KAAKtD,EAAKuC,IAAQ,EAElCxQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKtD,EAAKwC,IAAQ,GACvB53B,KAAK04B,KAAKrD,EAAKsC,IAAQ,EACpC3E,EAAMA,EAAKhzB,KAAK04B,KAAKrD,EAAKuC,IAAQ,EAClCjG,EAAMA,EAAK3xB,KAAK04B,KAAKzD,EAAK6C,IAAQ,EAElC3Q,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKzD,EAAK8C,IAAQ,GACvB/3B,KAAK04B,KAAKxD,EAAK4C,IAAQ,EACpC9E,EAAMA,EAAKhzB,KAAK04B,KAAKxD,EAAK6C,IAAQ,EAKlC,IAAIkB,IAAQt8B,GAJZg1B,EAAMA,EAAK3xB,KAAK04B,KAAK5D,EAAKmD,IAAQ,GAIZ,KAAa,MAFnC9Q,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK5D,EAAKoD,IAAQ,GACvBl4B,KAAK04B,KAAK3D,EAAKkD,IAAQ,KAEU,IAAO,EACrDt7B,IAFAq2B,EAAMA,EAAKhzB,KAAK04B,KAAK3D,EAAKmD,IAAQ,IAErB/Q,IAAQ,IAAO,IAAM8R,KAAO,IAAO,EAChDA,IAAM,SAENtH,EAAK3xB,KAAK04B,KAAKpC,EAAKM,GAEpBzP,GADAA,EAAMnnB,KAAK04B,KAAKpC,EAAKO,IACR72B,KAAK04B,KAAKnC,EAAKK,GAAQ,EACpC5D,EAAKhzB,KAAK04B,KAAKnC,EAAKM,GACpBlF,EAAMA,EAAK3xB,KAAK04B,KAAKvC,EAAKY,GAAQ,EAElC5P,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKvC,EAAKa,GAAQ,GACvBh3B,KAAK04B,KAAKtC,EAAKW,GAAQ,EACpC/D,EAAMA,EAAKhzB,KAAK04B,KAAKtC,EAAKY,GAAQ,EAClCrF,EAAMA,EAAK3xB,KAAK04B,KAAK1C,EAAKkB,GAAQ,EAElC/P,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK1C,EAAKmB,GAAQ,GACvBn3B,KAAK04B,KAAKzC,EAAKiB,GAAQ,EACpClE,EAAMA,EAAKhzB,KAAK04B,KAAKzC,EAAKkB,GAAQ,EAClCxF,EAAMA,EAAK3xB,KAAK04B,KAAK7C,EAAKwB,GAAQ,EAElClQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK7C,EAAKyB,GAAQ,GACvBt3B,KAAK04B,KAAK5C,EAAKuB,GAAQ,EACpCrE,EAAMA,EAAKhzB,KAAK04B,KAAK5C,EAAKwB,GAAQ,EAClC3F,EAAMA,EAAK3xB,KAAK04B,KAAKhD,EAAK8B,GAAQ,EAElCrQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKhD,EAAK+B,IAAQ,GACvBz3B,KAAK04B,KAAK/C,EAAK6B,GAAQ,EACpCxE,EAAMA,EAAKhzB,KAAK04B,KAAK/C,EAAK8B,IAAQ,EAClC9F,EAAMA,EAAK3xB,KAAK04B,KAAKnD,EAAKoC,IAAQ,EAElCxQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKnD,EAAKqC,IAAQ,GACvB53B,KAAK04B,KAAKlD,EAAKmC,IAAQ,EACpC3E,EAAMA,EAAKhzB,KAAK04B,KAAKlD,EAAKoC,IAAQ,EAClCjG,EAAMA,EAAK3xB,KAAK04B,KAAKtD,EAAK0C,IAAQ,EAElC3Q,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKtD,EAAK2C,IAAQ,GACvB/3B,KAAK04B,KAAKrD,EAAKyC,IAAQ,EACpC9E,EAAMA,EAAKhzB,KAAK04B,KAAKrD,EAAK0C,IAAQ,EAClCpG,EAAMA,EAAK3xB,KAAK04B,KAAKzD,EAAKgD,IAAQ,EAElC9Q,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKzD,EAAKiD,IAAQ,GACvBl4B,KAAK04B,KAAKxD,EAAK+C,IAAQ,EACpCjF,EAAMA,EAAKhzB,KAAK04B,KAAKxD,EAAKgD,IAAQ,EAKlC,IAAIgB,IAAQv8B,GAJZg1B,EAAMA,EAAK3xB,KAAK04B,KAAK5D,EAAKsD,IAAQ,GAIZ,KAAa,MAFnCjR,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK5D,EAAKuD,IAAQ,GACvBr4B,KAAK04B,KAAK3D,EAAKqD,IAAQ,KAEU,IAAO,EACrDz7B,IAFAq2B,EAAMA,EAAKhzB,KAAK04B,KAAK3D,EAAKsD,IAAQ,IAErBlR,IAAQ,IAAO,IAAM+R,KAAO,IAAO,EAChDA,IAAM,SAENvH,EAAK3xB,KAAK04B,KAAKjC,EAAKG,GAEpBzP,GADAA,EAAMnnB,KAAK04B,KAAKjC,EAAKI,IACR72B,KAAK04B,KAAKhC,EAAKE,GAAQ,EACpC5D,EAAKhzB,KAAK04B,KAAKhC,EAAKG,GACpBlF,EAAMA,EAAK3xB,KAAK04B,KAAKpC,EAAKS,GAAQ,EAElC5P,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKpC,EAAKU,GAAQ,GACvBh3B,KAAK04B,KAAKnC,EAAKQ,GAAQ,EACpC/D,EAAMA,EAAKhzB,KAAK04B,KAAKnC,EAAKS,GAAQ,EAClCrF,EAAMA,EAAK3xB,KAAK04B,KAAKvC,EAAKe,GAAQ,EAElC/P,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKvC,EAAKgB,GAAQ,GACvBn3B,KAAK04B,KAAKtC,EAAKc,GAAQ,EACpClE,EAAMA,EAAKhzB,KAAK04B,KAAKtC,EAAKe,GAAQ,EAClCxF,EAAMA,EAAK3xB,KAAK04B,KAAK1C,EAAKqB,GAAQ,EAElClQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK1C,EAAKsB,GAAQ,GACvBt3B,KAAK04B,KAAKzC,EAAKoB,GAAQ,EACpCrE,EAAMA,EAAKhzB,KAAK04B,KAAKzC,EAAKqB,GAAQ,EAClC3F,EAAMA,EAAK3xB,KAAK04B,KAAK7C,EAAK2B,GAAQ,EAElCrQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK7C,EAAK4B,IAAQ,GACvBz3B,KAAK04B,KAAK5C,EAAK0B,GAAQ,EACpCxE,EAAMA,EAAKhzB,KAAK04B,KAAK5C,EAAK2B,IAAQ,EAClC9F,EAAMA,EAAK3xB,KAAK04B,KAAKhD,EAAKiC,IAAQ,EAElCxQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKhD,EAAKkC,IAAQ,GACvB53B,KAAK04B,KAAK/C,EAAKgC,IAAQ,EACpC3E,EAAMA,EAAKhzB,KAAK04B,KAAK/C,EAAKiC,IAAQ,EAClCjG,EAAMA,EAAK3xB,KAAK04B,KAAKnD,EAAKuC,IAAQ,EAElC3Q,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKnD,EAAKwC,IAAQ,GACvB/3B,KAAK04B,KAAKlD,EAAKsC,IAAQ,EACpC9E,EAAMA,EAAKhzB,KAAK04B,KAAKlD,EAAKuC,IAAQ,EAClCpG,EAAMA,EAAK3xB,KAAK04B,KAAKtD,EAAK6C,IAAQ,EAElC9Q,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKtD,EAAK8C,IAAQ,GACvBl4B,KAAK04B,KAAKrD,EAAK4C,IAAQ,EACpCjF,EAAMA,EAAKhzB,KAAK04B,KAAKrD,EAAK6C,IAAQ,EAClCvG,EAAMA,EAAK3xB,KAAK04B,KAAKzD,EAAKmD,IAAQ,EAElCjR,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKzD,EAAKoD,IAAQ,GACvBr4B,KAAK04B,KAAKxD,EAAKkD,IAAQ,EACpCpF,EAAMA,EAAKhzB,KAAK04B,KAAKxD,EAAKmD,IAAQ,EAKlC,IAAIc,IAAQx8B,GAJZg1B,EAAMA,EAAK3xB,KAAK04B,KAAK5D,EAAKyD,IAAQ,GAIZ,KAAa,MAFnCpR,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK5D,EAAK0D,IAAQ,GACvBx4B,KAAK04B,KAAK3D,EAAKwD,IAAQ,KAEU,IAAO,EACrD57B,IAFAq2B,EAAMA,EAAKhzB,KAAK04B,KAAK3D,EAAKyD,IAAQ,IAErBrR,IAAQ,IAAO,IAAMgS,KAAO,IAAO,EAChDA,IAAM,SAENxH,EAAK3xB,KAAK04B,KAAKjC,EAAKM,GAEpB5P,GADAA,EAAMnnB,KAAK04B,KAAKjC,EAAKO,IACRh3B,KAAK04B,KAAKhC,EAAKK,GAAQ,EACpC/D,EAAKhzB,KAAK04B,KAAKhC,EAAKM,GACpBrF,EAAMA,EAAK3xB,KAAK04B,KAAKpC,EAAKY,GAAQ,EAElC/P,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKpC,EAAKa,GAAQ,GACvBn3B,KAAK04B,KAAKnC,EAAKW,GAAQ,EACpClE,EAAMA,EAAKhzB,KAAK04B,KAAKnC,EAAKY,GAAQ,EAClCxF,EAAMA,EAAK3xB,KAAK04B,KAAKvC,EAAKkB,GAAQ,EAElClQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKvC,EAAKmB,GAAQ,GACvBt3B,KAAK04B,KAAKtC,EAAKiB,GAAQ,EACpCrE,EAAMA,EAAKhzB,KAAK04B,KAAKtC,EAAKkB,GAAQ,EAClC3F,EAAMA,EAAK3xB,KAAK04B,KAAK1C,EAAKwB,GAAQ,EAElCrQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK1C,EAAKyB,IAAQ,GACvBz3B,KAAK04B,KAAKzC,EAAKuB,GAAQ,EACpCxE,EAAMA,EAAKhzB,KAAK04B,KAAKzC,EAAKwB,IAAQ,EAClC9F,EAAMA,EAAK3xB,KAAK04B,KAAK7C,EAAK8B,IAAQ,EAElCxQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK7C,EAAK+B,IAAQ,GACvB53B,KAAK04B,KAAK5C,EAAK6B,IAAQ,EACpC3E,EAAMA,EAAKhzB,KAAK04B,KAAK5C,EAAK8B,IAAQ,EAClCjG,EAAMA,EAAK3xB,KAAK04B,KAAKhD,EAAKoC,IAAQ,EAElC3Q,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKhD,EAAKqC,IAAQ,GACvB/3B,KAAK04B,KAAK/C,EAAKmC,IAAQ,EACpC9E,EAAMA,EAAKhzB,KAAK04B,KAAK/C,EAAKoC,IAAQ,EAClCpG,EAAMA,EAAK3xB,KAAK04B,KAAKnD,EAAK0C,IAAQ,EAElC9Q,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKnD,EAAK2C,IAAQ,GACvBl4B,KAAK04B,KAAKlD,EAAKyC,IAAQ,EACpCjF,EAAMA,EAAKhzB,KAAK04B,KAAKlD,EAAK0C,IAAQ,EAClCvG,EAAMA,EAAK3xB,KAAK04B,KAAKtD,EAAKgD,IAAQ,EAElCjR,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKtD,EAAKiD,IAAQ,GACvBr4B,KAAK04B,KAAKrD,EAAK+C,IAAQ,EACpCpF,EAAMA,EAAKhzB,KAAK04B,KAAKrD,EAAKgD,IAAQ,EAKlC,IAAIe,IAASz8B,GAJbg1B,EAAMA,EAAK3xB,KAAK04B,KAAKzD,EAAKsD,IAAQ,GAIX,KAAa,MAFpCpR,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKzD,EAAKuD,IAAQ,GACvBx4B,KAAK04B,KAAKxD,EAAKqD,IAAQ,KAEW,IAAO,EACtD57B,IAFAq2B,EAAMA,EAAKhzB,KAAK04B,KAAKxD,EAAKsD,IAAQ,IAErBrR,IAAQ,IAAO,IAAMiS,KAAQ,IAAO,EACjDA,IAAO,SAEPzH,EAAK3xB,KAAK04B,KAAKjC,EAAKS,GAEpB/P,GADAA,EAAMnnB,KAAK04B,KAAKjC,EAAKU,IACRn3B,KAAK04B,KAAKhC,EAAKQ,GAAQ,EACpClE,EAAKhzB,KAAK04B,KAAKhC,EAAKS,GACpBxF,EAAMA,EAAK3xB,KAAK04B,KAAKpC,EAAKe,GAAQ,EAElClQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKpC,EAAKgB,GAAQ,GACvBt3B,KAAK04B,KAAKnC,EAAKc,GAAQ,EACpCrE,EAAMA,EAAKhzB,KAAK04B,KAAKnC,EAAKe,GAAQ,EAClC3F,EAAMA,EAAK3xB,KAAK04B,KAAKvC,EAAKqB,GAAQ,EAElCrQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKvC,EAAKsB,IAAQ,GACvBz3B,KAAK04B,KAAKtC,EAAKoB,GAAQ,EACpCxE,EAAMA,EAAKhzB,KAAK04B,KAAKtC,EAAKqB,IAAQ,EAClC9F,EAAMA,EAAK3xB,KAAK04B,KAAK1C,EAAK2B,IAAQ,EAElCxQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK1C,EAAK4B,IAAQ,GACvB53B,KAAK04B,KAAKzC,EAAK0B,IAAQ,EACpC3E,EAAMA,EAAKhzB,KAAK04B,KAAKzC,EAAK2B,IAAQ,EAClCjG,EAAMA,EAAK3xB,KAAK04B,KAAK7C,EAAKiC,IAAQ,EAElC3Q,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK7C,EAAKkC,IAAQ,GACvB/3B,KAAK04B,KAAK5C,EAAKgC,IAAQ,EACpC9E,EAAMA,EAAKhzB,KAAK04B,KAAK5C,EAAKiC,IAAQ,EAClCpG,EAAMA,EAAK3xB,KAAK04B,KAAKhD,EAAKuC,IAAQ,EAElC9Q,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKhD,EAAKwC,IAAQ,GACvBl4B,KAAK04B,KAAK/C,EAAKsC,IAAQ,EACpCjF,EAAMA,EAAKhzB,KAAK04B,KAAK/C,EAAKuC,IAAQ,EAClCvG,EAAMA,EAAK3xB,KAAK04B,KAAKnD,EAAK6C,IAAQ,EAElCjR,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKnD,EAAK8C,IAAQ,GACvBr4B,KAAK04B,KAAKlD,EAAK4C,IAAQ,EACpCpF,EAAMA,EAAKhzB,KAAK04B,KAAKlD,EAAK6C,IAAQ,EAKlC,IAAIgB,IAAS18B,GAJbg1B,EAAMA,EAAK3xB,KAAK04B,KAAKtD,EAAKmD,IAAQ,GAIX,KAAa,MAFpCpR,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKtD,EAAKoD,IAAQ,GACvBx4B,KAAK04B,KAAKrD,EAAKkD,IAAQ,KAEW,IAAO,EACtD57B,IAFAq2B,EAAMA,EAAKhzB,KAAK04B,KAAKrD,EAAKmD,IAAQ,IAErBrR,IAAQ,IAAO,IAAMkS,KAAQ,IAAO,EACjDA,IAAO,SAEP1H,EAAK3xB,KAAK04B,KAAKjC,EAAKY,GAEpBlQ,GADAA,EAAMnnB,KAAK04B,KAAKjC,EAAKa,IACRt3B,KAAK04B,KAAKhC,EAAKW,GAAQ,EACpCrE,EAAKhzB,KAAK04B,KAAKhC,EAAKY,GACpB3F,EAAMA,EAAK3xB,KAAK04B,KAAKpC,EAAKkB,GAAQ,EAElCrQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKpC,EAAKmB,IAAQ,GACvBz3B,KAAK04B,KAAKnC,EAAKiB,GAAQ,EACpCxE,EAAMA,EAAKhzB,KAAK04B,KAAKnC,EAAKkB,IAAQ,EAClC9F,EAAMA,EAAK3xB,KAAK04B,KAAKvC,EAAKwB,IAAQ,EAElCxQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKvC,EAAKyB,IAAQ,GACvB53B,KAAK04B,KAAKtC,EAAKuB,IAAQ,EACpC3E,EAAMA,EAAKhzB,KAAK04B,KAAKtC,EAAKwB,IAAQ,EAClCjG,EAAMA,EAAK3xB,KAAK04B,KAAK1C,EAAK8B,IAAQ,EAElC3Q,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK1C,EAAK+B,IAAQ,GACvB/3B,KAAK04B,KAAKzC,EAAK6B,IAAQ,EACpC9E,EAAMA,EAAKhzB,KAAK04B,KAAKzC,EAAK8B,IAAQ,EAClCpG,EAAMA,EAAK3xB,KAAK04B,KAAK7C,EAAKoC,IAAQ,EAElC9Q,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK7C,EAAKqC,IAAQ,GACvBl4B,KAAK04B,KAAK5C,EAAKmC,IAAQ,EACpCjF,EAAMA,EAAKhzB,KAAK04B,KAAK5C,EAAKoC,IAAQ,EAClCvG,EAAMA,EAAK3xB,KAAK04B,KAAKhD,EAAK0C,IAAQ,EAElCjR,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKhD,EAAK2C,IAAQ,GACvBr4B,KAAK04B,KAAK/C,EAAKyC,IAAQ,EACpCpF,EAAMA,EAAKhzB,KAAK04B,KAAK/C,EAAK0C,IAAQ,EAKlC,IAAIiB,IAAS38B,GAJbg1B,EAAMA,EAAK3xB,KAAK04B,KAAKnD,EAAKgD,IAAQ,GAIX,KAAa,MAFpCpR,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKnD,EAAKiD,IAAQ,GACvBx4B,KAAK04B,KAAKlD,EAAK+C,IAAQ,KAEW,IAAO,EACtD57B,IAFAq2B,EAAMA,EAAKhzB,KAAK04B,KAAKlD,EAAKgD,IAAQ,IAErBrR,IAAQ,IAAO,IAAMmS,KAAQ,IAAO,EACjDA,IAAO,SAEP3H,EAAK3xB,KAAK04B,KAAKjC,EAAKe,GAEpBrQ,GADAA,EAAMnnB,KAAK04B,KAAKjC,EAAKgB,KACRz3B,KAAK04B,KAAKhC,EAAKc,GAAQ,EACpCxE,EAAKhzB,KAAK04B,KAAKhC,EAAKe,IACpB9F,EAAMA,EAAK3xB,KAAK04B,KAAKpC,EAAKqB,IAAQ,EAElCxQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKpC,EAAKsB,IAAQ,GACvB53B,KAAK04B,KAAKnC,EAAKoB,IAAQ,EACpC3E,EAAMA,EAAKhzB,KAAK04B,KAAKnC,EAAKqB,IAAQ,EAClCjG,EAAMA,EAAK3xB,KAAK04B,KAAKvC,EAAK2B,IAAQ,EAElC3Q,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKvC,EAAK4B,IAAQ,GACvB/3B,KAAK04B,KAAKtC,EAAK0B,IAAQ,EACpC9E,EAAMA,EAAKhzB,KAAK04B,KAAKtC,EAAK2B,IAAQ,EAClCpG,EAAMA,EAAK3xB,KAAK04B,KAAK1C,EAAKiC,IAAQ,EAElC9Q,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK1C,EAAKkC,IAAQ,GACvBl4B,KAAK04B,KAAKzC,EAAKgC,IAAQ,EACpCjF,EAAMA,EAAKhzB,KAAK04B,KAAKzC,EAAKiC,IAAQ,EAClCvG,EAAMA,EAAK3xB,KAAK04B,KAAK7C,EAAKuC,IAAQ,EAElCjR,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK7C,EAAKwC,IAAQ,GACvBr4B,KAAK04B,KAAK5C,EAAKsC,IAAQ,EACpCpF,EAAMA,EAAKhzB,KAAK04B,KAAK5C,EAAKuC,IAAQ,EAKlC,IAAIkB,IAAS58B,GAJbg1B,EAAMA,EAAK3xB,KAAK04B,KAAKhD,EAAK6C,IAAQ,GAIX,KAAa,MAFpCpR,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKhD,EAAK8C,IAAQ,GACvBx4B,KAAK04B,KAAK/C,EAAK4C,IAAQ,KAEW,IAAO,EACtD57B,IAFAq2B,EAAMA,EAAKhzB,KAAK04B,KAAK/C,EAAK6C,IAAQ,IAErBrR,IAAQ,IAAO,IAAMoS,KAAQ,IAAO,EACjDA,IAAO,SAEP5H,EAAK3xB,KAAK04B,KAAKjC,EAAKkB,IAEpBxQ,GADAA,EAAMnnB,KAAK04B,KAAKjC,EAAKmB,KACR53B,KAAK04B,KAAKhC,EAAKiB,IAAQ,EACpC3E,EAAKhzB,KAAK04B,KAAKhC,EAAKkB,IACpBjG,EAAMA,EAAK3xB,KAAK04B,KAAKpC,EAAKwB,IAAQ,EAElC3Q,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKpC,EAAKyB,IAAQ,GACvB/3B,KAAK04B,KAAKnC,EAAKuB,IAAQ,EACpC9E,EAAMA,EAAKhzB,KAAK04B,KAAKnC,EAAKwB,IAAQ,EAClCpG,EAAMA,EAAK3xB,KAAK04B,KAAKvC,EAAK8B,IAAQ,EAElC9Q,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKvC,EAAK+B,IAAQ,GACvBl4B,KAAK04B,KAAKtC,EAAK6B,IAAQ,EACpCjF,EAAMA,EAAKhzB,KAAK04B,KAAKtC,EAAK8B,IAAQ,EAClCvG,EAAMA,EAAK3xB,KAAK04B,KAAK1C,EAAKoC,IAAQ,EAElCjR,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK1C,EAAKqC,IAAQ,GACvBr4B,KAAK04B,KAAKzC,EAAKmC,IAAQ,EACpCpF,EAAMA,EAAKhzB,KAAK04B,KAAKzC,EAAKoC,IAAQ,EAKlC,IAAImB,IAAS78B,GAJbg1B,EAAMA,EAAK3xB,KAAK04B,KAAK7C,EAAK0C,IAAQ,GAIX,KAAa,MAFpCpR,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK7C,EAAK2C,IAAQ,GACvBx4B,KAAK04B,KAAK5C,EAAKyC,IAAQ,KAEW,IAAO,EACtD57B,IAFAq2B,EAAMA,EAAKhzB,KAAK04B,KAAK5C,EAAK0C,IAAQ,IAErBrR,IAAQ,IAAO,IAAMqS,KAAQ,IAAO,EACjDA,IAAO,SAEP7H,EAAK3xB,KAAK04B,KAAKjC,EAAKqB,IAEpB3Q,GADAA,EAAMnnB,KAAK04B,KAAKjC,EAAKsB,KACR/3B,KAAK04B,KAAKhC,EAAKoB,IAAQ,EACpC9E,EAAKhzB,KAAK04B,KAAKhC,EAAKqB,IACpBpG,EAAMA,EAAK3xB,KAAK04B,KAAKpC,EAAK2B,IAAQ,EAElC9Q,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKpC,EAAK4B,IAAQ,GACvBl4B,KAAK04B,KAAKnC,EAAK0B,IAAQ,EACpCjF,EAAMA,EAAKhzB,KAAK04B,KAAKnC,EAAK2B,IAAQ,EAClCvG,EAAMA,EAAK3xB,KAAK04B,KAAKvC,EAAKiC,IAAQ,EAElCjR,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKvC,EAAKkC,IAAQ,GACvBr4B,KAAK04B,KAAKtC,EAAKgC,IAAQ,EACpCpF,EAAMA,EAAKhzB,KAAK04B,KAAKtC,EAAKiC,IAAQ,EAKlC,IAAIoB,IAAS98B,GAJbg1B,EAAMA,EAAK3xB,KAAK04B,KAAK1C,EAAKuC,IAAQ,GAIX,KAAa,MAFpCpR,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK1C,EAAKwC,IAAQ,GACvBx4B,KAAK04B,KAAKzC,EAAKsC,IAAQ,KAEW,IAAO,EACtD57B,IAFAq2B,EAAMA,EAAKhzB,KAAK04B,KAAKzC,EAAKuC,IAAQ,IAErBrR,IAAQ,IAAO,IAAMsS,KAAQ,IAAO,EACjDA,IAAO,SAEP9H,EAAK3xB,KAAK04B,KAAKjC,EAAKwB,IAEpB9Q,GADAA,EAAMnnB,KAAK04B,KAAKjC,EAAKyB,KACRl4B,KAAK04B,KAAKhC,EAAKuB,IAAQ,EACpCjF,EAAKhzB,KAAK04B,KAAKhC,EAAKwB,IACpBvG,EAAMA,EAAK3xB,KAAK04B,KAAKpC,EAAK8B,IAAQ,EAElCjR,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKpC,EAAK+B,IAAQ,GACvBr4B,KAAK04B,KAAKnC,EAAK6B,IAAQ,EACpCpF,EAAMA,EAAKhzB,KAAK04B,KAAKnC,EAAK8B,IAAQ,EAKlC,IAAIqB,IAAS/8B,GAJbg1B,EAAMA,EAAK3xB,KAAK04B,KAAKvC,EAAKoC,IAAQ,GAIX,KAAa,MAFpCpR,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKvC,EAAKqC,IAAQ,GACvBx4B,KAAK04B,KAAKtC,EAAKmC,IAAQ,KAEW,IAAO,EACtD57B,IAFAq2B,EAAMA,EAAKhzB,KAAK04B,KAAKtC,EAAKoC,IAAQ,IAErBrR,IAAQ,IAAO,IAAMuS,KAAQ,IAAO,EACjDA,IAAO,SAEP/H,EAAK3xB,KAAK04B,KAAKjC,EAAK2B,IAEpBjR,GADAA,EAAMnnB,KAAK04B,KAAKjC,EAAK4B,KACRr4B,KAAK04B,KAAKhC,EAAK0B,IAAQ,EACpCpF,EAAKhzB,KAAK04B,KAAKhC,EAAK2B,IAKpB,IAAIsB,IAASh9B,GAJbg1B,EAAMA,EAAK3xB,KAAK04B,KAAKpC,EAAKiC,IAAQ,GAIX,KAAa,MAFpCpR,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKpC,EAAKkC,IAAQ,GACvBx4B,KAAK04B,KAAKnC,EAAKgC,IAAQ,KAEW,IAAO,EACtD57B,IAFAq2B,EAAMA,EAAKhzB,KAAK04B,KAAKnC,EAAKiC,IAAQ,IAErBrR,IAAQ,IAAO,IAAMwS,KAAQ,IAAO,EACjDA,IAAO,SAMP,IAAIC,IAASj9B,GAJbg1B,EAAK3xB,KAAK04B,KAAKjC,EAAK8B,KAIG,KAAa,MAFpCpR,GADAA,EAAMnnB,KAAK04B,KAAKjC,EAAK+B,KACRx4B,KAAK04B,KAAKhC,EAAK6B,IAAQ,KAEW,IAAO,EA0BtD,OAzBA57B,IAFAq2B,EAAKhzB,KAAK04B,KAAKhC,EAAK8B,MAEPrR,IAAQ,IAAO,IAAMyS,KAAQ,IAAO,EACjDA,IAAO,SACP78B,EAAE,GAAK07B,GACP17B,EAAE,GAAK47B,GACP57B,EAAE,GAAK67B,GACP77B,EAAE,GAAK87B,GACP97B,EAAE,GAAK+7B,GACP/7B,EAAE,GAAKg8B,GACPh8B,EAAE,GAAKi8B,GACPj8B,EAAE,GAAKk8B,GACPl8B,EAAE,GAAKm8B,GACPn8B,EAAE,GAAKo8B,GACPp8B,EAAE,IAAMq8B,GACRr8B,EAAE,IAAMs8B,GACRt8B,EAAE,IAAMu8B,GACRv8B,EAAE,IAAMw8B,GACRx8B,EAAE,IAAMy8B,GACRz8B,EAAE,IAAM08B,GACR18B,EAAE,IAAM28B,GACR38B,EAAE,IAAM48B,GACR58B,EAAE,IAAM68B,GACE,IAANj9B,IACFI,EAAE,IAAMJ,EACRyO,EAAI/K,UAEC+K,GAiDT,SAASyuB,EAAYh3B,EAAMutB,EAAKhlB,GAE9B,OADW,IAAI0uB,GACHC,KAAKl3B,EAAMutB,EAAKhlB,GAsB9B,SAAS0uB,EAAMt5B,EAAGgF,GAChB7F,KAAKa,EAAIA,EACTb,KAAK6F,EAAIA,EAvENxF,KAAK04B,OACR9D,EAAclD,GAiDhBnC,EAAGrxB,UAAU87B,MAAQ,SAAgB5J,EAAKhlB,GACxC,IACI8a,EAAMvmB,KAAKU,OAAS+vB,EAAI/vB,OAW5B,OAVoB,KAAhBV,KAAKU,QAAgC,KAAf+vB,EAAI/vB,OACtBu0B,EAAYj1B,KAAMywB,EAAKhlB,GACpB8a,EAAM,GACTwL,EAAW/xB,KAAMywB,EAAKhlB,GACnB8a,EAAM,KArDnB,SAAmBrjB,EAAMutB,EAAKhlB,GAC5BA,EAAIskB,SAAWU,EAAIV,SAAW7sB,EAAK6sB,SACnCtkB,EAAI/K,OAASwC,EAAKxC,OAAS+vB,EAAI/vB,OAI/B,IAFA,IAAIa,EAAQ,EACR+4B,EAAU,EACLrI,EAAI,EAAGA,EAAIxmB,EAAI/K,OAAS,EAAGuxB,IAAK,CAGvC,IAAIC,EAASoI,EACbA,EAAU,EAGV,IAFA,IAAInI,EAAgB,SAAR5wB,EACR6wB,EAAO/xB,KAAKiK,IAAI2nB,EAAGxB,EAAI/vB,OAAS,GAC3B2B,EAAIhC,KAAKyF,IAAI,EAAGmsB,EAAI/uB,EAAKxC,OAAS,GAAI2B,GAAK+vB,EAAM/vB,IAAK,CAC7D,IAAI1F,EAAIs1B,EAAI5vB,EAGR5E,GAFoB,EAAhByF,EAAK8sB,MAAMrzB,KACI,EAAf8zB,EAAIT,MAAM3tB,IAGd2vB,EAAS,SAAJv0B,EAGT00B,EAAa,UADbH,EAAMA,EAAKG,EAAS,GAIpBmI,IAFApI,GAHAA,EAAUA,GAAWz0B,EAAI,SAAa,GAAM,IAGxBu0B,IAAO,IAAO,KAEZ,GACtBE,GAAU,SAEZzmB,EAAIukB,MAAMiC,GAAKE,EACf5wB,EAAQ2wB,EACRA,EAASoI,EAQX,OANc,IAAV/4B,EACFkK,EAAIukB,MAAMiC,GAAK1wB,EAEfkK,EAAI/K,SAGC+K,EAAIulB,QAgBHuJ,CAASv6B,KAAMywB,EAAKhlB,GAEpByuB,EAAWl6B,KAAMywB,EAAKhlB,IAchC0uB,EAAK57B,UAAUi8B,QAAU,SAAkBC,GAGzC,IAFA,IAAI58B,EAAI,IAAIiD,MAAM25B,GACd79B,EAAIgzB,EAAGrxB,UAAU40B,WAAWsH,GAAK,EAC5B99B,EAAI,EAAGA,EAAI89B,EAAG99B,IACrBkB,EAAElB,GAAKqD,KAAK06B,OAAO/9B,EAAGC,EAAG69B,GAG3B,OAAO58B,GAITs8B,EAAK57B,UAAUm8B,OAAS,SAAiB75B,EAAGjE,EAAG69B,GAC7C,GAAU,IAAN55B,GAAWA,IAAM45B,EAAI,EAAG,OAAO55B,EAGnC,IADA,IAAI85B,EAAK,EACAh+B,EAAI,EAAGA,EAAIC,EAAGD,IACrBg+B,IAAW,EAAJ95B,IAAWjE,EAAID,EAAI,EAC1BkE,IAAM,EAGR,OAAO85B,GAKTR,EAAK57B,UAAUq8B,QAAU,SAAkBC,EAAKC,EAAKC,EAAKC,EAAMC,EAAMR,GACpE,IAAK,IAAI99B,EAAI,EAAGA,EAAI89B,EAAG99B,IACrBq+B,EAAKr+B,GAAKm+B,EAAID,EAAIl+B,IAClBs+B,EAAKt+B,GAAKo+B,EAAIF,EAAIl+B,KAItBw9B,EAAK57B,UAAUsT,UAAY,SAAoBipB,EAAKC,EAAKC,EAAMC,EAAMR,EAAGI,GACtE76B,KAAK46B,QAAQC,EAAKC,EAAKC,EAAKC,EAAMC,EAAMR,GAExC,IAAK,IAAI/7B,EAAI,EAAGA,EAAI+7B,EAAG/7B,IAAM,EAM3B,IALA,IAAI9B,EAAI8B,GAAK,EAETw8B,EAAQ76B,KAAK86B,IAAI,EAAI96B,KAAK+6B,GAAKx+B,GAC/By+B,EAAQh7B,KAAKi7B,IAAI,EAAIj7B,KAAK+6B,GAAKx+B,GAE1B6B,EAAI,EAAGA,EAAIg8B,EAAGh8B,GAAK7B,EAI1B,IAHA,IAAI2+B,EAASL,EACTM,EAASH,EAEJh5B,EAAI,EAAGA,EAAI3D,EAAG2D,IAAK,CAC1B,IAAIo5B,EAAKT,EAAKv8B,EAAI4D,GACdq5B,EAAKT,EAAKx8B,EAAI4D,GAEds5B,EAAKX,EAAKv8B,EAAI4D,EAAI3D,GAClBk9B,EAAKX,EAAKx8B,EAAI4D,EAAI3D,GAElBm9B,EAAKN,EAASI,EAAKH,EAASI,EAEhCA,EAAKL,EAASK,EAAKJ,EAASG,EAC5BA,EAAKE,EAELb,EAAKv8B,EAAI4D,GAAKo5B,EAAKE,EACnBV,EAAKx8B,EAAI4D,GAAKq5B,EAAKE,EAEnBZ,EAAKv8B,EAAI4D,EAAI3D,GAAK+8B,EAAKE,EACvBV,EAAKx8B,EAAI4D,EAAI3D,GAAKg9B,EAAKE,EAGnBv5B,IAAMzF,IACRi/B,EAAKX,EAAQK,EAASF,EAAQG,EAE9BA,EAASN,EAAQM,EAASH,EAAQE,EAClCA,EAASM,KAOnB1B,EAAK57B,UAAUu9B,YAAc,SAAsB19B,EAAGrB,GACpD,IAAI09B,EAAqB,EAAjBp6B,KAAKyF,IAAI/I,EAAGqB,GAChB29B,EAAU,EAAJtB,EACN99B,EAAI,EACR,IAAK89B,EAAIA,EAAI,EAAI,EAAGA,EAAGA,KAAU,EAC/B99B,IAGF,OAAO,GAAKA,EAAI,EAAIo/B,GAGtB5B,EAAK57B,UAAUy9B,UAAY,SAAoBlB,EAAKC,EAAKN,GACvD,KAAIA,GAAK,GAET,IAAK,IAAI99B,EAAI,EAAGA,EAAI89B,EAAI,EAAG99B,IAAK,CAC9B,IAAIkB,EAAIi9B,EAAIn+B,GAEZm+B,EAAIn+B,GAAKm+B,EAAIL,EAAI99B,EAAI,GACrBm+B,EAAIL,EAAI99B,EAAI,GAAKkB,EAEjBA,EAAIk9B,EAAIp+B,GAERo+B,EAAIp+B,IAAMo+B,EAAIN,EAAI99B,EAAI,GACtBo+B,EAAIN,EAAI99B,EAAI,IAAMkB,IAItBs8B,EAAK57B,UAAU09B,aAAe,SAAuBC,EAAIzB,GAEvD,IADA,IAAIl5B,EAAQ,EACH5E,EAAI,EAAGA,EAAI89B,EAAI,EAAG99B,IAAK,CAC9B,IAAIm0B,EAAoC,KAAhCzwB,KAAK87B,MAAMD,EAAG,EAAIv/B,EAAI,GAAK89B,GACjCp6B,KAAK87B,MAAMD,EAAG,EAAIv/B,GAAK89B,GACvBl5B,EAEF26B,EAAGv/B,GAAS,SAAJm0B,EAGNvvB,EADEuvB,EAAI,SACE,EAEAA,EAAI,SAAY,EAI5B,OAAOoL,GAGT/B,EAAK57B,UAAU69B,WAAa,SAAqBF,EAAI3V,EAAKuU,EAAKL,GAE7D,IADA,IAAIl5B,EAAQ,EACH5E,EAAI,EAAGA,EAAI4pB,EAAK5pB,IACvB4E,GAAyB,EAAR26B,EAAGv/B,GAEpBm+B,EAAI,EAAIn+B,GAAa,KAAR4E,EAAgBA,KAAkB,GAC/Cu5B,EAAI,EAAIn+B,EAAI,GAAa,KAAR4E,EAAgBA,KAAkB,GAIrD,IAAK5E,EAAI,EAAI4pB,EAAK5pB,EAAI89B,IAAK99B,EACzBm+B,EAAIn+B,GAAK,EAGX0yB,EAAiB,IAAV9tB,GACP8tB,EAA6B,KAAb,KAAR9tB,KAGV44B,EAAK57B,UAAU89B,KAAO,SAAe5B,GAEnC,IADA,IAAI6B,EAAK,IAAIx7B,MAAM25B,GACV99B,EAAI,EAAGA,EAAI89B,EAAG99B,IACrB2/B,EAAG3/B,GAAK,EAGV,OAAO2/B,GAGTnC,EAAK57B,UAAU67B,KAAO,SAAev5B,EAAGgF,EAAG4F,GACzC,IAAIgvB,EAAI,EAAIz6B,KAAK87B,YAAYj7B,EAAEH,OAAQmF,EAAEnF,QAErCm6B,EAAM76B,KAAKw6B,QAAQC,GAEnB3Z,EAAI9gB,KAAKq8B,KAAK5B,GAEdK,EAAM,IAAIh6B,MAAM25B,GAChB8B,EAAO,IAAIz7B,MAAM25B,GACjB+B,EAAO,IAAI17B,MAAM25B,GAEjBgC,EAAO,IAAI37B,MAAM25B,GACjBiC,EAAQ,IAAI57B,MAAM25B,GAClBkC,EAAQ,IAAI77B,MAAM25B,GAElBmC,EAAOnxB,EAAIukB,MACf4M,EAAKl8B,OAAS+5B,EAEdz6B,KAAKo8B,WAAWv7B,EAAEmvB,MAAOnvB,EAAEH,OAAQo6B,EAAKL,GACxCz6B,KAAKo8B,WAAWv2B,EAAEmqB,MAAOnqB,EAAEnF,OAAQ+7B,EAAMhC,GAEzCz6B,KAAK6R,UAAUipB,EAAKha,EAAGyb,EAAMC,EAAM/B,EAAGI,GACtC76B,KAAK6R,UAAU4qB,EAAM3b,EAAG4b,EAAOC,EAAOlC,EAAGI,GAEzC,IAAK,IAAIl+B,EAAI,EAAGA,EAAI89B,EAAG99B,IAAK,CAC1B,IAAIk/B,EAAKU,EAAK5/B,GAAK+/B,EAAM//B,GAAK6/B,EAAK7/B,GAAKggC,EAAMhgC,GAC9C6/B,EAAK7/B,GAAK4/B,EAAK5/B,GAAKggC,EAAMhgC,GAAK6/B,EAAK7/B,GAAK+/B,EAAM//B,GAC/C4/B,EAAK5/B,GAAKk/B,EAUZ,OAPA77B,KAAKg8B,UAAUO,EAAMC,EAAM/B,GAC3Bz6B,KAAK6R,UAAU0qB,EAAMC,EAAMI,EAAM9b,EAAG2Z,EAAGI,GACvC76B,KAAKg8B,UAAUY,EAAM9b,EAAG2Z,GACxBz6B,KAAKi8B,aAAaW,EAAMnC,GAExBhvB,EAAIskB,SAAWlvB,EAAEkvB,SAAWlqB,EAAEkqB,SAC9BtkB,EAAI/K,OAASG,EAAEH,OAASmF,EAAEnF,OACnB+K,EAAIulB,SAIbpB,EAAGrxB,UAAUiyB,IAAM,SAAcC,GAC/B,IAAIhlB,EAAM,IAAImkB,EAAG,MAEjB,OADAnkB,EAAIukB,MAAQ,IAAIlvB,MAAMd,KAAKU,OAAS+vB,EAAI/vB,QACjCV,KAAKq6B,MAAM5J,EAAKhlB,IAIzBmkB,EAAGrxB,UAAUs+B,KAAO,SAAepM,GACjC,IAAIhlB,EAAM,IAAImkB,EAAG,MAEjB,OADAnkB,EAAIukB,MAAQ,IAAIlvB,MAAMd,KAAKU,OAAS+vB,EAAI/vB,QACjCw5B,EAAWl6B,KAAMywB,EAAKhlB,IAI/BmkB,EAAGrxB,UAAUw6B,KAAO,SAAetI,GACjC,OAAOzwB,KAAK6kB,QAAQwV,MAAM5J,EAAKzwB,OAGjC4vB,EAAGrxB,UAAU8yB,MAAQ,SAAgBZ,GACnCpB,EAAsB,iBAARoB,GACdpB,EAAOoB,EAAM,UAIb,IADA,IAAIlvB,EAAQ,EACH5E,EAAI,EAAGA,EAAIqD,KAAKU,OAAQ/D,IAAK,CACpC,IAAIm0B,GAAqB,EAAhB9wB,KAAKgwB,MAAMrzB,IAAU8zB,EAC1BuB,GAAU,SAAJlB,IAA0B,SAARvvB,GAC5BA,IAAU,GACVA,GAAUuvB,EAAI,SAAa,EAE3BvvB,GAASywB,IAAO,GAChBhyB,KAAKgwB,MAAMrzB,GAAU,SAALq1B,EAQlB,OALc,IAAVzwB,IACFvB,KAAKgwB,MAAMrzB,GAAK4E,EAChBvB,KAAKU,UAGAV,MAGT4vB,EAAGrxB,UAAUu+B,KAAO,SAAerM,GACjC,OAAOzwB,KAAK6kB,QAAQwM,MAAMZ,IAI5Bb,EAAGrxB,UAAUw+B,IAAM,WACjB,OAAO/8B,KAAKwwB,IAAIxwB,OAIlB4vB,EAAGrxB,UAAUy+B,KAAO,WAClB,OAAOh9B,KAAK+4B,KAAK/4B,KAAK6kB,UAIxB+K,EAAGrxB,UAAUgI,IAAM,SAAckqB,GAC/B,IAAIK,EAxxCN,SAAqBL,GAGnB,IAFA,IAAIK,EAAI,IAAIhwB,MAAM2vB,EAAIvoB,aAEb0sB,EAAM,EAAGA,EAAM9D,EAAEpwB,OAAQk0B,IAAO,CACvC,IAAI7D,EAAO6D,EAAM,GAAM,EACnBC,EAAOD,EAAM,GAEjB9D,EAAE8D,IAAQnE,EAAIT,MAAMe,GAAQ,GAAK8D,KAAWA,EAG9C,OAAO/D,EA8wCCmM,CAAWxM,GACnB,GAAiB,IAAbK,EAAEpwB,OAAc,OAAO,IAAIkvB,EAAG,GAIlC,IADA,IAAImD,EAAM/yB,KACDrD,EAAI,EAAGA,EAAIm0B,EAAEpwB,QACP,IAATowB,EAAEn0B,GADsBA,IAAKo2B,EAAMA,EAAIgK,OAI7C,KAAMpgC,EAAIm0B,EAAEpwB,OACV,IAAK,IAAImC,EAAIkwB,EAAIgK,MAAOpgC,EAAIm0B,EAAEpwB,OAAQ/D,IAAKkG,EAAIA,EAAEk6B,MAClC,IAATjM,EAAEn0B,KAENo2B,EAAMA,EAAIvC,IAAI3tB,IAIlB,OAAOkwB,GAITnD,EAAGrxB,UAAU2+B,OAAS,SAAiBj1B,GACrConB,EAAuB,iBAATpnB,GAAqBA,GAAQ,GAC3C,IAGItL,EAHAc,EAAIwK,EAAO,GACXvJ,GAAKuJ,EAAOxK,GAAK,GACjB0/B,EAAa,WAAe,GAAK1/B,GAAQ,GAAKA,EAGlD,GAAU,IAANA,EAAS,CACX,IAAI8D,EAAQ,EAEZ,IAAK5E,EAAI,EAAGA,EAAIqD,KAAKU,OAAQ/D,IAAK,CAChC,IAAIygC,EAAWp9B,KAAKgwB,MAAMrzB,GAAKwgC,EAC3BngC,GAAsB,EAAhBgD,KAAKgwB,MAAMrzB,IAAUygC,GAAa3/B,EAC5CuC,KAAKgwB,MAAMrzB,GAAKK,EAAIuE,EACpBA,EAAQ67B,IAAc,GAAK3/B,EAGzB8D,IACFvB,KAAKgwB,MAAMrzB,GAAK4E,EAChBvB,KAAKU,UAIT,GAAU,IAANhC,EAAS,CACX,IAAK/B,EAAIqD,KAAKU,OAAS,EAAG/D,GAAK,EAAGA,IAChCqD,KAAKgwB,MAAMrzB,EAAI+B,GAAKsB,KAAKgwB,MAAMrzB,GAGjC,IAAKA,EAAI,EAAGA,EAAI+B,EAAG/B,IACjBqD,KAAKgwB,MAAMrzB,GAAK,EAGlBqD,KAAKU,QAAUhC,EAGjB,OAAOsB,KAAKgxB,SAGdpB,EAAGrxB,UAAU8+B,MAAQ,SAAgBp1B,GAGnC,OADAonB,EAAyB,IAAlBrvB,KAAK+vB,UACL/vB,KAAKk9B,OAAOj1B,IAMrB2nB,EAAGrxB,UAAU00B,OAAS,SAAiBhrB,EAAMq1B,EAAMC,GAEjD,IAAIC,EADJnO,EAAuB,iBAATpnB,GAAqBA,GAAQ,GAGzCu1B,EADEF,GACGA,EAAQA,EAAO,IAAO,GAEvB,EAGN,IAAI7/B,EAAIwK,EAAO,GACXvJ,EAAI2B,KAAKiK,KAAKrC,EAAOxK,GAAK,GAAIuC,KAAKU,QACnC+8B,EAAO,SAAc,WAAchgC,GAAMA,EACzCigC,EAAcH,EAMlB,GAJAC,GAAK9+B,EACL8+B,EAAIn9B,KAAKyF,IAAI,EAAG03B,GAGZE,EAAa,CACf,IAAK,IAAI/gC,EAAI,EAAGA,EAAI+B,EAAG/B,IACrB+gC,EAAY1N,MAAMrzB,GAAKqD,KAAKgwB,MAAMrzB,GAEpC+gC,EAAYh9B,OAAShC,EAGvB,GAAU,IAANA,QAEG,GAAIsB,KAAKU,OAAShC,EAEvB,IADAsB,KAAKU,QAAUhC,EACV/B,EAAI,EAAGA,EAAIqD,KAAKU,OAAQ/D,IAC3BqD,KAAKgwB,MAAMrzB,GAAKqD,KAAKgwB,MAAMrzB,EAAI+B,QAGjCsB,KAAKgwB,MAAM,GAAK,EAChBhwB,KAAKU,OAAS,EAGhB,IAAIa,EAAQ,EACZ,IAAK5E,EAAIqD,KAAKU,OAAS,EAAG/D,GAAK,IAAgB,IAAV4E,GAAe5E,GAAK6gC,GAAI7gC,IAAK,CAChE,IAAIy0B,EAAuB,EAAhBpxB,KAAKgwB,MAAMrzB,GACtBqD,KAAKgwB,MAAMrzB,GAAM4E,GAAU,GAAK9D,EAAO2zB,IAAS3zB,EAChD8D,EAAQ6vB,EAAOqM,EAajB,OATIC,GAAyB,IAAVn8B,IACjBm8B,EAAY1N,MAAM0N,EAAYh9B,UAAYa,GAGxB,IAAhBvB,KAAKU,SACPV,KAAKgwB,MAAM,GAAK,EAChBhwB,KAAKU,OAAS,GAGTV,KAAKgxB,SAGdpB,EAAGrxB,UAAUo/B,MAAQ,SAAgB11B,EAAMq1B,EAAMC,GAG/C,OADAlO,EAAyB,IAAlBrvB,KAAK+vB,UACL/vB,KAAKizB,OAAOhrB,EAAMq1B,EAAMC,IAIjC3N,EAAGrxB,UAAUq/B,KAAO,SAAe31B,GACjC,OAAOjI,KAAK6kB,QAAQwY,MAAMp1B,IAG5B2nB,EAAGrxB,UAAUs/B,MAAQ,SAAgB51B,GACnC,OAAOjI,KAAK6kB,QAAQqY,OAAOj1B,IAI7B2nB,EAAGrxB,UAAUu/B,KAAO,SAAe71B,GACjC,OAAOjI,KAAK6kB,QAAQ8Y,MAAM11B,IAG5B2nB,EAAGrxB,UAAUw/B,MAAQ,SAAgB91B,GACnC,OAAOjI,KAAK6kB,QAAQoO,OAAOhrB,IAI7B2nB,EAAGrxB,UAAUq1B,MAAQ,SAAgBgB,GACnCvF,EAAsB,iBAARuF,GAAoBA,GAAO,GACzC,IAAIn3B,EAAIm3B,EAAM,GACVl2B,GAAKk2B,EAAMn3B,GAAK,GAChBoF,EAAI,GAAKpF,EAGb,QAAIuC,KAAKU,QAAUhC,OAGXsB,KAAKgwB,MAAMtxB,GAELmE,IAIhB+sB,EAAGrxB,UAAUy/B,OAAS,SAAiB/1B,GACrConB,EAAuB,iBAATpnB,GAAqBA,GAAQ,GAC3C,IAAIxK,EAAIwK,EAAO,GACXvJ,GAAKuJ,EAAOxK,GAAK,GAIrB,GAFA4xB,EAAyB,IAAlBrvB,KAAK+vB,SAAgB,2CAExB/vB,KAAKU,QAAUhC,EACjB,OAAOsB,KAQT,GALU,IAANvC,GACFiB,IAEFsB,KAAKU,OAASL,KAAKiK,IAAI5L,EAAGsB,KAAKU,QAErB,IAANjD,EAAS,CACX,IAAIggC,EAAO,SAAc,WAAchgC,GAAMA,EAC7CuC,KAAKgwB,MAAMhwB,KAAKU,OAAS,IAAM+8B,EAGjC,OAAOz9B,KAAKgxB,SAIdpB,EAAGrxB,UAAU0/B,MAAQ,SAAgBh2B,GACnC,OAAOjI,KAAK6kB,QAAQmZ,OAAO/1B,IAI7B2nB,EAAGrxB,UAAUm1B,MAAQ,SAAgBjD,GAGnC,OAFApB,EAAsB,iBAARoB,GACdpB,EAAOoB,EAAM,UACTA,EAAM,EAAUzwB,KAAKk+B,OAAOzN,GAGV,IAAlBzwB,KAAK+vB,SACa,IAAhB/vB,KAAKU,SAAiC,EAAhBV,KAAKgwB,MAAM,IAAUS,GAC7CzwB,KAAKgwB,MAAM,GAAKS,GAAuB,EAAhBzwB,KAAKgwB,MAAM,IAClChwB,KAAK+vB,SAAW,EACT/vB,OAGTA,KAAK+vB,SAAW,EAChB/vB,KAAKk+B,MAAMzN,GACXzwB,KAAK+vB,SAAW,EACT/vB,MAIFA,KAAKsxB,OAAOb,IAGrBb,EAAGrxB,UAAU+yB,OAAS,SAAiBb,GACrCzwB,KAAKgwB,MAAM,IAAMS,EAGjB,IAAK,IAAI9zB,EAAI,EAAGA,EAAIqD,KAAKU,QAAUV,KAAKgwB,MAAMrzB,IAAM,SAAWA,IAC7DqD,KAAKgwB,MAAMrzB,IAAM,SACbA,IAAMqD,KAAKU,OAAS,EACtBV,KAAKgwB,MAAMrzB,EAAI,GAAK,EAEpBqD,KAAKgwB,MAAMrzB,EAAI,KAKnB,OAFAqD,KAAKU,OAASL,KAAKyF,IAAI9F,KAAKU,OAAQ/D,EAAI,GAEjCqD,MAIT4vB,EAAGrxB,UAAU2/B,MAAQ,SAAgBzN,GAGnC,GAFApB,EAAsB,iBAARoB,GACdpB,EAAOoB,EAAM,UACTA,EAAM,EAAG,OAAOzwB,KAAK0zB,OAAOjD,GAEhC,GAAsB,IAAlBzwB,KAAK+vB,SAIP,OAHA/vB,KAAK+vB,SAAW,EAChB/vB,KAAK0zB,MAAMjD,GACXzwB,KAAK+vB,SAAW,EACT/vB,KAKT,GAFAA,KAAKgwB,MAAM,IAAMS,EAEG,IAAhBzwB,KAAKU,QAAgBV,KAAKgwB,MAAM,GAAK,EACvChwB,KAAKgwB,MAAM,IAAMhwB,KAAKgwB,MAAM,GAC5BhwB,KAAK+vB,SAAW,OAGhB,IAAK,IAAIpzB,EAAI,EAAGA,EAAIqD,KAAKU,QAAUV,KAAKgwB,MAAMrzB,GAAK,EAAGA,IACpDqD,KAAKgwB,MAAMrzB,IAAM,SACjBqD,KAAKgwB,MAAMrzB,EAAI,IAAM,EAIzB,OAAOqD,KAAKgxB,SAGdpB,EAAGrxB,UAAU4/B,KAAO,SAAe1N,GACjC,OAAOzwB,KAAK6kB,QAAQ6O,MAAMjD,IAG5Bb,EAAGrxB,UAAU6/B,KAAO,SAAe3N,GACjC,OAAOzwB,KAAK6kB,QAAQqZ,MAAMzN,IAG5Bb,EAAGrxB,UAAU8/B,KAAO,WAGlB,OAFAr+B,KAAK+vB,SAAW,EAET/vB,MAGT4vB,EAAGrxB,UAAU8E,IAAM,WACjB,OAAOrD,KAAK6kB,QAAQwZ,QAGtBzO,EAAGrxB,UAAU+/B,aAAe,SAAuB7N,EAAKD,EAAKhtB,GAC3D,IACI7G,EAIAm0B,EALAvK,EAAMkK,EAAI/vB,OAAS8C,EAGvBxD,KAAKyxB,QAAQlL,GAGb,IAAIhlB,EAAQ,EACZ,IAAK5E,EAAI,EAAGA,EAAI8zB,EAAI/vB,OAAQ/D,IAAK,CAC/Bm0B,GAA6B,EAAxB9wB,KAAKgwB,MAAMrzB,EAAI6G,IAAcjC,EAClC,IAAI4jB,GAAwB,EAAfsL,EAAIT,MAAMrzB,IAAU6zB,EAEjCjvB,IADAuvB,GAAa,SAAR3L,IACS,KAAQA,EAAQ,SAAa,GAC3CnlB,KAAKgwB,MAAMrzB,EAAI6G,GAAa,SAAJstB,EAE1B,KAAOn0B,EAAIqD,KAAKU,OAAS8C,EAAO7G,IAE9B4E,GADAuvB,GAA6B,EAAxB9wB,KAAKgwB,MAAMrzB,EAAI6G,IAAcjC,IACrB,GACbvB,KAAKgwB,MAAMrzB,EAAI6G,GAAa,SAAJstB,EAG1B,GAAc,IAAVvvB,EAAa,OAAOvB,KAAKgxB,QAK7B,IAFA3B,GAAkB,IAAX9tB,GACPA,EAAQ,EACH5E,EAAI,EAAGA,EAAIqD,KAAKU,OAAQ/D,IAE3B4E,GADAuvB,IAAsB,EAAhB9wB,KAAKgwB,MAAMrzB,IAAU4E,IACd,GACbvB,KAAKgwB,MAAMrzB,GAAS,SAAJm0B,EAIlB,OAFA9wB,KAAK+vB,SAAW,EAET/vB,KAAKgxB,SAGdpB,EAAGrxB,UAAUggC,SAAW,SAAmB9N,EAAK3yB,GAC9C,IAAI0F,GAAQxD,KAAKU,OAAS+vB,EAAI/vB,QAE1BQ,EAAIlB,KAAK6kB,QACT1jB,EAAIsvB,EAGJ+N,EAA8B,EAAxBr9B,EAAE6uB,MAAM7uB,EAAET,OAAS,GAGf,KADd8C,EAAQ,GADMxD,KAAKmzB,WAAWqL,MAG5Br9B,EAAIA,EAAE08B,MAAMr6B,GACZtC,EAAEg8B,OAAO15B,GACTg7B,EAA8B,EAAxBr9B,EAAE6uB,MAAM7uB,EAAET,OAAS,IAI3B,IACImC,EADA9F,EAAImE,EAAER,OAASS,EAAET,OAGrB,GAAa,QAAT5C,EAAgB,EAClB+E,EAAI,IAAI+sB,EAAG,OACTlvB,OAAS3D,EAAI,EACf8F,EAAEmtB,MAAQ,IAAIlvB,MAAM+B,EAAEnC,QACtB,IAAK,IAAI/D,EAAI,EAAGA,EAAIkG,EAAEnC,OAAQ/D,IAC5BkG,EAAEmtB,MAAMrzB,GAAK,EAIjB,IAAI8hC,EAAOv9B,EAAE2jB,QAAQyZ,aAAan9B,EAAG,EAAGpE,GAClB,IAAlB0hC,EAAK1O,WACP7uB,EAAIu9B,EACA57B,IACFA,EAAEmtB,MAAMjzB,GAAK,IAIjB,IAAK,IAAIsF,EAAItF,EAAI,EAAGsF,GAAK,EAAGA,IAAK,CAC/B,IAAIq8B,EAAmC,UAAL,EAAxBx9B,EAAE8uB,MAAM7uB,EAAET,OAAS2B,KACE,EAA5BnB,EAAE8uB,MAAM7uB,EAAET,OAAS2B,EAAI,IAO1B,IAHAq8B,EAAKr+B,KAAKiK,IAAKo0B,EAAKF,EAAO,EAAG,UAE9Bt9B,EAAEo9B,aAAan9B,EAAGu9B,EAAIr8B,GACA,IAAfnB,EAAE6uB,UACP2O,IACAx9B,EAAE6uB,SAAW,EACb7uB,EAAEo9B,aAAan9B,EAAG,EAAGkB,GAChBnB,EAAE4F,WACL5F,EAAE6uB,UAAY,GAGdltB,IACFA,EAAEmtB,MAAM3tB,GAAKq8B,GAajB,OAVI77B,GACFA,EAAEmuB,QAEJ9vB,EAAE8vB,QAGW,QAATlzB,GAA4B,IAAV0F,GACpBtC,EAAE+xB,OAAOzvB,GAGJ,CACLm7B,IAAK97B,GAAK,KACVyB,IAAKpD,IAQT0uB,EAAGrxB,UAAU8H,OAAS,SAAiBoqB,EAAK3yB,EAAM8gC,GAGhD,OAFAvP,GAAQoB,EAAI3pB,UAER9G,KAAK8G,SACA,CACL63B,IAAK,IAAI/O,EAAG,GACZtrB,IAAK,IAAIsrB,EAAG,IAKM,IAAlB5vB,KAAK+vB,UAAmC,IAAjBU,EAAIV,UAC7BgD,EAAM/yB,KAAKuL,MAAMlF,OAAOoqB,EAAK3yB,GAEhB,QAATA,IACF6gC,EAAM5L,EAAI4L,IAAIpzB,OAGH,QAATzN,IACFwG,EAAMyuB,EAAIzuB,IAAIiH,MACVqzB,GAA6B,IAAjBt6B,EAAIyrB,UAClBzrB,EAAIwwB,KAAKrE,IAIN,CACLkO,IAAKA,EACLr6B,IAAKA,IAIa,IAAlBtE,KAAK+vB,UAAmC,IAAjBU,EAAIV,UAC7BgD,EAAM/yB,KAAKqG,OAAOoqB,EAAIllB,MAAOzN,GAEhB,QAATA,IACF6gC,EAAM5L,EAAI4L,IAAIpzB,OAGT,CACLozB,IAAKA,EACLr6B,IAAKyuB,EAAIzuB,MAI0B,IAAlCtE,KAAK+vB,SAAWU,EAAIV,WACvBgD,EAAM/yB,KAAKuL,MAAMlF,OAAOoqB,EAAIllB,MAAOzN,GAEtB,QAATA,IACFwG,EAAMyuB,EAAIzuB,IAAIiH,MACVqzB,GAA6B,IAAjBt6B,EAAIyrB,UAClBzrB,EAAIywB,KAAKtE,IAIN,CACLkO,IAAK5L,EAAI4L,IACTr6B,IAAKA,IAOLmsB,EAAI/vB,OAASV,KAAKU,QAAUV,KAAKwN,IAAIijB,GAAO,EACvC,CACLkO,IAAK,IAAI/O,EAAG,GACZtrB,IAAKtE,MAKU,IAAfywB,EAAI/vB,OACO,QAAT5C,EACK,CACL6gC,IAAK3+B,KAAK6+B,KAAKpO,EAAIT,MAAM,IACzB1rB,IAAK,MAII,QAATxG,EACK,CACL6gC,IAAK,KACLr6B,IAAK,IAAIsrB,EAAG5vB,KAAKuyB,KAAK9B,EAAIT,MAAM,MAI7B,CACL2O,IAAK3+B,KAAK6+B,KAAKpO,EAAIT,MAAM,IACzB1rB,IAAK,IAAIsrB,EAAG5vB,KAAKuyB,KAAK9B,EAAIT,MAAM,MAI7BhwB,KAAKu+B,SAAS9N,EAAK3yB,GAlF1B,IAAI6gC,EAAKr6B,EAAKyuB,GAsFhBnD,EAAGrxB,UAAUogC,IAAM,SAAclO,GAC/B,OAAOzwB,KAAKqG,OAAOoqB,EAAK,OAAO,GAAOkO,KAIxC/O,EAAGrxB,UAAU+F,IAAM,SAAcmsB,GAC/B,OAAOzwB,KAAKqG,OAAOoqB,EAAK,OAAO,GAAOnsB,KAGxCsrB,EAAGrxB,UAAUugC,KAAO,SAAerO,GACjC,OAAOzwB,KAAKqG,OAAOoqB,EAAK,OAAO,GAAMnsB,KAIvCsrB,EAAGrxB,UAAUwgC,SAAW,SAAmBtO,GACzC,IAAIuO,EAAKh/B,KAAKqG,OAAOoqB,GAGrB,GAAIuO,EAAG16B,IAAIwC,SAAU,OAAOk4B,EAAGL,IAE/B,IAAIr6B,EAA0B,IAApB06B,EAAGL,IAAI5O,SAAiBiP,EAAG16B,IAAIywB,KAAKtE,GAAOuO,EAAG16B,IAEpD26B,EAAOxO,EAAIsN,MAAM,GACjBmB,EAAKzO,EAAIuC,MAAM,GACfxlB,EAAMlJ,EAAIkJ,IAAIyxB,GAGlB,OAAIzxB,EAAM,GAAY,IAAP0xB,GAAoB,IAAR1xB,EAAkBwxB,EAAGL,IAGrB,IAApBK,EAAGL,IAAI5O,SAAiBiP,EAAGL,IAAIT,MAAM,GAAKc,EAAGL,IAAIjL,MAAM,IAGhE9D,EAAGrxB,UAAUg0B,KAAO,SAAe9B,GACjCpB,EAAOoB,GAAO,UAId,IAHA,IAAIhyB,GAAK,GAAK,IAAMgyB,EAEhB0O,EAAM,EACDxiC,EAAIqD,KAAKU,OAAS,EAAG/D,GAAK,EAAGA,IACpCwiC,GAAO1gC,EAAI0gC,GAAuB,EAAhBn/B,KAAKgwB,MAAMrzB,KAAW8zB,EAG1C,OAAO0O,GAITvP,EAAGrxB,UAAUi0B,MAAQ,SAAgB/B,GACnCpB,EAAOoB,GAAO,UAGd,IADA,IAAIlvB,EAAQ,EACH5E,EAAIqD,KAAKU,OAAS,EAAG/D,GAAK,EAAGA,IAAK,CACzC,IAAIm0B,GAAqB,EAAhB9wB,KAAKgwB,MAAMrzB,IAAkB,SAAR4E,EAC9BvB,KAAKgwB,MAAMrzB,GAAMm0B,EAAIL,EAAO,EAC5BlvB,EAAQuvB,EAAIL,EAGd,OAAOzwB,KAAKgxB,SAGdpB,EAAGrxB,UAAUsgC,KAAO,SAAepO,GACjC,OAAOzwB,KAAK6kB,QAAQ2N,MAAM/B,IAG5Bb,EAAGrxB,UAAU6gC,KAAO,SAAe3gC,GACjC4wB,EAAsB,IAAf5wB,EAAEsxB,UACTV,GAAQ5wB,EAAEqI,UAEV,IAAIjG,EAAIb,KACJ6F,EAAIpH,EAAEomB,QAGRhkB,EADiB,IAAfA,EAAEkvB,SACAlvB,EAAEi+B,KAAKrgC,GAEPoC,EAAEgkB,QAaR,IATA,IAAIwa,EAAI,IAAIzP,EAAG,GACX0P,EAAI,IAAI1P,EAAG,GAGX2P,EAAI,IAAI3P,EAAG,GACX4P,EAAI,IAAI5P,EAAG,GAEX6P,EAAI,EAED5+B,EAAE8D,UAAYkB,EAAElB,UACrB9D,EAAEoyB,OAAO,GACTptB,EAAEotB,OAAO,KACPwM,EAMJ,IAHA,IAAIC,EAAK75B,EAAEgf,QACP8a,EAAK9+B,EAAEgkB,SAEHhkB,EAAEiG,UAAU,CAClB,IAAK,IAAInK,EAAI,EAAGijC,EAAK,EAAyB,IAArB/+B,EAAEmvB,MAAM,GAAK4P,IAAajjC,EAAI,KAAMA,EAAGijC,IAAO,GACvE,GAAIjjC,EAAI,EAEN,IADAkE,EAAEoyB,OAAOt2B,GACFA,KAAM,IACP0iC,EAAEp4B,SAAWq4B,EAAEr4B,WACjBo4B,EAAEvK,KAAK4K,GACPJ,EAAEvK,KAAK4K,IAGTN,EAAEpM,OAAO,GACTqM,EAAErM,OAAO,GAIb,IAAK,IAAI5wB,EAAI,EAAGw9B,EAAK,EAAyB,IAArBh6B,EAAEmqB,MAAM,GAAK6P,IAAax9B,EAAI,KAAMA,EAAGw9B,IAAO,GACvE,GAAIx9B,EAAI,EAEN,IADAwD,EAAEotB,OAAO5wB,GACFA,KAAM,IACPk9B,EAAEt4B,SAAWu4B,EAAEv4B,WACjBs4B,EAAEzK,KAAK4K,GACPF,EAAEzK,KAAK4K,IAGTJ,EAAEtM,OAAO,GACTuM,EAAEvM,OAAO,GAITpyB,EAAE2M,IAAI3H,IAAM,GACdhF,EAAEk0B,KAAKlvB,GACPw5B,EAAEtK,KAAKwK,GACPD,EAAEvK,KAAKyK,KAEP35B,EAAEkvB,KAAKl0B,GACP0+B,EAAExK,KAAKsK,GACPG,EAAEzK,KAAKuK,IAIX,MAAO,CACLp+B,EAAGq+B,EACHp+B,EAAGq+B,EACHj1B,IAAK1E,EAAEq3B,OAAOuC,KAOlB7P,EAAGrxB,UAAUuhC,OAAS,SAAiBrhC,GACrC4wB,EAAsB,IAAf5wB,EAAEsxB,UACTV,GAAQ5wB,EAAEqI,UAEV,IAAI5F,EAAIlB,KACJmB,EAAI1C,EAAEomB,QAGR3jB,EADiB,IAAfA,EAAE6uB,SACA7uB,EAAE49B,KAAKrgC,GAEPyC,EAAE2jB,QAQR,IALA,IAuCIkO,EAvCAgN,EAAK,IAAInQ,EAAG,GACZoQ,EAAK,IAAIpQ,EAAG,GAEZqQ,EAAQ9+B,EAAE0jB,QAEP3jB,EAAEg/B,KAAK,GAAK,GAAK/+B,EAAE++B,KAAK,GAAK,GAAG,CACrC,IAAK,IAAIvjC,EAAI,EAAGijC,EAAK,EAAyB,IAArB1+B,EAAE8uB,MAAM,GAAK4P,IAAajjC,EAAI,KAAMA,EAAGijC,IAAO,GACvE,GAAIjjC,EAAI,EAEN,IADAuE,EAAE+xB,OAAOt2B,GACFA,KAAM,GACPojC,EAAG94B,SACL84B,EAAGjL,KAAKmL,GAGVF,EAAG9M,OAAO,GAId,IAAK,IAAI5wB,EAAI,EAAGw9B,EAAK,EAAyB,IAArB1+B,EAAE6uB,MAAM,GAAK6P,IAAax9B,EAAI,KAAMA,EAAGw9B,IAAO,GACvE,GAAIx9B,EAAI,EAEN,IADAlB,EAAE8xB,OAAO5wB,GACFA,KAAM,GACP29B,EAAG/4B,SACL+4B,EAAGlL,KAAKmL,GAGVD,EAAG/M,OAAO,GAIV/xB,EAAEsM,IAAIrM,IAAM,GACdD,EAAE6zB,KAAK5zB,GACP4+B,EAAGhL,KAAKiL,KAER7+B,EAAE4zB,KAAK7zB,GACP8+B,EAAGjL,KAAKgL,IAeZ,OATEhN,EADgB,IAAd7xB,EAAEg/B,KAAK,GACHH,EAEAC,GAGAE,KAAK,GAAK,GAChBnN,EAAI+B,KAAKr2B,GAGJs0B,GAGTnD,EAAGrxB,UAAUgM,IAAM,SAAckmB,GAC/B,GAAIzwB,KAAK8G,SAAU,OAAO2pB,EAAIptB,MAC9B,GAAIotB,EAAI3pB,SAAU,OAAO9G,KAAKqD,MAE9B,IAAInC,EAAIlB,KAAK6kB,QACT1jB,EAAIsvB,EAAI5L,QACZ3jB,EAAE6uB,SAAW,EACb5uB,EAAE4uB,SAAW,EAGb,IAAK,IAAIvsB,EAAQ,EAAGtC,EAAEyD,UAAYxD,EAAEwD,SAAUnB,IAC5CtC,EAAE+xB,OAAO,GACT9xB,EAAE8xB,OAAO,GAGX,OAAG,CACD,KAAO/xB,EAAEyD,UACPzD,EAAE+xB,OAAO,GAEX,KAAO9xB,EAAEwD,UACPxD,EAAE8xB,OAAO,GAGX,IAAIx1B,EAAIyD,EAAEsM,IAAIrM,GACd,GAAI1D,EAAI,EAAG,CAET,IAAII,EAAIqD,EACRA,EAAIC,EACJA,EAAItD,OACC,GAAU,IAANJ,GAAyB,IAAd0D,EAAE++B,KAAK,GAC3B,MAGFh/B,EAAE6zB,KAAK5zB,GAGT,OAAOA,EAAE+7B,OAAO15B,IAIlBosB,EAAGrxB,UAAU4hC,KAAO,SAAe1P,GACjC,OAAOzwB,KAAKo/B,KAAK3O,GAAKvvB,EAAE49B,KAAKrO,IAG/Bb,EAAGrxB,UAAUoG,OAAS,WACpB,OAA+B,IAAP,EAAhB3E,KAAKgwB,MAAM,KAGrBJ,EAAGrxB,UAAU0I,MAAQ,WACnB,OAA+B,IAAP,EAAhBjH,KAAKgwB,MAAM,KAIrBJ,EAAGrxB,UAAUy0B,MAAQ,SAAgBvC,GACnC,OAAOzwB,KAAKgwB,MAAM,GAAKS,GAIzBb,EAAGrxB,UAAU6hC,MAAQ,SAAgBxL,GACnCvF,EAAsB,iBAARuF,GACd,IAAIn3B,EAAIm3B,EAAM,GACVl2B,GAAKk2B,EAAMn3B,GAAK,GAChBoF,EAAI,GAAKpF,EAGb,GAAIuC,KAAKU,QAAUhC,EAGjB,OAFAsB,KAAKyxB,QAAQ/yB,EAAI,GACjBsB,KAAKgwB,MAAMtxB,IAAMmE,EACV7C,KAKT,IADA,IAAIuB,EAAQsB,EACHlG,EAAI+B,EAAa,IAAV6C,GAAe5E,EAAIqD,KAAKU,OAAQ/D,IAAK,CACnD,IAAIm0B,EAAoB,EAAhB9wB,KAAKgwB,MAAMrzB,GAEnB4E,GADAuvB,GAAKvvB,KACS,GACduvB,GAAK,SACL9wB,KAAKgwB,MAAMrzB,GAAKm0B,EAMlB,OAJc,IAAVvvB,IACFvB,KAAKgwB,MAAMrzB,GAAK4E,EAChBvB,KAAKU,UAEAV,MAGT4vB,EAAGrxB,UAAUuI,OAAS,WACpB,OAAuB,IAAhB9G,KAAKU,QAAkC,IAAlBV,KAAKgwB,MAAM,IAGzCJ,EAAGrxB,UAAU2hC,KAAO,SAAezP,GACjC,IAOIsC,EAPAhD,EAAWU,EAAM,EAErB,GAAsB,IAAlBzwB,KAAK+vB,WAAmBA,EAAU,OAAQ,EAC9C,GAAsB,IAAlB/vB,KAAK+vB,UAAkBA,EAAU,OAAO,EAK5C,GAHA/vB,KAAKgxB,QAGDhxB,KAAKU,OAAS,EAChBqyB,EAAM,MACD,CACDhD,IACFU,GAAOA,GAGTpB,EAAOoB,GAAO,SAAW,qBAEzB,IAAIK,EAAoB,EAAhB9wB,KAAKgwB,MAAM,GACnB+C,EAAMjC,IAAML,EAAM,EAAIK,EAAIL,GAAO,EAAI,EAEvC,OAAsB,IAAlBzwB,KAAK+vB,SAA8B,GAANgD,EAC1BA,GAOTnD,EAAGrxB,UAAUiP,IAAM,SAAcijB,GAC/B,GAAsB,IAAlBzwB,KAAK+vB,UAAmC,IAAjBU,EAAIV,SAAgB,OAAQ,EACvD,GAAsB,IAAlB/vB,KAAK+vB,UAAmC,IAAjBU,EAAIV,SAAgB,OAAO,EAEtD,IAAIgD,EAAM/yB,KAAKqgC,KAAK5P,GACpB,OAAsB,IAAlBzwB,KAAK+vB,SAA8B,GAANgD,EAC1BA,GAITnD,EAAGrxB,UAAU8hC,KAAO,SAAe5P,GAEjC,GAAIzwB,KAAKU,OAAS+vB,EAAI/vB,OAAQ,OAAO,EACrC,GAAIV,KAAKU,OAAS+vB,EAAI/vB,OAAQ,OAAQ,EAGtC,IADA,IAAIqyB,EAAM,EACDp2B,EAAIqD,KAAKU,OAAS,EAAG/D,GAAK,EAAGA,IAAK,CACzC,IAAIuE,EAAoB,EAAhBlB,KAAKgwB,MAAMrzB,GACfwE,EAAmB,EAAfsvB,EAAIT,MAAMrzB,GAElB,GAAIuE,IAAMC,EAAV,CACID,EAAIC,EACN4xB,GAAO,EACE7xB,EAAIC,IACb4xB,EAAM,GAER,OAEF,OAAOA,GAGTnD,EAAGrxB,UAAU+hC,IAAM,SAAc7P,GAC/B,OAA0B,IAAnBzwB,KAAKkgC,KAAKzP,IAGnBb,EAAGrxB,UAAUkJ,GAAK,SAAagpB,GAC7B,OAAyB,IAAlBzwB,KAAKwN,IAAIijB,IAGlBb,EAAGrxB,UAAUgiC,KAAO,SAAe9P,GACjC,OAAOzwB,KAAKkgC,KAAKzP,IAAQ,GAG3Bb,EAAGrxB,UAAUiiC,IAAM,SAAc/P,GAC/B,OAAOzwB,KAAKwN,IAAIijB,IAAQ,GAG1Bb,EAAGrxB,UAAUkiC,IAAM,SAAchQ,GAC/B,OAA2B,IAApBzwB,KAAKkgC,KAAKzP,IAGnBb,EAAGrxB,UAAUmJ,GAAK,SAAa+oB,GAC7B,OAA0B,IAAnBzwB,KAAKwN,IAAIijB,IAGlBb,EAAGrxB,UAAUmiC,KAAO,SAAejQ,GACjC,OAAOzwB,KAAKkgC,KAAKzP,IAAQ,GAG3Bb,EAAGrxB,UAAUoiC,IAAM,SAAclQ,GAC/B,OAAOzwB,KAAKwN,IAAIijB,IAAQ,GAG1Bb,EAAGrxB,UAAUqiC,IAAM,SAAcnQ,GAC/B,OAA0B,IAAnBzwB,KAAKkgC,KAAKzP,IAGnBb,EAAGrxB,UAAU8I,GAAK,SAAaopB,GAC7B,OAAyB,IAAlBzwB,KAAKwN,IAAIijB,IAOlBb,EAAGK,IAAM,SAAcQ,GACrB,OAAO,IAAIoQ,EAAIpQ,IAGjBb,EAAGrxB,UAAUuiC,MAAQ,SAAgBC,GAGnC,OAFA1R,GAAQrvB,KAAKiwB,IAAK,yCAClBZ,EAAyB,IAAlBrvB,KAAK+vB,SAAgB,iCACrBgR,EAAIC,UAAUhhC,MAAMihC,UAAUF,IAGvCnR,EAAGrxB,UAAU2iC,QAAU,WAErB,OADA7R,EAAOrvB,KAAKiwB,IAAK,wDACVjwB,KAAKiwB,IAAIkR,YAAYnhC,OAG9B4vB,EAAGrxB,UAAU0iC,UAAY,SAAoBF,GAE3C,OADA/gC,KAAKiwB,IAAM8Q,EACJ/gC,MAGT4vB,EAAGrxB,UAAU6iC,SAAW,SAAmBL,GAEzC,OADA1R,GAAQrvB,KAAKiwB,IAAK,yCACXjwB,KAAKihC,UAAUF,IAGxBnR,EAAGrxB,UAAU8iC,OAAS,SAAiB5Q,GAErC,OADApB,EAAOrvB,KAAKiwB,IAAK,sCACVjwB,KAAKiwB,IAAIhvB,IAAIjB,KAAMywB,IAG5Bb,EAAGrxB,UAAU+iC,QAAU,SAAkB7Q,GAEvC,OADApB,EAAOrvB,KAAKiwB,IAAK,uCACVjwB,KAAKiwB,IAAI6E,KAAK90B,KAAMywB,IAG7Bb,EAAGrxB,UAAUgjC,OAAS,SAAiB9Q,GAErC,OADApB,EAAOrvB,KAAKiwB,IAAK,sCACVjwB,KAAKiwB,IAAI+E,IAAIh1B,KAAMywB,IAG5Bb,EAAGrxB,UAAUijC,QAAU,SAAkB/Q,GAEvC,OADApB,EAAOrvB,KAAKiwB,IAAK,uCACVjwB,KAAKiwB,IAAI8E,KAAK/0B,KAAMywB,IAG7Bb,EAAGrxB,UAAUkjC,OAAS,SAAiBhR,GAErC,OADApB,EAAOrvB,KAAKiwB,IAAK,sCACVjwB,KAAKiwB,IAAIyR,IAAI1hC,KAAMywB,IAG5Bb,EAAGrxB,UAAUojC,OAAS,SAAiBlR,GAGrC,OAFApB,EAAOrvB,KAAKiwB,IAAK,sCACjBjwB,KAAKiwB,IAAI2R,SAAS5hC,KAAMywB,GACjBzwB,KAAKiwB,IAAIO,IAAIxwB,KAAMywB,IAG5Bb,EAAGrxB,UAAUsjC,QAAU,SAAkBpR,GAGvC,OAFApB,EAAOrvB,KAAKiwB,IAAK,sCACjBjwB,KAAKiwB,IAAI2R,SAAS5hC,KAAMywB,GACjBzwB,KAAKiwB,IAAI8I,KAAK/4B,KAAMywB,IAG7Bb,EAAGrxB,UAAUujC,OAAS,WAGpB,OAFAzS,EAAOrvB,KAAKiwB,IAAK,sCACjBjwB,KAAKiwB,IAAI8R,SAAS/hC,MACXA,KAAKiwB,IAAI8M,IAAI/8B,OAGtB4vB,EAAGrxB,UAAUyjC,QAAU,WAGrB,OAFA3S,EAAOrvB,KAAKiwB,IAAK,uCACjBjwB,KAAKiwB,IAAI8R,SAAS/hC,MACXA,KAAKiwB,IAAI+M,KAAKh9B,OAIvB4vB,EAAGrxB,UAAU0jC,QAAU,WAGrB,OAFA5S,EAAOrvB,KAAKiwB,IAAK,uCACjBjwB,KAAKiwB,IAAI8R,SAAS/hC,MACXA,KAAKiwB,IAAIiS,KAAKliC,OAGvB4vB,EAAGrxB,UAAU4jC,QAAU,WAGrB,OAFA9S,EAAOrvB,KAAKiwB,IAAK,uCACjBjwB,KAAKiwB,IAAI8R,SAAS/hC,MACXA,KAAKiwB,IAAIkQ,KAAKngC,OAIvB4vB,EAAGrxB,UAAU6jC,OAAS,WAGpB,OAFA/S,EAAOrvB,KAAKiwB,IAAK,sCACjBjwB,KAAKiwB,IAAI8R,SAAS/hC,MACXA,KAAKiwB,IAAI1kB,IAAIvL,OAGtB4vB,EAAGrxB,UAAU8jC,OAAS,SAAiB5R,GAGrC,OAFApB,EAAOrvB,KAAKiwB,MAAQQ,EAAIR,IAAK,qBAC7BjwB,KAAKiwB,IAAI8R,SAAS/hC,MACXA,KAAKiwB,IAAI1pB,IAAIvG,KAAMywB,IAI5B,IAAI6R,EAAS,CACXC,KAAM,KACNC,KAAM,KACNC,KAAM,KACNC,OAAQ,MAIV,SAASC,EAAQzlC,EAAMuB,GAErBuB,KAAK9C,KAAOA,EACZ8C,KAAKvB,EAAI,IAAImxB,EAAGnxB,EAAG,IACnBuB,KAAK5B,EAAI4B,KAAKvB,EAAEyJ,YAChBlI,KAAKiyB,EAAI,IAAIrC,EAAG,GAAGsN,OAAOl9B,KAAK5B,GAAG22B,KAAK/0B,KAAKvB,GAE5CuB,KAAKyK,IAAMzK,KAAK4iC,OAiDlB,SAASC,IACPF,EAAO7lC,KACLkD,KACA,OACA,2EA+DJ,SAAS8iC,IACPH,EAAO7lC,KACLkD,KACA,OACA,kEAIJ,SAAS+iC,IACPJ,EAAO7lC,KACLkD,KACA,OACA,yDAIJ,SAASgjC,IAEPL,EAAO7lC,KACLkD,KACA,QACA,uEA8CJ,SAAS6gC,EAAK9jC,GACZ,GAAiB,iBAANA,EAAgB,CACzB,IAAIkmC,EAAQrT,EAAGsT,OAAOnmC,GACtBiD,KAAKjD,EAAIkmC,EAAMxkC,EACfuB,KAAKijC,MAAQA,OAEb5T,EAAOtyB,EAAEujC,IAAI,GAAI,kCACjBtgC,KAAKjD,EAAIA,EACTiD,KAAKijC,MAAQ,KAkOjB,SAASE,EAAMpmC,GACb8jC,EAAI/jC,KAAKkD,KAAMjD,GAEfiD,KAAKwD,MAAQxD,KAAKjD,EAAEmL,YAChBlI,KAAKwD,MAAQ,IAAO,IACtBxD,KAAKwD,OAAS,GAAMxD,KAAKwD,MAAQ,IAGnCxD,KAAKvC,EAAI,IAAImyB,EAAG,GAAGsN,OAAOl9B,KAAKwD,OAC/BxD,KAAKk/B,GAAKl/B,KAAKojC,KAAKpjC,KAAKvC,EAAEs/B,OAC3B/8B,KAAKqjC,KAAOrjC,KAAKvC,EAAEqiC,OAAO9/B,KAAKjD,GAE/BiD,KAAKsjC,KAAOtjC,KAAKqjC,KAAK7S,IAAIxwB,KAAKvC,GAAGygC,MAAM,GAAGS,IAAI3+B,KAAKjD,GACpDiD,KAAKsjC,KAAOtjC,KAAKsjC,KAAKxE,KAAK9+B,KAAKvC,GAChCuC,KAAKsjC,KAAOtjC,KAAKvC,EAAEu3B,IAAIh1B,KAAKsjC,MA5a9BX,EAAOpkC,UAAUqkC,KAAO,WACtB,IAAIn4B,EAAM,IAAImlB,EAAG,MAEjB,OADAnlB,EAAIulB,MAAQ,IAAIlvB,MAAMT,KAAKW,KAAKhB,KAAK5B,EAAI,KAClCqM,GAGTk4B,EAAOpkC,UAAUglC,QAAU,SAAkB9S,GAG3C,IACI+S,EADA/lC,EAAIgzB,EAGR,GACEzwB,KAAKgM,MAAMvO,EAAGuC,KAAKyK,KAGnB+4B,GADA/lC,GADAA,EAAIuC,KAAKyjC,MAAMhmC,IACTq3B,KAAK90B,KAAKyK,MACPvC,kBACFs7B,EAAOxjC,KAAK5B,GAErB,IAAIoP,EAAMg2B,EAAOxjC,KAAK5B,GAAK,EAAIX,EAAE4iC,KAAKrgC,KAAKvB,GAgB3C,OAfY,IAAR+O,GACF/P,EAAEuyB,MAAM,GAAK,EACbvyB,EAAEiD,OAAS,GACF8M,EAAM,EACf/P,EAAEs3B,KAAK/0B,KAAKvB,QAEI4P,IAAZ5Q,EAAEuzB,MAEJvzB,EAAEuzB,QAGFvzB,EAAEimC,SAICjmC,GAGTklC,EAAOpkC,UAAUyN,MAAQ,SAAgB+O,EAAOtP,GAC9CsP,EAAMkY,OAAOjzB,KAAK5B,EAAG,EAAGqN,IAG1Bk3B,EAAOpkC,UAAUklC,MAAQ,SAAgBhT,GACvC,OAAOA,EAAIsI,KAAK/4B,KAAKiyB,IASvB1C,EAASsT,EAAMF,GAEfE,EAAKtkC,UAAUyN,MAAQ,SAAgB+O,EAAOE,GAK5C,IAHA,IAEI0oB,EAAStjC,KAAKiK,IAAIyQ,EAAMra,OAAQ,GAC3B/D,EAAI,EAAGA,EAAIgnC,EAAQhnC,IAC1Bse,EAAO+U,MAAMrzB,GAAKoe,EAAMiV,MAAMrzB,GAIhC,GAFAse,EAAOva,OAASijC,EAEZ5oB,EAAMra,QAAU,EAGlB,OAFAqa,EAAMiV,MAAM,GAAK,OACjBjV,EAAMra,OAAS,GAKjB,IAAIsE,EAAO+V,EAAMiV,MAAM,GAGvB,IAFA/U,EAAO+U,MAAM/U,EAAOva,UAhBT,QAgBqBsE,EAE3BrI,EAAI,GAAIA,EAAIoe,EAAMra,OAAQ/D,IAAK,CAClC,IAAIuI,EAAwB,EAAjB6V,EAAMiV,MAAMrzB,GACvBoe,EAAMiV,MAAMrzB,EAAI,KApBP,QAoBeuI,IAAgB,EAAMF,IAAS,GACvDA,EAAOE,EAETF,KAAU,GACV+V,EAAMiV,MAAMrzB,EAAI,IAAMqI,EACT,IAATA,GAAc+V,EAAMra,OAAS,GAC/Bqa,EAAMra,QAAU,GAEhBqa,EAAMra,QAAU,GAIpBmiC,EAAKtkC,UAAUklC,MAAQ,SAAgBhT,GAErCA,EAAIT,MAAMS,EAAI/vB,QAAU,EACxB+vB,EAAIT,MAAMS,EAAI/vB,OAAS,GAAK,EAC5B+vB,EAAI/vB,QAAU,EAId,IADA,IAAIsxB,EAAK,EACAr1B,EAAI,EAAGA,EAAI8zB,EAAI/vB,OAAQ/D,IAAK,CACnC,IAAIm0B,EAAmB,EAAfL,EAAIT,MAAMrzB,GAClBq1B,GAAU,IAAJlB,EACNL,EAAIT,MAAMrzB,GAAU,SAALq1B,EACfA,EAAS,GAAJlB,GAAakB,EAAK,SAAa,GAUtC,OANkC,IAA9BvB,EAAIT,MAAMS,EAAI/vB,OAAS,KACzB+vB,EAAI/vB,SAC8B,IAA9B+vB,EAAIT,MAAMS,EAAI/vB,OAAS,IACzB+vB,EAAI/vB,UAGD+vB,GASTlB,EAASuT,EAAMH,GAQfpT,EAASwT,EAAMJ,GASfpT,EAASyT,EAAQL,GAEjBK,EAAOzkC,UAAUklC,MAAQ,SAAgBhT,GAGvC,IADA,IAAIlvB,EAAQ,EACH5E,EAAI,EAAGA,EAAI8zB,EAAI/vB,OAAQ/D,IAAK,CACnC,IAAI02B,EAA0B,IAAL,EAAf5C,EAAIT,MAAMrzB,IAAiB4E,EACjCywB,EAAU,SAALqB,EACTA,KAAQ,GAER5C,EAAIT,MAAMrzB,GAAKq1B,EACfzwB,EAAQ8xB,EAKV,OAHc,IAAV9xB,IACFkvB,EAAIT,MAAMS,EAAI/vB,UAAYa,GAErBkvB,GAITb,EAAGsT,OAAS,SAAgBhmC,GAE1B,GAAIolC,EAAOplC,GAAO,OAAOolC,EAAOplC,GAEhC,IAAI+lC,EACJ,GAAa,SAAT/lC,EACF+lC,EAAQ,IAAIJ,OACP,GAAa,SAAT3lC,EACT+lC,EAAQ,IAAIH,OACP,GAAa,SAAT5lC,EACT+lC,EAAQ,IAAIF,MACP,IAAa,WAAT7lC,EAGT,MAAM,IAAIiG,MAAM,iBAAmBjG,GAFnC+lC,EAAQ,IAAID,EAMd,OAFAV,EAAOplC,GAAQ+lC,EAERA,GAkBTpC,EAAItiC,UAAUwjC,SAAW,SAAmB7gC,GAC1CmuB,EAAsB,IAAfnuB,EAAE6uB,SAAgB,iCACzBV,EAAOnuB,EAAE+uB,IAAK,oCAGhB4Q,EAAItiC,UAAUqjC,SAAW,SAAmB1gC,EAAGC,GAC7CkuB,EAAqC,IAA7BnuB,EAAE6uB,SAAW5uB,EAAE4uB,UAAiB,iCACxCV,EAAOnuB,EAAE+uB,KAAO/uB,EAAE+uB,MAAQ9uB,EAAE8uB,IAC1B,oCAGJ4Q,EAAItiC,UAAU6kC,KAAO,SAAeliC,GAClC,OAAIlB,KAAKijC,MAAcjjC,KAAKijC,MAAMM,QAAQriC,GAAG+/B,UAAUjhC,MAChDkB,EAAE49B,KAAK9+B,KAAKjD,GAAGkkC,UAAUjhC,OAGlC6gC,EAAItiC,UAAUgN,IAAM,SAAcrK,GAChC,OAAIA,EAAE4F,SACG5F,EAAE2jB,QAGJ7kB,KAAKjD,EAAEi4B,IAAI9zB,GAAG+/B,UAAUjhC,OAGjC6gC,EAAItiC,UAAU0C,IAAM,SAAcC,EAAGC,GACnCnB,KAAK4hC,SAAS1gC,EAAGC,GAEjB,IAAI4xB,EAAM7xB,EAAED,IAAIE,GAIhB,OAHI4xB,EAAIvlB,IAAIxN,KAAKjD,IAAM,GACrBg2B,EAAIgC,KAAK/0B,KAAKjD,GAETg2B,EAAIkO,UAAUjhC,OAGvB6gC,EAAItiC,UAAUu2B,KAAO,SAAe5zB,EAAGC,GACrCnB,KAAK4hC,SAAS1gC,EAAGC,GAEjB,IAAI4xB,EAAM7xB,EAAE4zB,KAAK3zB,GAIjB,OAHI4xB,EAAIvlB,IAAIxN,KAAKjD,IAAM,GACrBg2B,EAAIgC,KAAK/0B,KAAKjD,GAETg2B,GAGT8N,EAAItiC,UAAUy2B,IAAM,SAAc9zB,EAAGC,GACnCnB,KAAK4hC,SAAS1gC,EAAGC,GAEjB,IAAI4xB,EAAM7xB,EAAE8zB,IAAI7zB,GAIhB,OAHI4xB,EAAImN,KAAK,GAAK,GAChBnN,EAAI+B,KAAK90B,KAAKjD,GAETg2B,EAAIkO,UAAUjhC,OAGvB6gC,EAAItiC,UAAUw2B,KAAO,SAAe7zB,EAAGC,GACrCnB,KAAK4hC,SAAS1gC,EAAGC,GAEjB,IAAI4xB,EAAM7xB,EAAE6zB,KAAK5zB,GAIjB,OAHI4xB,EAAImN,KAAK,GAAK,GAChBnN,EAAI+B,KAAK90B,KAAKjD,GAETg2B,GAGT8N,EAAItiC,UAAUmjC,IAAM,SAAcxgC,EAAGuvB,GAEnC,OADAzwB,KAAK+hC,SAAS7gC,GACPlB,KAAKojC,KAAKliC,EAAE28B,MAAMpN,KAG3BoQ,EAAItiC,UAAUw6B,KAAO,SAAe73B,EAAGC,GAErC,OADAnB,KAAK4hC,SAAS1gC,EAAGC,GACVnB,KAAKojC,KAAKliC,EAAE63B,KAAK53B,KAG1B0/B,EAAItiC,UAAUiyB,IAAM,SAActvB,EAAGC,GAEnC,OADAnB,KAAK4hC,SAAS1gC,EAAGC,GACVnB,KAAKojC,KAAKliC,EAAEsvB,IAAIrvB,KAGzB0/B,EAAItiC,UAAUy+B,KAAO,SAAe97B,GAClC,OAAOlB,KAAK+4B,KAAK73B,EAAGA,EAAE2jB,UAGxBgc,EAAItiC,UAAUw+B,IAAM,SAAc77B,GAChC,OAAOlB,KAAKwwB,IAAItvB,EAAGA,IAGrB2/B,EAAItiC,UAAU2jC,KAAO,SAAehhC,GAClC,GAAIA,EAAE4F,SAAU,OAAO5F,EAAE2jB,QAEzB,IAAI+e,EAAO5jC,KAAKjD,EAAEi2B,MAAM,GAIxB,GAHA3D,EAAOuU,EAAO,GAAM,GAGP,IAATA,EAAY,CACd,IAAIr9B,EAAMvG,KAAKjD,EAAEkE,IAAI,IAAI2uB,EAAG,IAAIqD,OAAO,GACvC,OAAOjzB,KAAKuG,IAAIrF,EAAGqF,GAQrB,IAFA,IAAI1D,EAAI7C,KAAKjD,EAAEqhC,KAAK,GAChB1/B,EAAI,GACAmE,EAAEiE,UAA2B,IAAfjE,EAAEmwB,MAAM,IAC5Bt0B,IACAmE,EAAEowB,OAAO,GAEX5D,GAAQxsB,EAAEiE,UAEV,IAAIgC,EAAM,IAAI8mB,EAAG,GAAGkR,MAAM9gC,MACtB6jC,EAAO/6B,EAAIs5B,SAIX0B,EAAO9jC,KAAKjD,EAAEqhC,KAAK,GAAGnL,OAAO,GAC7B8Q,EAAI/jC,KAAKjD,EAAEmL,YAGf,IAFA67B,EAAI,IAAInU,EAAG,EAAImU,EAAIA,GAAGjD,MAAM9gC,MAEW,IAAhCA,KAAKuG,IAAIw9B,EAAGD,GAAMt2B,IAAIq2B,IAC3BE,EAAEzC,QAAQuC,GAOZ,IAJA,IAAI7mC,EAAIgD,KAAKuG,IAAIw9B,EAAGlhC,GAChBpF,EAAIuC,KAAKuG,IAAIrF,EAAG2B,EAAEs7B,KAAK,GAAGlL,OAAO,IACjCp1B,EAAImC,KAAKuG,IAAIrF,EAAG2B,GAChB9F,EAAI2B,EACc,IAAfb,EAAE2P,IAAI1E,IAAY,CAEvB,IADA,IAAI2B,EAAM5M,EACDlB,EAAI,EAAoB,IAAjB8N,EAAI+C,IAAI1E,GAAYnM,IAClC8N,EAAMA,EAAIq3B,SAEZzS,EAAO1yB,EAAII,GACX,IAAIoE,EAAInB,KAAKuG,IAAIvJ,EAAG,IAAI4yB,EAAG,GAAGsN,OAAOngC,EAAIJ,EAAI,IAE7Cc,EAAIA,EAAEkkC,OAAOxgC,GACbnE,EAAImE,EAAE2gC,SACNjkC,EAAIA,EAAE8jC,OAAO3kC,GACbD,EAAIJ,EAGN,OAAOc,GAGTojC,EAAItiC,UAAU4hC,KAAO,SAAej/B,GAClC,IAAI8iC,EAAM9iC,EAAE4+B,OAAO9/B,KAAKjD,GACxB,OAAqB,IAAjBinC,EAAIjU,UACNiU,EAAIjU,SAAW,EACR/vB,KAAKojC,KAAKY,GAAK5B,UAEfpiC,KAAKojC,KAAKY,IAIrBnD,EAAItiC,UAAUgI,IAAM,SAAcrF,EAAGuvB,GACnC,GAAIA,EAAI3pB,SAAU,OAAO,IAAI8oB,EAAG,GAAGkR,MAAM9gC,MACzC,GAAoB,IAAhBywB,EAAIyP,KAAK,GAAU,OAAOh/B,EAAE2jB,QAEhC,IACIof,EAAM,IAAInjC,MAAM,IACpBmjC,EAAI,GAAK,IAAIrU,EAAG,GAAGkR,MAAM9gC,MACzBikC,EAAI,GAAK/iC,EACT,IAAK,IAAIvE,EAAI,EAAGA,EAAIsnC,EAAIvjC,OAAQ/D,IAC9BsnC,EAAItnC,GAAKqD,KAAKwwB,IAAIyT,EAAItnC,EAAI,GAAIuE,GAGhC,IAAI6xB,EAAMkR,EAAI,GACVC,EAAU,EACVC,EAAa,EACbn5B,EAAQylB,EAAIvoB,YAAc,GAK9B,IAJc,IAAV8C,IACFA,EAAQ,IAGLrO,EAAI8zB,EAAI/vB,OAAS,EAAG/D,GAAK,EAAGA,IAAK,CAEpC,IADA,IAAIy0B,EAAOX,EAAIT,MAAMrzB,GACZ0F,EAAI2I,EAAQ,EAAG3I,GAAK,EAAGA,IAAK,CACnC,IAAIuyB,EAAOxD,GAAQ/uB,EAAK,EACpB0wB,IAAQkR,EAAI,KACdlR,EAAM/yB,KAAK+8B,IAAIhK,IAGL,IAAR6B,GAAyB,IAAZsP,GAKjBA,IAAY,EACZA,GAAWtP,GA9BE,MA+BbuP,GACwC,IAANxnC,GAAiB,IAAN0F,KAE7C0wB,EAAM/yB,KAAKwwB,IAAIuC,EAAKkR,EAAIC,IACxBC,EAAa,EACbD,EAAU,IAXRC,EAAa,EAajBn5B,EAAQ,GAGV,OAAO+nB,GAGT8N,EAAItiC,UAAUyiC,UAAY,SAAoBvQ,GAC5C,IAAIhzB,EAAIgzB,EAAIqO,KAAK9+B,KAAKjD,GAEtB,OAAOU,IAAMgzB,EAAMhzB,EAAEonB,QAAUpnB,GAGjCojC,EAAItiC,UAAU4iC,YAAc,SAAsB1Q,GAChD,IAAIsC,EAAMtC,EAAI5L,QAEd,OADAkO,EAAI9C,IAAM,KACH8C,GAOTnD,EAAGwU,KAAO,SAAe3T,GACvB,OAAO,IAAI0S,EAAK1S,IAmBlBlB,EAAS4T,EAAMtC,GAEfsC,EAAK5kC,UAAUyiC,UAAY,SAAoBvQ,GAC7C,OAAOzwB,KAAKojC,KAAK3S,EAAIoN,MAAM79B,KAAKwD,SAGlC2/B,EAAK5kC,UAAU4iC,YAAc,SAAsB1Q,GACjD,IAAIhzB,EAAIuC,KAAKojC,KAAK3S,EAAID,IAAIxwB,KAAKqjC,OAE/B,OADA5lC,EAAEwyB,IAAM,KACDxyB,GAGT0lC,EAAK5kC,UAAUw6B,KAAO,SAAe73B,EAAGC,GACtC,GAAID,EAAE4F,UAAY3F,EAAE2F,SAGlB,OAFA5F,EAAE8uB,MAAM,GAAK,EACb9uB,EAAER,OAAS,EACJQ,EAGT,IAAIrD,EAAIqD,EAAE63B,KAAK53B,GACXnE,EAAIa,EAAEogC,MAAMj+B,KAAKwD,OAAOgtB,IAAIxwB,KAAKsjC,MAAMtF,OAAOh+B,KAAKwD,OAAOgtB,IAAIxwB,KAAKjD,GACnEsnC,EAAIxmC,EAAEk3B,KAAK/3B,GAAGi2B,OAAOjzB,KAAKwD,OAC1BuvB,EAAMsR,EAQV,OANIA,EAAE72B,IAAIxN,KAAKjD,IAAM,EACnBg2B,EAAMsR,EAAEtP,KAAK/0B,KAAKjD,GACTsnC,EAAEnE,KAAK,GAAK,IACrBnN,EAAMsR,EAAEvP,KAAK90B,KAAKjD,IAGbg2B,EAAIkO,UAAUjhC,OAGvBmjC,EAAK5kC,UAAUiyB,IAAM,SAActvB,EAAGC,GACpC,GAAID,EAAE4F,UAAY3F,EAAE2F,SAAU,OAAO,IAAI8oB,EAAG,GAAGqR,UAAUjhC,MAEzD,IAAInC,EAAIqD,EAAEsvB,IAAIrvB,GACVnE,EAAIa,EAAEogC,MAAMj+B,KAAKwD,OAAOgtB,IAAIxwB,KAAKsjC,MAAMtF,OAAOh+B,KAAKwD,OAAOgtB,IAAIxwB,KAAKjD,GACnEsnC,EAAIxmC,EAAEk3B,KAAK/3B,GAAGi2B,OAAOjzB,KAAKwD,OAC1BuvB,EAAMsR,EAOV,OANIA,EAAE72B,IAAIxN,KAAKjD,IAAM,EACnBg2B,EAAMsR,EAAEtP,KAAK/0B,KAAKjD,GACTsnC,EAAEnE,KAAK,GAAK,IACrBnN,EAAMsR,EAAEvP,KAAK90B,KAAKjD,IAGbg2B,EAAIkO,UAAUjhC,OAGvBmjC,EAAK5kC,UAAU4hC,KAAO,SAAej/B,GAGnC,OADUlB,KAAKojC,KAAKliC,EAAE4+B,OAAO9/B,KAAKjD,GAAGyzB,IAAIxwB,KAAKk/B,KACnC+B,UAAUjhC,OAn3GzB,CAq3GoCtD,EAAQsD,Q,oCC/1G5C,IAAI8gB,EAAI,EAAQ,IACZwjB,EAAY,EAAQ,IACpBC,EAAQ,EAAQ,IAChBC,EAAe,EAAQ,IACvBC,EAAc,EAAQ,IACtB7U,EAAK,EAAQ,IAsEb8U,EAAgB,SAAUC,EAAcC,GAExC,IAAIC,EAAQ,GA+BZ,OA9BAD,EAAK9lC,SAAQ,SAAUgmC,GACnB,GAAgC,iBAArBA,EAAMC,WAAyB,CACtC,GAAmC,UAA/BD,EAAMnrB,KAAKqrB,UAAU,EAAG,GACxB,MAAM,IAAI7hC,MAAM,4DAEpB,IAAI8hC,EAAS,GACTC,EAAeJ,EAAMnrB,KAAKzN,QAAQ,KAClCg5B,GAAgB,IAChBD,EAASH,EAAMnrB,KAAKqrB,UAAUE,IAElC,IAAIzhC,EAASihC,EAAcC,EAAcG,EAAMC,YAE3CjkB,EAAExS,QAAQ7K,IAAWkhC,EAErBE,EAAMpjC,KAAK,SAAWgC,EAAOqI,KAAK,KAAO,IAAMm5B,GAEzCN,EAMNE,EAAMpjC,KAAK,IAAMgC,EAAS,KAJ1BohC,EAAMpjC,KAAK,IAAMgC,EAAOqI,KAAK,KAAO,IAAMm5B,QAS9CJ,EAAMpjC,KAAKqjC,EAAMnrB,SAGlBkrB,GAkBPM,EAAa,SAAUC,GACvB,IAAKb,EAAMc,YAAYD,GACnB,MAAM,IAAIjiC,MAAM,6CACpB,IAAImJ,EAAM,GACN3P,EAAI,EAAGC,EAAIwoC,EAAI1kC,OAInB,IAH4B,OAAxB0kC,EAAIJ,UAAU,EAAG,KACjBroC,EAAI,GAEDA,EAAIC,EAAGD,GAAK,EAAG,CAClB,IAAI2oC,EAAO94B,SAAS44B,EAAIG,OAAO5oC,EAAG,GAAI,IACtC2P,GAAOvC,OAAOwR,aAAa+pB,GAE/B,OAAOh5B,GASPk5B,EAAa,SAAUl5B,GACvB,IAAKA,EACD,MAAO,OAEX,IADA,IAAI84B,EAAM,GACDzoC,EAAI,EAAGA,EAAI2P,EAAI5L,OAAQ/D,IAAK,CACjC,IACIyB,EADOkO,EAAI6O,WAAWxe,GACb6J,SAAS,IACtB4+B,GAAOhnC,EAAEsC,OAAS,EAAI,IAAMtC,EAAIA,EAEpC,MAAO,KAAOgnC,GAUdK,EAAe,SAAUC,GAEzB,GADAA,EAAOA,EAAOA,EAAK96B,cAAgB,SAC9B05B,EAAUqB,QAAQD,GACnB,MAAM,IAAIviC,MAAM,cAAgBuiC,EAAO,8DAAgEr4B,KAAKxB,UAAUy4B,EAAUqB,QAAS,KAAM,IAEnJ,OAAOD,GAwJXhpC,EAAOD,QAAU,CACbmpC,WAnTa,SAAUjrB,EAAOkrB,EAASpiB,EAAQqiB,EAAUC,GAmCzD,OAhCIjlB,EAAEnI,SAASgC,IAAYA,aAAiBxX,QAAUwX,EAAM9F,QACpDiM,EAAEnI,SAASgC,EAAM9F,OAASiM,EAAExS,QAAQqM,EAAM9F,SAC1C8F,EAAM9F,KAAOxH,KAAKxB,UAAU8O,EAAM9F,KAAM,KAAM,IAElD8F,EAAQA,EAAMvD,QAAU,KAAOuD,EAAM9F,MAErCiM,EAAE6E,SAAShL,KACXA,EAAQ,IAAIxX,MAAMwX,IAElBmG,EAAEjI,WAAWitB,IACbA,EAASnrB,EAAOorB,GAEhBjlB,EAAEjI,WAAW4K,MAGToiB,GACC/kB,EAAEjI,WAAWgtB,EAAQG,YAClBH,EAAQG,UAAU,SAAStlC,QAAWogB,EAAEjI,WAAWitB,KACvDD,EAAQI,OAAM,eAGlBld,YAAW,WACPtF,EAAO9I,KACR,IAEHkrB,GAAW/kB,EAAEjI,WAAWgtB,EAAQK,OAEhCnd,YAAW,WACP8c,EAAQK,KAAK,QAASvrB,EAAOorB,GAC7BF,EAAQM,uBACT,GAEAN,GAiRPO,6BAxQ+B,SAAUh5B,GACzC,OAAI0T,EAAEnI,SAASvL,IAASA,EAAKlQ,OAAoC,IAA5BkQ,EAAKlQ,KAAKgP,QAAQ,KAC5CkB,EAAKlQ,KAETkQ,EAAKlQ,KAAO,IAAMwnC,GAAc,EAAOt3B,EAAKi5B,QAAQv6B,KAAK,KAAO,KAqQvE44B,cAAeA,EAGf4B,UArNY,SAAU90B,GACtB,MAAO,KAAOizB,EAAYjzB,GAAMhL,SAAS,QAqNzCsa,EAAGA,EACH8O,GAAI2U,EAAM3U,GACVE,KAAMyU,EAAMzU,KACZyW,YAAahC,EAAMgC,YACnBC,MAAOjC,EAAMiC,MACbnB,YAAad,EAAMc,YACnBoB,KAAMlC,EAAMkC,KACZC,QAASnC,EAAMmC,QACfC,UAAWpC,EAAMkC,KACjBjC,aAAcA,EAAaA,aAC3BoC,gBAAiBpC,EAAaoC,gBAC9BC,aAAcrC,EAAaqC,aAC3BC,UAAWvC,EAAMuC,UACjBC,qBAAsBxC,EAAMwC,qBAC5BC,kBA3GoB,SAAUpe,GAC9B,QAAuB,IAAZA,EACP,MAAO,GACX,IAAK,uBAAuBzc,KAAKyc,GAC7B,MAAM,IAAIzlB,MAAM,kBAAoBylB,EAAU,sCAClDA,EAAUA,EAAQhe,cAAc6H,QAAQ,OAAQ,IAGhD,IAFA,IAAIw0B,EAAc1C,EAAMkC,KAAK7d,GAASnW,QAAQ,OAAQ,IAClDy0B,EAAkB,KACbvqC,EAAI,EAAGA,EAAIisB,EAAQloB,OAAQ/D,IAE5B6P,SAASy6B,EAAYtqC,GAAI,IAAM,EAC/BuqC,GAAmBte,EAAQjsB,GAAGwqC,cAG9BD,GAAmBte,EAAQjsB,GAGnC,OAAOuqC,GA2FPE,MAAO7C,EAAM6C,MACbC,KAAM9C,EAAM8C,KACZC,WAAY/C,EAAM+C,WAClBC,WAAYhD,EAAMgD,WAClBC,kBAAmBjD,EAAMiD,kBACzBC,YAAalD,EAAMkD,YACnBC,UAAWnD,EAAMkD,YACjBE,YAAapD,EAAMoD,YACnBC,YAAarD,EAAMoD,YACnBE,UAAWtD,EAAMsD,UACjBC,YAAavD,EAAMsD,UACnBE,OAAQxD,EAAMsD,UACdG,eAAgBzD,EAAMyD,eACtBC,UAAW1D,EAAM0D,UACjBC,YAAa3D,EAAM0D,UACnBE,SAAU5D,EAAM0D,UAChB9C,WAAYA,EACZiD,QAASjD,EACTK,WAAYA,EACZ6C,UAAW7C,EACXG,QAASrB,EAAUqB,QACnB2C,MA/IQ,SAAU3oB,EAAQ+lB,GAE1B,GADAA,EAAOD,EAAaC,IACfnB,EAAMzU,KAAKnQ,KAAYmB,EAAE6E,SAAShG,GACnC,MAAM,IAAIxc,MAAM,2EAEpB,OAAOohC,EAAMzU,KAAKnQ,GAAU2kB,EAAUgE,MAAM3oB,EAAQ+lB,GAAQpB,EAAUgE,MAAM3oB,EAAQ+lB,GAAMl/B,SAAS,KA2InG+hC,QA7KU,SAAU5oB,EAAQ+lB,GAE5B,GADAA,EAAOD,EAAaC,IACfnB,EAAMzU,KAAKnQ,KAAYmB,EAAE6E,SAAShG,GACnC,MAAM,IAAIxc,MAAM,2EAEpB,OAAOohC,EAAMzU,KAAKnQ,GAAU2kB,EAAUiE,QAAQ5oB,EAAQ+lB,GAAQpB,EAAUiE,QAAQ5oB,EAAQ+lB,GAAMl/B,SAAS,KAyKvGgiC,QAASjE,EAAMkE,QACfA,QAASlE,EAAMkE,QACfC,SAAUnE,EAAMoE,SAChBA,SAAUpE,EAAMoE,SAChBC,iBAAkBrE,EAAMqE,iBACxBC,QAAStE,EAAMsE,QACfC,6BAA8BvE,EAAMuE,6BACpCC,yBAA0BxE,EAAMwE,yBAChCC,QAASzE,EAAMyE,QACfC,eAAgB1E,EAAM0E,eACtBC,UAAW3E,EAAM2E,UACjBC,oBA9GsB,SAAUjoC,EAAGC,GACnC,GAAID,GAAKC,EACL,OAAO,EAEN,GAAK,WAAaD,GAAK,YAAcA,GAAK,GAAKA,GAAO,WAAaC,GAAK,YAAcA,GAAK,GAAKA,EAGhG,IAAI,WAAaD,GAAK,YAAcA,EAErC,OAAQ,EAEP,GAAI,WAAaC,GAAK,YAAcA,EAErC,OAAO,EAEN,GAAS,UAALD,EACL,MAAS,WAALC,GACQ,EAID,EAGV,GAAU,WAANA,EACL,MAAS,WAALD,EACO,GAIC,EAGX,GAAS,WAALA,EAEL,OAAO,EAEN,GAAS,WAALC,EACL,OAAQ,EAEP,CACD,IAAIioC,EAAM,IAAIxZ,EAAG1uB,GACbmoC,EAAM,IAAIzZ,EAAGzuB,GACjB,OAAIioC,EAAI1hC,GAAG2hC,IACC,EAEHD,EAAI/hC,GAAGgiC,GACL,EAGA,GA7CX,OAAO,K,cCxSf3sC,EAAOD,QAAU0Q,QAAQ,S,cCAzBzQ,EAAOD,QAAU0Q,QAAQ,S,6BCCzB,IAAIm8B,EAAmBtpC,MAAQA,KAAKspC,iBAAoB,SAAUhlC,GAC9D,OAAQA,GAAOA,EAAIvG,WAAcuG,EAAM,CAAE,QAAWA,IAExDjH,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,IACtDnB,EAAQqf,WAAarf,EAAQof,iBAAmBpf,EAAQsf,eAAY,EACpE,IAAIwtB,EAAkBD,EAAgB,EAAQ,KAC1CE,EAAgBF,EAAgB,EAAQ,KACxCG,EAAaH,EAAgB,EAAQ,KACrCI,EAAqBJ,EAAgB,EAAQ,KAC7CK,EAAiB,4CAGrB,SAASC,EAAiBv+B,GACtB,IAAIoH,EAAUo3B,EAAYx+B,GAC1B,OAAO,SAAUiB,GAAO,OAAOvC,OAAOuC,GAAKmG,QAAQk3B,EAAgBl3B,IAJvEhW,EAAQsf,UAAY6tB,EAAiBH,EAAWp6B,SAChD5S,EAAQof,iBAAmB+tB,EAAiBL,EAAgBl6B,SAK5D,IAAIy6B,EAAS,SAAU5oC,EAAGC,GAAK,OAAQD,EAAIC,EAAI,GAAK,GAuBpD,SAAS0oC,EAAYx+B,GACjB,OAAO,SAAiBiB,GACpB,GAAsB,MAAlBA,EAAI8O,OAAO,GAAY,CACvB,IAAI2uB,EAAaz9B,EAAI8O,OAAO,GAC5B,MAAmB,MAAf2uB,GAAqC,MAAfA,EACfL,EAAmBr6B,QAAQ7C,SAASF,EAAIi5B,OAAO,GAAI,KAEvDmE,EAAmBr6B,QAAQ7C,SAASF,EAAIi5B,OAAO,GAAI,KAG9D,OAAOl6B,EAAIiB,EAAIvG,MAAM,GAAI,KAAOuG,GAhCxC7P,EAAQqf,WAAa,WAGjB,IAFA,IAAIkuB,EAAS3sC,OAAOoR,KAAK+6B,EAAcn6B,SAASV,KAAKm7B,GACjDr7B,EAAOpR,OAAOoR,KAAK86B,EAAgBl6B,SAASV,KAAKm7B,GAC5CntC,EAAI,EAAG0F,EAAI,EAAG1F,EAAI8R,EAAK/N,OAAQ/D,IAChCqtC,EAAO3nC,KAAOoM,EAAK9R,IACnB8R,EAAK9R,IAAM,KACX0F,KAGAoM,EAAK9R,IAAM,IAGnB,IAAI8+B,EAAK,IAAIjpB,OAAO,OAAS/D,EAAK3C,KAAK,KAAO,gCAAiC,KAC3E2G,EAAUo3B,EAAYN,EAAgBl6B,SAC1C,SAASzB,EAAStB,GAGd,MAFuB,MAAnBA,EAAIi5B,QAAQ,KACZj5B,GAAO,KACJmG,EAAQnG,GAGnB,OAAO,SAAUA,GAAO,OAAOvC,OAAOuC,GAAKmG,QAAQgpB,EAAI7tB,IApBtC,I,6l5BCjBrB,IAAI07B,EAAmBtpC,MAAQA,KAAKspC,iBAAoB,SAAUhlC,GAC9D,OAAQA,GAAOA,EAAIvG,WAAcuG,EAAM,CAAE,QAAWA,IAExDjH,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,IACtDnB,EAAQyf,WAAazf,EAAQ0f,OAAS1f,EAAQ2f,mBAAqB3f,EAAQ4f,WAAa5f,EAAQ6f,eAAY,EAC5G,IACI2tB,EAAaC,EADAZ,EAAgB,EAAQ,KACCj6B,SACtC86B,EAAcC,EAAmBH,GAQrCxtC,EAAQ6f,UAAY+tB,EAAgBJ,GACpC,IAiFoBK,EAAS7O,EAhFzB8O,EAAcL,EADIZ,EAAgB,EAAQ,KACEj6B,SAC5Cm7B,EAAeJ,EAAmBG,GAoBtC,SAASL,EAAc58B,GACnB,OAAOjQ,OAAOoR,KAAKnB,GACdqB,OACAkU,QAAO,SAAUynB,EAASptC,GAE3B,OADAotC,EAAQh9B,EAAIpQ,IAAS,IAAMA,EAAO,IAC3BotC,IACR,IAEP,SAASF,EAAmBE,GAGxB,IAFA,IAAIG,EAAS,GACTC,EAAW,GACNC,EAAK,EAAGC,EAAKvtC,OAAOoR,KAAK67B,GAAUK,EAAKC,EAAGlqC,OAAQiqC,IAAM,CAC9D,IAAI1Y,EAAI2Y,EAAGD,GACM,IAAb1Y,EAAEvxB,OAEF+pC,EAAOhpC,KAAK,KAAOwwB,GAInByY,EAASjpC,KAAKwwB,GAItBwY,EAAO97B,OACP,IAAK,IAAI3D,EAAQ,EAAGA,EAAQy/B,EAAO/pC,OAAS,EAAGsK,IAAS,CAGpD,IADA,IAAIulB,EAAMvlB,EACHulB,EAAMka,EAAO/pC,OAAS,GACzB+pC,EAAOla,GAAKpV,WAAW,GAAK,IAAMsvB,EAAOla,EAAM,GAAGpV,WAAW,IAC7DoV,GAAO,EAEX,IAAIvI,EAAQ,EAAIuI,EAAMvlB,EAElBgd,EAAQ,GAEZyiB,EAAO57B,OAAO7D,EAAOgd,EAAOyiB,EAAOz/B,GAAS,IAAMy/B,EAAOla,IAG7D,OADAma,EAASxmC,QAAQ,IAAMumC,EAAO3+B,KAAK,IAAM,KAClC,IAAI0G,OAAOk4B,EAAS5+B,KAAK,KAAM,KA/C1CrP,EAAQ4f,YAoEYiuB,EApEYC,EAoEH9O,EApEgB+O,EAqElC,SAAU31B,GACb,OAAOA,EACFpC,QAAQgpB,GAAI,SAAUv+B,GAAQ,OAAOotC,EAAQptC,MAC7CuV,QAAQo4B,EAAYC,KAhEjCruC,EAAQ2f,mBAAqBiuB,EAAgBE,GA0C7C,IAAIM,EAAa,0IACbE,EAE4B,MAAhChhC,OAAOxL,UAAUysC,YAET,SAAU1+B,GAAO,OAAOA,EAAI0+B,YAAY,IAExC,SAAUhuC,GACN,OAAoC,MAA5BA,EAAEme,WAAW,GAAK,OACtBne,EAAEme,WAAW,GACb,MACA,OAEhB,SAAS2vB,EAAmB9tC,GACxB,MAAO,OAASA,EAAE0D,OAAS,EAAIqqC,EAAa/tC,GAAKA,EAAEme,WAAW,IACzD3U,SAAS,IACT2gC,cAAgB,IASzB,IAAI8D,EAAgB,IAAIz4B,OAAO23B,EAAYtrB,OAAS,IAAMgsB,EAAWhsB,OAAQ,KA0B7E,SAASwrB,EAAgB/8B,GACrB,OAAO,SAAUuH,GACb,OAAOA,EAAKpC,QAAQw4B,GAAe,SAAUjuC,GAAK,OAAOsQ,EAAItQ,IAAM8tC,EAAmB9tC,OAf9FP,EAAQ0f,OAHR,SAAgBtH,GACZ,OAAOA,EAAKpC,QAAQw4B,EAAeH,IAcvCruC,EAAQyf,WAHR,SAAoBrH,GAChB,OAAOA,EAAKpC,QAAQ03B,EAAaW,K,gBChIrC,IAAIlb,EAAK,EAAQ,IACboY,EAAiB,EAAQ,IAQ7BtrC,EAAOD,QAAU,SAAoB0W,GACnC,GAAmB,iBAARA,GAAmC,iBAARA,EAAkB,CACtD,IAAI+3B,EAAa,IAAItb,EAAG,GACpBub,EAAkBphC,OAAOoJ,GAAKvI,cAAcnK,OAC5C2qC,EAAiD,OAAjCD,EAAgB5F,OAAO,EAAG,IAAgD,QAAjC4F,EAAgB5F,OAAO,EAAG,GACnF8F,EAAYrD,EAAemD,GAO/B,GAN+B,MAA3BE,EAAU9F,OAAO,EAAG,KACtB8F,EAAYrD,EAAeqD,EAAUtlC,MAAM,IAC3CmlC,EAAa,IAAItb,GAAI,EAAG,OAE1Byb,EAA0B,KAAdA,EAAmB,IAAMA,GAErB3rB,MAAM,eAAiB2rB,EAAU3rB,MAAM,mBAClD2rB,EAAU3rB,MAAM,iBACG,IAAlB0rB,GAA0BC,EAAU3rB,MAAM,kBAC9C,OAAO,IAAIkQ,EAAGyb,EAAW,IAAI7a,IAAI0a,GAGnC,IAAKG,EAAU3rB,MAAM,eAA+B,KAAd2rB,KAAuC,IAAlBD,EACzD,OAAO,IAAIxb,EAAGyb,EAAW,IAAI7a,IAAI0a,QAE9B,GAAmB,iBAAR/3B,GAAoBA,EAAI3M,WAAc2M,EAAI0G,MAAQ1G,EAAI1R,MAClE0R,EAAI3M,SAAS,IAAIkZ,MAAM,gBAAkBvM,EAAIqd,KAAOrd,EAAIm4B,oBAC1D,OAAO,IAAI1b,EAAGzc,EAAI3M,SAAS,IAAK,IAIpC,MAAM,IAAIrD,MAAM,0CAA4CkK,KAAKxB,UAAUsH,GAAO,wJ,gBCfpF,IAAI2N,EAAI,EAAQ,IACZ8O,EAAK,EAAQ,IACb2b,EAAa,EAAQ,IACrBC,EAAO,EAAQ,IACfr3B,EAAO,EAAQ,IACfs3B,EAAuB,EAAQ,IAQ/B3b,EAAO,SAAUzxB,GACjB,OAAOuxB,EAAGE,KAAKzxB,IASfkoC,EAAc,SAAUloC,GACxB,OAAOA,GAAUA,EAAOia,aAA2C,cAA5Bja,EAAOia,YAAYpb,MAS1DmqC,EAAO,SAAU1nB,GACjB,IACI,OAAO4rB,EAAWngC,MAAM,KAAMkP,WAElC,MAAO5P,GACH,MAAM,IAAIvH,MAAMuH,EAAI,kBAAoBiV,EAAS,OAoBrDmnB,EAAY,SAAUle,GAEtB,QAAK,uBAAuBzc,KAAKyc,QAIxB,yBAAyBzc,KAAKyc,KAAY,yBAAyBzc,KAAKyc,KAKtEme,EAAqBne,KAUhCme,EAAuB,SAAUne,GAEjCA,EAAUA,EAAQnW,QAAQ,OAAQ,IAElC,IADA,IAAIw0B,EAAcR,EAAK7d,EAAQhe,eAAe6H,QAAQ,OAAQ,IACrD9V,EAAI,EAAGA,EAAI,GAAIA,IAEpB,GAAK6P,SAASy6B,EAAYtqC,GAAI,IAAM,GAAKisB,EAAQjsB,GAAGwqC,gBAAkBve,EAAQjsB,IAAQ6P,SAASy6B,EAAYtqC,GAAI,KAAO,GAAKisB,EAAQjsB,GAAGiO,gBAAkBge,EAAQjsB,GAC5J,OAAO,EAGf,OAAO,GAuCPsrC,EAAY,SAAU37B,GAEtB,IAAI84B,EAAM,GAKV94B,GADAA,GADAA,GADAA,GAHAA,EAAMk/B,EAAKjvB,OAAOjQ,IAGRmG,QAAQ,eAAgB,KACxBzG,MAAM,IAAI7H,UAAU2H,KAAK,KACzB2G,QAAQ,eAAgB,KACxBzG,MAAM,IAAI7H,UAAU2H,KAAK,IACnC,IAAK,IAAInP,EAAI,EAAGA,EAAI2P,EAAI5L,OAAQ/D,IAAK,CACjC,IAEIyB,EAFOkO,EAAI6O,WAAWxe,GAEb6J,SAAS,IACtB4+B,GAAOhnC,EAAEsC,OAAS,EAAI,IAAMtC,EAAIA,EAGpC,MAAO,KAAOgnC,GAmEduC,EAAc,SAAU/pC,GACxB,GAAIkjB,EAAE+L,OAAOjvB,IAAUkjB,EAAEgM,YAAYlvB,GACjC,OAAOA,EAEX,IAAK8uB,SAAS9uB,KAAWynC,EAAYznC,GACjC,MAAM,IAAIuF,MAAM,gBAAkBvF,EAAQ,sBAE9C,IAAI+hB,EAAS0nB,EAAKzpC,GACd6F,EAASkc,EAAOnZ,SAAS,IAC7B,OAAOmZ,EAAOjY,GAAG,IAAIkoB,EAAG,IAAM,MAAQnsB,EAAO8hC,OAAO,GAAK,KAAO9hC,GA6BhE8jC,EAAa,SAAUnC,GAEvB,GADAA,EAAMA,EAAI5+B,SAAS,KACd6+B,EAAYD,GACb,MAAM,IAAIjiC,MAAM,gBAAkBiiC,EAAM,gCAE5CA,EAAMA,EAAI3yB,QAAQ,OAAQ,IAC1B,IAAK,IAAIi5B,EAAQ,GAAI1uC,EAAI,EAAGA,EAAIooC,EAAI1kC,OAAQ1D,GAAK,EAC7C0uC,EAAMjqC,KAAK+K,SAAS44B,EAAIG,OAAOvoC,EAAG,GAAI,KAC1C,OAAO0uC,GA+CPrG,EAAc,SAAUD,GACxB,OAAStkB,EAAE6E,SAASyf,IAAQtkB,EAAE8L,SAASwY,KAAS,qBAAqBj5B,KAAKi5B,IAS1EoB,EAAQ,SAAUpB,GAClB,OAAStkB,EAAE6E,SAASyf,IAAQtkB,EAAE8L,SAASwY,KAAS,wBAAwBj5B,KAAKi5B,IA0F7EuG,EAAc,qEACdlF,EAAO,SAAU7oC,GACbkyB,EAAKlyB,KACLA,EAAQA,EAAM4I,YAEd6+B,EAAYznC,IAAU,OAAOuO,KAAK,EAAQ3F,cAC1C5I,EAAQ2pC,EAAW3pC,IAEvB,IAAIguC,EAAcz3B,EAAKwyB,UAAU/oC,GACjC,OAAIguC,IAAgBD,EACT,KAGAC,GAIfnF,EAAKoF,MAAQ13B,EAebzX,EAAOD,QAAU,CACbmzB,GAAIA,EACJE,KAAMA,EACNyW,YAAaA,EACbc,KAAMA,EACNP,UAAWA,EACX+B,QA3GU,SAAUiD,GACpB,OAAOL,EAAqB5C,QAAQiD,IA2GpChD,6BAhG+B,SAAUgD,EAAOC,GAChD,OAAON,EAAqB3C,6BAA6BgD,EAAOC,IAgGhEhD,yBArF2B,SAAU+C,EAAOE,GAC5C,OAAOP,EAAqB1C,yBAAyB+C,EAAOE,IAqF5DhD,QA5EU,SAAUiD,GACpB,OAAOR,EAAqBzC,QAAQiD,IA4EpChD,eAjEiB,SAAU6C,EAAOG,GAClC,OAAOR,EAAqBxC,eAAe6C,EAAOG,IAiElD/C,UAtDY,SAAU4C,EAAOG,GAC7B,OAAOR,EAAqBvC,UAAU4C,EAAOG,IAsD7ClF,qBAAsBA,EACtBkB,UAAWA,EACXJ,UA1SY,SAAUzC,GACtB,IAAKC,EAAYD,GACb,MAAM,IAAIjiC,MAAM,kBAAoBiiC,EAAM,iCAU9C,IATA,IAAI94B,EAAM,GACNg5B,EAAO,EAOP1oC,GADJwoC,GADAA,GADAA,GADAA,GAFAA,EAAMA,EAAI3yB,QAAQ,OAAQ,KAEhBA,QAAQ,WAAY,KACpBzG,MAAM,IAAI7H,UAAU2H,KAAK,KACzB2G,QAAQ,WAAY,KACpBzG,MAAM,IAAI7H,UAAU2H,KAAK,KACvBpL,OACH/D,EAAI,EAAGA,EAAIC,EAAGD,GAAK,EACxB2oC,EAAO94B,SAAS44B,EAAIG,OAAO5oC,EAAG,GAAI,IAElC2P,GAAOvC,OAAOwR,aAAa+pB,GAG/B,OAAOkG,EAAK/uB,OAAOnQ,IAyRnBm7B,YAhRc,SAAU7pC,GACxB,IAAKA,EACD,OAAOA,EAEX,GAAIkjB,EAAE6E,SAAS/nB,KAAWynC,EAAYznC,GAClC,MAAM,IAAIuF,MAAM,gBAAkBvF,EAAQ,gCAE9C,OAAOypC,EAAKzpC,GAAOqiB,YA0QnBunB,kBAjQoB,SAAU5pC,GAC9B,IAAKA,EACD,OAAOA,EACX,GAAIkjB,EAAE6E,SAAS/nB,KAAWynC,EAAYznC,GAClC,MAAM,IAAIuF,MAAM,gBAAkBvF,EAAQ,gCAE9C,OAAOypC,EAAKzpC,GAAO4I,SAAS,KA4P5BmhC,YAAaA,EACbP,MA1LQ,SAAUxpC,EAAOsuC,GAEzB,GAAIpF,EAAUlpC,GACV,OAAOsuC,EAAa,UAAY,KAAOtuC,EAAMgN,cAAc6H,QAAQ,OAAQ,IAE/E,GAAIqO,EAAE+F,UAAUjpB,GACZ,OAAOsuC,EAAa,OAAStuC,EAAQ,OAAS,OAElD,GAAI8U,OAAOO,SAASrV,GAChB,MAAO,KAAOA,EAAM4I,SAAS,OAEjC,GAAIsa,EAAEnI,SAAS/a,KAAW2oC,EAAY3oC,KAAWkyB,EAAKlyB,GAClD,OAAOsuC,EAAa,SAAWjE,EAAU56B,KAAKxB,UAAUjO,IAG5D,GAAIkjB,EAAE6E,SAAS/nB,GAAQ,CACnB,GAA6B,IAAzBA,EAAMsO,QAAQ,QAAyC,IAAzBtO,EAAMsO,QAAQ,OAC5C,OAAOggC,EAAa,SAAWvE,EAAY/pC,GAE1C,GAA4B,IAAxBA,EAAMsO,QAAQ,OAAuC,IAAxBtO,EAAMsO,QAAQ,MAChD,OAAOggC,EAAa,QAAUtuC,EAE7B,IAAK8uB,SAAS9uB,GACf,OAAOsuC,EAAa,SAAWjE,EAAUrqC,GAGjD,OAAOsuC,EAActuC,EAAQ,EAAI,SAAW,UAAa+pC,EAAY/pC,IAiKrE2pC,WAAYA,EACZD,WAlOa,SAAUoE,GACvB,IAAK,IAAItG,EAAM,GAAIzoC,EAAI,EAAGA,EAAI+uC,EAAMhrC,OAAQ/D,IAExCyoC,EAAI3jC,MAAMiqC,EAAM/uC,KAAO,GAAG6J,SAAS,KACnC4+B,EAAI3jC,MAAiB,GAAXiqC,EAAM/uC,IAAU6J,SAAS,KAGvC,MAAO,KAAO4+B,EAAIt5B,KAAK,KA4NvB06B,MAAOA,EACPnB,YAAaA,EACb2C,eAxIiB,SAAU17B,GAC3B,OAAY,IAARA,GAAak6B,EAAMl6B,GACZA,EAAImG,QAAQ,WAAY,MAC5BnG,GAsIPm8B,QAxWU,SAAUjpB,EAAQ2sB,EAAOpsC,GACnC,IAAIqsC,EAAY,OAAOjgC,KAAKqT,IAA6B,iBAAXA,EAE1CxE,EAAWmxB,GADf3sB,EAASA,EAAOhZ,SAAS,IAAIiM,QAAQ,OAAQ,KACf/R,OAAS,GAAK,EAAKyrC,EAAQ3sB,EAAO9e,OAAS,EAAI,EAC7E,OAAQ0rC,EAAY,KAAO,IAAM,IAAItrC,MAAMka,GAASlP,KAAK/L,GAAc,KAAOyf,GAqW9EmpB,SA1VW,SAAUnpB,EAAQ2sB,EAAOpsC,GACpC,IAAIqsC,EAAY,OAAOjgC,KAAKqT,IAA6B,iBAAXA,EAE1CxE,EAAWmxB,GADf3sB,EAASA,EAAOhZ,SAAS,IAAIiM,QAAQ,OAAQ,KACf/R,OAAS,GAAK,EAAKyrC,EAAQ3sB,EAAO9e,OAAS,EAAI,EAC7E,OAAQ0rC,EAAY,KAAO,IAAM5sB,EAAU,IAAI1e,MAAMka,GAASlP,KAAK/L,GAAc,MAuVjF6oC,iBA9ZmB,SAAUjpB,GAC7B,MAAO,KAAO0nB,EAAK1nB,GAAQ4T,OAAO,KAAK/sB,SAAS,GAAI,KA8ZpDigC,KAAMA,EACNC,QAnCU,SAAU9oC,GAEpB,OAAc,QADdA,EAAQ6oC,EAAK7oC,IAEF+tC,EAEJ/tC,K,gBCrcX,MAAMyuC,EAAc,EAAQ,IAMtBC,EAAkB,GACxB,IAAK,MAAMpuC,KAAOb,OAAOoR,KAAK49B,GAC7BC,EAAgBD,EAAYnuC,IAAQA,EAGrC,MAAMmZ,EAAU,CACfk1B,IAAK,CAACC,SAAU,EAAGC,OAAQ,OAC3BC,IAAK,CAACF,SAAU,EAAGC,OAAQ,OAC3BE,IAAK,CAACH,SAAU,EAAGC,OAAQ,OAC3BG,IAAK,CAACJ,SAAU,EAAGC,OAAQ,OAC3BI,KAAM,CAACL,SAAU,EAAGC,OAAQ,QAC5BK,IAAK,CAACN,SAAU,EAAGC,OAAQ,OAC3BM,IAAK,CAACP,SAAU,EAAGC,OAAQ,OAC3BO,IAAK,CAACR,SAAU,EAAGC,OAAQ,OAC3BrH,IAAK,CAACoH,SAAU,EAAGC,OAAQ,CAAC,QAC5BQ,QAAS,CAACT,SAAU,EAAGC,OAAQ,CAAC,YAChCS,OAAQ,CAACV,SAAU,EAAGC,OAAQ,CAAC,WAC/BU,QAAS,CAACX,SAAU,EAAGC,OAAQ,CAAC,YAChCW,IAAK,CAACZ,SAAU,EAAGC,OAAQ,CAAC,IAAK,IAAK,MACtCY,MAAO,CAACb,SAAU,EAAGC,OAAQ,CAAC,MAAO,MAAO,QAC5Ca,KAAM,CAACd,SAAU,EAAGC,OAAQ,CAAC,UAG9B/vC,EAAOD,QAAU4a,EAGjB,IAAK,MAAMk2B,KAASlwC,OAAOoR,KAAK4I,GAAU,CACzC,KAAM,aAAcA,EAAQk2B,IAC3B,MAAM,IAAIpqC,MAAM,8BAAgCoqC,GAGjD,KAAM,WAAYl2B,EAAQk2B,IACzB,MAAM,IAAIpqC,MAAM,oCAAsCoqC,GAGvD,GAAIl2B,EAAQk2B,GAAOd,OAAO/rC,SAAW2W,EAAQk2B,GAAOf,SACnD,MAAM,IAAIrpC,MAAM,sCAAwCoqC,GAGzD,MAAM,SAACf,EAAQ,OAAEC,GAAUp1B,EAAQk2B,UAC5Bl2B,EAAQk2B,GAAOf,gBACfn1B,EAAQk2B,GAAOd,OACtBpvC,OAAOC,eAAe+Z,EAAQk2B,GAAQ,WAAY,CAAC3vC,MAAO4uC,IAC1DnvC,OAAOC,eAAe+Z,EAAQk2B,GAAQ,SAAU,CAAC3vC,MAAO6uC,IAGzDp1B,EAAQk1B,IAAIG,IAAM,SAAUH,GAC3B,MAAM9uC,EAAI8uC,EAAI,GAAK,IACb9M,EAAI8M,EAAI,GAAK,IACbprC,EAAIorC,EAAI,GAAK,IACbjiC,EAAMjK,KAAKiK,IAAI7M,EAAGgiC,EAAGt+B,GACrB2E,EAAMzF,KAAKyF,IAAIrI,EAAGgiC,EAAGt+B,GACrB8+B,EAAQn6B,EAAMwE,EACpB,IAAIkzB,EACA9+B,EAEAoH,IAAQwE,EACXkzB,EAAI,EACM//B,IAAMqI,EAChB03B,GAAKiC,EAAIt+B,GAAK8+B,EACJR,IAAM35B,EAChB03B,EAAI,GAAKr8B,EAAI1D,GAAKwiC,EACR9+B,IAAM2E,IAChB03B,EAAI,GAAK//B,EAAIgiC,GAAKQ,GAGnBzC,EAAIn9B,KAAKiK,IAAQ,GAAJkzB,EAAQ,KAEjBA,EAAI,IACPA,GAAK,KAGN,MAAM5gC,GAAK0N,EAAMxE,GAAO,EAUxB,OAPCpH,EADGoH,IAAQwE,EACP,EACM1N,GAAK,GACXqjC,GAASn6B,EAAMwE,GAEf21B,GAAS,EAAIn6B,EAAMwE,GAGjB,CAACkzB,EAAO,IAAJ9+B,EAAa,IAAJ9B,IAGrBya,EAAQk1B,IAAII,IAAM,SAAUJ,GAC3B,IAAIiB,EACAC,EACAC,EACAlQ,EACA9+B,EAEJ,MAAMjB,EAAI8uC,EAAI,GAAK,IACb9M,EAAI8M,EAAI,GAAK,IACbprC,EAAIorC,EAAI,GAAK,IACb/sC,EAAIa,KAAKyF,IAAIrI,EAAGgiC,EAAGt+B,GACnBs9B,EAAOj/B,EAAIa,KAAKiK,IAAI7M,EAAGgiC,EAAGt+B,GAC1BwsC,EAAQ,SAAU3wC,GACvB,OAAQwC,EAAIxC,GAAK,EAAIyhC,EAAO,IA2B7B,OAxBa,IAATA,GACHjB,EAAI,EACJ9+B,EAAI,IAEJA,EAAI+/B,EAAOj/B,EACXguC,EAAOG,EAAMlwC,GACbgwC,EAAOE,EAAMlO,GACbiO,EAAOC,EAAMxsC,GAET1D,IAAM+B,EACTg+B,EAAIkQ,EAAOD,EACDhO,IAAMjgC,EAChBg+B,EAAK,EAAI,EAAKgQ,EAAOE,EACXvsC,IAAM3B,IAChBg+B,EAAK,EAAI,EAAKiQ,EAAOD,GAGlBhQ,EAAI,EACPA,GAAK,EACKA,EAAI,IACdA,GAAK,IAIA,CACF,IAAJA,EACI,IAAJ9+B,EACI,IAAJc,IAIF6X,EAAQk1B,IAAIK,IAAM,SAAUL,GAC3B,MAAM9uC,EAAI8uC,EAAI,GACR9M,EAAI8M,EAAI,GACd,IAAIprC,EAAIorC,EAAI,GACZ,MAAM/O,EAAInmB,EAAQk1B,IAAIG,IAAIH,GAAK,GACzBzb,EAAI,EAAI,IAAMzwB,KAAKiK,IAAI7M,EAAG4C,KAAKiK,IAAIm1B,EAAGt+B,IAI5C,OAFAA,EAAI,EAAI,EAAI,IAAMd,KAAKyF,IAAIrI,EAAG4C,KAAKyF,IAAI25B,EAAGt+B,IAEnC,CAACq8B,EAAO,IAAJ1M,EAAa,IAAJ3vB,IAGrBkW,EAAQk1B,IAAIM,KAAO,SAAUN,GAC5B,MAAM9uC,EAAI8uC,EAAI,GAAK,IACb9M,EAAI8M,EAAI,GAAK,IACbprC,EAAIorC,EAAI,GAAK,IAEbta,EAAI5xB,KAAKiK,IAAI,EAAI7M,EAAG,EAAIgiC,EAAG,EAAIt+B,GAKrC,MAAO,CAAK,MAJD,EAAI1D,EAAIw0B,IAAM,EAAIA,IAAM,GAId,MAHV,EAAIwN,EAAIxN,IAAM,EAAIA,IAAM,GAGL,MAFnB,EAAI9wB,EAAI8wB,IAAM,EAAIA,IAAM,GAEI,IAAJA,IAcpC5a,EAAQk1B,IAAIU,QAAU,SAAUV,GAC/B,MAAMqB,EAAWtB,EAAgBC,GACjC,GAAIqB,EACH,OAAOA,EAGR,IACIC,EADAC,EAAyB3mC,IAG7B,IAAK,MAAM8lC,KAAW5vC,OAAOoR,KAAK49B,GAAc,CAC/C,MAAMzuC,EAAQyuC,EAAYY,GAGpBc,GAxBwBloC,EAwBYjI,IAxBfiD,EAwBU0rC,GAnBjC,GAAK1mC,EAAE,KAAO,GAChBhF,EAAE,GAAKgF,EAAE,KAAO,GAChBhF,EAAE,GAAKgF,EAAE,KAAO,GAoBdkoC,EAAWD,IACdA,EAAyBC,EACzBF,EAAwBZ,GA7B3B,IAA6BpsC,EAAGgF,EAiC/B,OAAOgoC,GAGRx2B,EAAQ41B,QAAQV,IAAM,SAAUU,GAC/B,OAAOZ,EAAYY,IAGpB51B,EAAQk1B,IAAIO,IAAM,SAAUP,GAC3B,IAAI9uC,EAAI8uC,EAAI,GAAK,IACb9M,EAAI8M,EAAI,GAAK,IACbprC,EAAIorC,EAAI,GAAK,IAGjB9uC,EAAIA,EAAI,SAAaA,EAAI,MAAS,QAAU,IAAQA,EAAI,MACxDgiC,EAAIA,EAAI,SAAaA,EAAI,MAAS,QAAU,IAAQA,EAAI,MACxDt+B,EAAIA,EAAI,SAAaA,EAAI,MAAS,QAAU,IAAQA,EAAI,MAMxD,MAAO,CAAK,KAJG,MAAJ1D,EAAmB,MAAJgiC,EAAmB,MAAJt+B,GAIpB,KAHN,MAAJ1D,EAAmB,MAAJgiC,EAAmB,MAAJt+B,GAGX,KAFf,MAAJ1D,EAAmB,MAAJgiC,EAAmB,MAAJt+B,KAK1CkW,EAAQk1B,IAAIQ,IAAM,SAAUR,GAC3B,MAAMO,EAAMz1B,EAAQk1B,IAAIO,IAAIP,GAC5B,IAAI1rC,EAAIisC,EAAI,GACRjnC,EAAIinC,EAAI,GACR/I,EAAI+I,EAAI,GAEZjsC,GAAK,OACLgF,GAAK,IACLk+B,GAAK,QAELljC,EAAIA,EAAI,QAAYA,IAAM,EAAI,GAAO,MAAQA,EAAM,GAAK,IACxDgF,EAAIA,EAAI,QAAYA,IAAM,EAAI,GAAO,MAAQA,EAAM,GAAK,IACxDk+B,EAAIA,EAAI,QAAYA,IAAM,EAAI,GAAO,MAAQA,EAAM,GAAK,IAMxD,MAAO,CAJI,IAAMl+B,EAAK,GACZ,KAAOhF,EAAIgF,GACX,KAAOA,EAAIk+B,KAKtB1sB,EAAQq1B,IAAIH,IAAM,SAAUG,GAC3B,MAAMlP,EAAIkP,EAAI,GAAK,IACbhuC,EAAIguC,EAAI,GAAK,IACb9vC,EAAI8vC,EAAI,GAAK,IACnB,IAAIsB,EACAC,EACA/iC,EAEJ,GAAU,IAANxM,EAEH,OADAwM,EAAU,IAAJtO,EACC,CAACsO,EAAKA,EAAKA,GAIlB8iC,EADGpxC,EAAI,GACFA,GAAK,EAAI8B,GAET9B,EAAI8B,EAAI9B,EAAI8B,EAGlB,MAAMwvC,EAAK,EAAItxC,EAAIoxC,EAEbzB,EAAM,CAAC,EAAG,EAAG,GACnB,IAAK,IAAI5vC,EAAI,EAAGA,EAAI,EAAGA,IACtBsxC,EAAKzQ,EAAI,EAAI,IAAM7gC,EAAI,GACnBsxC,EAAK,GACRA,IAGGA,EAAK,GACRA,IAIA/iC,EADG,EAAI+iC,EAAK,EACNC,EAAiB,GAAXF,EAAKE,GAAUD,EACjB,EAAIA,EAAK,EACbD,EACI,EAAIC,EAAK,EACbC,GAAMF,EAAKE,IAAO,EAAI,EAAID,GAAM,EAEhCC,EAGP3B,EAAI5vC,GAAW,IAANuO,EAGV,OAAOqhC,GAGRl1B,EAAQq1B,IAAIC,IAAM,SAAUD,GAC3B,MAAMlP,EAAIkP,EAAI,GACd,IAAIhuC,EAAIguC,EAAI,GAAK,IACb9vC,EAAI8vC,EAAI,GAAK,IACbyB,EAAOzvC,EACX,MAAM0vC,EAAO/tC,KAAKyF,IAAIlJ,EAAG,KAEzBA,GAAK,EACL8B,GAAM9B,GAAK,EAAKA,EAAI,EAAIA,EACxBuxC,GAAQC,GAAQ,EAAIA,EAAO,EAAIA,EAI/B,MAAO,CAAC5Q,EAAQ,KAFC,IAAN5gC,EAAW,EAAIuxC,GAASC,EAAOD,GAAS,EAAIzvC,GAAM9B,EAAI8B,IAExC,MAHd9B,EAAI8B,GAAK,KAMrB2Y,EAAQs1B,IAAIJ,IAAM,SAAUI,GAC3B,MAAMnP,EAAImP,EAAI,GAAK,GACbjuC,EAAIiuC,EAAI,GAAK,IACnB,IAAIntC,EAAImtC,EAAI,GAAK,IACjB,MAAMtZ,EAAKhzB,KAAKC,MAAMk9B,GAAK,EAErB9vB,EAAI8vB,EAAIn9B,KAAKC,MAAMk9B,GACnB/+B,EAAI,IAAMe,GAAK,EAAId,GACnBmE,EAAI,IAAMrD,GAAK,EAAKd,EAAIgP,GACxB7P,EAAI,IAAM2B,GAAK,EAAKd,GAAK,EAAIgP,IAGnC,OAFAlO,GAAK,IAEG6zB,GACP,KAAK,EACJ,MAAO,CAAC7zB,EAAG3B,EAAGY,GACf,KAAK,EACJ,MAAO,CAACoE,EAAGrD,EAAGf,GACf,KAAK,EACJ,MAAO,CAACA,EAAGe,EAAG3B,GACf,KAAK,EACJ,MAAO,CAACY,EAAGoE,EAAGrD,GACf,KAAK,EACJ,MAAO,CAAC3B,EAAGY,EAAGe,GACf,KAAK,EACJ,MAAO,CAACA,EAAGf,EAAGoE,KAIjBwU,EAAQs1B,IAAID,IAAM,SAAUC,GAC3B,MAAMnP,EAAImP,EAAI,GACRjuC,EAAIiuC,EAAI,GAAK,IACbntC,EAAImtC,EAAI,GAAK,IACb0B,EAAOhuC,KAAKyF,IAAItG,EAAG,KACzB,IAAI8uC,EACA1xC,EAEJA,GAAK,EAAI8B,GAAKc,EACd,MAAM4uC,GAAQ,EAAI1vC,GAAK2vC,EAMvB,OALAC,EAAK5vC,EAAI2vC,EACTC,GAAOF,GAAQ,EAAKA,EAAO,EAAIA,EAC/BE,EAAKA,GAAM,EACX1xC,GAAK,EAEE,CAAC4gC,EAAQ,IAAL8Q,EAAc,IAAJ1xC,IAItBya,EAAQu1B,IAAIL,IAAM,SAAUK,GAC3B,MAAMpP,EAAIoP,EAAI,GAAK,IACnB,IAAI2B,EAAK3B,EAAI,GAAK,IACd4B,EAAK5B,EAAI,GAAK,IAClB,MAAM6B,EAAQF,EAAKC,EACnB,IAAI9gC,EAGA+gC,EAAQ,IACXF,GAAME,EACND,GAAMC,GAGP,MAAM9xC,EAAI0D,KAAKC,MAAM,EAAIk9B,GACnBh+B,EAAI,EAAIgvC,EACd9gC,EAAI,EAAI8vB,EAAI7gC,EAEO,IAAV,EAAJA,KACJ+Q,EAAI,EAAIA,GAGT,MAAMtP,EAAImwC,EAAK7gC,GAAKlO,EAAI+uC,GAExB,IAAI9wC,EACAgiC,EACAt+B,EAEJ,OAAQxE,GACP,QACA,KAAK,EACL,KAAK,EAAGc,EAAI+B,EAAIigC,EAAIrhC,EAAI+C,EAAIotC,EAAI,MAChC,KAAK,EAAG9wC,EAAIW,EAAIqhC,EAAIjgC,EAAI2B,EAAIotC,EAAI,MAChC,KAAK,EAAG9wC,EAAI8wC,EAAI9O,EAAIjgC,EAAI2B,EAAI/C,EAAG,MAC/B,KAAK,EAAGX,EAAI8wC,EAAI9O,EAAIrhC,EAAI+C,EAAI3B,EAAG,MAC/B,KAAK,EAAG/B,EAAIW,EAAIqhC,EAAI8O,EAAIptC,EAAI3B,EAAG,MAC/B,KAAK,EAAG/B,EAAI+B,EAAIigC,EAAI8O,EAAIptC,EAAI/C,EAI7B,MAAO,CAAK,IAAJX,EAAa,IAAJgiC,EAAa,IAAJt+B,IAG3BkW,EAAQw1B,KAAKN,IAAM,SAAUM,GAC5B,MAAM7vC,EAAI6vC,EAAK,GAAK,IACd9vC,EAAI8vC,EAAK,GAAK,IACdhnC,EAAIgnC,EAAK,GAAK,IACd5a,EAAI4a,EAAK,GAAK,IAMpB,MAAO,CAAK,KAJF,EAAIxsC,KAAKiK,IAAI,EAAGtN,GAAK,EAAIi1B,GAAKA,IAInB,KAHX,EAAI5xB,KAAKiK,IAAI,EAAGvN,GAAK,EAAIk1B,GAAKA,IAGV,KAFpB,EAAI5xB,KAAKiK,IAAI,EAAGzE,GAAK,EAAIosB,GAAKA,MAKzC5a,EAAQy1B,IAAIP,IAAM,SAAUO,GAC3B,MAAMjsC,EAAIisC,EAAI,GAAK,IACbjnC,EAAIinC,EAAI,GAAK,IACb/I,EAAI+I,EAAI,GAAK,IACnB,IAAIrvC,EACAgiC,EACAt+B,EAuBJ,OArBA1D,EAAS,OAAJoD,GAAoB,OAALgF,GAAqB,MAALk+B,EACpCtE,GAAU,MAAL5+B,EAAoB,OAAJgF,EAAmB,MAAJk+B,EACpC5iC,EAAS,MAAJN,GAAoB,KAALgF,EAAoB,MAAJk+B,EAGpCtmC,EAAIA,EAAI,SACH,MAASA,IAAM,EAAM,KAAS,KAC5B,MAAJA,EAEHgiC,EAAIA,EAAI,SACH,MAASA,IAAM,EAAM,KAAS,KAC5B,MAAJA,EAEHt+B,EAAIA,EAAI,SACH,MAASA,IAAM,EAAM,KAAS,KAC5B,MAAJA,EAEH1D,EAAI4C,KAAKiK,IAAIjK,KAAKyF,IAAI,EAAGrI,GAAI,GAC7BgiC,EAAIp/B,KAAKiK,IAAIjK,KAAKyF,IAAI,EAAG25B,GAAI,GAC7Bt+B,EAAId,KAAKiK,IAAIjK,KAAKyF,IAAI,EAAG3E,GAAI,GAEtB,CAAK,IAAJ1D,EAAa,IAAJgiC,EAAa,IAAJt+B,IAG3BkW,EAAQy1B,IAAIC,IAAM,SAAUD,GAC3B,IAAIjsC,EAAIisC,EAAI,GACRjnC,EAAIinC,EAAI,GACR/I,EAAI+I,EAAI,GAEZjsC,GAAK,OACLgF,GAAK,IACLk+B,GAAK,QAELljC,EAAIA,EAAI,QAAYA,IAAM,EAAI,GAAO,MAAQA,EAAM,GAAK,IACxDgF,EAAIA,EAAI,QAAYA,IAAM,EAAI,GAAO,MAAQA,EAAM,GAAK,IACxDk+B,EAAIA,EAAI,QAAYA,IAAM,EAAI,GAAO,MAAQA,EAAM,GAAK,IAMxD,MAAO,CAJI,IAAMl+B,EAAK,GACZ,KAAOhF,EAAIgF,GACX,KAAOA,EAAIk+B,KAKtB1sB,EAAQ01B,IAAID,IAAM,SAAUC,GAI3B,IAAIlsC,EACAgF,EACAk+B,EAEJl+B,GAPUknC,EAAI,GAOL,IAAM,IACflsC,EAPUksC,EAAI,GAON,IAAMlnC,EACdk+B,EAAIl+B,EAPMknC,EAAI,GAOF,IAEZ,MAAM2B,EAAK7oC,GAAK,EACVm6B,EAAKn/B,GAAK,EACV8tC,EAAK5K,GAAK,EAShB,OARAl+B,EAAI6oC,EAAK,QAAWA,GAAM7oC,EAAI,GAAK,KAAO,MAC1ChF,EAAIm/B,EAAK,QAAWA,GAAMn/B,EAAI,GAAK,KAAO,MAC1CkjC,EAAI4K,EAAK,QAAWA,GAAM5K,EAAI,GAAK,KAAO,MAE1CljC,GAAK,OACLgF,GAAK,IACLk+B,GAAK,QAEE,CAACljC,EAAGgF,EAAGk+B,IAGf1sB,EAAQ01B,IAAIC,IAAM,SAAUD,GAC3B,MAAMnwC,EAAImwC,EAAI,GACR7rC,EAAI6rC,EAAI,GACR5rC,EAAI4rC,EAAI,GACd,IAAIvP,EAGJA,EAAS,IADEn9B,KAAKuuC,MAAMztC,EAAGD,GACV,EAAIb,KAAK+6B,GAEpBoC,EAAI,IACPA,GAAK,KAKN,MAAO,CAAC5gC,EAFEyD,KAAK6hC,KAAKhhC,EAAIA,EAAIC,EAAIA,GAElBq8B,IAGfnmB,EAAQ21B,IAAID,IAAM,SAAUC,GAC3B,MAAMpwC,EAAIowC,EAAI,GACRhwC,EAAIgwC,EAAI,GAGR6B,EAFI7B,EAAI,GAEC,IAAM,EAAI3sC,KAAK+6B,GAI9B,MAAO,CAACx+B,EAHEI,EAAIqD,KAAK86B,IAAI0T,GACb7xC,EAAIqD,KAAKi7B,IAAIuT,KAKxBx3B,EAAQk1B,IAAIW,OAAS,SAAUxsB,EAAMouB,EAAa,MACjD,MAAOrxC,EAAGgiC,EAAGt+B,GAAKuf,EAClB,IAAI9iB,EAAuB,OAAfkxC,EAAsBz3B,EAAQk1B,IAAII,IAAIjsB,GAAM,GAAKouB,EAI7D,GAFAlxC,EAAQyC,KAAK87B,MAAMv+B,EAAQ,IAEb,IAAVA,EACH,OAAO,GAGR,IAAImxC,EAAO,IACN1uC,KAAK87B,MAAMh7B,EAAI,MAAQ,EACxBd,KAAK87B,MAAMsD,EAAI,MAAQ,EACxBp/B,KAAK87B,MAAM1+B,EAAI,MAMlB,OAJc,IAAVG,IACHmxC,GAAQ,IAGFA,GAGR13B,EAAQs1B,IAAIO,OAAS,SAAUxsB,GAG9B,OAAOrJ,EAAQk1B,IAAIW,OAAO71B,EAAQs1B,IAAIJ,IAAI7rB,GAAOA,EAAK,KAGvDrJ,EAAQk1B,IAAIY,QAAU,SAAUzsB,GAC/B,MAAMjjB,EAAIijB,EAAK,GACT+e,EAAI/e,EAAK,GACTvf,EAAIuf,EAAK,GAIf,GAAIjjB,IAAMgiC,GAAKA,IAAMt+B,EACpB,OAAI1D,EAAI,EACA,GAGJA,EAAI,IACA,IAGD4C,KAAK87B,OAAQ1+B,EAAI,GAAK,IAAO,IAAM,IAQ3C,OALa,GACT,GAAK4C,KAAK87B,MAAM1+B,EAAI,IAAM,GAC1B,EAAI4C,KAAK87B,MAAMsD,EAAI,IAAM,GAC1Bp/B,KAAK87B,MAAMh7B,EAAI,IAAM,IAKzBkW,EAAQ61B,OAAOX,IAAM,SAAU7rB,GAC9B,IAAIsuB,EAAQtuB,EAAO,GAGnB,GAAc,IAAVsuB,GAAyB,IAAVA,EAOlB,OANItuB,EAAO,KACVsuB,GAAS,KAGVA,EAAQA,EAAQ,KAAO,IAEhB,CAACA,EAAOA,EAAOA,GAGvB,MAAMC,EAA6B,IAAL,KAAbvuB,EAAO,KAKxB,MAAO,EAJa,EAARsuB,GAAaC,EAAQ,KACpBD,GAAS,EAAK,GAAKC,EAAQ,KAC3BD,GAAS,EAAK,GAAKC,EAAQ,MAKzC53B,EAAQ81B,QAAQZ,IAAM,SAAU7rB,GAE/B,GAAIA,GAAQ,IAAK,CAChB,MAAM1jB,EAAmB,IAAd0jB,EAAO,KAAY,EAC9B,MAAO,CAAC1jB,EAAGA,EAAGA,GAKf,IAAIkyC,EAFJxuB,GAAQ,GAOR,MAAO,CAJGrgB,KAAKC,MAAMogB,EAAO,IAAM,EAAI,IAC5BrgB,KAAKC,OAAO4uC,EAAMxuB,EAAO,IAAM,GAAK,EAAI,IACvCwuB,EAAM,EAAK,EAAI,MAK3B73B,EAAQk1B,IAAInH,IAAM,SAAU1kB,GAC3B,MAIMlB,KAJkC,IAAtBnf,KAAK87B,MAAMzb,EAAK,MAAe,MACtB,IAAtBrgB,KAAK87B,MAAMzb,EAAK,MAAe,IACV,IAAtBrgB,KAAK87B,MAAMzb,EAAK,MAEGla,SAAS,IAAI2gC,cACpC,MAAO,SAASnC,UAAUxlB,EAAO9e,QAAU8e,GAG5CnI,EAAQ+tB,IAAImH,IAAM,SAAU7rB,GAC3B,MAAMhB,EAAQgB,EAAKla,SAAS,IAAIkZ,MAAM,4BACtC,IAAKA,EACJ,MAAO,CAAC,EAAG,EAAG,GAGf,IAAIyvB,EAAczvB,EAAM,GAEA,IAApBA,EAAM,GAAGhf,SACZyuC,EAAcA,EAAYnjC,MAAM,IAAIX,IAAI+jC,GAChCA,EAAOA,GACZtjC,KAAK,KAGT,MAAMujC,EAAU7iC,SAAS2iC,EAAa,IAKtC,MAAO,CAJIE,GAAW,GAAM,IACjBA,GAAW,EAAK,IACP,IAAVA,IAKXh4B,EAAQk1B,IAAIa,IAAM,SAAUb,GAC3B,MAAM9uC,EAAI8uC,EAAI,GAAK,IACb9M,EAAI8M,EAAI,GAAK,IACbprC,EAAIorC,EAAI,GAAK,IACbzmC,EAAMzF,KAAKyF,IAAIzF,KAAKyF,IAAIrI,EAAGgiC,GAAIt+B,GAC/BmJ,EAAMjK,KAAKiK,IAAIjK,KAAKiK,IAAI7M,EAAGgiC,GAAIt+B,GAC/BmuC,EAAUxpC,EAAMwE,EACtB,IAAIilC,EACAC,EAuBJ,OApBCD,EADGD,EAAS,EACAhlC,GAAO,EAAIglC,GAEX,EAIZE,EADGF,GAAU,EACP,EAEHxpC,IAAQrI,GACHgiC,EAAIt+B,GAAKmuC,EAAU,EAExBxpC,IAAQ25B,EACL,GAAKt+B,EAAI1D,GAAK6xC,EAEd,GAAK7xC,EAAIgiC,GAAK6P,EAGrBE,GAAO,EACPA,GAAO,EAEA,CAAO,IAANA,EAAoB,IAATF,EAA0B,IAAZC,IAGlCl4B,EAAQq1B,IAAIU,IAAM,SAAUV,GAC3B,MAAMhuC,EAAIguC,EAAI,GAAK,IACb9vC,EAAI8vC,EAAI,GAAK,IAEb1vC,EAAIJ,EAAI,GAAO,EAAM8B,EAAI9B,EAAM,EAAM8B,GAAK,EAAM9B,GAEtD,IAAI8Q,EAAI,EAKR,OAJI1Q,EAAI,IACP0Q,GAAK9Q,EAAI,GAAMI,IAAM,EAAMA,IAGrB,CAAC0vC,EAAI,GAAQ,IAAJ1vC,EAAa,IAAJ0Q,IAG1B2J,EAAQs1B,IAAIS,IAAM,SAAUT,GAC3B,MAAMjuC,EAAIiuC,EAAI,GAAK,IACbntC,EAAImtC,EAAI,GAAK,IAEb3vC,EAAI0B,EAAIc,EACd,IAAIkO,EAAI,EAMR,OAJI1Q,EAAI,IACP0Q,GAAKlO,EAAIxC,IAAM,EAAIA,IAGb,CAAC2vC,EAAI,GAAQ,IAAJ3vC,EAAa,IAAJ0Q,IAG1B2J,EAAQ+1B,IAAIb,IAAM,SAAUa,GAC3B,MAAM5P,EAAI4P,EAAI,GAAK,IACbpwC,EAAIowC,EAAI,GAAK,IACb3N,EAAI2N,EAAI,GAAK,IAEnB,GAAU,IAANpwC,EACH,MAAO,CAAK,IAAJyiC,EAAa,IAAJA,EAAa,IAAJA,GAG3B,MAAMgQ,EAAO,CAAC,EAAG,EAAG,GACdpc,EAAMmK,EAAI,EAAK,EACfh+B,EAAI6zB,EAAK,EACTvC,EAAI,EAAItxB,EACd,IAAIkwC,EAAK,EAGT,OAAQrvC,KAAKC,MAAM+yB,IAClB,KAAK,EACJoc,EAAK,GAAK,EAAGA,EAAK,GAAKjwC,EAAGiwC,EAAK,GAAK,EAAG,MACxC,KAAK,EACJA,EAAK,GAAK3e,EAAG2e,EAAK,GAAK,EAAGA,EAAK,GAAK,EAAG,MACxC,KAAK,EACJA,EAAK,GAAK,EAAGA,EAAK,GAAK,EAAGA,EAAK,GAAKjwC,EAAG,MACxC,KAAK,EACJiwC,EAAK,GAAK,EAAGA,EAAK,GAAK3e,EAAG2e,EAAK,GAAK,EAAG,MACxC,KAAK,EACJA,EAAK,GAAKjwC,EAAGiwC,EAAK,GAAK,EAAGA,EAAK,GAAK,EAAG,MACxC,QACCA,EAAK,GAAK,EAAGA,EAAK,GAAK,EAAGA,EAAK,GAAK3e,EAMtC,OAFA4e,GAAM,EAAM1yC,GAAKyiC,EAEV,CACe,KAApBziC,EAAIyyC,EAAK,GAAKC,GACM,KAApB1yC,EAAIyyC,EAAK,GAAKC,GACM,KAApB1yC,EAAIyyC,EAAK,GAAKC,KAIjBr4B,EAAQ+1B,IAAIT,IAAM,SAAUS,GAC3B,MAAMpwC,EAAIowC,EAAI,GAAK,IAGb5tC,EAAIxC,EAFAowC,EAAI,GAAK,KAEA,EAAMpwC,GACzB,IAAI0Q,EAAI,EAMR,OAJIlO,EAAI,IACPkO,EAAI1Q,EAAIwC,GAGF,CAAC4tC,EAAI,GAAQ,IAAJ1/B,EAAa,IAAJlO,IAG1B6X,EAAQ+1B,IAAIV,IAAM,SAAUU,GAC3B,MAAMpwC,EAAIowC,EAAI,GAAK,IAGbxwC,EAFIwwC,EAAI,GAAK,KAEJ,EAAMpwC,GAAK,GAAMA,EAChC,IAAI0B,EAAI,EASR,OAPI9B,EAAI,GAAOA,EAAI,GAClB8B,EAAI1B,GAAK,EAAIJ,GAEVA,GAAK,IAAOA,EAAI,IACnB8B,EAAI1B,GAAK,GAAK,EAAIJ,KAGZ,CAACwwC,EAAI,GAAQ,IAAJ1uC,EAAa,IAAJ9B,IAG1Bya,EAAQ+1B,IAAIR,IAAM,SAAUQ,GAC3B,MAAMpwC,EAAIowC,EAAI,GAAK,IAEb5tC,EAAIxC,EADAowC,EAAI,GAAK,KACA,EAAMpwC,GACzB,MAAO,CAACowC,EAAI,GAAc,KAAT5tC,EAAIxC,GAAoB,KAAT,EAAIwC,KAGrC6X,EAAQu1B,IAAIQ,IAAM,SAAUR,GAC3B,MAAM9b,EAAI8b,EAAI,GAAK,IAEbptC,EAAI,EADAotC,EAAI,GAAK,IAEb5vC,EAAIwC,EAAIsxB,EACd,IAAI2O,EAAI,EAMR,OAJIziC,EAAI,IACPyiC,GAAKjgC,EAAIxC,IAAM,EAAIA,IAGb,CAAC4vC,EAAI,GAAQ,IAAJ5vC,EAAa,IAAJyiC,IAG1BpoB,EAAQg2B,MAAMd,IAAM,SAAUc,GAC7B,MAAO,CAAEA,EAAM,GAAK,MAAS,IAAMA,EAAM,GAAK,MAAS,IAAMA,EAAM,GAAK,MAAS,MAGlFh2B,EAAQk1B,IAAIc,MAAQ,SAAUd,GAC7B,MAAO,CAAEA,EAAI,GAAK,IAAO,MAAQA,EAAI,GAAK,IAAO,MAAQA,EAAI,GAAK,IAAO,QAG1El1B,EAAQi2B,KAAKf,IAAM,SAAU7rB,GAC5B,MAAO,CAACA,EAAK,GAAK,IAAM,IAAKA,EAAK,GAAK,IAAM,IAAKA,EAAK,GAAK,IAAM,MAGnErJ,EAAQi2B,KAAKZ,IAAM,SAAUhsB,GAC5B,MAAO,CAAC,EAAG,EAAGA,EAAK,KAGpBrJ,EAAQi2B,KAAKX,IAAMt1B,EAAQi2B,KAAKZ,IAEhCr1B,EAAQi2B,KAAKV,IAAM,SAAUU,GAC5B,MAAO,CAAC,EAAG,IAAKA,EAAK,KAGtBj2B,EAAQi2B,KAAKT,KAAO,SAAUS,GAC7B,MAAO,CAAC,EAAG,EAAG,EAAGA,EAAK,KAGvBj2B,EAAQi2B,KAAKP,IAAM,SAAUO,GAC5B,MAAO,CAACA,EAAK,GAAI,EAAG,IAGrBj2B,EAAQi2B,KAAKlI,IAAM,SAAUkI,GAC5B,MAAMpiC,EAAwC,IAAlC7K,KAAK87B,MAAMmR,EAAK,GAAK,IAAM,KAGjC9tB,IAFWtU,GAAO,KAAOA,GAAO,GAAKA,GAEpB1E,SAAS,IAAI2gC,cACpC,MAAO,SAASnC,UAAUxlB,EAAO9e,QAAU8e,GAG5CnI,EAAQk1B,IAAIe,KAAO,SAAUf,GAE5B,MAAO,EADMA,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAAM,EAC3B,IAAM,O,cCr0BrB7vC,EAAOD,QAAU0Q,QAAQ,U,cCUzB,IAeI4I,EAPc1Y,OAAOkB,UAOQiI,SAG7BmpC,EAActvC,KAAKC,MACnBod,EAAYrd,KAAKiK,IAcrB,SAASslC,EAAgBx+B,EAAOxT,EAAOiyC,GACrC,IAAI/iC,EAAM,EACNya,EAAOnW,EAAQA,EAAM1Q,OAASoM,EAElC,GAAoB,iBAATlP,GAAqBA,GAAUA,GAAS2pB,GAnCzBuoB,WAmCwD,CAChF,KAAOhjC,EAAMya,GAAM,CACjB,IAAIC,EAAO1a,EAAMya,IAAU,EACvB9C,EAAWrT,EAAMoW,GAEJ,OAAb/C,IAAsBnF,EAASmF,KAC9BorB,EAAcprB,GAAY7mB,EAAU6mB,EAAW7mB,GAClDkP,EAAM0a,EAAM,EAEZD,EAAOC,EAGX,OAAOD,EAET,OAgBF,SAA2BnW,EAAOxT,EAAO0X,EAAUu6B,GACjDjyC,EAAQ0X,EAAS1X,GAEjB,IAAIkP,EAAM,EACNya,EAAOnW,EAAQA,EAAM1Q,OAAS,EAC9BqvC,EAAWnyC,GAAUA,EACrBoyC,EAAsB,OAAVpyC,EACZqyC,EAAc3wB,EAAS1hB,GACvBsyC,OAA2B7hC,IAAVzQ,EAErB,KAAOkP,EAAMya,GAAM,CACjB,IAAIC,EAAMmoB,GAAa7iC,EAAMya,GAAQ,GACjC9C,EAAWnP,EAASlE,EAAMoW,IAC1B2oB,OAA4B9hC,IAAboW,EACf2rB,EAAyB,OAAb3rB,EACZ4rB,EAAiB5rB,GAAaA,EAC9B6rB,EAAchxB,EAASmF,GAE3B,GAAIsrB,EACF,IAAIQ,EAASV,GAAcQ,OAE3BE,EADSL,EACAG,IAAmBR,GAAcM,GACjCH,EACAK,GAAkBF,IAAiBN,IAAeO,GAClDH,EACAI,GAAkBF,IAAiBC,IAAcP,IAAeS,IAChEF,IAAaE,IAGbT,EAAcprB,GAAY7mB,EAAU6mB,EAAW7mB,GAEtD2yC,EACFzjC,EAAM0a,EAAM,EAEZD,EAAOC,EAGX,OAAO9J,EAAU6J,EAvGGuoB,YAkDbU,CAAkBp/B,EAAOxT,EAAOugB,EAAU0xB,GA0HnD,SAASvwB,EAAS1hB,GAChB,MAAuB,iBAATA,GAtBhB,SAAsBA,GACpB,QAASA,GAAyB,iBAATA,EAsBtBqY,CAAarY,IA1KF,mBA0KYmY,EAAejZ,KAAKc,GAmBhD,SAASugB,EAASvgB,GAChB,OAAOA,EAGTlB,EAAOD,QA1EP,SAAqB2U,EAAOxT,GAC1B,OAAOgyC,EAAgBx+B,EAAOxT,K,iBCvIhC,YAUA,IAmBIiS,EAAU,qBAOVC,EAAS,eAETC,EAAY,kBAGZC,EAAS,eAkBT8M,EAAe,mDACfC,EAAgB,QAChBC,EAAe,MACfC,EAAa,mGASbC,EAAS,aAGTC,EAAe,WAGfC,EAAa,qBAGbC,EAAa,aAGbpN,EAAe,8BAGfqN,EAAY,cAGZpN,EAAW,mBAGXC,EAAiB,GACrBA,EA7CiB,yBA6CYA,EA5CZ,yBA6CjBA,EA5Cc,sBA4CYA,EA3CX,uBA4CfA,EA3Ce,uBA2CYA,EA1CZ,uBA2CfA,EA1CsB,8BA0CYA,EAzClB,wBA0ChBA,EAzCgB,yBAyCY,EAC5BA,EAAeN,GAAWM,EApEX,kBAqEfA,EArDqB,wBAqDYA,EApEnB,oBAqEdA,EArDkB,qBAqDYA,EApEhB,iBAqEdA,EApEe,kBAoEYA,EAnEb,qBAoEdA,EAAeL,GAAUK,EAjET,mBAkEhBA,EAAeJ,GAAaI,EA/DZ,mBAgEhBA,EAAeH,GAAUG,EA9DT,mBA+DhBA,EA7DiB,qBA6DY,EAG7B,IAAIoN,EAAe/Q,SAGf4D,EAA8B,iBAAVC,QAAsBA,QAAUA,OAAOhT,SAAWA,QAAUgT,OAGhFC,EAA0B,iBAARpN,MAAoBA,MAAQA,KAAK7F,SAAWA,QAAU6F,KAGxEqN,EAAOH,GAAcE,GAAYE,SAAS,cAATA,GAGjCC,EAA4ChU,IAAYA,EAAQiU,UAAYjU,EAG5EkU,EAAaF,GAAgC,iBAAV/T,GAAsBA,IAAWA,EAAOgU,UAAYhU,EAMvFmU,EAHgBF,GAAcA,EAAWlU,UAAYgU,GAGtBL,EAAWU,QAG1CC,EAAY,WACd,IACE,OAAOF,GAAeA,EAAYG,QAAQ,QAC1C,MAAOtG,KAHI,GAOXuG,EAAmBF,GAAYA,EAASG,aAY5C,SAASC,EAAUC,EAAOC,GAIxB,IAHA,IAAIC,GAAS,EACT5Q,EAAS0Q,EAAQA,EAAM1Q,OAAS,IAE3B4Q,EAAQ5Q,GACf,GAAI2Q,EAAUD,EAAME,GAAQA,EAAOF,GACjC,OAAO,EAGX,OAAO,EA0FT,SAASoM,EAAa5f,GAGpB,IAAI6F,GAAS,EACb,GAAa,MAAT7F,GAA0C,mBAAlBA,EAAM4I,SAChC,IACE/C,KAAY7F,EAAQ,IACpB,MAAO8M,IAEX,OAAOjH,EAUT,SAAS8N,EAAWlG,GAClB,IAAIiG,GAAS,EACT7N,EAAS3C,MAAMuK,EAAImG,MAKvB,OAHAnG,EAAIvM,SAAQ,SAASlB,EAAOM,GAC1BuF,IAAS6N,GAAS,CAACpT,EAAKN,MAEnB6F,EAwBT,SAASgO,EAAWC,GAClB,IAAIJ,GAAS,EACT7N,EAAS3C,MAAM4Q,EAAIF,MAKvB,OAHAE,EAAI5S,SAAQ,SAASlB,GACnB6F,IAAS6N,GAAS1T,KAEb6F,EAIT,IASMkO,EAjCWC,EAAMC,EAwBnBC,EAAahR,MAAMvC,UACnBwT,EAAYvB,SAASjS,UACrByT,EAAc3U,OAAOkB,UAGrB0T,EAAa1B,EAAK,sBAGlB4B,GACER,EAAM,SAASS,KAAKH,GAAcA,EAAWxD,MAAQwD,EAAWxD,KAAK4D,UAAY,KACvE,iBAAmBV,EAAO,GAItCO,EAAeH,EAAUvL,SAGzBhI,EAAiBwT,EAAYxT,eAO7BuX,EAAiB/D,EAAYxL,SAG7B+L,EAAaC,OAAO,IACtBN,EAAapV,KAAK0B,GAAgBiU,QA/QjB,sBA+QuC,QACvDA,QAAQ,yDAA0D,SAAW,KAI5E/U,EAAS6S,EAAK7S,OACdiV,EAAapC,EAAKoC,WAClBC,EAAuBZ,EAAYY,qBACnC/D,EAASiD,EAAWjD,OAGpBqE,GA/DatB,EA+DQvU,OAAOoR,KA/DToD,EA+DexU,OA9D7B,SAAS8V,GACd,OAAOvB,EAAKC,EAAUsB,MA8DtBsK,EAAYpd,KAAKyF,IACjB4X,EAAYrd,KAAKiK,IAGjB8I,EAAWC,GAAU9C,EAAM,YAC3B+C,EAAMD,GAAU9C,EAAM,OACtBgD,EAAUF,GAAU9C,EAAM,WAC1BiD,EAAMH,GAAU9C,EAAM,OACtBkD,GAAUJ,GAAU9C,EAAM,WAC1BmD,GAAeL,GAAUhW,OAAQ,UAGjCsW,GAAqBC,GAASR,GAC9BS,GAAgBD,GAASN,GACzBQ,GAAoBF,GAASL,GAC7BQ,GAAgBH,GAASJ,GACzBQ,GAAoBJ,GAASH,IAG7BQ,GAAcvW,EAASA,EAAOa,eAAY8P,EAC1C6F,GAAgBD,GAAcA,GAAY3I,aAAU+C,EACpDsP,GAAiB1J,GAAcA,GAAYzN,cAAW6H,EAS1D,SAAS8F,GAAKC,GACZ,IAAI9C,GAAS,EACT5Q,EAAS0T,EAAUA,EAAQ1T,OAAS,EAGxC,IADAV,KAAKqU,UACI/C,EAAQ5Q,GAAQ,CACvB,IAAI4T,EAAQF,EAAQ9C,GACpBtR,KAAK0R,IAAI4C,EAAM,GAAIA,EAAM,KA2F7B,SAASC,GAAUH,GACjB,IAAI9C,GAAS,EACT5Q,EAAS0T,EAAUA,EAAQ1T,OAAS,EAGxC,IADAV,KAAKqU,UACI/C,EAAQ5Q,GAAQ,CACvB,IAAI4T,EAAQF,EAAQ9C,GACpBtR,KAAK0R,IAAI4C,EAAM,GAAIA,EAAM,KAyG7B,SAASE,GAASJ,GAChB,IAAI9C,GAAS,EACT5Q,EAAS0T,EAAUA,EAAQ1T,OAAS,EAGxC,IADAV,KAAKqU,UACI/C,EAAQ5Q,GAAQ,CACvB,IAAI4T,EAAQF,EAAQ9C,GACpBtR,KAAK0R,IAAI4C,EAAM,GAAIA,EAAM,KAwF7B,SAASG,GAASC,GAChB,IAAIpD,GAAS,EACT5Q,EAASgU,EAASA,EAAOhU,OAAS,EAGtC,IADAV,KAAK2U,SAAW,IAAIH,KACXlD,EAAQ5Q,GACfV,KAAKiB,IAAIyT,EAAOpD,IA2CpB,SAASsD,GAAMR,GACbpU,KAAK2U,SAAW,IAAIJ,GAAUH,GA4FhC,SAASU,GAAclX,EAAOmX,GAG5B,IAAItR,EAAU6K,GAAQ1Q,IAAUsX,GAAYtX,GA/mB9C,SAAmBQ,EAAGkX,GAIpB,IAHA,IAAIhE,GAAS,EACT7N,EAAS3C,MAAM1C,KAEVkT,EAAQlT,GACfqF,EAAO6N,GAASgE,EAAShE,GAE3B,OAAO7N,EAymBH8R,CAAU3X,EAAM8C,OAAQqJ,QACxB,GAEArJ,EAAS+C,EAAO/C,OAChB2U,IAAgB3U,EAEpB,IAAK,IAAIxC,KAAON,GACTmX,IAAavW,EAAe1B,KAAKc,EAAOM,IACvCmX,IAAuB,UAAPnX,GAAmBsX,GAAQtX,EAAKwC,KACpD+C,EAAOhC,KAAKvD,GAGhB,OAAOuF,EAWT,SAASgS,GAAarE,EAAOlT,GAE3B,IADA,IAAIwC,EAAS0Q,EAAM1Q,OACZA,KACL,GAAI2G,GAAG+J,EAAM1Q,GAAQ,GAAIxC,GACvB,OAAOwC,EAGX,OAAQ,EAWV,SAASkd,GAAQvf,EAAQwf,GAMvB,IAHA,IAAIvM,EAAQ,EACR5Q,GAHJmd,EAAOC,GAAMD,EAAMxf,GAAU,CAACwf,GAAQE,GAASF,IAG7Bnd,OAED,MAAVrC,GAAkBiT,EAAQ5Q,GAC/BrC,EAASA,EAAO2f,GAAMH,EAAKvM,OAE7B,OAAQA,GAASA,GAAS5Q,EAAUrC,OAASgQ,EAsB/C,SAAS4P,GAAU5f,EAAQH,GACzB,OAAiB,MAAVG,GAAkBH,KAAOb,OAAOgB,GAkBzC,SAAS6X,GAAYtY,EAAOuY,EAAOE,EAAYD,EAASE,GACtD,OAAI1Y,IAAUuY,IAGD,MAATvY,GAA0B,MAATuY,IAAmBwC,GAAS/a,KAAWqY,GAAaE,GAChEvY,GAAUA,GAASuY,GAAUA,EAoBxC,SAAyB9X,EAAQ8X,EAAOI,EAAWF,EAAYD,EAASE,GACtE,IAAIE,EAAWlI,GAAQjQ,GACnBoY,EAAWnI,GAAQ6H,GACnBO,EAz5BS,iBA05BTE,EA15BS,iBA45BRJ,IAEHE,GADAA,EAASC,GAAOtY,KACGwR,EAAUE,EAAY2G,GAEtCD,IAEHG,GADAA,EAASD,GAAOR,KACGtG,EAAUE,EAAY6G,GAE3C,IAAIC,EAAWH,GAAU3G,IAAcyN,EAAanf,GAChDyY,EAAWF,GAAU7G,IAAcyN,EAAarH,GAChDY,EAAYL,GAAUE,EAE1B,GAAIG,IAAcF,EAEhB,OADAP,IAAUA,EAAQ,IAAI1B,IACd4B,GAAYtF,GAAa7S,GAC7B2Y,GAAY3Y,EAAQ8X,EAAOI,EAAWF,EAAYD,EAASE,GAkUnE,SAAoBjY,EAAQ8X,EAAOP,EAAKW,EAAWF,EAAYD,EAASE,GACtE,OAAQV,GACN,IA9tCc,oBA+tCZ,GAAKvX,EAAO4Y,YAAcd,EAAMc,YAC3B5Y,EAAO6Y,YAAcf,EAAMe,WAC9B,OAAO,EAET7Y,EAASA,EAAO8Y,OAChBhB,EAAQA,EAAMgB,OAEhB,IAvuCiB,uBAwuCf,QAAK9Y,EAAO4Y,YAAcd,EAAMc,aAC3BV,EAAU,IAAI5D,EAAWtU,GAAS,IAAIsU,EAAWwD,KAKxD,IA7vCU,mBA8vCV,IA7vCU,gBA8vCV,IAzvCY,kBA4vCV,OAAO9O,IAAIhJ,GAAS8X,GAEtB,IAlwCW,iBAmwCT,OAAO9X,EAAOnB,MAAQiZ,EAAMjZ,MAAQmB,EAAO+Y,SAAWjB,EAAMiB,QAE9D,IA9vCY,kBA+vCZ,IA7vCY,kBAiwCV,OAAO/Y,GAAW8X,EAAQ,GAE5B,KAAKrG,EACH,IAAIuH,EAAU9F,EAEhB,KAAKvB,EACH,IAAIsH,EA7xCiB,EA6xCLlB,EAGhB,GAFAiB,IAAYA,EAAU5F,GAElBpT,EAAOmT,MAAQ2E,EAAM3E,OAAS8F,EAChC,OAAO,EAGT,IAAIC,EAAUjB,EAAM9Y,IAAIa,GACxB,GAAIkZ,EACF,OAAOA,GAAWpB,EAEpBC,GAzyCuB,EA4yCvBE,EAAM5E,IAAIrT,EAAQ8X,GAClB,IAAI1S,EAASuT,GAAYK,EAAQhZ,GAASgZ,EAAQlB,GAAQI,EAAWF,EAAYD,EAASE,GAE1F,OADAA,EAAc,OAAEjY,GACToF,EAET,IAzxCY,kBA0xCV,GAAIyQ,GACF,OAAOA,GAAcpX,KAAKuB,IAAW6V,GAAcpX,KAAKqZ,GAG9D,OAAO,EA/XDqB,CAAWnZ,EAAQ8X,EAAOO,EAAQH,EAAWF,EAAYD,EAASE,GAExE,KAx7ByB,EAw7BnBF,GAAiC,CACrC,IAAIqB,EAAeZ,GAAYrY,EAAe1B,KAAKuB,EAAQ,eACvDqZ,EAAeZ,GAAYtY,EAAe1B,KAAKqZ,EAAO,eAE1D,GAAIsB,GAAgBC,EAAc,CAChC,IAAIC,EAAeF,EAAepZ,EAAOT,QAAUS,EAC/CuZ,EAAeF,EAAevB,EAAMvY,QAAUuY,EAGlD,OADAG,IAAUA,EAAQ,IAAI1B,IACf2B,EAAUoB,EAAcC,EAAcvB,EAAYD,EAASE,IAGtE,IAAKS,EACH,OAAO,EAGT,OADAT,IAAUA,EAAQ,IAAI1B,IA+XxB,SAAsBvW,EAAQ8X,EAAOI,EAAWF,EAAYD,EAASE,GACnE,IAAIgB,EAv0CqB,EAu0CTlB,EACZyB,EAAWpJ,GAAKpQ,GAChB0Z,EAAYF,EAASnX,OAErBsX,EADWvJ,GAAK0H,GACKzV,OAEzB,GAAIqX,GAAaC,IAAcV,EAC7B,OAAO,EAET,IAAIhG,EAAQyG,EACZ,KAAOzG,KAAS,CACd,IAAIpT,EAAM2Z,EAASvG,GACnB,KAAMgG,EAAYpZ,KAAOiY,EAAQ3X,EAAe1B,KAAKqZ,EAAOjY,IAC1D,OAAO,EAIX,IAAIqZ,EAAUjB,EAAM9Y,IAAIa,GACxB,GAAIkZ,GAAWjB,EAAM9Y,IAAI2Y,GACvB,OAAOoB,GAAWpB,EAEpB,IAAI1S,GAAS,EACb6S,EAAM5E,IAAIrT,EAAQ8X,GAClBG,EAAM5E,IAAIyE,EAAO9X,GAEjB,IAAI4Z,EAAWX,EACf,OAAShG,EAAQyG,GAAW,CAC1B7Z,EAAM2Z,EAASvG,GACf,IAAI4G,EAAW7Z,EAAOH,GAClBia,EAAWhC,EAAMjY,GAErB,GAAImY,EACF,IAAI+B,EAAWd,EACXjB,EAAW8B,EAAUD,EAAUha,EAAKiY,EAAO9X,EAAQiY,GACnDD,EAAW6B,EAAUC,EAAUja,EAAKG,EAAQ8X,EAAOG,GAGzD,UAAmBjI,IAAb+J,EACGF,IAAaC,GAAY5B,EAAU2B,EAAUC,EAAU9B,EAAYD,EAASE,GAC7E8B,GACD,CACL3U,GAAS,EACT,MAEFwU,IAAaA,EAAkB,eAAP/Z,GAE1B,GAAIuF,IAAWwU,EAAU,CACvB,IAAII,EAAUha,EAAOia,YACjBC,EAAUpC,EAAMmC,YAGhBD,GAAWE,KACV,gBAAiBla,MAAU,gBAAiB8X,IACzB,mBAAXkC,GAAyBA,aAAmBA,GACjC,mBAAXE,GAAyBA,aAAmBA,IACvD9U,GAAS,GAKb,OAFA6S,EAAc,OAAEjY,GAChBiY,EAAc,OAAEH,GACT1S,EA3bA+U,CAAana,EAAQ8X,EAAOI,EAAWF,EAAYD,EAASE,GA1D5DmC,CAAgB7a,EAAOuY,EAAOD,GAAaG,EAAYD,EAASE,IA2HzE,SAASoC,GAAa9a,GACpB,SAAK+a,GAAS/a,IAsiBhB,SAAkBgU,GAChB,QAASO,GAAeA,KAAcP,EAviBdgH,CAAShb,MAGlBib,GAAWjb,IAAU4f,EAAa5f,GAAU2U,EAAatC,GACzD9D,KAAKyH,GAAShW,IAsB/B,SAASsgB,GAAatgB,GAGpB,MAAoB,mBAATA,EACFA,EAEI,MAATA,EACKugB,GAEW,iBAATvgB,EACF0Q,GAAQ1Q,GAoDnB,SAA6BigB,EAAMO,GACjC,GAAIN,GAAMD,IAASQ,GAAmBD,GACpC,OAAOE,GAAwBN,GAAMH,GAAOO,GAE9C,OAAO,SAAS/f,GACd,IAAI6Z,EAinCR,SAAa7Z,EAAQwf,EAAMU,GACzB,IAAI9a,EAAmB,MAAVpF,OAAiBgQ,EAAYuP,GAAQvf,EAAQwf,GAC1D,YAAkBxP,IAAX5K,EAAuB8a,EAAe9a,EAnnC5BjG,CAAIa,EAAQwf,GAC3B,YAAqBxP,IAAb6J,GAA0BA,IAAakG,EA+oCnD,SAAe/f,EAAQwf,GACrB,OAAiB,MAAVxf,GAvxBT,SAAiBA,EAAQwf,EAAMW,GAC7BX,EAAOC,GAAMD,EAAMxf,GAAU,CAACwf,GAAQE,GAASF,GAE/C,IAAIpa,EACA6N,GAAS,EACT5Q,EAASmd,EAAKnd,OAElB,OAAS4Q,EAAQ5Q,GAAQ,CACvB,IAAIxC,EAAM8f,GAAMH,EAAKvM,IACrB,KAAM7N,EAAmB,MAAVpF,GAAkBmgB,EAAQngB,EAAQH,IAC/C,MAEFG,EAASA,EAAOH,GAElB,GAAIuF,EACF,OAAOA,EAGT,SADI/C,EAASrC,EAASA,EAAOqC,OAAS,IACnB6Z,GAAS7Z,IAAW8U,GAAQtX,EAAKwC,KACjD4N,GAAQjQ,IAAW6W,GAAY7W,IAowBTogB,CAAQpgB,EAAQwf,EAAMI,IA/oCzCS,CAAMrgB,EAAQwf,GACd3H,GAAYkI,EAAUlG,OAAU7J,EAAWsQ,IA3D3CC,CAAoBhhB,EAAM,GAAIA,EAAM,IAiC5C,SAAqBihB,GACnB,IAAIC,EA2UN,SAAsBzgB,GACpB,IAAIoF,EAASgL,GAAKpQ,GACdqC,EAAS+C,EAAO/C,OAEpB,KAAOA,KAAU,CACf,IAAIxC,EAAMuF,EAAO/C,GACb9C,EAAQS,EAAOH,GAEnBuF,EAAO/C,GAAU,CAACxC,EAAKN,EAAOygB,GAAmBzgB,IAEnD,OAAO6F,EArVSsb,CAAaF,GAC7B,GAAwB,GAApBC,EAAUpe,QAAeoe,EAAU,GAAG,GACxC,OAAOR,GAAwBQ,EAAU,GAAG,GAAIA,EAAU,GAAG,IAE/D,OAAO,SAASzgB,GACd,OAAOA,IAAWwgB,GAjItB,SAAqBxgB,EAAQwgB,EAAQC,EAAWzI,GAC9C,IAAI/E,EAAQwN,EAAUpe,OAClBA,EAAS4Q,EACT0N,GAAgB3I,EAEpB,GAAc,MAAVhY,EACF,OAAQqC,EAGV,IADArC,EAAShB,OAAOgB,GACTiT,KAAS,CACd,IAAIuD,EAAOiK,EAAUxN,GACrB,GAAK0N,GAAgBnK,EAAK,GAClBA,EAAK,KAAOxW,EAAOwW,EAAK,MACtBA,EAAK,KAAMxW,GAEnB,OAAO,EAGX,OAASiT,EAAQ5Q,GAAQ,CAEvB,IAAIxC,GADJ2W,EAAOiK,EAAUxN,IACF,GACX4G,EAAW7Z,EAAOH,GAClBkgB,EAAWvJ,EAAK,GAEpB,GAAImK,GAAgBnK,EAAK,IACvB,QAAiBxG,IAAb6J,KAA4Bha,KAAOG,GACrC,OAAO,MAEJ,CACL,IAAIiY,EAAQ,IAAI1B,GAChB,GAAIyB,EACF,IAAI5S,EAAS4S,EAAW6B,EAAUkG,EAAUlgB,EAAKG,EAAQwgB,EAAQvI,GAEnE,UAAiBjI,IAAX5K,EACEyS,GAAYkI,EAAUlG,EAAU7B,EAAYsI,EAA+CrI,GAC3F7S,GAEN,OAAO,GAIb,OAAO,EAwFuBwb,CAAY5gB,EAAQwgB,EAAQC,IAtCpDI,CAAYthB,GAsxCXkgB,GADSD,EAnxCAjgB,IAr4BIM,EAypEc8f,GAAMH,GAxpEjC,SAASxf,GACd,OAAiB,MAAVA,OAAiBgQ,EAAYhQ,EAAOH,KAs8B/C,SAA0B2f,GACxB,OAAO,SAASxf,GACd,OAAOuf,GAAQvf,EAAQwf,IA+sCwBsB,CAAiBtB,GADpE,IAAkBA,EAxpEI3f,EA+4BtB,SAAS4a,GAASza,GAChB,GA+fI0a,GADenb,EA9fFS,IA+fGT,EAAM0a,YACtBU,EAAwB,mBAARD,GAAsBA,EAAKxa,WAAcyT,EAEtDpU,IAAUob,EAjgBf,OAAO9F,EAAW7U,GA6ftB,IAAqBT,EACfmb,EACAC,EA7fAvV,EAAS,GACb,IAAK,IAAIvF,KAAOb,OAAOgB,GACjBG,EAAe1B,KAAKuB,EAAQH,IAAe,eAAPA,GACtCuF,EAAOhC,KAAKvD,GAGhB,OAAOuF,EAgFT,SAASsa,GAASngB,GAChB,OAAO0Q,GAAQ1Q,GAASA,EAAQwhB,GAAaxhB,GAiB/C,SAASoZ,GAAY5F,EAAO+E,EAAOI,EAAWF,EAAYD,EAASE,GACjE,IAAIgB,EAzqCqB,EAyqCTlB,EACZ6C,EAAY7H,EAAM1Q,OAClBsX,EAAY7B,EAAMzV,OAEtB,GAAIuY,GAAajB,KAAeV,GAAaU,EAAYiB,GACvD,OAAO,EAGT,IAAI1B,EAAUjB,EAAM9Y,IAAI4T,GACxB,GAAImG,GAAWjB,EAAM9Y,IAAI2Y,GACvB,OAAOoB,GAAWpB,EAEpB,IAAI7E,GAAS,EACT7N,GAAS,EACTuK,EAxrCuB,EAwrCfoI,EAAoC,IAAI3B,QAAWpG,EAM/D,IAJAiI,EAAM5E,IAAIN,EAAO+E,GACjBG,EAAM5E,IAAIyE,EAAO/E,KAGRE,EAAQ2H,GAAW,CAC1B,IAAIC,EAAW9H,EAAME,GACjB6G,EAAWhC,EAAM7E,GAErB,GAAI+E,EACF,IAAI+B,EAAWd,EACXjB,EAAW8B,EAAUe,EAAU5H,EAAO6E,EAAO/E,EAAOkF,GACpDD,EAAW6C,EAAUf,EAAU7G,EAAOF,EAAO+E,EAAOG,GAE1D,QAAiBjI,IAAb+J,EAAwB,CAC1B,GAAIA,EACF,SAEF3U,GAAS,EACT,MAGF,GAAIuK,GACF,IAAKmD,EAAUgF,GAAO,SAASgC,EAAUgB,GACnC,IAAKnL,EAAKc,IAAIqK,KACTD,IAAaf,GAAY5B,EAAU2C,EAAUf,EAAU9B,EAAYD,EAASE,IAC/E,OAAOtI,EAAK/M,IAAIkY,MAEhB,CACN1V,GAAS,EACT,YAEG,GACDyV,IAAaf,IACX5B,EAAU2C,EAAUf,EAAU9B,EAAYD,EAASE,GACpD,CACL7S,GAAS,EACT,OAKJ,OAFA6S,EAAc,OAAElF,GAChBkF,EAAc,OAAEH,GACT1S,EA4KT,SAASiW,GAAWrO,EAAKnN,GACvB,IAmJiBN,EACb+b,EApJA9E,EAAOxJ,EAAIsJ,SACf,OAoJgB,WADZgF,SADa/b,EAlJAM,KAoJmB,UAARyb,GAA4B,UAARA,GAA4B,WAARA,EACrD,cAAV/b,EACU,OAAVA,GArJDiX,EAAmB,iBAAP3W,EAAkB,SAAW,QACzC2W,EAAKxJ,IA+BX,SAASgI,GAAUhV,EAAQH,GACzB,IAAIN,EAvtCN,SAAkBS,EAAQH,GACxB,OAAiB,MAAVG,OAAiBgQ,EAAYhQ,EAAOH,GAstC/B0b,CAASvb,EAAQH,GAC7B,OAAOwa,GAAa9a,GAASA,OAAQyQ,EAr/BvC8F,GAAK5V,UAAU8V,MAnEf,WACErU,KAAK2U,SAAWjB,GAAeA,GAAa,MAAQ,IAmEtDS,GAAK5V,UAAkB,OAtDvB,SAAoBL,GAClB,OAAO8B,KAAK8O,IAAI5Q,WAAe8B,KAAK2U,SAASzW,IAsD/CiW,GAAK5V,UAAUf,IA1Cf,SAAiBU,GACf,IAAI2W,EAAO7U,KAAK2U,SAChB,GAAIjB,GAAc,CAChB,IAAIjQ,EAASoR,EAAK3W,GAClB,MA9ZiB,8BA8ZVuF,OAA4B4K,EAAY5K,EAEjD,OAAOjF,EAAe1B,KAAK+X,EAAM3W,GAAO2W,EAAK3W,QAAOmQ,GAqCtD8F,GAAK5V,UAAUuQ,IAzBf,SAAiB5Q,GACf,IAAI2W,EAAO7U,KAAK2U,SAChB,OAAOjB,QAA6BrF,IAAdwG,EAAK3W,GAAqBM,EAAe1B,KAAK+X,EAAM3W,IAwB5EiW,GAAK5V,UAAUmT,IAXf,SAAiBxT,EAAKN,GAGpB,OAFWoC,KAAK2U,SACXzW,GAAQwV,SAA0BrF,IAAVzQ,EA7bV,4BA6bkDA,EAC9DoC,MAoHTuU,GAAUhW,UAAU8V,MAjFpB,WACErU,KAAK2U,SAAW,IAiFlBJ,GAAUhW,UAAkB,OArE5B,SAAyBL,GACvB,IAAI2W,EAAO7U,KAAK2U,SACZrD,EAAQmE,GAAaZ,EAAM3W,GAE/B,QAAIoT,EAAQ,KAIRA,GADYuD,EAAKnU,OAAS,EAE5BmU,EAAKgF,MAELhL,EAAO/R,KAAK+X,EAAMvD,EAAO,IAEpB,IAyDTiD,GAAUhW,UAAUf,IA7CpB,SAAsBU,GACpB,IAAI2W,EAAO7U,KAAK2U,SACZrD,EAAQmE,GAAaZ,EAAM3W,GAE/B,OAAOoT,EAAQ,OAAIjD,EAAYwG,EAAKvD,GAAO,IA0C7CiD,GAAUhW,UAAUuQ,IA9BpB,SAAsB5Q,GACpB,OAAOuX,GAAazV,KAAK2U,SAAUzW,IAAQ,GA8B7CqW,GAAUhW,UAAUmT,IAjBpB,SAAsBxT,EAAKN,GACzB,IAAIiX,EAAO7U,KAAK2U,SACZrD,EAAQmE,GAAaZ,EAAM3W,GAO/B,OALIoT,EAAQ,EACVuD,EAAKpT,KAAK,CAACvD,EAAKN,IAEhBiX,EAAKvD,GAAO,GAAK1T,EAEZoC,MAkGTwU,GAASjW,UAAU8V,MA/DnB,WACErU,KAAK2U,SAAW,CACd,KAAQ,IAAIR,GACZ,IAAO,IAAKb,GAAOiB,IACnB,OAAU,IAAIJ,KA4DlBK,GAASjW,UAAkB,OA/C3B,SAAwBL,GACtB,OAAOwb,GAAW1Z,KAAM9B,GAAa,OAAEA,IA+CzCsW,GAASjW,UAAUf,IAnCnB,SAAqBU,GACnB,OAAOwb,GAAW1Z,KAAM9B,GAAKV,IAAIU,IAmCnCsW,GAASjW,UAAUuQ,IAvBnB,SAAqB5Q,GACnB,OAAOwb,GAAW1Z,KAAM9B,GAAK4Q,IAAI5Q,IAuBnCsW,GAASjW,UAAUmT,IAVnB,SAAqBxT,EAAKN,GAExB,OADA8b,GAAW1Z,KAAM9B,GAAKwT,IAAIxT,EAAKN,GACxBoC,MAyDTyU,GAASlW,UAAU0C,IAAMwT,GAASlW,UAAUkD,KAnB5C,SAAqB7D,GAEnB,OADAoC,KAAK2U,SAASjD,IAAI9T,EAnrBC,6BAorBZoC,MAkBTyU,GAASlW,UAAUuQ,IANnB,SAAqBlR,GACnB,OAAOoC,KAAK2U,SAAS7F,IAAIlR,IA6F3BgX,GAAMrW,UAAU8V,MApEhB,WACErU,KAAK2U,SAAW,IAAIJ,IAoEtBK,GAAMrW,UAAkB,OAxDxB,SAAqBL,GACnB,OAAO8B,KAAK2U,SAAiB,OAAEzW,IAwDjC0W,GAAMrW,UAAUf,IA5ChB,SAAkBU,GAChB,OAAO8B,KAAK2U,SAASnX,IAAIU,IA4C3B0W,GAAMrW,UAAUuQ,IAhChB,SAAkB5Q,GAChB,OAAO8B,KAAK2U,SAAS7F,IAAI5Q,IAgC3B0W,GAAMrW,UAAUmT,IAnBhB,SAAkBxT,EAAKN,GACrB,IAAIyhB,EAAQrf,KAAK2U,SACjB,GAAI0K,aAAiB9K,GAAW,CAC9B,IAAIuF,EAAQuF,EAAM1K,SAClB,IAAKrB,GAAQwG,EAAMpZ,OAASqZ,IAE1B,OADAD,EAAMrY,KAAK,CAACvD,EAAKN,IACVoC,KAETqf,EAAQrf,KAAK2U,SAAW,IAAIH,GAASsF,GAGvC,OADAuF,EAAM3N,IAAIxT,EAAKN,GACRoC,MAuqBT,IAAI2W,GArlBJ,SAAoB/Y,GAClB,OAAOmY,EAAejZ,KAAKc,IAspB7B,SAAS4X,GAAQ5X,EAAO8C,GAEtB,SADAA,EAAmB,MAAVA,EA5/CY,iBA4/CwBA,KAE1B,iBAAT9C,GAAqBsS,EAAS/D,KAAKvO,KAC1CA,GAAS,GAAKA,EAAQ,GAAK,GAAKA,EAAQ8C,EAW7C,SAASod,GAAMlgB,EAAOS,GACpB,GAAIiQ,GAAQ1Q,GACV,OAAO,EAET,IAAI+b,SAAc/b,EAClB,QAAY,UAAR+b,GAA4B,UAARA,GAA4B,WAARA,GAC/B,MAAT/b,IAAiB0hB,GAAS1hB,MAGvBmf,EAAc5Q,KAAKvO,KAAWkf,EAAa3Q,KAAKvO,IAC1C,MAAVS,GAAkBT,KAASP,OAAOgB,IAkDvC,SAASggB,GAAmBzgB,GAC1B,OAAOA,GAAUA,IAAU+a,GAAS/a,GAYtC,SAAS0gB,GAAwBpgB,EAAKkgB,GACpC,OAAO,SAAS/f,GACd,OAAc,MAAVA,IAGGA,EAAOH,KAASkgB,SACP/P,IAAb+P,GAA2BlgB,KAAOb,OAAOgB,OA5J3C+U,GAt6Ca,qBAs6CDuD,GAAO,IAAIvD,EAAS,IAAI+G,YAAY,MAChD7G,GAAOqD,GAAO,IAAIrD,IAAQxD,GAC1ByD,GAh7CY,oBAg7CDoD,GAAOpD,EAAQ6G,YAC1B5G,GAAOmD,GAAO,IAAInD,IAAQxD,GAC1ByD,IA76CY,oBA66CDkD,GAAO,IAAIlD,OACzBkD,GAAS,SAAS/Y,GAChB,IAAI6F,EAASsS,EAAejZ,KAAKc,GAC7Bmb,EAAOtV,GAAUsM,EAAYnS,EAAM0a,iBAAcjK,EACjDgM,EAAatB,EAAOnF,GAASmF,QAAQ1K,EAEzC,GAAIgM,EACF,OAAQA,GACN,KAAK1G,GAAoB,MAl7Cf,oBAm7CV,KAAKE,GAAe,OAAO/D,EAC3B,KAAKgE,GAAmB,MA57Cf,mBA67CT,KAAKC,GAAe,OAAO/D,EAC3B,KAAKgE,GAAmB,MAz7Cf,mBA47Cb,OAAOvQ,IAoJX,IAAI2b,GAAeG,IAAQ,SAASC,GAmlBpC,IAAkB5hB,EAllBhB4hB,EAmlBgB,OADA5hB,EAllBE4hB,GAmlBK,GAzjCzB,SAAsB5hB,GAEpB,GAAoB,iBAATA,EACT,OAAOA,EAET,GAAI0hB,GAAS1hB,GACX,OAAO+f,GAAiBA,GAAe7gB,KAAKc,GAAS,GAEvD,IAAI6F,EAAU7F,EAAQ,GACtB,MAAkB,KAAV6F,GAAkB,EAAI7F,IAAU,IAAa,KAAO6F,EAgjChCgc,CAAa7hB,GAjlBzC,IAAI6F,EAAS,GAOb,OANIuZ,EAAa7Q,KAAKqT,IACpB/b,EAAOhC,KAAK,IAEd+d,EAAO/M,QAAQwK,GAAY,SAASyC,EAAOC,EAAQC,EAAOJ,GACxD/b,EAAOhC,KAAKme,EAAQJ,EAAO/M,QAAQ0K,EAAc,MAASwC,GAAUD,MAE/Djc,KAUT,SAASua,GAAMpgB,GACb,GAAoB,iBAATA,GAAqB0hB,GAAS1hB,GACvC,OAAOA,EAET,IAAI6F,EAAU7F,EAAQ,GACtB,MAAkB,KAAV6F,GAAkB,EAAI7F,IA9nDjB,IA8nDwC,KAAO6F,EAU9D,SAASmQ,GAAShC,GAChB,GAAY,MAARA,EAAc,CAChB,IACE,OAAOM,EAAapV,KAAK8U,GACzB,MAAOlH,IACT,IACE,OAAQkH,EAAO,GACf,MAAOlH,KAEX,MAAO,GAkGT,SAAS6U,GAAQ3N,EAAM4O,GACrB,GAAmB,mBAAR5O,GAAuB4O,GAA+B,mBAAZA,EACnD,MAAM,IAAIhS,UA/vDQ,uBAiwDpB,IAAIiS,EAAW,WACb,IAAIC,EAAOpG,UACPpc,EAAMsiB,EAAWA,EAASpV,MAAMpL,KAAM0gB,GAAQA,EAAK,GACnDrB,EAAQoB,EAASpB,MAErB,GAAIA,EAAMvQ,IAAI5Q,GACZ,OAAOmhB,EAAM7hB,IAAIU,GAEnB,IAAIuF,EAASmO,EAAKxG,MAAMpL,KAAM0gB,GAE9B,OADAD,EAASpB,MAAQA,EAAM3N,IAAIxT,EAAKuF,GACzBA,GAGT,OADAgd,EAASpB,MAAQ,IAAKE,GAAQoB,OAASnM,IAChCiM,EAsCT,SAASpZ,GAAGzJ,EAAOuY,GACjB,OAAOvY,IAAUuY,GAAUvY,GAAUA,GAASuY,GAAUA,EAqB1D,SAASjB,GAAYtX,GAEnB,OAmFF,SAA2BA,GACzB,OAAOqY,GAAarY,IAAU2iB,GAAY3iB,GApFnCgjB,CAAkBhjB,IAAUY,EAAe1B,KAAKc,EAAO,aAC1DgV,EAAqB9V,KAAKc,EAAO,WAAamY,EAAejZ,KAAKc,IAAUiS,GA3DlF0P,GAAQoB,MAAQnM,GAqFhB,IAAIlG,GAAUxN,MAAMwN,QA2BpB,SAASiS,GAAY3iB,GACnB,OAAgB,MAATA,GAAiB2c,GAAS3c,EAAM8C,UAAYmY,GAAWjb,GAiDhE,SAASib,GAAWjb,GAGlB,IAAIgY,EAAM+C,GAAS/a,GAASmY,EAAejZ,KAAKc,GAAS,GACzD,MAn6DY,qBAm6DLgY,GAl6DI,8BAk6DcA,EA6B3B,SAAS2E,GAAS3c,GAChB,MAAuB,iBAATA,GACZA,GAAS,GAAKA,EAAQ,GAAK,GAAKA,GA58Db,iBAw+DvB,SAAS+a,GAAS/a,GAChB,IAAI+b,SAAc/b,EAClB,QAASA,IAAkB,UAAR+b,GAA4B,YAARA,GA2BzC,SAAS1D,GAAarY,GACpB,QAASA,GAAyB,iBAATA,EAoB3B,SAAS0hB,GAAS1hB,GAChB,MAAuB,iBAATA,GACXqY,GAAarY,IAzgEF,mBAygEYmY,EAAejZ,KAAKc,GAoBhD,IAAIsT,GAAeD,EAv2DnB,SAAmBW,GACjB,OAAO,SAAShU,GACd,OAAOgU,EAAKhU,IAq2DsB4c,CAAUvJ,GA5hChD,SAA0BrT,GACxB,OAAOqY,GAAarY,IAClB2c,GAAS3c,EAAM8C,WAAayP,EAAe4F,EAAejZ,KAAKc,KA6vCnE,SAAS6Q,GAAKpQ,GACZ,OAAOkiB,GAAYliB,GAAUyW,GAAczW,GAAUya,GAASza,GAmBhE,SAAS8f,GAASvgB,GAChB,OAAOA,EA6BTlB,EAAOD,QA9oBP,SAAuB2U,EAAOC,EAAW0O,GACvC,IAAIrf,EAAS0Q,EAAQA,EAAM1Q,OAAS,EACpC,IAAKA,EACH,OAAQ,EAEV,IAobI+C,EACAX,EArbAwO,EAAQ5Q,EAAS,EAOrB,YANkB2N,IAAd0R,IAmbAtc,EAvCN,SAAkB7F,GAChB,OAAKA,GAGLA,EAgEF,SAAkBA,GAChB,GAAoB,iBAATA,EACT,OAAOA,EAET,GAAI0hB,GAAS1hB,GACX,OAhpEM,IAkpER,GAAI+a,GAAS/a,GAAQ,CACnB,IAAIuY,EAAgC,mBAAjBvY,EAAM0N,QAAwB1N,EAAM0N,UAAY1N,EACnEA,EAAQ+a,GAASxC,GAAUA,EAAQ,GAAMA,EAE3C,GAAoB,iBAATvY,EACT,OAAiB,IAAVA,EAAcA,GAASA,EAEhCA,EAAQA,EAAM6U,QAAQyK,EAAQ,IAC9B,IAAI8C,EAAW3C,EAAWlR,KAAKvO,GAC/B,OAAQoiB,GAAY1C,EAAUnR,KAAKvO,GAC/B2f,EAAa3f,EAAMmI,MAAM,GAAIia,EAAW,EAAI,GAC3C5C,EAAWjR,KAAKvO,GA7pEb,KA6pE6BA,EAlF7BqiB,CAASriB,MA9kEJ,KA+kEaA,KAAU,IA7kEpB,uBA8kEFA,EAAQ,GAAK,EAAI,GAGxBA,GAAUA,EAAQA,EAAQ,EAPd,IAAVA,EAAcA,EAAQ,EAqClBsiB,CAlbOH,GAmbhBjd,EAAYW,EAAS,EAnbvB6N,EAqbK7N,GAAWA,EAAUX,EAAYW,EAASX,EAAYW,EAAU,EApbrE6N,EAAQyO,EAAY,EAChBtC,EAAU/c,EAAS4Q,EAAO,GAC1BoM,EAAUpM,EAAO5Q,EAAS,IA3iDlC,SAAuB0Q,EAAOC,EAAW0O,EAAWI,GAIlD,IAHA,IAAIzf,EAAS0Q,EAAM1Q,OACf4Q,EAAQyO,GAAaI,EAAY,GAAK,GAElCA,EAAY7O,MAAYA,EAAQ5Q,GACtC,GAAI2Q,EAAUD,EAAME,GAAQA,EAAOF,GACjC,OAAOE,EAGX,OAAQ,EAoiDD8O,CAAchP,EAAO8M,GAAa7M,GAAeC,GAAO,M,qCC3tDjE,YAUA,IAiBIzB,EAAU,qBAOVC,EAAS,eAETC,EAAY,kBAGZC,EAAS,eAkBT8M,EAAe,mDACfC,EAAgB,QAChBC,EAAe,MACfC,EAAa,mGASbE,EAAe,WAGflN,EAAe,8BAGfC,EAAW,mBAGXC,EAAiB,GACrBA,EAjCiB,yBAiCYA,EAhCZ,yBAiCjBA,EAhCc,sBAgCYA,EA/BX,uBAgCfA,EA/Be,uBA+BYA,EA9BZ,uBA+BfA,EA9BsB,8BA8BYA,EA7BlB,wBA8BhBA,EA7BgB,yBA6BY,EAC5BA,EAAeN,GAAWM,EAxDX,kBAyDfA,EAzCqB,wBAyCYA,EAxDnB,oBAyDdA,EAzCkB,qBAyCYA,EAxDhB,iBAyDdA,EAxDe,kBAwDYA,EAvDb,qBAwDdA,EAAeL,GAAUK,EArDT,mBAsDhBA,EAAeJ,GAAaI,EAnDZ,mBAoDhBA,EAAeH,GAAUG,EAlDT,mBAmDhBA,EAjDiB,qBAiDY,EAG7B,IAAIC,EAA8B,iBAAVC,QAAsBA,QAAUA,OAAOhT,SAAWA,QAAUgT,OAGhFC,EAA0B,iBAARpN,MAAoBA,MAAQA,KAAK7F,SAAWA,QAAU6F,KAGxEqN,EAAOH,GAAcE,GAAYE,SAAS,cAATA,GAGjCC,EAA4ChU,IAAYA,EAAQiU,UAAYjU,EAG5EkU,EAAaF,GAAgC,iBAAV/T,GAAsBA,IAAWA,EAAOgU,UAAYhU,EAMvFmU,EAHgBF,GAAcA,EAAWlU,UAAYgU,GAGtBL,EAAWU,QAG1CC,EAAY,WACd,IACE,OAAOF,GAAeA,EAAYG,QAAQ,QAC1C,MAAOtG,KAHI,GAOXuG,EAAmBF,GAAYA,EAASG,aAY5C,SAAS9F,EAAMwG,EAAM6+B,EAAS/vB,GAC5B,OAAQA,EAAKhgB,QACX,KAAK,EAAG,OAAOkR,EAAK9U,KAAK2zC,GACzB,KAAK,EAAG,OAAO7+B,EAAK9U,KAAK2zC,EAAS/vB,EAAK,IACvC,KAAK,EAAG,OAAO9O,EAAK9U,KAAK2zC,EAAS/vB,EAAK,GAAIA,EAAK,IAChD,KAAK,EAAG,OAAO9O,EAAK9U,KAAK2zC,EAAS/vB,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAE3D,OAAO9O,EAAKxG,MAAMqlC,EAAS/vB,GAY7B,SAASgwB,EAAct/B,EAAOxT,GAE5B,SADawT,EAAQA,EAAM1Q,OAAS,IAsHtC,SAAqB0Q,EAAOxT,EAAOmiB,GACjC,GAAIniB,GAAUA,EACZ,OAvBJ,SAAuBwT,EAAOC,EAAW0O,EAAWI,GAClD,IAAIzf,EAAS0Q,EAAM1Q,OACf4Q,EAAQyO,GAAaI,EAAY,GAAK,GAE1C,KAAQA,EAAY7O,MAAYA,EAAQ5Q,GACtC,GAAI2Q,EAAUD,EAAME,GAAQA,EAAOF,GACjC,OAAOE,EAGX,OAAQ,EAcC8O,CAAchP,EAAOu/B,EAAW5wB,GAEzC,IAAIzO,EAAQyO,EAAY,EACpBrf,EAAS0Q,EAAM1Q,OAEnB,OAAS4Q,EAAQ5Q,GACf,GAAI0Q,EAAME,KAAW1T,EACnB,OAAO0T,EAGX,OAAQ,EAjIWs/B,CAAYx/B,EAAOxT,EAAO,IAAM,EAYrD,SAASizC,EAAkBz/B,EAAOxT,EAAOkzC,GAIvC,IAHA,IAAIx/B,GAAS,EACT5Q,EAAS0Q,EAAQA,EAAM1Q,OAAS,IAE3B4Q,EAAQ5Q,GACf,GAAIowC,EAAWlzC,EAAOwT,EAAME,IAC1B,OAAO,EAGX,OAAO,EA+BT,SAASiI,EAAUnI,EAAOsD,GAKxB,IAJA,IAAIpD,GAAS,EACT5Q,EAASgU,EAAOhU,OAChB4Y,EAASlI,EAAM1Q,SAEV4Q,EAAQ5Q,GACf0Q,EAAMkI,EAAShI,GAASoD,EAAOpD,GAEjC,OAAOF,EAaT,SAASD,EAAUC,EAAOC,GAIxB,IAHA,IAAIC,GAAS,EACT5Q,EAAS0Q,EAAQA,EAAM1Q,OAAS,IAE3B4Q,EAAQ5Q,GACf,GAAI2Q,EAAUD,EAAME,GAAQA,EAAOF,GACjC,OAAO,EAGX,OAAO,EAyDT,SAASu/B,EAAU/yC,GACjB,OAAOA,GAAUA,EA0CnB,SAAS4c,EAAU5I,GACjB,OAAO,SAAShU,GACd,OAAOgU,EAAKhU,IAYhB,SAASmzC,EAAS1xB,EAAOnhB,GACvB,OAAOmhB,EAAMvQ,IAAI5Q,GAsBnB,SAASsf,EAAa5f,GAGpB,IAAI6F,GAAS,EACb,GAAa,MAAT7F,GAA0C,mBAAlBA,EAAM4I,SAChC,IACE/C,KAAY7F,EAAQ,IACpB,MAAO8M,IAEX,OAAOjH,EAUT,SAAS8N,EAAWlG,GAClB,IAAIiG,GAAS,EACT7N,EAAS3C,MAAMuK,EAAImG,MAKvB,OAHAnG,EAAIvM,SAAQ,SAASlB,EAAOM,GAC1BuF,IAAS6N,GAAS,CAACpT,EAAKN,MAEnB6F,EAwBT,SAASgO,EAAWC,GAClB,IAAIJ,GAAS,EACT7N,EAAS3C,MAAM4Q,EAAIF,MAKvB,OAHAE,EAAI5S,SAAQ,SAASlB,GACnB6F,IAAS6N,GAAS1T,KAEb6F,EAIT,IASMkO,EAjCWC,EAAMC,EAwBnBC,EAAahR,MAAMvC,UACnBwT,EAAYvB,SAASjS,UACrByT,EAAc3U,OAAOkB,UAGrB0T,EAAa1B,EAAK,sBAGlB4B,GACER,EAAM,SAASS,KAAKH,GAAcA,EAAWxD,MAAQwD,EAAWxD,KAAK4D,UAAY,KACvE,iBAAmBV,EAAO,GAItCO,EAAeH,EAAUvL,SAGzBhI,EAAiBwT,EAAYxT,eAO7BuX,EAAiB/D,EAAYxL,SAG7B+L,EAAaC,OAAO,IACtBN,EAAapV,KAAK0B,GAAgBiU,QA7YjB,sBA6YuC,QACvDA,QAAQ,yDAA0D,SAAW,KAI5E/U,EAAS6S,EAAK7S,OACdiV,EAAapC,EAAKoC,WAClBC,EAAuBZ,EAAYY,qBACnC/D,EAASiD,EAAWjD,OACpBmiC,EAAmBtzC,EAASA,EAAOuzC,wBAAqB5iC,EAGxD6E,GAhEatB,EAgEQvU,OAAOoR,KAhEToD,EAgEexU,OA/D7B,SAAS8V,GACd,OAAOvB,EAAKC,EAAUsB,MA+DtBsK,EAAYpd,KAAKyF,IAGjBsN,EAAWC,GAAU9C,EAAM,YAC3B+C,EAAMD,GAAU9C,EAAM,OACtBgD,GAAUF,GAAU9C,EAAM,WAC1BiD,GAAMH,GAAU9C,EAAM,OACtBkD,GAAUJ,GAAU9C,EAAM,WAC1BmD,GAAeL,GAAUhW,OAAQ,UAGjCsW,GAAqBC,GAASR,GAC9BS,GAAgBD,GAASN,GACzBQ,GAAoBF,GAASL,IAC7BQ,GAAgBH,GAASJ,IACzBQ,GAAoBJ,GAASH,IAG7BQ,GAAcvW,EAASA,EAAOa,eAAY8P,EAC1C6F,GAAgBD,GAAcA,GAAY3I,aAAU+C,EACpDsP,GAAiB1J,GAAcA,GAAYzN,cAAW6H,EAS1D,SAAS8F,GAAKC,GACZ,IAAI9C,GAAS,EACT5Q,EAAS0T,EAAUA,EAAQ1T,OAAS,EAGxC,IADAV,KAAKqU,UACI/C,EAAQ5Q,GAAQ,CACvB,IAAI4T,EAAQF,EAAQ9C,GACpBtR,KAAK0R,IAAI4C,EAAM,GAAIA,EAAM,KA2F7B,SAASC,GAAUH,GACjB,IAAI9C,GAAS,EACT5Q,EAAS0T,EAAUA,EAAQ1T,OAAS,EAGxC,IADAV,KAAKqU,UACI/C,EAAQ5Q,GAAQ,CACvB,IAAI4T,EAAQF,EAAQ9C,GACpBtR,KAAK0R,IAAI4C,EAAM,GAAIA,EAAM,KAyG7B,SAASE,GAASJ,GAChB,IAAI9C,GAAS,EACT5Q,EAAS0T,EAAUA,EAAQ1T,OAAS,EAGxC,IADAV,KAAKqU,UACI/C,EAAQ5Q,GAAQ,CACvB,IAAI4T,EAAQF,EAAQ9C,GACpBtR,KAAK0R,IAAI4C,EAAM,GAAIA,EAAM,KAwF7B,SAASG,GAASC,GAChB,IAAIpD,GAAS,EACT5Q,EAASgU,EAASA,EAAOhU,OAAS,EAGtC,IADAV,KAAK2U,SAAW,IAAIH,KACXlD,EAAQ5Q,GACfV,KAAKiB,IAAIyT,EAAOpD,IA2CpB,SAASsD,GAAMR,GACbpU,KAAK2U,SAAW,IAAIJ,GAAUH,GA4FhC,SAASU,GAAclX,EAAOmX,GAG5B,IAAItR,EAAU6K,GAAQ1Q,IAAUsX,GAAYtX,GA3nB9C,SAAmBQ,EAAGkX,GAIpB,IAHA,IAAIhE,GAAS,EACT7N,EAAS3C,MAAM1C,KAEVkT,EAAQlT,GACfqF,EAAO6N,GAASgE,EAAShE,GAE3B,OAAO7N,EAqnBH8R,CAAU3X,EAAM8C,OAAQqJ,QACxB,GAEArJ,EAAS+C,EAAO/C,OAChB2U,IAAgB3U,EAEpB,IAAK,IAAIxC,KAAON,GACTmX,IAAavW,EAAe1B,KAAKc,EAAOM,IACvCmX,IAAuB,UAAPnX,GAAmBsX,GAAQtX,EAAKwC,KACpD+C,EAAOhC,KAAKvD,GAGhB,OAAOuF,EAWT,SAASgS,GAAarE,EAAOlT,GAE3B,IADA,IAAIwC,EAAS0Q,EAAM1Q,OACZA,KACL,GAAI2G,GAAG+J,EAAM1Q,GAAQ,GAAIxC,GACvB,OAAOwC,EAGX,OAAQ,EAcV,SAASwwC,GAAe9/B,EAAOsD,EAAQY,EAAUw7B,GAC/C,IAAIx/B,GAAS,EACTyS,EAAW2sB,EACXS,GAAW,EACXzwC,EAAS0Q,EAAM1Q,OACf+C,EAAS,GACT2tC,EAAe18B,EAAOhU,OAE1B,IAAKA,EACH,OAAO+C,EAEL6R,IACFZ,EAxzBJ,SAAkBtD,EAAOkE,GAKvB,IAJA,IAAIhE,GAAS,EACT5Q,EAAS0Q,EAAQA,EAAM1Q,OAAS,EAChC+C,EAAS3C,MAAMJ,KAEV4Q,EAAQ5Q,GACf+C,EAAO6N,GAASgE,EAASlE,EAAME,GAAQA,EAAOF,GAEhD,OAAO3N,EAgzBI4tC,CAAS38B,EAAQ8F,EAAUlF,KAElCw7B,GACF/sB,EAAW8sB,EACXM,GAAW,GAEJz8B,EAAOhU,QAh/BK,MAi/BnBqjB,EAAWgtB,EACXI,GAAW,EACXz8B,EAAS,IAAID,GAASC,IAExB48B,EACA,OAAShgC,EAAQ5Q,GAAQ,CACvB,IAAI9C,EAAQwT,EAAME,GACdmT,EAAWnP,EAAWA,EAAS1X,GAASA,EAG5C,GADAA,EAASkzC,GAAwB,IAAVlzC,EAAeA,EAAQ,EAC1CuzC,GAAY1sB,GAAaA,EAAU,CAErC,IADA,IAAI8sB,EAAcH,EACXG,KACL,GAAI78B,EAAO68B,KAAiB9sB,EAC1B,SAAS6sB,EAGb7tC,EAAOhC,KAAK7D,QAEJmmB,EAASrP,EAAQ+P,EAAUqsB,IACnCrtC,EAAOhC,KAAK7D,GAGhB,OAAO6F,EA6CT,SAASma,GAAQvf,EAAQwf,GAMvB,IAHA,IAAIvM,EAAQ,EACR5Q,GAHJmd,EAAOC,GAAMD,EAAMxf,GAAU,CAACwf,GAAQE,GAASF,IAG7Bnd,OAED,MAAVrC,GAAkBiT,EAAQ5Q,GAC/BrC,EAASA,EAAO2f,GAAMH,EAAKvM,OAE7B,OAAQA,GAASA,GAAS5Q,EAAUrC,OAASgQ,EAsB/C,SAAS4P,GAAU5f,EAAQH,GACzB,OAAiB,MAAVG,GAAkBH,KAAOb,OAAOgB,GAkBzC,SAAS6X,GAAYtY,EAAOuY,EAAOE,EAAYD,EAASE,GACtD,OAAI1Y,IAAUuY,IAGD,MAATvY,GAA0B,MAATuY,IAAmBwC,GAAS/a,KAAWqY,GAAaE,GAChEvY,GAAUA,GAASuY,GAAUA,EAoBxC,SAAyB9X,EAAQ8X,EAAOI,EAAWF,EAAYD,EAASE,GACtE,IAAIE,EAAWlI,GAAQjQ,GACnBoY,EAAWnI,GAAQ6H,GACnBO,EAjnCS,iBAknCTE,EAlnCS,iBAonCRJ,IAEHE,GADAA,EAASC,GAAOtY,KACGwR,EAAUE,EAAY2G,GAEtCD,IAEHG,GADAA,EAASD,GAAOR,KACGtG,EAAUE,EAAY6G,GAE3C,IAAIC,EAAWH,GAAU3G,IAAcyN,EAAanf,GAChDyY,EAAWF,GAAU7G,IAAcyN,EAAarH,GAChDY,EAAYL,GAAUE,EAE1B,GAAIG,IAAcF,EAEhB,OADAP,IAAUA,EAAQ,IAAI1B,IACd4B,GAAYtF,GAAa7S,GAC7B2Y,GAAY3Y,EAAQ8X,EAAOI,EAAWF,EAAYD,EAASE,GA+VnE,SAAoBjY,EAAQ8X,EAAOP,EAAKW,EAAWF,EAAYD,EAASE,GACtE,OAAQV,GACN,IAn9Cc,oBAo9CZ,GAAKvX,EAAO4Y,YAAcd,EAAMc,YAC3B5Y,EAAO6Y,YAAcf,EAAMe,WAC9B,OAAO,EAET7Y,EAASA,EAAO8Y,OAChBhB,EAAQA,EAAMgB,OAEhB,IA59CiB,uBA69Cf,QAAK9Y,EAAO4Y,YAAcd,EAAMc,aAC3BV,EAAU,IAAI5D,EAAWtU,GAAS,IAAIsU,EAAWwD,KAKxD,IAl/CU,mBAm/CV,IAl/CU,gBAm/CV,IA9+CY,kBAi/CV,OAAO9O,IAAIhJ,GAAS8X,GAEtB,IAv/CW,iBAw/CT,OAAO9X,EAAOnB,MAAQiZ,EAAMjZ,MAAQmB,EAAO+Y,SAAWjB,EAAMiB,QAE9D,IAn/CY,kBAo/CZ,IAl/CY,kBAs/CV,OAAO/Y,GAAW8X,EAAQ,GAE5B,KAAKrG,EACH,IAAIuH,EAAU9F,EAEhB,KAAKvB,EACH,IAAIsH,EAhhDiB,EAghDLlB,EAGhB,GAFAiB,IAAYA,EAAU5F,GAElBpT,EAAOmT,MAAQ2E,EAAM3E,OAAS8F,EAChC,OAAO,EAGT,IAAIC,EAAUjB,EAAM9Y,IAAIa,GACxB,GAAIkZ,EACF,OAAOA,GAAWpB,EAEpBC,GA5hDuB,EA+hDvBE,EAAM5E,IAAIrT,EAAQ8X,GAClB,IAAI1S,EAASuT,GAAYK,EAAQhZ,GAASgZ,EAAQlB,GAAQI,EAAWF,EAAYD,EAASE,GAE1F,OADAA,EAAc,OAAEjY,GACToF,EAET,IA9gDY,kBA+gDV,GAAIyQ,GACF,OAAOA,GAAcpX,KAAKuB,IAAW6V,GAAcpX,KAAKqZ,GAG9D,OAAO,EA5ZDqB,CAAWnZ,EAAQ8X,EAAOO,EAAQH,EAAWF,EAAYD,EAASE,GAExE,KA9oCyB,EA8oCnBF,GAAiC,CACrC,IAAIqB,EAAeZ,GAAYrY,EAAe1B,KAAKuB,EAAQ,eACvDqZ,EAAeZ,GAAYtY,EAAe1B,KAAKqZ,EAAO,eAE1D,GAAIsB,GAAgBC,EAAc,CAChC,IAAIC,EAAeF,EAAepZ,EAAOT,QAAUS,EAC/CuZ,EAAeF,EAAevB,EAAMvY,QAAUuY,EAGlD,OADAG,IAAUA,EAAQ,IAAI1B,IACf2B,EAAUoB,EAAcC,EAAcvB,EAAYD,EAASE,IAGtE,IAAKS,EACH,OAAO,EAGT,OADAT,IAAUA,EAAQ,IAAI1B,IA4ZxB,SAAsBvW,EAAQ8X,EAAOI,EAAWF,EAAYD,EAASE,GACnE,IAAIgB,EA1jDqB,EA0jDTlB,EACZyB,EAAWpJ,GAAKpQ,GAChB0Z,EAAYF,EAASnX,OAErBsX,EADWvJ,GAAK0H,GACKzV,OAEzB,GAAIqX,GAAaC,IAAcV,EAC7B,OAAO,EAET,IAAIhG,EAAQyG,EACZ,KAAOzG,KAAS,CACd,IAAIpT,EAAM2Z,EAASvG,GACnB,KAAMgG,EAAYpZ,KAAOiY,EAAQ3X,EAAe1B,KAAKqZ,EAAOjY,IAC1D,OAAO,EAIX,IAAIqZ,EAAUjB,EAAM9Y,IAAIa,GACxB,GAAIkZ,GAAWjB,EAAM9Y,IAAI2Y,GACvB,OAAOoB,GAAWpB,EAEpB,IAAI1S,GAAS,EACb6S,EAAM5E,IAAIrT,EAAQ8X,GAClBG,EAAM5E,IAAIyE,EAAO9X,GAEjB,IAAI4Z,EAAWX,EACf,OAAShG,EAAQyG,GAAW,CAC1B7Z,EAAM2Z,EAASvG,GACf,IAAI4G,EAAW7Z,EAAOH,GAClBia,EAAWhC,EAAMjY,GAErB,GAAImY,EACF,IAAI+B,EAAWd,EACXjB,EAAW8B,EAAUD,EAAUha,EAAKiY,EAAO9X,EAAQiY,GACnDD,EAAW6B,EAAUC,EAAUja,EAAKG,EAAQ8X,EAAOG,GAGzD,UAAmBjI,IAAb+J,EACGF,IAAaC,GAAY5B,EAAU2B,EAAUC,EAAU9B,EAAYD,EAASE,GAC7E8B,GACD,CACL3U,GAAS,EACT,MAEFwU,IAAaA,EAAkB,eAAP/Z,GAE1B,GAAIuF,IAAWwU,EAAU,CACvB,IAAII,EAAUha,EAAOia,YACjBC,EAAUpC,EAAMmC,YAGhBD,GAAWE,KACV,gBAAiBla,MAAU,gBAAiB8X,IACzB,mBAAXkC,GAAyBA,aAAmBA,GACjC,mBAAXE,GAAyBA,aAAmBA,IACvD9U,GAAS,GAKb,OAFA6S,EAAc,OAAEjY,GAChBiY,EAAc,OAAEH,GACT1S,EAxdA+U,CAAana,EAAQ8X,EAAOI,EAAWF,EAAYD,EAASE,GA1D5DmC,CAAgB7a,EAAOuY,EAAOD,GAAaG,EAAYD,EAASE,IA2HzE,SAASoC,GAAa9a,GACpB,SAAK+a,GAAS/a,IA+kBhB,SAAkBgU,GAChB,QAASO,GAAeA,KAAcP,EAhlBdgH,CAAShb,MAGlBib,GAAWjb,IAAU4f,EAAa5f,GAAU2U,EAAatC,GACzD9D,KAAKyH,GAAShW,IAsB/B,SAASsgB,GAAatgB,GAGpB,MAAoB,mBAATA,EACFA,EAEI,MAATA,EACKugB,GAEW,iBAATvgB,EACF0Q,GAAQ1Q,GAoDnB,SAA6BigB,EAAMO,GACjC,GAAIN,GAAMD,IAASQ,GAAmBD,GACpC,OAAOE,GAAwBN,GAAMH,GAAOO,GAE9C,OAAO,SAAS/f,GACd,IAAI6Z,EA6iCR,SAAa7Z,EAAQwf,EAAMU,GACzB,IAAI9a,EAAmB,MAAVpF,OAAiBgQ,EAAYuP,GAAQvf,EAAQwf,GAC1D,YAAkBxP,IAAX5K,EAAuB8a,EAAe9a,EA/iC5BjG,CAAIa,EAAQwf,GAC3B,YAAqBxP,IAAb6J,GAA0BA,IAAakG,EA2kCnD,SAAe/f,EAAQwf,GACrB,OAAiB,MAAVxf,GAtrBT,SAAiBA,EAAQwf,EAAMW,GAC7BX,EAAOC,GAAMD,EAAMxf,GAAU,CAACwf,GAAQE,GAASF,GAE/C,IAAIpa,EACA6N,GAAS,EACT5Q,EAASmd,EAAKnd,OAElB,OAAS4Q,EAAQ5Q,GAAQ,CACvB,IAAIxC,EAAM8f,GAAMH,EAAKvM,IACrB,KAAM7N,EAAmB,MAAVpF,GAAkBmgB,EAAQngB,EAAQH,IAC/C,MAEFG,EAASA,EAAOH,GAElB,GAAIuF,EACF,OAAOA,EAGT,SADI/C,EAASrC,EAASA,EAAOqC,OAAS,IACnB6Z,GAAS7Z,IAAW8U,GAAQtX,EAAKwC,KACjD4N,GAAQjQ,IAAW6W,GAAY7W,IAmqBTogB,CAAQpgB,EAAQwf,EAAMI,IA3kCzCS,CAAMrgB,EAAQwf,GACd3H,GAAYkI,EAAUlG,OAAU7J,EAAWsQ,IA3D3CC,CAAoBhhB,EAAM,GAAIA,EAAM,IAiC5C,SAAqBihB,GACnB,IAAIC,EAwWN,SAAsBzgB,GACpB,IAAIoF,EAASgL,GAAKpQ,GACdqC,EAAS+C,EAAO/C,OAEpB,KAAOA,KAAU,CACf,IAAIxC,EAAMuF,EAAO/C,GACb9C,EAAQS,EAAOH,GAEnBuF,EAAO/C,GAAU,CAACxC,EAAKN,EAAOygB,GAAmBzgB,IAEnD,OAAO6F,EAlXSsb,CAAaF,GAC7B,GAAwB,GAApBC,EAAUpe,QAAeoe,EAAU,GAAG,GACxC,OAAOR,GAAwBQ,EAAU,GAAG,GAAIA,EAAU,GAAG,IAE/D,OAAO,SAASzgB,GACd,OAAOA,IAAWwgB,GAjItB,SAAqBxgB,EAAQwgB,EAAQC,EAAWzI,GAC9C,IAAI/E,EAAQwN,EAAUpe,OAClBA,EAAS4Q,EACT0N,GAAgB3I,EAEpB,GAAc,MAAVhY,EACF,OAAQqC,EAGV,IADArC,EAAShB,OAAOgB,GACTiT,KAAS,CACd,IAAIuD,EAAOiK,EAAUxN,GACrB,GAAK0N,GAAgBnK,EAAK,GAClBA,EAAK,KAAOxW,EAAOwW,EAAK,MACtBA,EAAK,KAAMxW,GAEnB,OAAO,EAGX,OAASiT,EAAQ5Q,GAAQ,CAEvB,IAAIxC,GADJ2W,EAAOiK,EAAUxN,IACF,GACX4G,EAAW7Z,EAAOH,GAClBkgB,EAAWvJ,EAAK,GAEpB,GAAImK,GAAgBnK,EAAK,IACvB,QAAiBxG,IAAb6J,KAA4Bha,KAAOG,GACrC,OAAO,MAEJ,CACL,IAAIiY,EAAQ,IAAI1B,GAChB,GAAIyB,EACF,IAAI5S,EAAS4S,EAAW6B,EAAUkG,EAAUlgB,EAAKG,EAAQwgB,EAAQvI,GAEnE,UAAiBjI,IAAX5K,EACEyS,GAAYkI,EAAUlG,EAAU7B,EAAYsI,EAA+CrI,GAC3F7S,GAEN,OAAO,GAIb,OAAO,EAwFuBwb,CAAY5gB,EAAQwgB,EAAQC,IAtCpDI,CAAYthB,GAktCXkgB,GADSD,EA/sCAjgB,IA3+BIM,EA2rEc8f,GAAMH,GA1rEjC,SAASxf,GACd,OAAiB,MAAVA,OAAiBgQ,EAAYhQ,EAAOH,KA4iC/C,SAA0B2f,GACxB,OAAO,SAASxf,GACd,OAAOuf,GAAQvf,EAAQwf,IA2oCwBsB,CAAiBtB,GADpE,IAAkBA,EA1rEI3f,EAq/BtB,SAAS4a,GAASza,GAChB,GAwiBI0a,GADenb,EAviBFS,IAwiBGT,EAAM0a,YACtBU,EAAwB,mBAARD,GAAsBA,EAAKxa,WAAcyT,EAEtDpU,IAAUob,EA1iBf,OAAO9F,EAAW7U,GAsiBtB,IAAqBT,EACfmb,EACAC,EAtiBAvV,EAAS,GACb,IAAK,IAAIvF,KAAOb,OAAOgB,GACjBG,EAAe1B,KAAKuB,EAAQH,IAAe,eAAPA,GACtCuF,EAAOhC,KAAKvD,GAGhB,OAAOuF,EA6GT,SAASsa,GAASngB,GAChB,OAAO0Q,GAAQ1Q,GAASA,EAAQwhB,GAAaxhB,GAiB/C,SAASoZ,GAAY5F,EAAO+E,EAAOI,EAAWF,EAAYD,EAASE,GACjE,IAAIgB,EA55CqB,EA45CTlB,EACZ6C,EAAY7H,EAAM1Q,OAClBsX,EAAY7B,EAAMzV,OAEtB,GAAIuY,GAAajB,KAAeV,GAAaU,EAAYiB,GACvD,OAAO,EAGT,IAAI1B,EAAUjB,EAAM9Y,IAAI4T,GACxB,GAAImG,GAAWjB,EAAM9Y,IAAI2Y,GACvB,OAAOoB,GAAWpB,EAEpB,IAAI7E,GAAS,EACT7N,GAAS,EACTuK,EA36CuB,EA26CfoI,EAAoC,IAAI3B,QAAWpG,EAM/D,IAJAiI,EAAM5E,IAAIN,EAAO+E,GACjBG,EAAM5E,IAAIyE,EAAO/E,KAGRE,EAAQ2H,GAAW,CAC1B,IAAIC,EAAW9H,EAAME,GACjB6G,EAAWhC,EAAM7E,GAErB,GAAI+E,EACF,IAAI+B,EAAWd,EACXjB,EAAW8B,EAAUe,EAAU5H,EAAO6E,EAAO/E,EAAOkF,GACpDD,EAAW6C,EAAUf,EAAU7G,EAAOF,EAAO+E,EAAOG,GAE1D,QAAiBjI,IAAb+J,EAAwB,CAC1B,GAAIA,EACF,SAEF3U,GAAS,EACT,MAGF,GAAIuK,GACF,IAAKmD,EAAUgF,GAAO,SAASgC,EAAUgB,GACnC,IAAKnL,EAAKc,IAAIqK,KACTD,IAAaf,GAAY5B,EAAU2C,EAAUf,EAAU9B,EAAYD,EAASE,IAC/E,OAAOtI,EAAK/M,IAAIkY,MAEhB,CACN1V,GAAS,EACT,YAEG,GACDyV,IAAaf,IACX5B,EAAU2C,EAAUf,EAAU9B,EAAYD,EAASE,GACpD,CACL7S,GAAS,EACT,OAKJ,OAFA6S,EAAc,OAAElF,GAChBkF,EAAc,OAAEH,GACT1S,EA4KT,SAASiW,GAAWrO,EAAKnN,GACvB,IA+JiBN,EACb+b,EAhKA9E,EAAOxJ,EAAIsJ,SACf,OAgKgB,WADZgF,SADa/b,EA9JAM,KAgKmB,UAARyb,GAA4B,UAARA,GAA4B,WAARA,EACrD,cAAV/b,EACU,OAAVA,GAjKDiX,EAAmB,iBAAP3W,EAAkB,SAAW,QACzC2W,EAAKxJ,IA+BX,SAASgI,GAAUhV,EAAQH,GACzB,IAAIN,EA90CN,SAAkBS,EAAQH,GACxB,OAAiB,MAAVG,OAAiBgQ,EAAYhQ,EAAOH,GA60C/B0b,CAASvb,EAAQH,GAC7B,OAAOwa,GAAa9a,GAASA,OAAQyQ,EA5mCvC8F,GAAK5V,UAAU8V,MAnEf,WACErU,KAAK2U,SAAWjB,GAAeA,GAAa,MAAQ,IAmEtDS,GAAK5V,UAAkB,OAtDvB,SAAoBL,GAClB,OAAO8B,KAAK8O,IAAI5Q,WAAe8B,KAAK2U,SAASzW,IAsD/CiW,GAAK5V,UAAUf,IA1Cf,SAAiBU,GACf,IAAI2W,EAAO7U,KAAK2U,SAChB,GAAIjB,GAAc,CAChB,IAAIjQ,EAASoR,EAAK3W,GAClB,MA1hBiB,8BA0hBVuF,OAA4B4K,EAAY5K,EAEjD,OAAOjF,EAAe1B,KAAK+X,EAAM3W,GAAO2W,EAAK3W,QAAOmQ,GAqCtD8F,GAAK5V,UAAUuQ,IAzBf,SAAiB5Q,GACf,IAAI2W,EAAO7U,KAAK2U,SAChB,OAAOjB,QAA6BrF,IAAdwG,EAAK3W,GAAqBM,EAAe1B,KAAK+X,EAAM3W,IAwB5EiW,GAAK5V,UAAUmT,IAXf,SAAiBxT,EAAKN,GAGpB,OAFWoC,KAAK2U,SACXzW,GAAQwV,SAA0BrF,IAAVzQ,EAzjBV,4BAyjBkDA,EAC9DoC,MAoHTuU,GAAUhW,UAAU8V,MAjFpB,WACErU,KAAK2U,SAAW,IAiFlBJ,GAAUhW,UAAkB,OArE5B,SAAyBL,GACvB,IAAI2W,EAAO7U,KAAK2U,SACZrD,EAAQmE,GAAaZ,EAAM3W,GAE/B,QAAIoT,EAAQ,KAIRA,GADYuD,EAAKnU,OAAS,EAE5BmU,EAAKgF,MAELhL,EAAO/R,KAAK+X,EAAMvD,EAAO,IAEpB,IAyDTiD,GAAUhW,UAAUf,IA7CpB,SAAsBU,GACpB,IAAI2W,EAAO7U,KAAK2U,SACZrD,EAAQmE,GAAaZ,EAAM3W,GAE/B,OAAOoT,EAAQ,OAAIjD,EAAYwG,EAAKvD,GAAO,IA0C7CiD,GAAUhW,UAAUuQ,IA9BpB,SAAsB5Q,GACpB,OAAOuX,GAAazV,KAAK2U,SAAUzW,IAAQ,GA8B7CqW,GAAUhW,UAAUmT,IAjBpB,SAAsBxT,EAAKN,GACzB,IAAIiX,EAAO7U,KAAK2U,SACZrD,EAAQmE,GAAaZ,EAAM3W,GAO/B,OALIoT,EAAQ,EACVuD,EAAKpT,KAAK,CAACvD,EAAKN,IAEhBiX,EAAKvD,GAAO,GAAK1T,EAEZoC,MAkGTwU,GAASjW,UAAU8V,MA/DnB,WACErU,KAAK2U,SAAW,CACd,KAAQ,IAAIR,GACZ,IAAO,IAAKb,GAAOiB,IACnB,OAAU,IAAIJ,KA4DlBK,GAASjW,UAAkB,OA/C3B,SAAwBL,GACtB,OAAOwb,GAAW1Z,KAAM9B,GAAa,OAAEA,IA+CzCsW,GAASjW,UAAUf,IAnCnB,SAAqBU,GACnB,OAAOwb,GAAW1Z,KAAM9B,GAAKV,IAAIU,IAmCnCsW,GAASjW,UAAUuQ,IAvBnB,SAAqB5Q,GACnB,OAAOwb,GAAW1Z,KAAM9B,GAAK4Q,IAAI5Q,IAuBnCsW,GAASjW,UAAUmT,IAVnB,SAAqBxT,EAAKN,GAExB,OADA8b,GAAW1Z,KAAM9B,GAAKwT,IAAIxT,EAAKN,GACxBoC,MAyDTyU,GAASlW,UAAU0C,IAAMwT,GAASlW,UAAUkD,KAnB5C,SAAqB7D,GAEnB,OADAoC,KAAK2U,SAASjD,IAAI9T,EA/yBC,6BAgzBZoC,MAkBTyU,GAASlW,UAAUuQ,IANnB,SAAqBlR,GACnB,OAAOoC,KAAK2U,SAAS7F,IAAIlR,IA6F3BgX,GAAMrW,UAAU8V,MApEhB,WACErU,KAAK2U,SAAW,IAAIJ,IAoEtBK,GAAMrW,UAAkB,OAxDxB,SAAqBL,GACnB,OAAO8B,KAAK2U,SAAiB,OAAEzW,IAwDjC0W,GAAMrW,UAAUf,IA5ChB,SAAkBU,GAChB,OAAO8B,KAAK2U,SAASnX,IAAIU,IA4C3B0W,GAAMrW,UAAUuQ,IAhChB,SAAkB5Q,GAChB,OAAO8B,KAAK2U,SAAS7F,IAAI5Q,IAgC3B0W,GAAMrW,UAAUmT,IAnBhB,SAAkBxT,EAAKN,GACrB,IAAIyhB,EAAQrf,KAAK2U,SACjB,GAAI0K,aAAiB9K,GAAW,CAC9B,IAAIuF,EAAQuF,EAAM1K,SAClB,IAAKrB,GAAQwG,EAAMpZ,OAASqZ,IAE1B,OADAD,EAAMrY,KAAK,CAACvD,EAAKN,IACVoC,KAETqf,EAAQrf,KAAK2U,SAAW,IAAIH,GAASsF,GAGvC,OADAuF,EAAM3N,IAAIxT,EAAKN,GACRoC,MA8xBT,IAAI2W,GAlnBJ,SAAoB/Y,GAClB,OAAOmY,EAAejZ,KAAKc,IAkrB7B,SAAS4zC,GAAc5zC,GACrB,OAAO0Q,GAAQ1Q,IAAUsX,GAAYtX,OAChCozC,GAAoBpzC,GAASA,EAAMozC,IAW1C,SAASx7B,GAAQ5X,EAAO8C,GAEtB,SADAA,EAAmB,MAAVA,EA3vDY,iBA2vDwBA,KAE1B,iBAAT9C,GAAqBsS,EAAS/D,KAAKvO,KAC1CA,GAAS,GAAKA,EAAQ,GAAK,GAAKA,EAAQ8C,EAW7C,SAASod,GAAMlgB,EAAOS,GACpB,GAAIiQ,GAAQ1Q,GACV,OAAO,EAET,IAAI+b,SAAc/b,EAClB,QAAY,UAAR+b,GAA4B,UAARA,GAA4B,WAARA,GAC/B,MAAT/b,IAAiB0hB,GAAS1hB,MAGvBmf,EAAc5Q,KAAKvO,KAAWkf,EAAa3Q,KAAKvO,IAC1C,MAAVS,GAAkBT,KAASP,OAAOgB,IAkDvC,SAASggB,GAAmBzgB,GAC1B,OAAOA,GAAUA,IAAU+a,GAAS/a,GAYtC,SAAS0gB,GAAwBpgB,EAAKkgB,GACpC,OAAO,SAAS/f,GACd,OAAc,MAAVA,IAGGA,EAAOH,KAASkgB,SACP/P,IAAb+P,GAA2BlgB,KAAOb,OAAOgB,OAxK3C+U,GA3pDa,qBA2pDDuD,GAAO,IAAIvD,EAAS,IAAI+G,YAAY,MAChD7G,GAAOqD,GAAO,IAAIrD,IAAQxD,GAC1ByD,IArqDY,oBAqqDDoD,GAAOpD,GAAQ6G,YAC1B5G,IAAOmD,GAAO,IAAInD,KAAQxD,GAC1ByD,IAlqDY,oBAkqDDkD,GAAO,IAAIlD,OACzBkD,GAAS,SAAS/Y,GAChB,IAAI6F,EAASsS,EAAejZ,KAAKc,GAC7Bmb,EAAOtV,GAAUsM,EAAYnS,EAAM0a,iBAAcjK,EACjDgM,EAAatB,EAAOnF,GAASmF,QAAQ1K,EAEzC,GAAIgM,EACF,OAAQA,GACN,KAAK1G,GAAoB,MAvqDf,oBAwqDV,KAAKE,GAAe,OAAO/D,EAC3B,KAAKgE,GAAmB,MAjrDf,mBAkrDT,KAAKC,GAAe,OAAO/D,EAC3B,KAAKgE,GAAmB,MA9qDf,mBAirDb,OAAOvQ,IAgKX,IAAI2b,GAAeG,IAAQ,SAASC,GAsepC,IAAkB5hB,EArehB4hB,EAsegB,OADA5hB,EAreE4hB,GAseK,GAx9BzB,SAAsB5hB,GAEpB,GAAoB,iBAATA,EACT,OAAOA,EAET,GAAI0hB,GAAS1hB,GACX,OAAO+f,GAAiBA,GAAe7gB,KAAKc,GAAS,GAEvD,IAAI6F,EAAU7F,EAAQ,GACtB,MAAkB,KAAV6F,GAAkB,EAAI7F,IAAU,IAAa,KAAO6F,EA+8BhCgc,CAAa7hB,GApezC,IAAI6F,EAAS,GAOb,OANIuZ,EAAa7Q,KAAKqT,IACpB/b,EAAOhC,KAAK,IAEd+d,EAAO/M,QAAQwK,GAAY,SAASyC,EAAOC,EAAQC,EAAOJ,GACxD/b,EAAOhC,KAAKme,EAAQJ,EAAO/M,QAAQ0K,EAAc,MAASwC,GAAUD,MAE/Djc,KAUT,SAASua,GAAMpgB,GACb,GAAoB,iBAATA,GAAqB0hB,GAAS1hB,GACvC,OAAOA,EAET,IAAI6F,EAAU7F,EAAQ,GACtB,MAAkB,KAAV6F,GAAkB,EAAI7F,IA73DjB,IA63DwC,KAAO6F,EAU9D,SAASmQ,GAAShC,GAChB,GAAY,MAARA,EAAc,CAChB,IACE,OAAOM,EAAapV,KAAK8U,GACzB,MAAOlH,IACT,IACE,OAAQkH,EAAO,GACf,MAAOlH,KAEX,MAAO,GA4BT,IAAI+mC,GAtlBJ,SAAkB7/B,EAAM5G,GAEtB,OADAA,EAAQyS,OAAoBpP,IAAVrD,EAAuB4G,EAAKlR,OAAS,EAAKsK,EAAO,GAC5D,WAML,IALA,IAAI0V,EAAOpG,UACPhJ,GAAS,EACT5Q,EAAS+c,EAAUiD,EAAKhgB,OAASsK,EAAO,GACxCoG,EAAQtQ,MAAMJ,KAET4Q,EAAQ5Q,GACf0Q,EAAME,GAASoP,EAAK1V,EAAQsG,GAE9BA,GAAS,EAET,IADA,IAAIogC,EAAY5wC,MAAMkK,EAAQ,KACrBsG,EAAQtG,GACf0mC,EAAUpgC,GAASoP,EAAKpP,GAG1B,OADAogC,EAAU1mC,GAASoG,EACZhG,EAAMwG,EAAM5R,KAAM0xC,IAqkBVC,EAAS,SAASvgC,EAAOsD,GAC1C,IAAIY,EAuBN,SAAclE,GACZ,IAAI1Q,EAAS0Q,EAAQA,EAAM1Q,OAAS,EACpC,OAAOA,EAAS0Q,EAAM1Q,EAAS,QAAK2N,EAzBrByW,CAAKpQ,GAIpB,OAHIkM,GAAkBtL,KACpBA,OAAWjH,GAENuS,GAAkBxP,GACrB8/B,GAAe9/B,EAz6BrB,SAASwgC,EAAYxgC,EAAOygC,EAAOxgC,EAAWygC,EAAUruC,GACtD,IAAI6N,GAAS,EACT5Q,EAAS0Q,EAAM1Q,OAKnB,IAHA2Q,IAAcA,EAAYmgC,IAC1B/tC,IAAWA,EAAS,MAEX6N,EAAQ5Q,GAAQ,CACvB,IAAI9C,EAAQwT,EAAME,GACdugC,EAAQ,GAAKxgC,EAAUzT,GACrBi0C,EAAQ,EAEVD,EAAYh0C,EAAOi0C,EAAQ,EAAGxgC,EAAWygC,EAAUruC,GAEnD8V,EAAU9V,EAAQ7F,GAEVk0C,IACVruC,EAAOA,EAAO/C,QAAU9C,GAG5B,OAAO6F,EAq5BmBmuC,CAAYl9B,EAAQ,EAAGkM,IAAmB,GAAO1C,GAAa5I,IACpF,MAkEN,SAASiK,GAAQ3N,EAAM4O,GACrB,GAAmB,mBAAR5O,GAAuB4O,GAA+B,mBAAZA,EACnD,MAAM,IAAIhS,UAjgEQ,uBAmgEpB,IAAIiS,EAAW,WACb,IAAIC,EAAOpG,UACPpc,EAAMsiB,EAAWA,EAASpV,MAAMpL,KAAM0gB,GAAQA,EAAK,GACnDrB,EAAQoB,EAASpB,MAErB,GAAIA,EAAMvQ,IAAI5Q,GACZ,OAAOmhB,EAAM7hB,IAAIU,GAEnB,IAAIuF,EAASmO,EAAKxG,MAAMpL,KAAM0gB,GAE9B,OADAD,EAASpB,MAAQA,EAAM3N,IAAIxT,EAAKuF,GACzBA,GAGT,OADAgd,EAASpB,MAAQ,IAAKE,GAAQoB,OAASnM,IAChCiM,EAsCT,SAASpZ,GAAGzJ,EAAOuY,GACjB,OAAOvY,IAAUuY,GAAUvY,GAAUA,GAASuY,GAAUA,EAqB1D,SAASjB,GAAYtX,GAEnB,OAAOgjB,GAAkBhjB,IAAUY,EAAe1B,KAAKc,EAAO,aAC1DgV,EAAqB9V,KAAKc,EAAO,WAAamY,EAAejZ,KAAKc,IAAUiS,GA3DlF0P,GAAQoB,MAAQnM,GAqFhB,IAAIlG,GAAUxN,MAAMwN,QA2BpB,SAASiS,GAAY3iB,GACnB,OAAgB,MAATA,GAAiB2c,GAAS3c,EAAM8C,UAAYmY,GAAWjb,GA4BhE,SAASgjB,GAAkBhjB,GACzB,OAAOqY,GAAarY,IAAU2iB,GAAY3iB,GAoB5C,SAASib,GAAWjb,GAGlB,IAAIgY,EAAM+C,GAAS/a,GAASmY,EAAejZ,KAAKc,GAAS,GACzD,MAvqEY,qBAuqELgY,GAtqEI,8BAsqEcA,EA6B3B,SAAS2E,GAAS3c,GAChB,MAAuB,iBAATA,GACZA,GAAS,GAAKA,EAAQ,GAAK,GAAKA,GA9sEb,iBA0uEvB,SAAS+a,GAAS/a,GAChB,IAAI+b,SAAc/b,EAClB,QAASA,IAAkB,UAAR+b,GAA4B,YAARA,GA2BzC,SAAS1D,GAAarY,GACpB,QAASA,GAAyB,iBAATA,EAoB3B,SAAS0hB,GAAS1hB,GAChB,MAAuB,iBAATA,GACXqY,GAAarY,IA7wEF,mBA6wEYmY,EAAejZ,KAAKc,GAoBhD,IAAIsT,GAAeD,EAAmBuJ,EAAUvJ,GAxkChD,SAA0BrT,GACxB,OAAOqY,GAAarY,IAClB2c,GAAS3c,EAAM8C,WAAayP,EAAe4F,EAAejZ,KAAKc,KAyrCnE,SAAS6Q,GAAKpQ,GACZ,OAAOkiB,GAAYliB,GAAUyW,GAAczW,GAAUya,GAASza,GAmBhE,SAAS8f,GAASvgB,GAChB,OAAOA,EA6BTlB,EAAOD,QAAUg1C,K,oCC7+EjB,MAAMM,EAA0B,EAAQ,IAsBxCr1C,EAAOD,QAAU,CAAEu1C,eAhBe,CAACC,EAAqBC,KACtD,MAAMC,EAAYJ,EAAwBE,GAI1C,MAAO,CACLG,iBAAkB,GAClBC,WAAY,CAGVC,SAAU,WAPIjlB,KAAK/D,YAQnBipB,QAASJ,O,gBCnBf11C,EAAQ+1C,MAAQ,EAAQ,IACxB/1C,EAAQoP,UAAY,EAAQ,K,cCD5B,IAAI4mC,EACAC,EAWA/nC,EA4IA/M,EAtJA+0C,EAAU,CACN,IAAM,IACN,KAAM,KACN,IAAM,IACNxxC,EAAM,KACNuM,EAAM,KACNtP,EAAM,KACNX,EAAM,KACNI,EAAM,MAIV8c,EAAQ,SAAU5d,GAEd,KAAM,CACFG,KAAS,cACTka,QAASra,EACT01C,GAASA,EACT9nC,KAASA,IAIjBzF,EAAO,SAAUlI,GAWb,OATIA,GAAKA,IAAM01C,GACX/3B,EAAM,aAAe3d,EAAI,iBAAmB01C,EAAK,KAMrDA,EAAK/nC,EAAKyQ,OAAOq3B,GACjBA,GAAM,EACCC,GAGX/yB,EAAS,WAEL,IAAIA,EACAH,EAAS,GAMb,IAJW,MAAPkzB,IACAlzB,EAAS,IACTta,EAAK,MAEFwtC,GAAM,KAAOA,GAAM,KACtBlzB,GAAUkzB,EACVxtC,IAEJ,GAAW,MAAPwtC,EAEA,IADAlzB,GAAU,IACHta,KAAUwtC,GAAM,KAAOA,GAAM,KAChClzB,GAAUkzB,EAGlB,GAAW,MAAPA,GAAqB,MAAPA,EAOd,IANAlzB,GAAUkzB,EACVxtC,IACW,MAAPwtC,GAAqB,MAAPA,IACdlzB,GAAUkzB,EACVxtC,KAEGwtC,GAAM,KAAOA,GAAM,KACtBlzB,GAAUkzB,EACVxtC,IAIR,GADAya,GAAUH,EACLkN,SAAS/M,GAGV,OAAOA,EAFPhF,EAAM,eAMd6E,EAAS,WAEL,IAAI4lB,EACAzoC,EAEAi2C,EADApzB,EAAS,GAIb,GAAW,MAAPkzB,EACA,KAAOxtC,KAAQ,CACX,GAAW,MAAPwtC,EAEA,OADAxtC,IACOsa,EACJ,GAAW,OAAPkzB,EAEP,GADAxtC,IACW,MAAPwtC,EAAY,CAEZ,IADAE,EAAQ,EACHj2C,EAAI,EAAGA,EAAI,IACZyoC,EAAM54B,SAAStH,IAAQ,IAClBwnB,SAAS0Y,IAFCzoC,GAAK,EAKpBi2C,EAAgB,GAARA,EAAaxN,EAEzB5lB,GAAUzV,OAAOwR,aAAaq3B,OAC3B,IAA2B,iBAAhBD,EAAQD,GAGtB,MAFAlzB,GAAUmzB,EAAQD,QAKtBlzB,GAAUkzB,EAItB/3B,EAAM,eAGVk4B,EAAQ,WAIJ,KAAOH,GAAMA,GAAM,KACfxtC,KA+FZtH,EAAQ,WAMJ,OADAi1C,IACQH,GACR,IAAK,IACD,OA1CK,WAIL,IAAIx0C,EACAG,EAAS,GAEb,GAAW,MAAPq0C,EAAY,CAGZ,GAFAxtC,EAAK,KACL2tC,IACW,MAAPH,EAEA,OADAxtC,EAAK,KACE7G,EAEX,KAAOq0C,GAAI,CASP,GARAx0C,EAAMshB,IACNqzB,IACA3tC,EAAK,KACD7H,OAAOmB,eAAe1B,KAAKuB,EAAQH,IACnCyc,EAAM,kBAAoBzc,EAAM,KAEpCG,EAAOH,GAAON,IACdi1C,IACW,MAAPH,EAEA,OADAxtC,EAAK,KACE7G,EAEX6G,EAAK,KACL2tC,KAGRl4B,EAAM,cAWCtc,GACX,IAAK,IACD,OAvEI,WAIJ,IAAI+S,EAAQ,GAEZ,GAAW,MAAPshC,EAAY,CAGZ,GAFAxtC,EAAK,KACL2tC,IACW,MAAPH,EAEA,OADAxtC,EAAK,KACEkM,EAEX,KAAOshC,GAAI,CAGP,GAFAthC,EAAM3P,KAAK7D,KACXi1C,IACW,MAAPH,EAEA,OADAxtC,EAAK,KACEkM,EAEXlM,EAAK,KACL2tC,KAGRl4B,EAAM,aA+CCvJ,GACX,IAAK,IACD,OAAOoO,IACX,IAAK,IACD,OAAOG,IACX,QACI,OAAO+yB,GAAM,KAAOA,GAAM,IAAM/yB,IA3G7B,WAIH,OAAQ+yB,GACR,IAAK,IAKD,OAJAxtC,EAAK,KACLA,EAAK,KACLA,EAAK,KACLA,EAAK,MACE,EACX,IAAK,IAMD,OALAA,EAAK,KACLA,EAAK,KACLA,EAAK,KACLA,EAAK,KACLA,EAAK,MACE,EACX,IAAK,IAKD,OAJAA,EAAK,KACLA,EAAK,KACLA,EAAK,KACLA,EAAK,KACE,KAEXyV,EAAM,eAAiB+3B,EAAK,KAkFethB,KAOnD10B,EAAOD,QAAU,SAAUoiB,EAAQi0B,GAC/B,IAAIrvC,EAiBJ,OAfAkH,EAAOkU,EACP4zB,EAAK,EACLC,EAAK,IACLjvC,EAAS7F,IACTi1C,IACIH,GACA/3B,EAAM,gBASgB,mBAAZm4B,EAA0B,SAASC,EAAKC,EAAQ90C,GAC1D,IAAI+zB,EAAGzyB,EAAG5B,EAAQo1C,EAAO90C,GACzB,GAAIN,GAA0B,iBAAVA,EAChB,IAAKq0B,KAAKr0B,EACFP,OAAOkB,UAAUC,eAAe1B,KAAKc,EAAOq0B,UAElC5jB,KADV7O,EAAIuzC,EAAKn1C,EAAOq0B,IAEZr0B,EAAMq0B,GAAKzyB,SAEJ5B,EAAMq0B,IAK7B,OAAO6gB,EAAQh2C,KAAKk2C,EAAQ90C,EAAKN,GAdE,CAerC,CAAC,GAAI6F,GAAS,IAAOA,I,cC/Q3B,IAEIwvC,EACA9kC,EAUA+kC,EAZAC,EAAY,2HAGZC,EAAO,CACH,KAAM,MACN,KAAM,MACN,KAAM,MACN,KAAM,MACN,KAAM,MACN,IAAM,MACN,KAAM,QAId,SAASxzB,EAAMJ,GAOX,OADA2zB,EAAUE,UAAY,EACfF,EAAUhnC,KAAKqT,GAAU,IAAMA,EAAO/M,QAAQ0gC,GAAW,SAAUjyC,GACtE,IAAIlE,EAAIo2C,EAAKlyC,GACb,MAAoB,iBAANlE,EAAiBA,EAC3B,OAAS,OAASkE,EAAEia,WAAW,GAAG3U,SAAS,KAAKT,OAAO,MAC1D,IAAM,IAAMyZ,EAAS,IAmG9B9iB,EAAOD,QAAU,SAAUmB,EAAOgQ,EAAUH,GACxC,IAAI9Q,EAMJ,GALAs2C,EAAM,GACN9kC,EAAS,GAIY,iBAAVV,EACP,IAAK9Q,EAAI,EAAGA,EAAI8Q,EAAO9Q,GAAK,EACxBwR,GAAU,QAIQ,iBAAVV,IACZU,EAASV,GAMb,GADAylC,EAAMtlC,EACFA,GAAgC,mBAAbA,IACC,iBAAbA,GAAoD,iBAApBA,EAASlN,QAChD,MAAM,IAAIyC,MAAM,kBAKpB,OA3HJ,SAASmJ,EAAIpO,EAAK80C,GAEd,IAAIr2C,EACAs1B,EACAzyB,EACAkB,EAEA6nB,EADA+qB,EAAOL,EAEPr1C,EAAQo1C,EAAO90C,GAenB,OAZIN,GAA0B,iBAAVA,GACY,mBAAjBA,EAAM2O,SACjB3O,EAAQA,EAAM2O,OAAOrO,IAKN,mBAARg1C,IACPt1C,EAAQs1C,EAAIp2C,KAAKk2C,EAAQ90C,EAAKN,WAInBA,GACX,IAAK,SACD,OAAOgiB,EAAMhiB,GAEjB,IAAK,SAED,OAAO8uB,SAAS9uB,GAASmM,OAAOnM,GAAS,OAE7C,IAAK,UACL,IAAK,OAID,OAAOmM,OAAOnM,GAElB,IAAK,SACD,IAAKA,EAAO,MAAO,OAKnB,GAJAq1C,GAAO9kC,EACPoa,EAAU,GAGqC,mBAA3ClrB,OAAOkB,UAAUiI,SAAS4E,MAAMxN,GAA6B,CAE7D,IADA8C,EAAS9C,EAAM8C,OACV/D,EAAI,EAAGA,EAAI+D,EAAQ/D,GAAK,EACzB4rB,EAAQ5rB,GAAK2P,EAAI3P,EAAGiB,IAAU,OASlC,OAJA4B,EAAuB,IAAnB+oB,EAAQ7nB,OAAe,KAAOuyC,EAC9B,MAAQA,EAAM1qB,EAAQzc,KAAK,MAAQmnC,GAAO,KAAOK,EAAO,IACxD,IAAM/qB,EAAQzc,KAAK,KAAO,IAC9BmnC,EAAMK,EACC9zC,EAKX,GAAI0zC,GAAsB,iBAARA,EAEd,IADAxyC,EAASwyC,EAAIxyC,OACR/D,EAAI,EAAGA,EAAI+D,EAAQ/D,GAAK,EAER,iBADjBs1B,EAAIihB,EAAIv2C,MAEJ6C,EAAI8M,EAAI2lB,EAAGr0B,KAEP2qB,EAAQ9mB,KAAKme,EAAMqS,IAAMghB,EAAM,KAAO,KAAOzzC,QAOzD,IAAKyyB,KAAKr0B,EACFP,OAAOkB,UAAUC,eAAe1B,KAAKc,EAAOq0B,KAC5CzyB,EAAI8M,EAAI2lB,EAAGr0B,KAEP2qB,EAAQ9mB,KAAKme,EAAMqS,IAAMghB,EAAM,KAAO,KAAOzzC,GAajE,OAJAA,EAAuB,IAAnB+oB,EAAQ7nB,OAAe,KAAOuyC,EAC9B,MAAQA,EAAM1qB,EAAQzc,KAAK,MAAQmnC,GAAO,KAAOK,EAAO,IACxD,IAAM/qB,EAAQzc,KAAK,KAAO,IAC9BmnC,EAAMK,EACC9zC,GA+BJ8M,CAAI,GAAI,CAAC,GAAI1O,M,8yCCvJxB,IAAI0rC,EAAmBtpC,MAAQA,KAAKspC,iBAAoB,SAAUhlC,GAC9D,OAAQA,GAAOA,EAAIvG,WAAcuG,EAAM,CAAE,QAAWA,IAExDjH,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,IACtD,IAAI21C,EAAgBjK,EAAgB,EAAQ,KAExCkK,EAEJzpC,OAAOypC,eACH,SAAUC,GACN,IAAIx4B,EAAS,GAOb,OANIw4B,EAAY,QACZA,GAAa,MACbx4B,GAAUlR,OAAOwR,aAAek4B,IAAc,GAAM,KAAS,OAC7DA,EAAY,MAAsB,KAAZA,GAE1Bx4B,GAAUlR,OAAOwR,aAAak4B,IAYtCh3C,EAAQ4S,QATR,SAAyBokC,GACrB,OAAKA,GAAa,OAAUA,GAAa,OAAWA,EAAY,QACrD,KAEPA,KAAaF,EAAclkC,UAC3BokC,EAAYF,EAAclkC,QAAQokC,IAE/BD,EAAcC,M,6WCzBzB,IAAI7jB,EAAK,EAAQ,IACb2b,EAAa,EAAQ,IAErB3iC,EAAO,IAAIgnB,EAAG,GACd8jB,EAAY,IAAI9jB,GAAI,GAGpB+V,EAAU,CACZ,QAAW,IACX,IAAO,IACP,KAAQ,OACR,KAAQ,OACR,QAAW,OACX,WAAc,OACd,KAAQ,UACR,KAAQ,UACR,SAAY,UACZ,UAAa,UACb,KAAQ,aACR,KAAQ,aACR,QAAW,aACX,UAAa,aACb,KAAQ,aACR,MAAS,gBACT,WAAc,gBACd,MAAS,gBACT,OAAU,mBACV,WAAc,mBACd,MAAS,mBACT,MAAS,sBACT,OAAU,yBACV,MAAS,yBACT,OAAU,4BACV,OAAU,+BACV,OAAU,mCAUZ,SAASgO,EAAeC,GACtB,IAAIlO,EAAOkO,EAAYA,EAAUhpC,cAAgB,QAC7CipC,EAAYlO,EAAQD,GAExB,GAAyB,iBAAdmO,EACT,MAAM,IAAI1wC,MAAM,kCAAoCywC,EAAY,8DAAiEvmC,KAAKxB,UAAU85B,EAAS,KAAM,IAGjK,OAAO,IAAI/V,EAAGikB,EAAW,IAG3B,SAASC,EAAe3gC,GACtB,GAAmB,iBAARA,EAAkB,CAC3B,IAAKA,EAAIuM,MAAM,eACb,MAAM,IAAIvc,MAAM,4DAA+DgQ,EAAM,gDAEvF,OAAOA,EACF,GAAmB,iBAARA,EAChB,OAAOpJ,OAAOoJ,GACT,GAAmB,iBAARA,GAAoBA,EAAI3M,WAAa2M,EAAIogB,QAAUpgB,EAAIm4B,oBACvE,OAAIn4B,EAAI4gC,YACChqC,OAAOoJ,EAAI4gC,eAGX5gC,EAAI3M,SAAS,IAGxB,MAAM,IAAIrD,MAAM,4DAA+DgQ,EAAM,iBAAoBA,EAAM,KAwFjHzW,EAAOD,QAAU,CACfkpC,QAASA,EACTmO,eAAgBA,EAChBH,eAAgBA,EAChBpL,QAzFF,SAAiByL,EAAUtO,EAAMuO,GAC/B,IAAIC,EAAM3I,EAAWyI,GACjBjkB,EAAWmkB,EAAIxsC,GAAGkB,GAClBpH,EAAOmyC,EAAejO,GACtByO,EAAaxO,EAAQD,GAAMhlC,OAAS,GAAK,EACzC8O,EAAUykC,GAAgB,GAE1BlkB,IACFmkB,EAAMA,EAAI1jB,IAAIkjB,IAKhB,IAFA,IAAIU,EAAWF,EAAI5vC,IAAI9C,GAAMgF,SAAS,IAE/B4tC,EAAS1zC,OAASyzC,GACvBC,EAAW,IAAMA,EAGd5kC,EAAQ6kC,MACXD,EAAWA,EAAS10B,MAAM,wBAAwB,IAGpD,IAAI40B,EAAQJ,EAAIvV,IAAIn9B,GAAMgF,SAAS,IAE/BgJ,EAAQ+kC,UACVD,EAAQA,EAAM7hC,QAAQ,wBAAyB,MAGjD,IAAI7U,EAAa02C,GAAqB,KAAZF,EAAkB,GAAK,IAAMA,GAMvD,OAJIrkB,IACFnyB,EAAQ,IAAMA,GAGTA,GAyDP0qC,MAtDF,SAAekM,EAAY9O,GACzB,IAAI+O,EAAQX,EAAeU,GACvBhzC,EAAOmyC,EAAejO,GACtByO,EAAaxO,EAAQD,GAAMhlC,OAAS,GAAK,EAGzCqvB,EAAqC,MAA1B0kB,EAAMzP,UAAU,EAAG,GAKlC,GAJIjV,IACF0kB,EAAQA,EAAMzP,UAAU,IAGZ,MAAVyP,EACF,MAAM,IAAItxC,MAAM,wCAA0CqxC,EAAa,0BAIzE,IAAIE,EAAQD,EAAMzoC,MAAM,KACxB,GAAI0oC,EAAMh0C,OAAS,EACjB,MAAM,IAAIyC,MAAM,wCAA0CqxC,EAAa,qCAGzE,IAAIF,EAAQI,EAAM,GACdN,EAAWM,EAAM,GAQrB,GANKJ,IACHA,EAAQ,KAELF,IACHA,EAAW,KAETA,EAAS1zC,OAASyzC,EACpB,MAAM,IAAIhxC,MAAM,wCAA0CqxC,EAAa,oCAGzE,KAAOJ,EAAS1zC,OAASyzC,GACvBC,GAAY,IAGdE,EAAQ,IAAI1kB,EAAG0kB,GACfF,EAAW,IAAIxkB,EAAGwkB,GAClB,IAAIF,EAAMI,EAAM9jB,IAAIhvB,GAAMP,IAAImzC,GAM9B,OAJIrkB,IACFmkB,EAAMA,EAAI1jB,IAAIkjB,IAGT,IAAI9jB,EAAGskB,EAAI1tC,SAAS,IAAK,O,iBC9JlC,2BACE,aAGA,SAAS6oB,EAAQnkB,EAAKokB,GACpB,IAAKpkB,EAAK,MAAM,IAAI/H,MAAMmsB,GAAO,oBAKnC,SAASC,EAAUC,EAAMC,GACvBD,EAAKE,OAASD,EACd,IAAIE,EAAW,aACfA,EAASpxB,UAAYkxB,EAAUlxB,UAC/BixB,EAAKjxB,UAAY,IAAIoxB,EACrBH,EAAKjxB,UAAU+Z,YAAckX,EAK/B,SAASI,EAAIjQ,EAAQne,EAAMquB,GACzB,GAAID,EAAGE,KAAKnQ,GACV,OAAOA,EAGT3f,KAAK+vB,SAAW,EAChB/vB,KAAKgwB,MAAQ,KACbhwB,KAAKU,OAAS,EAGdV,KAAKiwB,IAAM,KAEI,OAAXtQ,IACW,OAATne,GAA0B,OAATA,IACnBquB,EAASruB,EACTA,EAAO,IAGTxB,KAAKkwB,MAAMvQ,GAAU,EAAGne,GAAQ,GAAIquB,GAAU,OAYlD,IAAInd,EATkB,iBAAXhW,EACTA,EAAOD,QAAUmzB,EAEjBnzB,EAAQmzB,GAAKA,EAGfA,EAAGA,GAAKA,EACRA,EAAGO,SAAW,GAGd,IACEzd,EAAS,EAAQ,IAAeA,OAChC,MAAOhI,IAoIT,SAASiqC,EAAUroC,EAAKtB,EAAOulB,GAG7B,IAFA,IAAI9yB,EAAI,EACJ8oB,EAAMlmB,KAAKiK,IAAIgC,EAAI5L,OAAQ6vB,GACtB5zB,EAAIqO,EAAOrO,EAAI4pB,EAAK5pB,IAAK,CAChC,IAAIK,EAAIsP,EAAI6O,WAAWxe,GAAK,GAE5Bc,IAAM,EAIJA,GADET,GAAK,IAAMA,GAAK,GACbA,EAAI,GAAK,GAGLA,GAAK,IAAMA,GAAK,GACpBA,EAAI,GAAK,GAIL,GAAJA,EAGT,OAAOS,EAiCT,SAASmC,EAAW0M,EAAKtB,EAAOulB,EAAKC,GAGnC,IAFA,IAAI/yB,EAAI,EACJ8oB,EAAMlmB,KAAKiK,IAAIgC,EAAI5L,OAAQ6vB,GACtB5zB,EAAIqO,EAAOrO,EAAI4pB,EAAK5pB,IAAK,CAChC,IAAIK,EAAIsP,EAAI6O,WAAWxe,GAAK,GAE5Bc,GAAK+yB,EAIH/yB,GADET,GAAK,GACFA,EAAI,GAAK,GAGLA,GAAK,GACTA,EAAI,GAAK,GAITA,EAGT,OAAOS,EA5MTmyB,EAAGE,KAAO,SAAeW,GACvB,OAAIA,aAAeb,GAIJ,OAARa,GAA+B,iBAARA,GAC5BA,EAAInY,YAAY6X,WAAaP,EAAGO,UAAYrvB,MAAMwN,QAAQmiB,EAAIT,QAGlEJ,EAAG9pB,IAAM,SAAc4F,EAAMyZ,GAC3B,OAAIzZ,EAAK8B,IAAI2X,GAAS,EAAUzZ,EACzByZ,GAGTyK,EAAGtlB,IAAM,SAAcoB,EAAMyZ,GAC3B,OAAIzZ,EAAK8B,IAAI2X,GAAS,EAAUzZ,EACzByZ,GAGTyK,EAAGrxB,UAAU2xB,MAAQ,SAAevQ,EAAQne,EAAMquB,GAChD,GAAsB,iBAAXlQ,EACT,OAAO3f,KAAK0wB,YAAY/Q,EAAQne,EAAMquB,GAGxC,GAAsB,iBAAXlQ,EACT,OAAO3f,KAAK2wB,WAAWhR,EAAQne,EAAMquB,GAG1B,QAATruB,IACFA,EAAO,IAET6tB,EAAO7tB,KAAiB,EAAPA,IAAaA,GAAQ,GAAKA,GAAQ,IAGnD,IAAIwJ,EAAQ,EACM,OAFlB2U,EAASA,EAAOnZ,WAAWiM,QAAQ,OAAQ,KAEhC,IACTzH,IAGW,KAATxJ,EACFxB,KAAK4wB,UAAUjR,EAAQ3U,GAEvBhL,KAAK6wB,WAAWlR,EAAQne,EAAMwJ,GAGd,MAAd2U,EAAO,KACT3f,KAAK+vB,SAAW,GAGlB/vB,KAAKgxB,QAEU,OAAXnB,GAEJ7vB,KAAK2wB,WAAW3wB,KAAKqM,UAAW7K,EAAMquB,IAGxCD,EAAGrxB,UAAUmyB,YAAc,SAAsB/Q,EAAQne,EAAMquB,GACzDlQ,EAAS,IACX3f,KAAK+vB,SAAW,EAChBpQ,GAAUA,GAERA,EAAS,UACX3f,KAAKgwB,MAAQ,CAAW,SAATrQ,GACf3f,KAAKU,OAAS,GACLif,EAAS,kBAClB3f,KAAKgwB,MAAQ,CACF,SAATrQ,EACCA,EAAS,SAAa,UAEzB3f,KAAKU,OAAS,IAEd2uB,EAAO1P,EAAS,kBAChB3f,KAAKgwB,MAAQ,CACF,SAATrQ,EACCA,EAAS,SAAa,SACvB,GAEF3f,KAAKU,OAAS,GAGD,OAAXmvB,GAGJ7vB,KAAK2wB,WAAW3wB,KAAKqM,UAAW7K,EAAMquB,IAGxCD,EAAGrxB,UAAUoyB,WAAa,SAAqBhR,EAAQne,EAAMquB,GAG3D,GADAR,EAAgC,iBAAlB1P,EAAOjf,QACjBif,EAAOjf,QAAU,EAGnB,OAFAV,KAAKgwB,MAAQ,CAAE,GACfhwB,KAAKU,OAAS,EACPV,KAGTA,KAAKU,OAASL,KAAKW,KAAK2e,EAAOjf,OAAS,GACxCV,KAAKgwB,MAAQ,IAAIlvB,MAAMd,KAAKU,QAC5B,IAAK,IAAI/D,EAAI,EAAGA,EAAIqD,KAAKU,OAAQ/D,IAC/BqD,KAAKgwB,MAAMrzB,GAAK,EAGlB,IAAI0F,EAAGyuB,EACHC,EAAM,EACV,GAAe,OAAXlB,EACF,IAAKlzB,EAAIgjB,EAAOjf,OAAS,EAAG2B,EAAI,EAAG1F,GAAK,EAAGA,GAAK,EAC9Cm0B,EAAInR,EAAOhjB,GAAMgjB,EAAOhjB,EAAI,IAAM,EAAMgjB,EAAOhjB,EAAI,IAAM,GACzDqD,KAAKgwB,MAAM3tB,IAAOyuB,GAAKC,EAAO,SAC9B/wB,KAAKgwB,MAAM3tB,EAAI,GAAMyuB,IAAO,GAAKC,EAAQ,UACzCA,GAAO,KACI,KACTA,GAAO,GACP1uB,UAGC,GAAe,OAAXwtB,EACT,IAAKlzB,EAAI,EAAG0F,EAAI,EAAG1F,EAAIgjB,EAAOjf,OAAQ/D,GAAK,EACzCm0B,EAAInR,EAAOhjB,GAAMgjB,EAAOhjB,EAAI,IAAM,EAAMgjB,EAAOhjB,EAAI,IAAM,GACzDqD,KAAKgwB,MAAM3tB,IAAOyuB,GAAKC,EAAO,SAC9B/wB,KAAKgwB,MAAM3tB,EAAI,GAAMyuB,IAAO,GAAKC,EAAQ,UACzCA,GAAO,KACI,KACTA,GAAO,GACP1uB,KAIN,OAAOrC,KAAKgxB,SA2BdpB,EAAGrxB,UAAUqyB,UAAY,SAAoBjR,EAAQ3U,GAEnDhL,KAAKU,OAASL,KAAKW,MAAM2e,EAAOjf,OAASsK,GAAS,GAClDhL,KAAKgwB,MAAQ,IAAIlvB,MAAMd,KAAKU,QAC5B,IAAK,IAAI/D,EAAI,EAAGA,EAAIqD,KAAKU,OAAQ/D,IAC/BqD,KAAKgwB,MAAMrzB,GAAK,EAGlB,IAAI0F,EAAGyuB,EAEHC,EAAM,EACV,IAAKp0B,EAAIgjB,EAAOjf,OAAS,EAAG2B,EAAI,EAAG1F,GAAKqO,EAAOrO,GAAK,EAClDm0B,EAAI6jB,EAASh1B,EAAQhjB,EAAGA,EAAI,GAC5BqD,KAAKgwB,MAAM3tB,IAAOyuB,GAAKC,EAAO,SAE9B/wB,KAAKgwB,MAAM3tB,EAAI,IAAMyuB,IAAO,GAAKC,EAAO,SACxCA,GAAO,KACI,KACTA,GAAO,GACP1uB,KAGA1F,EAAI,IAAMqO,IACZ8lB,EAAI6jB,EAASh1B,EAAQ3U,EAAOrO,EAAI,GAChCqD,KAAKgwB,MAAM3tB,IAAOyuB,GAAKC,EAAO,SAC9B/wB,KAAKgwB,MAAM3tB,EAAI,IAAMyuB,IAAO,GAAKC,EAAO,SAE1C/wB,KAAKgxB,SA2BPpB,EAAGrxB,UAAUsyB,WAAa,SAAqBlR,EAAQne,EAAMwJ,GAE3DhL,KAAKgwB,MAAQ,CAAE,GACfhwB,KAAKU,OAAS,EAGd,IAAK,IAAIuwB,EAAU,EAAGC,EAAU,EAAGA,GAAW,SAAWA,GAAW1vB,EAClEyvB,IAEFA,IACAC,EAAWA,EAAU1vB,EAAQ,EAO7B,IALA,IAAI2vB,EAAQxR,EAAOjf,OAASsK,EACxB1G,EAAM6sB,EAAQF,EACdV,EAAMlwB,KAAKiK,IAAI6mB,EAAOA,EAAQ7sB,GAAO0G,EAErComB,EAAO,EACFz0B,EAAIqO,EAAOrO,EAAI4zB,EAAK5zB,GAAKs0B,EAChCG,EAAOxxB,EAAU+f,EAAQhjB,EAAGA,EAAIs0B,EAASzvB,GAEzCxB,KAAKqxB,MAAMH,GACPlxB,KAAKgwB,MAAM,GAAKoB,EAAO,SACzBpxB,KAAKgwB,MAAM,IAAMoB,EAEjBpxB,KAAKsxB,OAAOF,GAIhB,GAAY,IAAR9sB,EAAW,CACb,IAAIiC,EAAM,EAGV,IAFA6qB,EAAOxxB,EAAU+f,EAAQhjB,EAAGgjB,EAAOjf,OAAQc,GAEtC7E,EAAI,EAAGA,EAAI2H,EAAK3H,IACnB4J,GAAO/E,EAGTxB,KAAKqxB,MAAM9qB,GACPvG,KAAKgwB,MAAM,GAAKoB,EAAO,SACzBpxB,KAAKgwB,MAAM,IAAMoB,EAEjBpxB,KAAKsxB,OAAOF,KAKlBxB,EAAGrxB,UAAUgzB,KAAO,SAAeC,GACjCA,EAAKxB,MAAQ,IAAIlvB,MAAMd,KAAKU,QAC5B,IAAK,IAAI/D,EAAI,EAAGA,EAAIqD,KAAKU,OAAQ/D,IAC/B60B,EAAKxB,MAAMrzB,GAAKqD,KAAKgwB,MAAMrzB,GAE7B60B,EAAK9wB,OAASV,KAAKU,OACnB8wB,EAAKzB,SAAW/vB,KAAK+vB,SACrByB,EAAKvB,IAAMjwB,KAAKiwB,KAGlBL,EAAGrxB,UAAUsmB,MAAQ,WACnB,IAAIpnB,EAAI,IAAImyB,EAAG,MAEf,OADA5vB,KAAKuxB,KAAK9zB,GACHA,GAGTmyB,EAAGrxB,UAAUkzB,QAAU,SAAkBjgB,GACvC,KAAOxR,KAAKU,OAAS8Q,GACnBxR,KAAKgwB,MAAMhwB,KAAKU,UAAY,EAE9B,OAAOV,MAIT4vB,EAAGrxB,UAAUyyB,MAAQ,WACnB,KAAOhxB,KAAKU,OAAS,GAAqC,IAAhCV,KAAKgwB,MAAMhwB,KAAKU,OAAS,IACjDV,KAAKU,SAEP,OAAOV,KAAK0xB,aAGd9B,EAAGrxB,UAAUmzB,UAAY,WAKvB,OAHoB,IAAhB1xB,KAAKU,QAAkC,IAAlBV,KAAKgwB,MAAM,KAClChwB,KAAK+vB,SAAW,GAEX/vB,MAGT4vB,EAAGrxB,UAAUozB,QAAU,WACrB,OAAQ3xB,KAAKiwB,IAAM,UAAY,SAAWjwB,KAAKwG,SAAS,IAAM,KAiChE,IAAIorB,EAAQ,CACV,GACA,IACA,KACA,MACA,OACA,QACA,SACA,UACA,WACA,YACA,aACA,cACA,eACA,gBACA,iBACA,kBACA,mBACA,oBACA,qBACA,sBACA,uBACA,wBACA,yBACA,0BACA,2BACA,6BAGEC,EAAa,CACf,EAAG,EACH,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EACvB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAGhBC,EAAa,CACf,EAAG,EACH,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAC5D,SAAU,IAAU,SAAU,SAAU,SAAU,QAAS,SAC3D,SAAU,SAAU,SAAU,SAAU,KAAU,QAAS,QAC3D,QAAS,QAAS,QAAS,SAAU,SAAU,SAAU,SACzD,MAAU,SAAU,SAAU,SAAU,SAAU,SAAU,UAsjB9D,SAASC,EAAY7uB,EAAMutB,EAAKhlB,GAC9BA,EAAIskB,SAAWU,EAAIV,SAAW7sB,EAAK6sB,SACnC,IAAIxJ,EAAOrjB,EAAKxC,OAAS+vB,EAAI/vB,OAAU,EACvC+K,EAAI/K,OAAS6lB,EACbA,EAAOA,EAAM,EAAK,EAGlB,IAAIrlB,EAAoB,EAAhBgC,EAAK8sB,MAAM,GACf7uB,EAAmB,EAAfsvB,EAAIT,MAAM,GACdvyB,EAAIyD,EAAIC,EAER6wB,EAAS,SAAJv0B,EACL8D,EAAS9D,EAAI,SAAa,EAC9BgO,EAAIukB,MAAM,GAAKgC,EAEf,IAAK,IAAIC,EAAI,EAAGA,EAAI1L,EAAK0L,IAAK,CAM5B,IAHA,IAAIC,EAAS3wB,IAAU,GACnB4wB,EAAgB,SAAR5wB,EACR6wB,EAAO/xB,KAAKiK,IAAI2nB,EAAGxB,EAAI/vB,OAAS,GAC3B2B,EAAIhC,KAAKyF,IAAI,EAAGmsB,EAAI/uB,EAAKxC,OAAS,GAAI2B,GAAK+vB,EAAM/vB,IAAK,CAC7D,IAAI1F,EAAKs1B,EAAI5vB,EAAK,EAIlB6vB,IADAz0B,GAFAyD,EAAoB,EAAhBgC,EAAK8sB,MAAMrzB,KACfwE,EAAmB,EAAfsvB,EAAIT,MAAM3tB,IACF8vB,GACG,SAAa,EAC5BA,EAAY,SAAJ10B,EAEVgO,EAAIukB,MAAMiC,GAAa,EAARE,EACf5wB,EAAiB,EAAT2wB,EAQV,OANc,IAAV3wB,EACFkK,EAAIukB,MAAMiC,GAAa,EAAR1wB,EAEfkK,EAAI/K,SAGC+K,EAAIulB,QAzlBbpB,EAAGrxB,UAAUiI,SAAW,SAAmBhF,EAAMwZ,GAI/C,IAAIvP,EACJ,GAHAuP,EAAoB,EAAVA,GAAe,EAGZ,MAJbxZ,EAAOA,GAAQ,KAIa,QAATA,EAAgB,CACjCiK,EAAM,GAGN,IAFA,IAAIslB,EAAM,EACNxvB,EAAQ,EACH5E,EAAI,EAAGA,EAAIqD,KAAKU,OAAQ/D,IAAK,CACpC,IAAIm0B,EAAI9wB,KAAKgwB,MAAMrzB,GACfy0B,GAA+B,UAArBN,GAAKC,EAAOxvB,IAAmBiF,SAAS,IAGpDiF,EADY,KADdlK,EAASuvB,IAAO,GAAKC,EAAQ,WACVp0B,IAAMqD,KAAKU,OAAS,EAC/BkxB,EAAM,EAAIR,EAAK1wB,QAAU0wB,EAAO3lB,EAEhC2lB,EAAO3lB,GAEfslB,GAAO,IACI,KACTA,GAAO,GACPp0B,KAMJ,IAHc,IAAV4E,IACFkK,EAAMlK,EAAMiF,SAAS,IAAMiF,GAEtBA,EAAI/K,OAASsa,GAAY,GAC9BvP,EAAM,IAAMA,EAKd,OAHsB,IAAlBzL,KAAK+vB,WACPtkB,EAAM,IAAMA,GAEPA,EAGT,GAAIjK,KAAiB,EAAPA,IAAaA,GAAQ,GAAKA,GAAQ,GAAI,CAElD,IAAI6wB,EAAYR,EAAWrwB,GAEvB8wB,EAAYR,EAAWtwB,GAC3BiK,EAAM,GACN,IAAIzO,EAAIgD,KAAK6kB,QAEb,IADA7nB,EAAE+yB,SAAW,GACL/yB,EAAE8J,UAAU,CAClB,IAAIrJ,EAAIT,EAAEu1B,KAAKD,GAAW9rB,SAAShF,GAMjCiK,GALFzO,EAAIA,EAAEw1B,MAAMF,IAELxrB,SAGCrJ,EAAIgO,EAFJmmB,EAAMS,EAAY50B,EAAEiD,QAAUjD,EAAIgO,EAQ5C,IAHIzL,KAAK8G,WACP2E,EAAM,IAAMA,GAEPA,EAAI/K,OAASsa,GAAY,GAC9BvP,EAAM,IAAMA,EAKd,OAHsB,IAAlBzL,KAAK+vB,WACPtkB,EAAM,IAAMA,GAEPA,EAGT4jB,GAAO,EAAO,oCAGhBO,EAAGrxB,UAAU0hB,SAAW,WACtB,IAAIwS,EAAMzyB,KAAKgwB,MAAM,GASrB,OARoB,IAAhBhwB,KAAKU,OACP+xB,GAAuB,SAAhBzyB,KAAKgwB,MAAM,GACO,IAAhBhwB,KAAKU,QAAkC,IAAlBV,KAAKgwB,MAAM,GAEzCyC,GAAO,iBAAoC,SAAhBzyB,KAAKgwB,MAAM,GAC7BhwB,KAAKU,OAAS,GACvB2uB,GAAO,EAAO,8CAEU,IAAlBrvB,KAAK+vB,UAAmB0C,EAAMA,GAGxC7C,EAAGrxB,UAAUgO,OAAS,WACpB,OAAOvM,KAAKwG,SAAS,KAGvBopB,EAAGrxB,UAAUm0B,SAAW,SAAmB7C,EAAQnvB,GAEjD,OADA2uB,OAAyB,IAAX3c,GACP1S,KAAK2yB,YAAYjgB,EAAQmd,EAAQnvB,IAG1CkvB,EAAGrxB,UAAU8N,QAAU,SAAkBwjB,EAAQnvB,GAC/C,OAAOV,KAAK2yB,YAAY7xB,MAAO+uB,EAAQnvB,IAGzCkvB,EAAGrxB,UAAUo0B,YAAc,SAAsBC,EAAW/C,EAAQnvB,GAClE,IAAIuW,EAAajX,KAAKiX,aAClB4b,EAAYnyB,GAAUL,KAAKyF,IAAI,EAAGmR,GACtCoY,EAAOpY,GAAc4b,EAAW,yCAChCxD,EAAOwD,EAAY,EAAG,+BAEtB7yB,KAAKgxB,QACL,IAGI7vB,EAAGxE,EAHHm2B,EAA0B,OAAXjD,EACfkD,EAAM,IAAIH,EAAUC,GAGpBhwB,EAAI7C,KAAK6kB,QACb,GAAKiO,EAYE,CACL,IAAKn2B,EAAI,GAAIkG,EAAEiE,SAAUnK,IACvBwE,EAAI0B,EAAEmwB,MAAM,KACZnwB,EAAEowB,OAAO,GAETF,EAAIp2B,GAAKwE,EAGX,KAAOxE,EAAIk2B,EAAWl2B,IACpBo2B,EAAIp2B,GAAK,MArBM,CAEjB,IAAKA,EAAI,EAAGA,EAAIk2B,EAAY5b,EAAYta,IACtCo2B,EAAIp2B,GAAK,EAGX,IAAKA,EAAI,GAAIkG,EAAEiE,SAAUnK,IACvBwE,EAAI0B,EAAEmwB,MAAM,KACZnwB,EAAEowB,OAAO,GAETF,EAAIF,EAAYl2B,EAAI,GAAKwE,EAe7B,OAAO4xB,GAGL1yB,KAAK6yB,MACPtD,EAAGrxB,UAAU40B,WAAa,SAAqBrC,GAC7C,OAAO,GAAKzwB,KAAK6yB,MAAMpC,IAGzBlB,EAAGrxB,UAAU40B,WAAa,SAAqBrC,GAC7C,IAAIjzB,EAAIizB,EACJrzB,EAAI,EAiBR,OAhBII,GAAK,OACPJ,GAAK,GACLI,KAAO,IAELA,GAAK,KACPJ,GAAK,EACLI,KAAO,GAELA,GAAK,IACPJ,GAAK,EACLI,KAAO,GAELA,GAAK,IACPJ,GAAK,EACLI,KAAO,GAEFJ,EAAII,GAIf+xB,EAAGrxB,UAAU60B,UAAY,SAAoBtC,GAE3C,GAAU,IAANA,EAAS,OAAO,GAEpB,IAAIjzB,EAAIizB,EACJrzB,EAAI,EAoBR,OAnBqB,IAAZ,KAAJI,KACHJ,GAAK,GACLI,KAAO,IAEU,IAAV,IAAJA,KACHJ,GAAK,EACLI,KAAO,GAES,IAAT,GAAJA,KACHJ,GAAK,EACLI,KAAO,GAES,IAAT,EAAJA,KACHJ,GAAK,EACLI,KAAO,GAES,IAAT,EAAJA,IACHJ,IAEKA,GAITmyB,EAAGrxB,UAAU2J,UAAY,WACvB,IAAI4oB,EAAI9wB,KAAKgwB,MAAMhwB,KAAKU,OAAS,GAC7B2yB,EAAKrzB,KAAKmzB,WAAWrC,GACzB,OAA2B,IAAnB9wB,KAAKU,OAAS,GAAU2yB,GAiBlCzD,EAAGrxB,UAAU+0B,SAAW,WACtB,GAAItzB,KAAK8G,SAAU,OAAO,EAG1B,IADA,IAAIrJ,EAAI,EACCd,EAAI,EAAGA,EAAIqD,KAAKU,OAAQ/D,IAAK,CACpC,IAAIwE,EAAInB,KAAKozB,UAAUpzB,KAAKgwB,MAAMrzB,IAElC,GADAc,GAAK0D,EACK,KAANA,EAAU,MAEhB,OAAO1D,GAGTmyB,EAAGrxB,UAAU0Y,WAAa,WACxB,OAAO5W,KAAKW,KAAKhB,KAAKkI,YAAc,IAGtC0nB,EAAGrxB,UAAUg1B,OAAS,SAAiBC,GACrC,OAAsB,IAAlBxzB,KAAK+vB,SACA/vB,KAAKqD,MAAMowB,MAAMD,GAAOE,MAAM,GAEhC1zB,KAAK6kB,SAGd+K,EAAGrxB,UAAUo1B,SAAW,SAAmBH,GACzC,OAAIxzB,KAAK4zB,MAAMJ,EAAQ,GACdxzB,KAAK6zB,KAAKL,GAAOE,MAAM,GAAGI,OAE5B9zB,KAAK6kB,SAGd+K,EAAGrxB,UAAUw1B,MAAQ,WACnB,OAAyB,IAAlB/zB,KAAK+vB,UAIdH,EAAGrxB,UAAUgN,IAAM,WACjB,OAAOvL,KAAK6kB,QAAQiP,QAGtBlE,EAAGrxB,UAAUu1B,KAAO,WAKlB,OAJK9zB,KAAK8G,WACR9G,KAAK+vB,UAAY,GAGZ/vB,MAIT4vB,EAAGrxB,UAAUy1B,KAAO,SAAevD,GACjC,KAAOzwB,KAAKU,OAAS+vB,EAAI/vB,QACvBV,KAAKgwB,MAAMhwB,KAAKU,UAAY,EAG9B,IAAK,IAAI/D,EAAI,EAAGA,EAAI8zB,EAAI/vB,OAAQ/D,IAC9BqD,KAAKgwB,MAAMrzB,GAAKqD,KAAKgwB,MAAMrzB,GAAK8zB,EAAIT,MAAMrzB,GAG5C,OAAOqD,KAAKgxB,SAGdpB,EAAGrxB,UAAU01B,IAAM,SAAcxD,GAE/B,OADApB,EAA0C,IAAlCrvB,KAAK+vB,SAAWU,EAAIV,WACrB/vB,KAAKg0B,KAAKvD,IAInBb,EAAGrxB,UAAU4L,GAAK,SAAasmB,GAC7B,OAAIzwB,KAAKU,OAAS+vB,EAAI/vB,OAAeV,KAAK6kB,QAAQoP,IAAIxD,GAC/CA,EAAI5L,QAAQoP,IAAIj0B,OAGzB4vB,EAAGrxB,UAAU21B,IAAM,SAAczD,GAC/B,OAAIzwB,KAAKU,OAAS+vB,EAAI/vB,OAAeV,KAAK6kB,QAAQmP,KAAKvD,GAChDA,EAAI5L,QAAQmP,KAAKh0B,OAI1B4vB,EAAGrxB,UAAU41B,MAAQ,SAAgB1D,GAEnC,IAAItvB,EAEFA,EADEnB,KAAKU,OAAS+vB,EAAI/vB,OAChB+vB,EAEAzwB,KAGN,IAAK,IAAIrD,EAAI,EAAGA,EAAIwE,EAAET,OAAQ/D,IAC5BqD,KAAKgwB,MAAMrzB,GAAKqD,KAAKgwB,MAAMrzB,GAAK8zB,EAAIT,MAAMrzB,GAK5C,OAFAqD,KAAKU,OAASS,EAAET,OAETV,KAAKgxB,SAGdpB,EAAGrxB,UAAU61B,KAAO,SAAe3D,GAEjC,OADApB,EAA0C,IAAlCrvB,KAAK+vB,SAAWU,EAAIV,WACrB/vB,KAAKm0B,MAAM1D,IAIpBb,EAAGrxB,UAAU2L,IAAM,SAAcumB,GAC/B,OAAIzwB,KAAKU,OAAS+vB,EAAI/vB,OAAeV,KAAK6kB,QAAQuP,KAAK3D,GAChDA,EAAI5L,QAAQuP,KAAKp0B,OAG1B4vB,EAAGrxB,UAAU81B,KAAO,SAAe5D,GACjC,OAAIzwB,KAAKU,OAAS+vB,EAAI/vB,OAAeV,KAAK6kB,QAAQsP,MAAM1D,GACjDA,EAAI5L,QAAQsP,MAAMn0B,OAI3B4vB,EAAGrxB,UAAU+1B,MAAQ,SAAgB7D,GAEnC,IAAIvvB,EACAC,EACAnB,KAAKU,OAAS+vB,EAAI/vB,QACpBQ,EAAIlB,KACJmB,EAAIsvB,IAEJvvB,EAAIuvB,EACJtvB,EAAInB,MAGN,IAAK,IAAIrD,EAAI,EAAGA,EAAIwE,EAAET,OAAQ/D,IAC5BqD,KAAKgwB,MAAMrzB,GAAKuE,EAAE8uB,MAAMrzB,GAAKwE,EAAE6uB,MAAMrzB,GAGvC,GAAIqD,OAASkB,EACX,KAAOvE,EAAIuE,EAAER,OAAQ/D,IACnBqD,KAAKgwB,MAAMrzB,GAAKuE,EAAE8uB,MAAMrzB,GAM5B,OAFAqD,KAAKU,OAASQ,EAAER,OAETV,KAAKgxB,SAGdpB,EAAGrxB,UAAUg2B,KAAO,SAAe9D,GAEjC,OADApB,EAA0C,IAAlCrvB,KAAK+vB,SAAWU,EAAIV,WACrB/vB,KAAKs0B,MAAM7D,IAIpBb,EAAGrxB,UAAU6L,IAAM,SAAcqmB,GAC/B,OAAIzwB,KAAKU,OAAS+vB,EAAI/vB,OAAeV,KAAK6kB,QAAQ0P,KAAK9D,GAChDA,EAAI5L,QAAQ0P,KAAKv0B,OAG1B4vB,EAAGrxB,UAAUi2B,KAAO,SAAe/D,GACjC,OAAIzwB,KAAKU,OAAS+vB,EAAI/vB,OAAeV,KAAK6kB,QAAQyP,MAAM7D,GACjDA,EAAI5L,QAAQyP,MAAMt0B,OAI3B4vB,EAAGrxB,UAAUk1B,MAAQ,SAAgBD,GACnCnE,EAAwB,iBAAVmE,GAAsBA,GAAS,GAE7C,IAAIiB,EAAsC,EAAxBp0B,KAAKW,KAAKwyB,EAAQ,IAChCkB,EAAWlB,EAAQ,GAGvBxzB,KAAKyxB,QAAQgD,GAETC,EAAW,GACbD,IAIF,IAAK,IAAI93B,EAAI,EAAGA,EAAI83B,EAAa93B,IAC/BqD,KAAKgwB,MAAMrzB,GAAsB,UAAhBqD,KAAKgwB,MAAMrzB,GAS9B,OALI+3B,EAAW,IACb10B,KAAKgwB,MAAMrzB,IAAMqD,KAAKgwB,MAAMrzB,GAAM,UAAc,GAAK+3B,GAIhD10B,KAAKgxB,SAGdpB,EAAGrxB,UAAUs1B,KAAO,SAAeL,GACjC,OAAOxzB,KAAK6kB,QAAQ4O,MAAMD,IAI5B5D,EAAGrxB,UAAUo2B,KAAO,SAAeC,EAAK1pB,GACtCmkB,EAAsB,iBAARuF,GAAoBA,GAAO,GAEzC,IAAI7D,EAAO6D,EAAM,GAAM,EACnBC,EAAOD,EAAM,GAUjB,OARA50B,KAAKyxB,QAAQV,EAAM,GAGjB/wB,KAAKgwB,MAAMe,GADT7lB,EACgBlL,KAAKgwB,MAAMe,GAAQ,GAAK8D,EAExB70B,KAAKgwB,MAAMe,KAAS,GAAK8D,GAGtC70B,KAAKgxB,SAIdpB,EAAGrxB,UAAUu2B,KAAO,SAAerE,GACjC,IAAIhzB,EAkBAyD,EAAGC,EAfP,GAAsB,IAAlBnB,KAAK+vB,UAAmC,IAAjBU,EAAIV,SAI7B,OAHA/vB,KAAK+vB,SAAW,EAChBtyB,EAAIuC,KAAK+0B,KAAKtE,GACdzwB,KAAK+vB,UAAY,EACV/vB,KAAK0xB,YAGP,GAAsB,IAAlB1xB,KAAK+vB,UAAmC,IAAjBU,EAAIV,SAIpC,OAHAU,EAAIV,SAAW,EACftyB,EAAIuC,KAAK+0B,KAAKtE,GACdA,EAAIV,SAAW,EACRtyB,EAAEi0B,YAKP1xB,KAAKU,OAAS+vB,EAAI/vB,QACpBQ,EAAIlB,KACJmB,EAAIsvB,IAEJvvB,EAAIuvB,EACJtvB,EAAInB,MAIN,IADA,IAAIuB,EAAQ,EACH5E,EAAI,EAAGA,EAAIwE,EAAET,OAAQ/D,IAC5Bc,GAAkB,EAAbyD,EAAE8uB,MAAMrzB,KAAwB,EAAbwE,EAAE6uB,MAAMrzB,IAAU4E,EAC1CvB,KAAKgwB,MAAMrzB,GAAS,SAAJc,EAChB8D,EAAQ9D,IAAM,GAEhB,KAAiB,IAAV8D,GAAe5E,EAAIuE,EAAER,OAAQ/D,IAClCc,GAAkB,EAAbyD,EAAE8uB,MAAMrzB,IAAU4E,EACvBvB,KAAKgwB,MAAMrzB,GAAS,SAAJc,EAChB8D,EAAQ9D,IAAM,GAIhB,GADAuC,KAAKU,OAASQ,EAAER,OACF,IAAVa,EACFvB,KAAKgwB,MAAMhwB,KAAKU,QAAUa,EAC1BvB,KAAKU,cAEA,GAAIQ,IAAMlB,KACf,KAAOrD,EAAIuE,EAAER,OAAQ/D,IACnBqD,KAAKgwB,MAAMrzB,GAAKuE,EAAE8uB,MAAMrzB,GAI5B,OAAOqD,MAIT4vB,EAAGrxB,UAAU0C,IAAM,SAAcwvB,GAC/B,IAAIsC,EACJ,OAAqB,IAAjBtC,EAAIV,UAAoC,IAAlB/vB,KAAK+vB,UAC7BU,EAAIV,SAAW,EACfgD,EAAM/yB,KAAKg1B,IAAIvE,GACfA,EAAIV,UAAY,EACTgD,GACmB,IAAjBtC,EAAIV,UAAoC,IAAlB/vB,KAAK+vB,UACpC/vB,KAAK+vB,SAAW,EAChBgD,EAAMtC,EAAIuE,IAAIh1B,MACdA,KAAK+vB,SAAW,EACTgD,GAGL/yB,KAAKU,OAAS+vB,EAAI/vB,OAAeV,KAAK6kB,QAAQiQ,KAAKrE,GAEhDA,EAAI5L,QAAQiQ,KAAK90B,OAI1B4vB,EAAGrxB,UAAUw2B,KAAO,SAAetE,GAEjC,GAAqB,IAAjBA,EAAIV,SAAgB,CACtBU,EAAIV,SAAW,EACf,IAAItyB,EAAIuC,KAAK80B,KAAKrE,GAElB,OADAA,EAAIV,SAAW,EACRtyB,EAAEi0B,YAGJ,GAAsB,IAAlB1xB,KAAK+vB,SAId,OAHA/vB,KAAK+vB,SAAW,EAChB/vB,KAAK80B,KAAKrE,GACVzwB,KAAK+vB,SAAW,EACT/vB,KAAK0xB,YAId,IAWIxwB,EAAGC,EAXHqM,EAAMxN,KAAKwN,IAAIijB,GAGnB,GAAY,IAARjjB,EAIF,OAHAxN,KAAK+vB,SAAW,EAChB/vB,KAAKU,OAAS,EACdV,KAAKgwB,MAAM,GAAK,EACThwB,KAKLwN,EAAM,GACRtM,EAAIlB,KACJmB,EAAIsvB,IAEJvvB,EAAIuvB,EACJtvB,EAAInB,MAIN,IADA,IAAIuB,EAAQ,EACH5E,EAAI,EAAGA,EAAIwE,EAAET,OAAQ/D,IAE5B4E,GADA9D,GAAkB,EAAbyD,EAAE8uB,MAAMrzB,KAAwB,EAAbwE,EAAE6uB,MAAMrzB,IAAU4E,IAC7B,GACbvB,KAAKgwB,MAAMrzB,GAAS,SAAJc,EAElB,KAAiB,IAAV8D,GAAe5E,EAAIuE,EAAER,OAAQ/D,IAElC4E,GADA9D,GAAkB,EAAbyD,EAAE8uB,MAAMrzB,IAAU4E,IACV,GACbvB,KAAKgwB,MAAMrzB,GAAS,SAAJc,EAIlB,GAAc,IAAV8D,GAAe5E,EAAIuE,EAAER,QAAUQ,IAAMlB,KACvC,KAAOrD,EAAIuE,EAAER,OAAQ/D,IACnBqD,KAAKgwB,MAAMrzB,GAAKuE,EAAE8uB,MAAMrzB,GAU5B,OANAqD,KAAKU,OAASL,KAAKyF,IAAI9F,KAAKU,OAAQ/D,GAEhCuE,IAAMlB,OACRA,KAAK+vB,SAAW,GAGX/vB,KAAKgxB,SAIdpB,EAAGrxB,UAAUy2B,IAAM,SAAcvE,GAC/B,OAAOzwB,KAAK6kB,QAAQkQ,KAAKtE,IA+C3B,IAAIwE,EAAc,SAAsB/xB,EAAMutB,EAAKhlB,GACjD,IAIIumB,EACAxK,EACA6L,EANAnyB,EAAIgC,EAAK8sB,MACT7uB,EAAIsvB,EAAIT,MACR5yB,EAAIqO,EAAIukB,MACRhzB,EAAI,EAIJk4B,EAAY,EAAPh0B,EAAE,GACPi0B,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPn0B,EAAE,GACPo0B,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPt0B,EAAE,GACPu0B,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPz0B,EAAE,GACP00B,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP50B,EAAE,GACP60B,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP/0B,EAAE,GACPg1B,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPl1B,EAAE,GACPm1B,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPr1B,EAAE,GACPs1B,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPx1B,EAAE,GACPy1B,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP31B,EAAE,GACP41B,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP71B,EAAE,GACP81B,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPh2B,EAAE,GACPi2B,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPn2B,EAAE,GACPo2B,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPt2B,EAAE,GACPu2B,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPz2B,EAAE,GACP02B,EAAW,KAALD,EACNE,GAAMF,IAAO,GACbG,GAAY,EAAP52B,EAAE,GACP62B,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbG,GAAY,EAAP/2B,EAAE,GACPg3B,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbG,GAAY,EAAPl3B,EAAE,GACPm3B,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbG,GAAY,EAAPr3B,EAAE,GACPs3B,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbG,GAAY,EAAPx3B,EAAE,GACPy3B,GAAW,KAALD,GACNE,GAAMF,KAAO,GAEjBltB,EAAIskB,SAAW7sB,EAAK6sB,SAAWU,EAAIV,SACnCtkB,EAAI/K,OAAS,GAMb,IAAIo4B,IAAQ97B,GAJZg1B,EAAK3xB,KAAK04B,KAAK5D,EAAK8B,IAIE,KAAa,MAFnCzP,GADAA,EAAMnnB,KAAK04B,KAAK5D,EAAK+B,IACR72B,KAAK04B,KAAK3D,EAAK6B,GAAQ,KAEU,IAAO,EACrDj6B,IAFAq2B,EAAKhzB,KAAK04B,KAAK3D,EAAK8B,KAEP1P,IAAQ,IAAO,IAAMsR,KAAO,IAAO,EAChDA,IAAM,SAEN9G,EAAK3xB,KAAK04B,KAAKzD,EAAK2B,GAEpBzP,GADAA,EAAMnnB,KAAK04B,KAAKzD,EAAK4B,IACR72B,KAAK04B,KAAKxD,EAAK0B,GAAQ,EACpC5D,EAAKhzB,KAAK04B,KAAKxD,EAAK2B,GAKpB,IAAI8B,IAAQh8B,GAJZg1B,EAAMA,EAAK3xB,KAAK04B,KAAK5D,EAAKiC,GAAQ,GAIZ,KAAa,MAFnC5P,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK5D,EAAKkC,GAAQ,GACvBh3B,KAAK04B,KAAK3D,EAAKgC,GAAQ,KAEU,IAAO,EACrDp6B,IAFAq2B,EAAMA,EAAKhzB,KAAK04B,KAAK3D,EAAKiC,GAAQ,IAErB7P,IAAQ,IAAO,IAAMwR,KAAO,IAAO,EAChDA,IAAM,SAENhH,EAAK3xB,KAAK04B,KAAKtD,EAAKwB,GAEpBzP,GADAA,EAAMnnB,KAAK04B,KAAKtD,EAAKyB,IACR72B,KAAK04B,KAAKrD,EAAKuB,GAAQ,EACpC5D,EAAKhzB,KAAK04B,KAAKrD,EAAKwB,GACpBlF,EAAMA,EAAK3xB,KAAK04B,KAAKzD,EAAK8B,GAAQ,EAElC5P,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKzD,EAAK+B,GAAQ,GACvBh3B,KAAK04B,KAAKxD,EAAK6B,GAAQ,EACpC/D,EAAMA,EAAKhzB,KAAK04B,KAAKxD,EAAK8B,GAAQ,EAKlC,IAAI4B,IAAQj8B,GAJZg1B,EAAMA,EAAK3xB,KAAK04B,KAAK5D,EAAKoC,GAAQ,GAIZ,KAAa,MAFnC/P,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK5D,EAAKqC,GAAQ,GACvBn3B,KAAK04B,KAAK3D,EAAKmC,GAAQ,KAEU,IAAO,EACrDv6B,IAFAq2B,EAAMA,EAAKhzB,KAAK04B,KAAK3D,EAAKoC,GAAQ,IAErBhQ,IAAQ,IAAO,IAAMyR,KAAO,IAAO,EAChDA,IAAM,SAENjH,EAAK3xB,KAAK04B,KAAKnD,EAAKqB,GAEpBzP,GADAA,EAAMnnB,KAAK04B,KAAKnD,EAAKsB,IACR72B,KAAK04B,KAAKlD,EAAKoB,GAAQ,EACpC5D,EAAKhzB,KAAK04B,KAAKlD,EAAKqB,GACpBlF,EAAMA,EAAK3xB,KAAK04B,KAAKtD,EAAK2B,GAAQ,EAElC5P,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKtD,EAAK4B,GAAQ,GACvBh3B,KAAK04B,KAAKrD,EAAK0B,GAAQ,EACpC/D,EAAMA,EAAKhzB,KAAK04B,KAAKrD,EAAK2B,GAAQ,EAClCrF,EAAMA,EAAK3xB,KAAK04B,KAAKzD,EAAKiC,GAAQ,EAElC/P,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKzD,EAAKkC,GAAQ,GACvBn3B,KAAK04B,KAAKxD,EAAKgC,GAAQ,EACpClE,EAAMA,EAAKhzB,KAAK04B,KAAKxD,EAAKiC,GAAQ,EAKlC,IAAI0B,IAAQl8B,GAJZg1B,EAAMA,EAAK3xB,KAAK04B,KAAK5D,EAAKuC,GAAQ,GAIZ,KAAa,MAFnClQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK5D,EAAKwC,GAAQ,GACvBt3B,KAAK04B,KAAK3D,EAAKsC,GAAQ,KAEU,IAAO,EACrD16B,IAFAq2B,EAAMA,EAAKhzB,KAAK04B,KAAK3D,EAAKuC,GAAQ,IAErBnQ,IAAQ,IAAO,IAAM0R,KAAO,IAAO,EAChDA,IAAM,SAENlH,EAAK3xB,KAAK04B,KAAKhD,EAAKkB,GAEpBzP,GADAA,EAAMnnB,KAAK04B,KAAKhD,EAAKmB,IACR72B,KAAK04B,KAAK/C,EAAKiB,GAAQ,EACpC5D,EAAKhzB,KAAK04B,KAAK/C,EAAKkB,GACpBlF,EAAMA,EAAK3xB,KAAK04B,KAAKnD,EAAKwB,GAAQ,EAElC5P,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKnD,EAAKyB,GAAQ,GACvBh3B,KAAK04B,KAAKlD,EAAKuB,GAAQ,EACpC/D,EAAMA,EAAKhzB,KAAK04B,KAAKlD,EAAKwB,GAAQ,EAClCrF,EAAMA,EAAK3xB,KAAK04B,KAAKtD,EAAK8B,GAAQ,EAElC/P,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKtD,EAAK+B,GAAQ,GACvBn3B,KAAK04B,KAAKrD,EAAK6B,GAAQ,EACpClE,EAAMA,EAAKhzB,KAAK04B,KAAKrD,EAAK8B,GAAQ,EAClCxF,EAAMA,EAAK3xB,KAAK04B,KAAKzD,EAAKoC,GAAQ,EAElClQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKzD,EAAKqC,GAAQ,GACvBt3B,KAAK04B,KAAKxD,EAAKmC,GAAQ,EACpCrE,EAAMA,EAAKhzB,KAAK04B,KAAKxD,EAAKoC,GAAQ,EAKlC,IAAIwB,IAAQn8B,GAJZg1B,EAAMA,EAAK3xB,KAAK04B,KAAK5D,EAAK0C,GAAQ,GAIZ,KAAa,MAFnCrQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK5D,EAAK2C,IAAQ,GACvBz3B,KAAK04B,KAAK3D,EAAKyC,GAAQ,KAEU,IAAO,EACrD76B,IAFAq2B,EAAMA,EAAKhzB,KAAK04B,KAAK3D,EAAK0C,IAAQ,IAErBtQ,IAAQ,IAAO,IAAM2R,KAAO,IAAO,EAChDA,IAAM,SAENnH,EAAK3xB,KAAK04B,KAAK7C,EAAKe,GAEpBzP,GADAA,EAAMnnB,KAAK04B,KAAK7C,EAAKgB,IACR72B,KAAK04B,KAAK5C,EAAKc,GAAQ,EACpC5D,EAAKhzB,KAAK04B,KAAK5C,EAAKe,GACpBlF,EAAMA,EAAK3xB,KAAK04B,KAAKhD,EAAKqB,GAAQ,EAElC5P,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKhD,EAAKsB,GAAQ,GACvBh3B,KAAK04B,KAAK/C,EAAKoB,GAAQ,EACpC/D,EAAMA,EAAKhzB,KAAK04B,KAAK/C,EAAKqB,GAAQ,EAClCrF,EAAMA,EAAK3xB,KAAK04B,KAAKnD,EAAK2B,GAAQ,EAElC/P,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKnD,EAAK4B,GAAQ,GACvBn3B,KAAK04B,KAAKlD,EAAK0B,GAAQ,EACpClE,EAAMA,EAAKhzB,KAAK04B,KAAKlD,EAAK2B,GAAQ,EAClCxF,EAAMA,EAAK3xB,KAAK04B,KAAKtD,EAAKiC,GAAQ,EAElClQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKtD,EAAKkC,GAAQ,GACvBt3B,KAAK04B,KAAKrD,EAAKgC,GAAQ,EACpCrE,EAAMA,EAAKhzB,KAAK04B,KAAKrD,EAAKiC,GAAQ,EAClC3F,EAAMA,EAAK3xB,KAAK04B,KAAKzD,EAAKuC,GAAQ,EAElCrQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKzD,EAAKwC,IAAQ,GACvBz3B,KAAK04B,KAAKxD,EAAKsC,GAAQ,EACpCxE,EAAMA,EAAKhzB,KAAK04B,KAAKxD,EAAKuC,IAAQ,EAKlC,IAAIsB,IAAQp8B,GAJZg1B,EAAMA,EAAK3xB,KAAK04B,KAAK5D,EAAK6C,IAAQ,GAIZ,KAAa,MAFnCxQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK5D,EAAK8C,IAAQ,GACvB53B,KAAK04B,KAAK3D,EAAK4C,IAAQ,KAEU,IAAO,EACrDh7B,IAFAq2B,EAAMA,EAAKhzB,KAAK04B,KAAK3D,EAAK6C,IAAQ,IAErBzQ,IAAQ,IAAO,IAAM4R,KAAO,IAAO,EAChDA,IAAM,SAENpH,EAAK3xB,KAAK04B,KAAK1C,EAAKY,GAEpBzP,GADAA,EAAMnnB,KAAK04B,KAAK1C,EAAKa,IACR72B,KAAK04B,KAAKzC,EAAKW,GAAQ,EACpC5D,EAAKhzB,KAAK04B,KAAKzC,EAAKY,GACpBlF,EAAMA,EAAK3xB,KAAK04B,KAAK7C,EAAKkB,GAAQ,EAElC5P,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK7C,EAAKmB,GAAQ,GACvBh3B,KAAK04B,KAAK5C,EAAKiB,GAAQ,EACpC/D,EAAMA,EAAKhzB,KAAK04B,KAAK5C,EAAKkB,GAAQ,EAClCrF,EAAMA,EAAK3xB,KAAK04B,KAAKhD,EAAKwB,GAAQ,EAElC/P,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKhD,EAAKyB,GAAQ,GACvBn3B,KAAK04B,KAAK/C,EAAKuB,GAAQ,EACpClE,EAAMA,EAAKhzB,KAAK04B,KAAK/C,EAAKwB,GAAQ,EAClCxF,EAAMA,EAAK3xB,KAAK04B,KAAKnD,EAAK8B,GAAQ,EAElClQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKnD,EAAK+B,GAAQ,GACvBt3B,KAAK04B,KAAKlD,EAAK6B,GAAQ,EACpCrE,EAAMA,EAAKhzB,KAAK04B,KAAKlD,EAAK8B,GAAQ,EAClC3F,EAAMA,EAAK3xB,KAAK04B,KAAKtD,EAAKoC,GAAQ,EAElCrQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKtD,EAAKqC,IAAQ,GACvBz3B,KAAK04B,KAAKrD,EAAKmC,GAAQ,EACpCxE,EAAMA,EAAKhzB,KAAK04B,KAAKrD,EAAKoC,IAAQ,EAClC9F,EAAMA,EAAK3xB,KAAK04B,KAAKzD,EAAK0C,IAAQ,EAElCxQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKzD,EAAK2C,IAAQ,GACvB53B,KAAK04B,KAAKxD,EAAKyC,IAAQ,EACpC3E,EAAMA,EAAKhzB,KAAK04B,KAAKxD,EAAK0C,IAAQ,EAKlC,IAAIoB,IAAQr8B,GAJZg1B,EAAMA,EAAK3xB,KAAK04B,KAAK5D,EAAKgD,IAAQ,GAIZ,KAAa,MAFnC3Q,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK5D,EAAKiD,IAAQ,GACvB/3B,KAAK04B,KAAK3D,EAAK+C,IAAQ,KAEU,IAAO,EACrDn7B,IAFAq2B,EAAMA,EAAKhzB,KAAK04B,KAAK3D,EAAKgD,IAAQ,IAErB5Q,IAAQ,IAAO,IAAM6R,KAAO,IAAO,EAChDA,IAAM,SAENrH,EAAK3xB,KAAK04B,KAAKvC,EAAKS,GAEpBzP,GADAA,EAAMnnB,KAAK04B,KAAKvC,EAAKU,IACR72B,KAAK04B,KAAKtC,EAAKQ,GAAQ,EACpC5D,EAAKhzB,KAAK04B,KAAKtC,EAAKS,GACpBlF,EAAMA,EAAK3xB,KAAK04B,KAAK1C,EAAKe,GAAQ,EAElC5P,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK1C,EAAKgB,GAAQ,GACvBh3B,KAAK04B,KAAKzC,EAAKc,GAAQ,EACpC/D,EAAMA,EAAKhzB,KAAK04B,KAAKzC,EAAKe,GAAQ,EAClCrF,EAAMA,EAAK3xB,KAAK04B,KAAK7C,EAAKqB,GAAQ,EAElC/P,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK7C,EAAKsB,GAAQ,GACvBn3B,KAAK04B,KAAK5C,EAAKoB,GAAQ,EACpClE,EAAMA,EAAKhzB,KAAK04B,KAAK5C,EAAKqB,GAAQ,EAClCxF,EAAMA,EAAK3xB,KAAK04B,KAAKhD,EAAK2B,GAAQ,EAElClQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKhD,EAAK4B,GAAQ,GACvBt3B,KAAK04B,KAAK/C,EAAK0B,GAAQ,EACpCrE,EAAMA,EAAKhzB,KAAK04B,KAAK/C,EAAK2B,GAAQ,EAClC3F,EAAMA,EAAK3xB,KAAK04B,KAAKnD,EAAKiC,GAAQ,EAElCrQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKnD,EAAKkC,IAAQ,GACvBz3B,KAAK04B,KAAKlD,EAAKgC,GAAQ,EACpCxE,EAAMA,EAAKhzB,KAAK04B,KAAKlD,EAAKiC,IAAQ,EAClC9F,EAAMA,EAAK3xB,KAAK04B,KAAKtD,EAAKuC,IAAQ,EAElCxQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKtD,EAAKwC,IAAQ,GACvB53B,KAAK04B,KAAKrD,EAAKsC,IAAQ,EACpC3E,EAAMA,EAAKhzB,KAAK04B,KAAKrD,EAAKuC,IAAQ,EAClCjG,EAAMA,EAAK3xB,KAAK04B,KAAKzD,EAAK6C,IAAQ,EAElC3Q,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKzD,EAAK8C,IAAQ,GACvB/3B,KAAK04B,KAAKxD,EAAK4C,IAAQ,EACpC9E,EAAMA,EAAKhzB,KAAK04B,KAAKxD,EAAK6C,IAAQ,EAKlC,IAAIkB,IAAQt8B,GAJZg1B,EAAMA,EAAK3xB,KAAK04B,KAAK5D,EAAKmD,IAAQ,GAIZ,KAAa,MAFnC9Q,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK5D,EAAKoD,IAAQ,GACvBl4B,KAAK04B,KAAK3D,EAAKkD,IAAQ,KAEU,IAAO,EACrDt7B,IAFAq2B,EAAMA,EAAKhzB,KAAK04B,KAAK3D,EAAKmD,IAAQ,IAErB/Q,IAAQ,IAAO,IAAM8R,KAAO,IAAO,EAChDA,IAAM,SAENtH,EAAK3xB,KAAK04B,KAAKpC,EAAKM,GAEpBzP,GADAA,EAAMnnB,KAAK04B,KAAKpC,EAAKO,IACR72B,KAAK04B,KAAKnC,EAAKK,GAAQ,EACpC5D,EAAKhzB,KAAK04B,KAAKnC,EAAKM,GACpBlF,EAAMA,EAAK3xB,KAAK04B,KAAKvC,EAAKY,GAAQ,EAElC5P,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKvC,EAAKa,GAAQ,GACvBh3B,KAAK04B,KAAKtC,EAAKW,GAAQ,EACpC/D,EAAMA,EAAKhzB,KAAK04B,KAAKtC,EAAKY,GAAQ,EAClCrF,EAAMA,EAAK3xB,KAAK04B,KAAK1C,EAAKkB,GAAQ,EAElC/P,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK1C,EAAKmB,GAAQ,GACvBn3B,KAAK04B,KAAKzC,EAAKiB,GAAQ,EACpClE,EAAMA,EAAKhzB,KAAK04B,KAAKzC,EAAKkB,GAAQ,EAClCxF,EAAMA,EAAK3xB,KAAK04B,KAAK7C,EAAKwB,GAAQ,EAElClQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK7C,EAAKyB,GAAQ,GACvBt3B,KAAK04B,KAAK5C,EAAKuB,GAAQ,EACpCrE,EAAMA,EAAKhzB,KAAK04B,KAAK5C,EAAKwB,GAAQ,EAClC3F,EAAMA,EAAK3xB,KAAK04B,KAAKhD,EAAK8B,GAAQ,EAElCrQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKhD,EAAK+B,IAAQ,GACvBz3B,KAAK04B,KAAK/C,EAAK6B,GAAQ,EACpCxE,EAAMA,EAAKhzB,KAAK04B,KAAK/C,EAAK8B,IAAQ,EAClC9F,EAAMA,EAAK3xB,KAAK04B,KAAKnD,EAAKoC,IAAQ,EAElCxQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKnD,EAAKqC,IAAQ,GACvB53B,KAAK04B,KAAKlD,EAAKmC,IAAQ,EACpC3E,EAAMA,EAAKhzB,KAAK04B,KAAKlD,EAAKoC,IAAQ,EAClCjG,EAAMA,EAAK3xB,KAAK04B,KAAKtD,EAAK0C,IAAQ,EAElC3Q,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKtD,EAAK2C,IAAQ,GACvB/3B,KAAK04B,KAAKrD,EAAKyC,IAAQ,EACpC9E,EAAMA,EAAKhzB,KAAK04B,KAAKrD,EAAK0C,IAAQ,EAClCpG,EAAMA,EAAK3xB,KAAK04B,KAAKzD,EAAKgD,IAAQ,EAElC9Q,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKzD,EAAKiD,IAAQ,GACvBl4B,KAAK04B,KAAKxD,EAAK+C,IAAQ,EACpCjF,EAAMA,EAAKhzB,KAAK04B,KAAKxD,EAAKgD,IAAQ,EAKlC,IAAIgB,IAAQv8B,GAJZg1B,EAAMA,EAAK3xB,KAAK04B,KAAK5D,EAAKsD,IAAQ,GAIZ,KAAa,MAFnCjR,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK5D,EAAKuD,IAAQ,GACvBr4B,KAAK04B,KAAK3D,EAAKqD,IAAQ,KAEU,IAAO,EACrDz7B,IAFAq2B,EAAMA,EAAKhzB,KAAK04B,KAAK3D,EAAKsD,IAAQ,IAErBlR,IAAQ,IAAO,IAAM+R,KAAO,IAAO,EAChDA,IAAM,SAENvH,EAAK3xB,KAAK04B,KAAKjC,EAAKG,GAEpBzP,GADAA,EAAMnnB,KAAK04B,KAAKjC,EAAKI,IACR72B,KAAK04B,KAAKhC,EAAKE,GAAQ,EACpC5D,EAAKhzB,KAAK04B,KAAKhC,EAAKG,GACpBlF,EAAMA,EAAK3xB,KAAK04B,KAAKpC,EAAKS,GAAQ,EAElC5P,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKpC,EAAKU,GAAQ,GACvBh3B,KAAK04B,KAAKnC,EAAKQ,GAAQ,EACpC/D,EAAMA,EAAKhzB,KAAK04B,KAAKnC,EAAKS,GAAQ,EAClCrF,EAAMA,EAAK3xB,KAAK04B,KAAKvC,EAAKe,GAAQ,EAElC/P,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKvC,EAAKgB,GAAQ,GACvBn3B,KAAK04B,KAAKtC,EAAKc,GAAQ,EACpClE,EAAMA,EAAKhzB,KAAK04B,KAAKtC,EAAKe,GAAQ,EAClCxF,EAAMA,EAAK3xB,KAAK04B,KAAK1C,EAAKqB,GAAQ,EAElClQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK1C,EAAKsB,GAAQ,GACvBt3B,KAAK04B,KAAKzC,EAAKoB,GAAQ,EACpCrE,EAAMA,EAAKhzB,KAAK04B,KAAKzC,EAAKqB,GAAQ,EAClC3F,EAAMA,EAAK3xB,KAAK04B,KAAK7C,EAAK2B,GAAQ,EAElCrQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK7C,EAAK4B,IAAQ,GACvBz3B,KAAK04B,KAAK5C,EAAK0B,GAAQ,EACpCxE,EAAMA,EAAKhzB,KAAK04B,KAAK5C,EAAK2B,IAAQ,EAClC9F,EAAMA,EAAK3xB,KAAK04B,KAAKhD,EAAKiC,IAAQ,EAElCxQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKhD,EAAKkC,IAAQ,GACvB53B,KAAK04B,KAAK/C,EAAKgC,IAAQ,EACpC3E,EAAMA,EAAKhzB,KAAK04B,KAAK/C,EAAKiC,IAAQ,EAClCjG,EAAMA,EAAK3xB,KAAK04B,KAAKnD,EAAKuC,IAAQ,EAElC3Q,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKnD,EAAKwC,IAAQ,GACvB/3B,KAAK04B,KAAKlD,EAAKsC,IAAQ,EACpC9E,EAAMA,EAAKhzB,KAAK04B,KAAKlD,EAAKuC,IAAQ,EAClCpG,EAAMA,EAAK3xB,KAAK04B,KAAKtD,EAAK6C,IAAQ,EAElC9Q,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKtD,EAAK8C,IAAQ,GACvBl4B,KAAK04B,KAAKrD,EAAK4C,IAAQ,EACpCjF,EAAMA,EAAKhzB,KAAK04B,KAAKrD,EAAK6C,IAAQ,EAClCvG,EAAMA,EAAK3xB,KAAK04B,KAAKzD,EAAKmD,IAAQ,EAElCjR,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKzD,EAAKoD,IAAQ,GACvBr4B,KAAK04B,KAAKxD,EAAKkD,IAAQ,EACpCpF,EAAMA,EAAKhzB,KAAK04B,KAAKxD,EAAKmD,IAAQ,EAKlC,IAAIc,IAAQx8B,GAJZg1B,EAAMA,EAAK3xB,KAAK04B,KAAK5D,EAAKyD,IAAQ,GAIZ,KAAa,MAFnCpR,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK5D,EAAK0D,IAAQ,GACvBx4B,KAAK04B,KAAK3D,EAAKwD,IAAQ,KAEU,IAAO,EACrD57B,IAFAq2B,EAAMA,EAAKhzB,KAAK04B,KAAK3D,EAAKyD,IAAQ,IAErBrR,IAAQ,IAAO,IAAMgS,KAAO,IAAO,EAChDA,IAAM,SAENxH,EAAK3xB,KAAK04B,KAAKjC,EAAKM,GAEpB5P,GADAA,EAAMnnB,KAAK04B,KAAKjC,EAAKO,IACRh3B,KAAK04B,KAAKhC,EAAKK,GAAQ,EACpC/D,EAAKhzB,KAAK04B,KAAKhC,EAAKM,GACpBrF,EAAMA,EAAK3xB,KAAK04B,KAAKpC,EAAKY,GAAQ,EAElC/P,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKpC,EAAKa,GAAQ,GACvBn3B,KAAK04B,KAAKnC,EAAKW,GAAQ,EACpClE,EAAMA,EAAKhzB,KAAK04B,KAAKnC,EAAKY,GAAQ,EAClCxF,EAAMA,EAAK3xB,KAAK04B,KAAKvC,EAAKkB,GAAQ,EAElClQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKvC,EAAKmB,GAAQ,GACvBt3B,KAAK04B,KAAKtC,EAAKiB,GAAQ,EACpCrE,EAAMA,EAAKhzB,KAAK04B,KAAKtC,EAAKkB,GAAQ,EAClC3F,EAAMA,EAAK3xB,KAAK04B,KAAK1C,EAAKwB,GAAQ,EAElCrQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK1C,EAAKyB,IAAQ,GACvBz3B,KAAK04B,KAAKzC,EAAKuB,GAAQ,EACpCxE,EAAMA,EAAKhzB,KAAK04B,KAAKzC,EAAKwB,IAAQ,EAClC9F,EAAMA,EAAK3xB,KAAK04B,KAAK7C,EAAK8B,IAAQ,EAElCxQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK7C,EAAK+B,IAAQ,GACvB53B,KAAK04B,KAAK5C,EAAK6B,IAAQ,EACpC3E,EAAMA,EAAKhzB,KAAK04B,KAAK5C,EAAK8B,IAAQ,EAClCjG,EAAMA,EAAK3xB,KAAK04B,KAAKhD,EAAKoC,IAAQ,EAElC3Q,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKhD,EAAKqC,IAAQ,GACvB/3B,KAAK04B,KAAK/C,EAAKmC,IAAQ,EACpC9E,EAAMA,EAAKhzB,KAAK04B,KAAK/C,EAAKoC,IAAQ,EAClCpG,EAAMA,EAAK3xB,KAAK04B,KAAKnD,EAAK0C,IAAQ,EAElC9Q,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKnD,EAAK2C,IAAQ,GACvBl4B,KAAK04B,KAAKlD,EAAKyC,IAAQ,EACpCjF,EAAMA,EAAKhzB,KAAK04B,KAAKlD,EAAK0C,IAAQ,EAClCvG,EAAMA,EAAK3xB,KAAK04B,KAAKtD,EAAKgD,IAAQ,EAElCjR,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKtD,EAAKiD,IAAQ,GACvBr4B,KAAK04B,KAAKrD,EAAK+C,IAAQ,EACpCpF,EAAMA,EAAKhzB,KAAK04B,KAAKrD,EAAKgD,IAAQ,EAKlC,IAAIe,IAASz8B,GAJbg1B,EAAMA,EAAK3xB,KAAK04B,KAAKzD,EAAKsD,IAAQ,GAIX,KAAa,MAFpCpR,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKzD,EAAKuD,IAAQ,GACvBx4B,KAAK04B,KAAKxD,EAAKqD,IAAQ,KAEW,IAAO,EACtD57B,IAFAq2B,EAAMA,EAAKhzB,KAAK04B,KAAKxD,EAAKsD,IAAQ,IAErBrR,IAAQ,IAAO,IAAMiS,KAAQ,IAAO,EACjDA,IAAO,SAEPzH,EAAK3xB,KAAK04B,KAAKjC,EAAKS,GAEpB/P,GADAA,EAAMnnB,KAAK04B,KAAKjC,EAAKU,IACRn3B,KAAK04B,KAAKhC,EAAKQ,GAAQ,EACpClE,EAAKhzB,KAAK04B,KAAKhC,EAAKS,GACpBxF,EAAMA,EAAK3xB,KAAK04B,KAAKpC,EAAKe,GAAQ,EAElClQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKpC,EAAKgB,GAAQ,GACvBt3B,KAAK04B,KAAKnC,EAAKc,GAAQ,EACpCrE,EAAMA,EAAKhzB,KAAK04B,KAAKnC,EAAKe,GAAQ,EAClC3F,EAAMA,EAAK3xB,KAAK04B,KAAKvC,EAAKqB,GAAQ,EAElCrQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKvC,EAAKsB,IAAQ,GACvBz3B,KAAK04B,KAAKtC,EAAKoB,GAAQ,EACpCxE,EAAMA,EAAKhzB,KAAK04B,KAAKtC,EAAKqB,IAAQ,EAClC9F,EAAMA,EAAK3xB,KAAK04B,KAAK1C,EAAK2B,IAAQ,EAElCxQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK1C,EAAK4B,IAAQ,GACvB53B,KAAK04B,KAAKzC,EAAK0B,IAAQ,EACpC3E,EAAMA,EAAKhzB,KAAK04B,KAAKzC,EAAK2B,IAAQ,EAClCjG,EAAMA,EAAK3xB,KAAK04B,KAAK7C,EAAKiC,IAAQ,EAElC3Q,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK7C,EAAKkC,IAAQ,GACvB/3B,KAAK04B,KAAK5C,EAAKgC,IAAQ,EACpC9E,EAAMA,EAAKhzB,KAAK04B,KAAK5C,EAAKiC,IAAQ,EAClCpG,EAAMA,EAAK3xB,KAAK04B,KAAKhD,EAAKuC,IAAQ,EAElC9Q,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKhD,EAAKwC,IAAQ,GACvBl4B,KAAK04B,KAAK/C,EAAKsC,IAAQ,EACpCjF,EAAMA,EAAKhzB,KAAK04B,KAAK/C,EAAKuC,IAAQ,EAClCvG,EAAMA,EAAK3xB,KAAK04B,KAAKnD,EAAK6C,IAAQ,EAElCjR,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKnD,EAAK8C,IAAQ,GACvBr4B,KAAK04B,KAAKlD,EAAK4C,IAAQ,EACpCpF,EAAMA,EAAKhzB,KAAK04B,KAAKlD,EAAK6C,IAAQ,EAKlC,IAAIgB,IAAS18B,GAJbg1B,EAAMA,EAAK3xB,KAAK04B,KAAKtD,EAAKmD,IAAQ,GAIX,KAAa,MAFpCpR,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKtD,EAAKoD,IAAQ,GACvBx4B,KAAK04B,KAAKrD,EAAKkD,IAAQ,KAEW,IAAO,EACtD57B,IAFAq2B,EAAMA,EAAKhzB,KAAK04B,KAAKrD,EAAKmD,IAAQ,IAErBrR,IAAQ,IAAO,IAAMkS,KAAQ,IAAO,EACjDA,IAAO,SAEP1H,EAAK3xB,KAAK04B,KAAKjC,EAAKY,GAEpBlQ,GADAA,EAAMnnB,KAAK04B,KAAKjC,EAAKa,IACRt3B,KAAK04B,KAAKhC,EAAKW,GAAQ,EACpCrE,EAAKhzB,KAAK04B,KAAKhC,EAAKY,GACpB3F,EAAMA,EAAK3xB,KAAK04B,KAAKpC,EAAKkB,GAAQ,EAElCrQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKpC,EAAKmB,IAAQ,GACvBz3B,KAAK04B,KAAKnC,EAAKiB,GAAQ,EACpCxE,EAAMA,EAAKhzB,KAAK04B,KAAKnC,EAAKkB,IAAQ,EAClC9F,EAAMA,EAAK3xB,KAAK04B,KAAKvC,EAAKwB,IAAQ,EAElCxQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKvC,EAAKyB,IAAQ,GACvB53B,KAAK04B,KAAKtC,EAAKuB,IAAQ,EACpC3E,EAAMA,EAAKhzB,KAAK04B,KAAKtC,EAAKwB,IAAQ,EAClCjG,EAAMA,EAAK3xB,KAAK04B,KAAK1C,EAAK8B,IAAQ,EAElC3Q,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK1C,EAAK+B,IAAQ,GACvB/3B,KAAK04B,KAAKzC,EAAK6B,IAAQ,EACpC9E,EAAMA,EAAKhzB,KAAK04B,KAAKzC,EAAK8B,IAAQ,EAClCpG,EAAMA,EAAK3xB,KAAK04B,KAAK7C,EAAKoC,IAAQ,EAElC9Q,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK7C,EAAKqC,IAAQ,GACvBl4B,KAAK04B,KAAK5C,EAAKmC,IAAQ,EACpCjF,EAAMA,EAAKhzB,KAAK04B,KAAK5C,EAAKoC,IAAQ,EAClCvG,EAAMA,EAAK3xB,KAAK04B,KAAKhD,EAAK0C,IAAQ,EAElCjR,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKhD,EAAK2C,IAAQ,GACvBr4B,KAAK04B,KAAK/C,EAAKyC,IAAQ,EACpCpF,EAAMA,EAAKhzB,KAAK04B,KAAK/C,EAAK0C,IAAQ,EAKlC,IAAIiB,IAAS38B,GAJbg1B,EAAMA,EAAK3xB,KAAK04B,KAAKnD,EAAKgD,IAAQ,GAIX,KAAa,MAFpCpR,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKnD,EAAKiD,IAAQ,GACvBx4B,KAAK04B,KAAKlD,EAAK+C,IAAQ,KAEW,IAAO,EACtD57B,IAFAq2B,EAAMA,EAAKhzB,KAAK04B,KAAKlD,EAAKgD,IAAQ,IAErBrR,IAAQ,IAAO,IAAMmS,KAAQ,IAAO,EACjDA,IAAO,SAEP3H,EAAK3xB,KAAK04B,KAAKjC,EAAKe,GAEpBrQ,GADAA,EAAMnnB,KAAK04B,KAAKjC,EAAKgB,KACRz3B,KAAK04B,KAAKhC,EAAKc,GAAQ,EACpCxE,EAAKhzB,KAAK04B,KAAKhC,EAAKe,IACpB9F,EAAMA,EAAK3xB,KAAK04B,KAAKpC,EAAKqB,IAAQ,EAElCxQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKpC,EAAKsB,IAAQ,GACvB53B,KAAK04B,KAAKnC,EAAKoB,IAAQ,EACpC3E,EAAMA,EAAKhzB,KAAK04B,KAAKnC,EAAKqB,IAAQ,EAClCjG,EAAMA,EAAK3xB,KAAK04B,KAAKvC,EAAK2B,IAAQ,EAElC3Q,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKvC,EAAK4B,IAAQ,GACvB/3B,KAAK04B,KAAKtC,EAAK0B,IAAQ,EACpC9E,EAAMA,EAAKhzB,KAAK04B,KAAKtC,EAAK2B,IAAQ,EAClCpG,EAAMA,EAAK3xB,KAAK04B,KAAK1C,EAAKiC,IAAQ,EAElC9Q,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK1C,EAAKkC,IAAQ,GACvBl4B,KAAK04B,KAAKzC,EAAKgC,IAAQ,EACpCjF,EAAMA,EAAKhzB,KAAK04B,KAAKzC,EAAKiC,IAAQ,EAClCvG,EAAMA,EAAK3xB,KAAK04B,KAAK7C,EAAKuC,IAAQ,EAElCjR,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK7C,EAAKwC,IAAQ,GACvBr4B,KAAK04B,KAAK5C,EAAKsC,IAAQ,EACpCpF,EAAMA,EAAKhzB,KAAK04B,KAAK5C,EAAKuC,IAAQ,EAKlC,IAAIkB,IAAS58B,GAJbg1B,EAAMA,EAAK3xB,KAAK04B,KAAKhD,EAAK6C,IAAQ,GAIX,KAAa,MAFpCpR,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKhD,EAAK8C,IAAQ,GACvBx4B,KAAK04B,KAAK/C,EAAK4C,IAAQ,KAEW,IAAO,EACtD57B,IAFAq2B,EAAMA,EAAKhzB,KAAK04B,KAAK/C,EAAK6C,IAAQ,IAErBrR,IAAQ,IAAO,IAAMoS,KAAQ,IAAO,EACjDA,IAAO,SAEP5H,EAAK3xB,KAAK04B,KAAKjC,EAAKkB,IAEpBxQ,GADAA,EAAMnnB,KAAK04B,KAAKjC,EAAKmB,KACR53B,KAAK04B,KAAKhC,EAAKiB,IAAQ,EACpC3E,EAAKhzB,KAAK04B,KAAKhC,EAAKkB,IACpBjG,EAAMA,EAAK3xB,KAAK04B,KAAKpC,EAAKwB,IAAQ,EAElC3Q,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKpC,EAAKyB,IAAQ,GACvB/3B,KAAK04B,KAAKnC,EAAKuB,IAAQ,EACpC9E,EAAMA,EAAKhzB,KAAK04B,KAAKnC,EAAKwB,IAAQ,EAClCpG,EAAMA,EAAK3xB,KAAK04B,KAAKvC,EAAK8B,IAAQ,EAElC9Q,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKvC,EAAK+B,IAAQ,GACvBl4B,KAAK04B,KAAKtC,EAAK6B,IAAQ,EACpCjF,EAAMA,EAAKhzB,KAAK04B,KAAKtC,EAAK8B,IAAQ,EAClCvG,EAAMA,EAAK3xB,KAAK04B,KAAK1C,EAAKoC,IAAQ,EAElCjR,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK1C,EAAKqC,IAAQ,GACvBr4B,KAAK04B,KAAKzC,EAAKmC,IAAQ,EACpCpF,EAAMA,EAAKhzB,KAAK04B,KAAKzC,EAAKoC,IAAQ,EAKlC,IAAImB,IAAS78B,GAJbg1B,EAAMA,EAAK3xB,KAAK04B,KAAK7C,EAAK0C,IAAQ,GAIX,KAAa,MAFpCpR,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK7C,EAAK2C,IAAQ,GACvBx4B,KAAK04B,KAAK5C,EAAKyC,IAAQ,KAEW,IAAO,EACtD57B,IAFAq2B,EAAMA,EAAKhzB,KAAK04B,KAAK5C,EAAK0C,IAAQ,IAErBrR,IAAQ,IAAO,IAAMqS,KAAQ,IAAO,EACjDA,IAAO,SAEP7H,EAAK3xB,KAAK04B,KAAKjC,EAAKqB,IAEpB3Q,GADAA,EAAMnnB,KAAK04B,KAAKjC,EAAKsB,KACR/3B,KAAK04B,KAAKhC,EAAKoB,IAAQ,EACpC9E,EAAKhzB,KAAK04B,KAAKhC,EAAKqB,IACpBpG,EAAMA,EAAK3xB,KAAK04B,KAAKpC,EAAK2B,IAAQ,EAElC9Q,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKpC,EAAK4B,IAAQ,GACvBl4B,KAAK04B,KAAKnC,EAAK0B,IAAQ,EACpCjF,EAAMA,EAAKhzB,KAAK04B,KAAKnC,EAAK2B,IAAQ,EAClCvG,EAAMA,EAAK3xB,KAAK04B,KAAKvC,EAAKiC,IAAQ,EAElCjR,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKvC,EAAKkC,IAAQ,GACvBr4B,KAAK04B,KAAKtC,EAAKgC,IAAQ,EACpCpF,EAAMA,EAAKhzB,KAAK04B,KAAKtC,EAAKiC,IAAQ,EAKlC,IAAIoB,IAAS98B,GAJbg1B,EAAMA,EAAK3xB,KAAK04B,KAAK1C,EAAKuC,IAAQ,GAIX,KAAa,MAFpCpR,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK1C,EAAKwC,IAAQ,GACvBx4B,KAAK04B,KAAKzC,EAAKsC,IAAQ,KAEW,IAAO,EACtD57B,IAFAq2B,EAAMA,EAAKhzB,KAAK04B,KAAKzC,EAAKuC,IAAQ,IAErBrR,IAAQ,IAAO,IAAMsS,KAAQ,IAAO,EACjDA,IAAO,SAEP9H,EAAK3xB,KAAK04B,KAAKjC,EAAKwB,IAEpB9Q,GADAA,EAAMnnB,KAAK04B,KAAKjC,EAAKyB,KACRl4B,KAAK04B,KAAKhC,EAAKuB,IAAQ,EACpCjF,EAAKhzB,KAAK04B,KAAKhC,EAAKwB,IACpBvG,EAAMA,EAAK3xB,KAAK04B,KAAKpC,EAAK8B,IAAQ,EAElCjR,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKpC,EAAK+B,IAAQ,GACvBr4B,KAAK04B,KAAKnC,EAAK6B,IAAQ,EACpCpF,EAAMA,EAAKhzB,KAAK04B,KAAKnC,EAAK8B,IAAQ,EAKlC,IAAIqB,IAAS/8B,GAJbg1B,EAAMA,EAAK3xB,KAAK04B,KAAKvC,EAAKoC,IAAQ,GAIX,KAAa,MAFpCpR,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKvC,EAAKqC,IAAQ,GACvBx4B,KAAK04B,KAAKtC,EAAKmC,IAAQ,KAEW,IAAO,EACtD57B,IAFAq2B,EAAMA,EAAKhzB,KAAK04B,KAAKtC,EAAKoC,IAAQ,IAErBrR,IAAQ,IAAO,IAAMuS,KAAQ,IAAO,EACjDA,IAAO,SAEP/H,EAAK3xB,KAAK04B,KAAKjC,EAAK2B,IAEpBjR,GADAA,EAAMnnB,KAAK04B,KAAKjC,EAAK4B,KACRr4B,KAAK04B,KAAKhC,EAAK0B,IAAQ,EACpCpF,EAAKhzB,KAAK04B,KAAKhC,EAAK2B,IAKpB,IAAIsB,IAASh9B,GAJbg1B,EAAMA,EAAK3xB,KAAK04B,KAAKpC,EAAKiC,IAAQ,GAIX,KAAa,MAFpCpR,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKpC,EAAKkC,IAAQ,GACvBx4B,KAAK04B,KAAKnC,EAAKgC,IAAQ,KAEW,IAAO,EACtD57B,IAFAq2B,EAAMA,EAAKhzB,KAAK04B,KAAKnC,EAAKiC,IAAQ,IAErBrR,IAAQ,IAAO,IAAMwS,KAAQ,IAAO,EACjDA,IAAO,SAMP,IAAIC,IAASj9B,GAJbg1B,EAAK3xB,KAAK04B,KAAKjC,EAAK8B,KAIG,KAAa,MAFpCpR,GADAA,EAAMnnB,KAAK04B,KAAKjC,EAAK+B,KACRx4B,KAAK04B,KAAKhC,EAAK6B,IAAQ,KAEW,IAAO,EA0BtD,OAzBA57B,IAFAq2B,EAAKhzB,KAAK04B,KAAKhC,EAAK8B,MAEPrR,IAAQ,IAAO,IAAMyS,KAAQ,IAAO,EACjDA,IAAO,SACP78B,EAAE,GAAK07B,GACP17B,EAAE,GAAK47B,GACP57B,EAAE,GAAK67B,GACP77B,EAAE,GAAK87B,GACP97B,EAAE,GAAK+7B,GACP/7B,EAAE,GAAKg8B,GACPh8B,EAAE,GAAKi8B,GACPj8B,EAAE,GAAKk8B,GACPl8B,EAAE,GAAKm8B,GACPn8B,EAAE,GAAKo8B,GACPp8B,EAAE,IAAMq8B,GACRr8B,EAAE,IAAMs8B,GACRt8B,EAAE,IAAMu8B,GACRv8B,EAAE,IAAMw8B,GACRx8B,EAAE,IAAMy8B,GACRz8B,EAAE,IAAM08B,GACR18B,EAAE,IAAM28B,GACR38B,EAAE,IAAM48B,GACR58B,EAAE,IAAM68B,GACE,IAANj9B,IACFI,EAAE,IAAMJ,EACRyO,EAAI/K,UAEC+K,GAiDT,SAASyuB,EAAYh3B,EAAMutB,EAAKhlB,GAE9B,OADW,IAAI0uB,GACHC,KAAKl3B,EAAMutB,EAAKhlB,GAsB9B,SAAS0uB,EAAMt5B,EAAGgF,GAChB7F,KAAKa,EAAIA,EACTb,KAAK6F,EAAIA,EAvENxF,KAAK04B,OACR9D,EAAclD,GAiDhBnC,EAAGrxB,UAAU87B,MAAQ,SAAgB5J,EAAKhlB,GACxC,IACI8a,EAAMvmB,KAAKU,OAAS+vB,EAAI/vB,OAW5B,OAVoB,KAAhBV,KAAKU,QAAgC,KAAf+vB,EAAI/vB,OACtBu0B,EAAYj1B,KAAMywB,EAAKhlB,GACpB8a,EAAM,GACTwL,EAAW/xB,KAAMywB,EAAKhlB,GACnB8a,EAAM,KArDnB,SAAmBrjB,EAAMutB,EAAKhlB,GAC5BA,EAAIskB,SAAWU,EAAIV,SAAW7sB,EAAK6sB,SACnCtkB,EAAI/K,OAASwC,EAAKxC,OAAS+vB,EAAI/vB,OAI/B,IAFA,IAAIa,EAAQ,EACR+4B,EAAU,EACLrI,EAAI,EAAGA,EAAIxmB,EAAI/K,OAAS,EAAGuxB,IAAK,CAGvC,IAAIC,EAASoI,EACbA,EAAU,EAGV,IAFA,IAAInI,EAAgB,SAAR5wB,EACR6wB,EAAO/xB,KAAKiK,IAAI2nB,EAAGxB,EAAI/vB,OAAS,GAC3B2B,EAAIhC,KAAKyF,IAAI,EAAGmsB,EAAI/uB,EAAKxC,OAAS,GAAI2B,GAAK+vB,EAAM/vB,IAAK,CAC7D,IAAI1F,EAAIs1B,EAAI5vB,EAGR5E,GAFoB,EAAhByF,EAAK8sB,MAAMrzB,KACI,EAAf8zB,EAAIT,MAAM3tB,IAGd2vB,EAAS,SAAJv0B,EAGT00B,EAAa,UADbH,EAAMA,EAAKG,EAAS,GAIpBmI,IAFApI,GAHAA,EAAUA,GAAWz0B,EAAI,SAAa,GAAM,IAGxBu0B,IAAO,IAAO,KAEZ,GACtBE,GAAU,SAEZzmB,EAAIukB,MAAMiC,GAAKE,EACf5wB,EAAQ2wB,EACRA,EAASoI,EAQX,OANc,IAAV/4B,EACFkK,EAAIukB,MAAMiC,GAAK1wB,EAEfkK,EAAI/K,SAGC+K,EAAIulB,QAgBHuJ,CAASv6B,KAAMywB,EAAKhlB,GAEpByuB,EAAWl6B,KAAMywB,EAAKhlB,IAchC0uB,EAAK57B,UAAUi8B,QAAU,SAAkBC,GAGzC,IAFA,IAAI58B,EAAI,IAAIiD,MAAM25B,GACd79B,EAAIgzB,EAAGrxB,UAAU40B,WAAWsH,GAAK,EAC5B99B,EAAI,EAAGA,EAAI89B,EAAG99B,IACrBkB,EAAElB,GAAKqD,KAAK06B,OAAO/9B,EAAGC,EAAG69B,GAG3B,OAAO58B,GAITs8B,EAAK57B,UAAUm8B,OAAS,SAAiB75B,EAAGjE,EAAG69B,GAC7C,GAAU,IAAN55B,GAAWA,IAAM45B,EAAI,EAAG,OAAO55B,EAGnC,IADA,IAAI85B,EAAK,EACAh+B,EAAI,EAAGA,EAAIC,EAAGD,IACrBg+B,IAAW,EAAJ95B,IAAWjE,EAAID,EAAI,EAC1BkE,IAAM,EAGR,OAAO85B,GAKTR,EAAK57B,UAAUq8B,QAAU,SAAkBC,EAAKC,EAAKC,EAAKC,EAAMC,EAAMR,GACpE,IAAK,IAAI99B,EAAI,EAAGA,EAAI89B,EAAG99B,IACrBq+B,EAAKr+B,GAAKm+B,EAAID,EAAIl+B,IAClBs+B,EAAKt+B,GAAKo+B,EAAIF,EAAIl+B,KAItBw9B,EAAK57B,UAAUsT,UAAY,SAAoBipB,EAAKC,EAAKC,EAAMC,EAAMR,EAAGI,GACtE76B,KAAK46B,QAAQC,EAAKC,EAAKC,EAAKC,EAAMC,EAAMR,GAExC,IAAK,IAAI/7B,EAAI,EAAGA,EAAI+7B,EAAG/7B,IAAM,EAM3B,IALA,IAAI9B,EAAI8B,GAAK,EAETw8B,EAAQ76B,KAAK86B,IAAI,EAAI96B,KAAK+6B,GAAKx+B,GAC/By+B,EAAQh7B,KAAKi7B,IAAI,EAAIj7B,KAAK+6B,GAAKx+B,GAE1B6B,EAAI,EAAGA,EAAIg8B,EAAGh8B,GAAK7B,EAI1B,IAHA,IAAI2+B,EAASL,EACTM,EAASH,EAEJh5B,EAAI,EAAGA,EAAI3D,EAAG2D,IAAK,CAC1B,IAAIo5B,EAAKT,EAAKv8B,EAAI4D,GACdq5B,EAAKT,EAAKx8B,EAAI4D,GAEds5B,EAAKX,EAAKv8B,EAAI4D,EAAI3D,GAClBk9B,EAAKX,EAAKx8B,EAAI4D,EAAI3D,GAElBm9B,EAAKN,EAASI,EAAKH,EAASI,EAEhCA,EAAKL,EAASK,EAAKJ,EAASG,EAC5BA,EAAKE,EAELb,EAAKv8B,EAAI4D,GAAKo5B,EAAKE,EACnBV,EAAKx8B,EAAI4D,GAAKq5B,EAAKE,EAEnBZ,EAAKv8B,EAAI4D,EAAI3D,GAAK+8B,EAAKE,EACvBV,EAAKx8B,EAAI4D,EAAI3D,GAAKg9B,EAAKE,EAGnBv5B,IAAMzF,IACRi/B,EAAKX,EAAQK,EAASF,EAAQG,EAE9BA,EAASN,EAAQM,EAASH,EAAQE,EAClCA,EAASM,KAOnB1B,EAAK57B,UAAUu9B,YAAc,SAAsB19B,EAAGrB,GACpD,IAAI09B,EAAqB,EAAjBp6B,KAAKyF,IAAI/I,EAAGqB,GAChB29B,EAAU,EAAJtB,EACN99B,EAAI,EACR,IAAK89B,EAAIA,EAAI,EAAI,EAAGA,EAAGA,KAAU,EAC/B99B,IAGF,OAAO,GAAKA,EAAI,EAAIo/B,GAGtB5B,EAAK57B,UAAUy9B,UAAY,SAAoBlB,EAAKC,EAAKN,GACvD,KAAIA,GAAK,GAET,IAAK,IAAI99B,EAAI,EAAGA,EAAI89B,EAAI,EAAG99B,IAAK,CAC9B,IAAIkB,EAAIi9B,EAAIn+B,GAEZm+B,EAAIn+B,GAAKm+B,EAAIL,EAAI99B,EAAI,GACrBm+B,EAAIL,EAAI99B,EAAI,GAAKkB,EAEjBA,EAAIk9B,EAAIp+B,GAERo+B,EAAIp+B,IAAMo+B,EAAIN,EAAI99B,EAAI,GACtBo+B,EAAIN,EAAI99B,EAAI,IAAMkB,IAItBs8B,EAAK57B,UAAU09B,aAAe,SAAuBC,EAAIzB,GAEvD,IADA,IAAIl5B,EAAQ,EACH5E,EAAI,EAAGA,EAAI89B,EAAI,EAAG99B,IAAK,CAC9B,IAAIm0B,EAAoC,KAAhCzwB,KAAK87B,MAAMD,EAAG,EAAIv/B,EAAI,GAAK89B,GACjCp6B,KAAK87B,MAAMD,EAAG,EAAIv/B,GAAK89B,GACvBl5B,EAEF26B,EAAGv/B,GAAS,SAAJm0B,EAGNvvB,EADEuvB,EAAI,SACE,EAEAA,EAAI,SAAY,EAI5B,OAAOoL,GAGT/B,EAAK57B,UAAU69B,WAAa,SAAqBF,EAAI3V,EAAKuU,EAAKL,GAE7D,IADA,IAAIl5B,EAAQ,EACH5E,EAAI,EAAGA,EAAI4pB,EAAK5pB,IACvB4E,GAAyB,EAAR26B,EAAGv/B,GAEpBm+B,EAAI,EAAIn+B,GAAa,KAAR4E,EAAgBA,KAAkB,GAC/Cu5B,EAAI,EAAIn+B,EAAI,GAAa,KAAR4E,EAAgBA,KAAkB,GAIrD,IAAK5E,EAAI,EAAI4pB,EAAK5pB,EAAI89B,IAAK99B,EACzBm+B,EAAIn+B,GAAK,EAGX0yB,EAAiB,IAAV9tB,GACP8tB,EAA6B,KAAb,KAAR9tB,KAGV44B,EAAK57B,UAAU89B,KAAO,SAAe5B,GAEnC,IADA,IAAI6B,EAAK,IAAIx7B,MAAM25B,GACV99B,EAAI,EAAGA,EAAI89B,EAAG99B,IACrB2/B,EAAG3/B,GAAK,EAGV,OAAO2/B,GAGTnC,EAAK57B,UAAU67B,KAAO,SAAev5B,EAAGgF,EAAG4F,GACzC,IAAIgvB,EAAI,EAAIz6B,KAAK87B,YAAYj7B,EAAEH,OAAQmF,EAAEnF,QAErCm6B,EAAM76B,KAAKw6B,QAAQC,GAEnB3Z,EAAI9gB,KAAKq8B,KAAK5B,GAEdK,EAAM,IAAIh6B,MAAM25B,GAChB8B,EAAO,IAAIz7B,MAAM25B,GACjB+B,EAAO,IAAI17B,MAAM25B,GAEjBgC,EAAO,IAAI37B,MAAM25B,GACjBiC,EAAQ,IAAI57B,MAAM25B,GAClBkC,EAAQ,IAAI77B,MAAM25B,GAElBmC,EAAOnxB,EAAIukB,MACf4M,EAAKl8B,OAAS+5B,EAEdz6B,KAAKo8B,WAAWv7B,EAAEmvB,MAAOnvB,EAAEH,OAAQo6B,EAAKL,GACxCz6B,KAAKo8B,WAAWv2B,EAAEmqB,MAAOnqB,EAAEnF,OAAQ+7B,EAAMhC,GAEzCz6B,KAAK6R,UAAUipB,EAAKha,EAAGyb,EAAMC,EAAM/B,EAAGI,GACtC76B,KAAK6R,UAAU4qB,EAAM3b,EAAG4b,EAAOC,EAAOlC,EAAGI,GAEzC,IAAK,IAAIl+B,EAAI,EAAGA,EAAI89B,EAAG99B,IAAK,CAC1B,IAAIk/B,EAAKU,EAAK5/B,GAAK+/B,EAAM//B,GAAK6/B,EAAK7/B,GAAKggC,EAAMhgC,GAC9C6/B,EAAK7/B,GAAK4/B,EAAK5/B,GAAKggC,EAAMhgC,GAAK6/B,EAAK7/B,GAAK+/B,EAAM//B,GAC/C4/B,EAAK5/B,GAAKk/B,EAUZ,OAPA77B,KAAKg8B,UAAUO,EAAMC,EAAM/B,GAC3Bz6B,KAAK6R,UAAU0qB,EAAMC,EAAMI,EAAM9b,EAAG2Z,EAAGI,GACvC76B,KAAKg8B,UAAUY,EAAM9b,EAAG2Z,GACxBz6B,KAAKi8B,aAAaW,EAAMnC,GAExBhvB,EAAIskB,SAAWlvB,EAAEkvB,SAAWlqB,EAAEkqB,SAC9BtkB,EAAI/K,OAASG,EAAEH,OAASmF,EAAEnF,OACnB+K,EAAIulB,SAIbpB,EAAGrxB,UAAUiyB,IAAM,SAAcC,GAC/B,IAAIhlB,EAAM,IAAImkB,EAAG,MAEjB,OADAnkB,EAAIukB,MAAQ,IAAIlvB,MAAMd,KAAKU,OAAS+vB,EAAI/vB,QACjCV,KAAKq6B,MAAM5J,EAAKhlB,IAIzBmkB,EAAGrxB,UAAUs+B,KAAO,SAAepM,GACjC,IAAIhlB,EAAM,IAAImkB,EAAG,MAEjB,OADAnkB,EAAIukB,MAAQ,IAAIlvB,MAAMd,KAAKU,OAAS+vB,EAAI/vB,QACjCw5B,EAAWl6B,KAAMywB,EAAKhlB,IAI/BmkB,EAAGrxB,UAAUw6B,KAAO,SAAetI,GACjC,OAAOzwB,KAAK6kB,QAAQwV,MAAM5J,EAAKzwB,OAGjC4vB,EAAGrxB,UAAU8yB,MAAQ,SAAgBZ,GACnCpB,EAAsB,iBAARoB,GACdpB,EAAOoB,EAAM,UAIb,IADA,IAAIlvB,EAAQ,EACH5E,EAAI,EAAGA,EAAIqD,KAAKU,OAAQ/D,IAAK,CACpC,IAAIm0B,GAAqB,EAAhB9wB,KAAKgwB,MAAMrzB,IAAU8zB,EAC1BuB,GAAU,SAAJlB,IAA0B,SAARvvB,GAC5BA,IAAU,GACVA,GAAUuvB,EAAI,SAAa,EAE3BvvB,GAASywB,IAAO,GAChBhyB,KAAKgwB,MAAMrzB,GAAU,SAALq1B,EAQlB,OALc,IAAVzwB,IACFvB,KAAKgwB,MAAMrzB,GAAK4E,EAChBvB,KAAKU,UAGAV,MAGT4vB,EAAGrxB,UAAUu+B,KAAO,SAAerM,GACjC,OAAOzwB,KAAK6kB,QAAQwM,MAAMZ,IAI5Bb,EAAGrxB,UAAUw+B,IAAM,WACjB,OAAO/8B,KAAKwwB,IAAIxwB,OAIlB4vB,EAAGrxB,UAAUy+B,KAAO,WAClB,OAAOh9B,KAAK+4B,KAAK/4B,KAAK6kB,UAIxB+K,EAAGrxB,UAAUgI,IAAM,SAAckqB,GAC/B,IAAIK,EAxxCN,SAAqBL,GAGnB,IAFA,IAAIK,EAAI,IAAIhwB,MAAM2vB,EAAIvoB,aAEb0sB,EAAM,EAAGA,EAAM9D,EAAEpwB,OAAQk0B,IAAO,CACvC,IAAI7D,EAAO6D,EAAM,GAAM,EACnBC,EAAOD,EAAM,GAEjB9D,EAAE8D,IAAQnE,EAAIT,MAAMe,GAAQ,GAAK8D,KAAWA,EAG9C,OAAO/D,EA8wCCmM,CAAWxM,GACnB,GAAiB,IAAbK,EAAEpwB,OAAc,OAAO,IAAIkvB,EAAG,GAIlC,IADA,IAAImD,EAAM/yB,KACDrD,EAAI,EAAGA,EAAIm0B,EAAEpwB,QACP,IAATowB,EAAEn0B,GADsBA,IAAKo2B,EAAMA,EAAIgK,OAI7C,KAAMpgC,EAAIm0B,EAAEpwB,OACV,IAAK,IAAImC,EAAIkwB,EAAIgK,MAAOpgC,EAAIm0B,EAAEpwB,OAAQ/D,IAAKkG,EAAIA,EAAEk6B,MAClC,IAATjM,EAAEn0B,KAENo2B,EAAMA,EAAIvC,IAAI3tB,IAIlB,OAAOkwB,GAITnD,EAAGrxB,UAAU2+B,OAAS,SAAiBj1B,GACrConB,EAAuB,iBAATpnB,GAAqBA,GAAQ,GAC3C,IAGItL,EAHAc,EAAIwK,EAAO,GACXvJ,GAAKuJ,EAAOxK,GAAK,GACjB0/B,EAAa,WAAe,GAAK1/B,GAAQ,GAAKA,EAGlD,GAAU,IAANA,EAAS,CACX,IAAI8D,EAAQ,EAEZ,IAAK5E,EAAI,EAAGA,EAAIqD,KAAKU,OAAQ/D,IAAK,CAChC,IAAIygC,EAAWp9B,KAAKgwB,MAAMrzB,GAAKwgC,EAC3BngC,GAAsB,EAAhBgD,KAAKgwB,MAAMrzB,IAAUygC,GAAa3/B,EAC5CuC,KAAKgwB,MAAMrzB,GAAKK,EAAIuE,EACpBA,EAAQ67B,IAAc,GAAK3/B,EAGzB8D,IACFvB,KAAKgwB,MAAMrzB,GAAK4E,EAChBvB,KAAKU,UAIT,GAAU,IAANhC,EAAS,CACX,IAAK/B,EAAIqD,KAAKU,OAAS,EAAG/D,GAAK,EAAGA,IAChCqD,KAAKgwB,MAAMrzB,EAAI+B,GAAKsB,KAAKgwB,MAAMrzB,GAGjC,IAAKA,EAAI,EAAGA,EAAI+B,EAAG/B,IACjBqD,KAAKgwB,MAAMrzB,GAAK,EAGlBqD,KAAKU,QAAUhC,EAGjB,OAAOsB,KAAKgxB,SAGdpB,EAAGrxB,UAAU8+B,MAAQ,SAAgBp1B,GAGnC,OADAonB,EAAyB,IAAlBrvB,KAAK+vB,UACL/vB,KAAKk9B,OAAOj1B,IAMrB2nB,EAAGrxB,UAAU00B,OAAS,SAAiBhrB,EAAMq1B,EAAMC,GAEjD,IAAIC,EADJnO,EAAuB,iBAATpnB,GAAqBA,GAAQ,GAGzCu1B,EADEF,GACGA,EAAQA,EAAO,IAAO,GAEvB,EAGN,IAAI7/B,EAAIwK,EAAO,GACXvJ,EAAI2B,KAAKiK,KAAKrC,EAAOxK,GAAK,GAAIuC,KAAKU,QACnC+8B,EAAO,SAAc,WAAchgC,GAAMA,EACzCigC,EAAcH,EAMlB,GAJAC,GAAK9+B,EACL8+B,EAAIn9B,KAAKyF,IAAI,EAAG03B,GAGZE,EAAa,CACf,IAAK,IAAI/gC,EAAI,EAAGA,EAAI+B,EAAG/B,IACrB+gC,EAAY1N,MAAMrzB,GAAKqD,KAAKgwB,MAAMrzB,GAEpC+gC,EAAYh9B,OAAShC,EAGvB,GAAU,IAANA,QAEG,GAAIsB,KAAKU,OAAShC,EAEvB,IADAsB,KAAKU,QAAUhC,EACV/B,EAAI,EAAGA,EAAIqD,KAAKU,OAAQ/D,IAC3BqD,KAAKgwB,MAAMrzB,GAAKqD,KAAKgwB,MAAMrzB,EAAI+B,QAGjCsB,KAAKgwB,MAAM,GAAK,EAChBhwB,KAAKU,OAAS,EAGhB,IAAIa,EAAQ,EACZ,IAAK5E,EAAIqD,KAAKU,OAAS,EAAG/D,GAAK,IAAgB,IAAV4E,GAAe5E,GAAK6gC,GAAI7gC,IAAK,CAChE,IAAIy0B,EAAuB,EAAhBpxB,KAAKgwB,MAAMrzB,GACtBqD,KAAKgwB,MAAMrzB,GAAM4E,GAAU,GAAK9D,EAAO2zB,IAAS3zB,EAChD8D,EAAQ6vB,EAAOqM,EAajB,OATIC,GAAyB,IAAVn8B,IACjBm8B,EAAY1N,MAAM0N,EAAYh9B,UAAYa,GAGxB,IAAhBvB,KAAKU,SACPV,KAAKgwB,MAAM,GAAK,EAChBhwB,KAAKU,OAAS,GAGTV,KAAKgxB,SAGdpB,EAAGrxB,UAAUo/B,MAAQ,SAAgB11B,EAAMq1B,EAAMC,GAG/C,OADAlO,EAAyB,IAAlBrvB,KAAK+vB,UACL/vB,KAAKizB,OAAOhrB,EAAMq1B,EAAMC,IAIjC3N,EAAGrxB,UAAUq/B,KAAO,SAAe31B,GACjC,OAAOjI,KAAK6kB,QAAQwY,MAAMp1B,IAG5B2nB,EAAGrxB,UAAUs/B,MAAQ,SAAgB51B,GACnC,OAAOjI,KAAK6kB,QAAQqY,OAAOj1B,IAI7B2nB,EAAGrxB,UAAUu/B,KAAO,SAAe71B,GACjC,OAAOjI,KAAK6kB,QAAQ8Y,MAAM11B,IAG5B2nB,EAAGrxB,UAAUw/B,MAAQ,SAAgB91B,GACnC,OAAOjI,KAAK6kB,QAAQoO,OAAOhrB,IAI7B2nB,EAAGrxB,UAAUq1B,MAAQ,SAAgBgB,GACnCvF,EAAsB,iBAARuF,GAAoBA,GAAO,GACzC,IAAIn3B,EAAIm3B,EAAM,GACVl2B,GAAKk2B,EAAMn3B,GAAK,GAChBoF,EAAI,GAAKpF,EAGb,QAAIuC,KAAKU,QAAUhC,OAGXsB,KAAKgwB,MAAMtxB,GAELmE,IAIhB+sB,EAAGrxB,UAAUy/B,OAAS,SAAiB/1B,GACrConB,EAAuB,iBAATpnB,GAAqBA,GAAQ,GAC3C,IAAIxK,EAAIwK,EAAO,GACXvJ,GAAKuJ,EAAOxK,GAAK,GAIrB,GAFA4xB,EAAyB,IAAlBrvB,KAAK+vB,SAAgB,2CAExB/vB,KAAKU,QAAUhC,EACjB,OAAOsB,KAQT,GALU,IAANvC,GACFiB,IAEFsB,KAAKU,OAASL,KAAKiK,IAAI5L,EAAGsB,KAAKU,QAErB,IAANjD,EAAS,CACX,IAAIggC,EAAO,SAAc,WAAchgC,GAAMA,EAC7CuC,KAAKgwB,MAAMhwB,KAAKU,OAAS,IAAM+8B,EAGjC,OAAOz9B,KAAKgxB,SAIdpB,EAAGrxB,UAAU0/B,MAAQ,SAAgBh2B,GACnC,OAAOjI,KAAK6kB,QAAQmZ,OAAO/1B,IAI7B2nB,EAAGrxB,UAAUm1B,MAAQ,SAAgBjD,GAGnC,OAFApB,EAAsB,iBAARoB,GACdpB,EAAOoB,EAAM,UACTA,EAAM,EAAUzwB,KAAKk+B,OAAOzN,GAGV,IAAlBzwB,KAAK+vB,SACa,IAAhB/vB,KAAKU,SAAiC,EAAhBV,KAAKgwB,MAAM,IAAUS,GAC7CzwB,KAAKgwB,MAAM,GAAKS,GAAuB,EAAhBzwB,KAAKgwB,MAAM,IAClChwB,KAAK+vB,SAAW,EACT/vB,OAGTA,KAAK+vB,SAAW,EAChB/vB,KAAKk+B,MAAMzN,GACXzwB,KAAK+vB,SAAW,EACT/vB,MAIFA,KAAKsxB,OAAOb,IAGrBb,EAAGrxB,UAAU+yB,OAAS,SAAiBb,GACrCzwB,KAAKgwB,MAAM,IAAMS,EAGjB,IAAK,IAAI9zB,EAAI,EAAGA,EAAIqD,KAAKU,QAAUV,KAAKgwB,MAAMrzB,IAAM,SAAWA,IAC7DqD,KAAKgwB,MAAMrzB,IAAM,SACbA,IAAMqD,KAAKU,OAAS,EACtBV,KAAKgwB,MAAMrzB,EAAI,GAAK,EAEpBqD,KAAKgwB,MAAMrzB,EAAI,KAKnB,OAFAqD,KAAKU,OAASL,KAAKyF,IAAI9F,KAAKU,OAAQ/D,EAAI,GAEjCqD,MAIT4vB,EAAGrxB,UAAU2/B,MAAQ,SAAgBzN,GAGnC,GAFApB,EAAsB,iBAARoB,GACdpB,EAAOoB,EAAM,UACTA,EAAM,EAAG,OAAOzwB,KAAK0zB,OAAOjD,GAEhC,GAAsB,IAAlBzwB,KAAK+vB,SAIP,OAHA/vB,KAAK+vB,SAAW,EAChB/vB,KAAK0zB,MAAMjD,GACXzwB,KAAK+vB,SAAW,EACT/vB,KAKT,GAFAA,KAAKgwB,MAAM,IAAMS,EAEG,IAAhBzwB,KAAKU,QAAgBV,KAAKgwB,MAAM,GAAK,EACvChwB,KAAKgwB,MAAM,IAAMhwB,KAAKgwB,MAAM,GAC5BhwB,KAAK+vB,SAAW,OAGhB,IAAK,IAAIpzB,EAAI,EAAGA,EAAIqD,KAAKU,QAAUV,KAAKgwB,MAAMrzB,GAAK,EAAGA,IACpDqD,KAAKgwB,MAAMrzB,IAAM,SACjBqD,KAAKgwB,MAAMrzB,EAAI,IAAM,EAIzB,OAAOqD,KAAKgxB,SAGdpB,EAAGrxB,UAAU4/B,KAAO,SAAe1N,GACjC,OAAOzwB,KAAK6kB,QAAQ6O,MAAMjD,IAG5Bb,EAAGrxB,UAAU6/B,KAAO,SAAe3N,GACjC,OAAOzwB,KAAK6kB,QAAQqZ,MAAMzN,IAG5Bb,EAAGrxB,UAAU8/B,KAAO,WAGlB,OAFAr+B,KAAK+vB,SAAW,EAET/vB,MAGT4vB,EAAGrxB,UAAU8E,IAAM,WACjB,OAAOrD,KAAK6kB,QAAQwZ,QAGtBzO,EAAGrxB,UAAU+/B,aAAe,SAAuB7N,EAAKD,EAAKhtB,GAC3D,IACI7G,EAIAm0B,EALAvK,EAAMkK,EAAI/vB,OAAS8C,EAGvBxD,KAAKyxB,QAAQlL,GAGb,IAAIhlB,EAAQ,EACZ,IAAK5E,EAAI,EAAGA,EAAI8zB,EAAI/vB,OAAQ/D,IAAK,CAC/Bm0B,GAA6B,EAAxB9wB,KAAKgwB,MAAMrzB,EAAI6G,IAAcjC,EAClC,IAAI4jB,GAAwB,EAAfsL,EAAIT,MAAMrzB,IAAU6zB,EAEjCjvB,IADAuvB,GAAa,SAAR3L,IACS,KAAQA,EAAQ,SAAa,GAC3CnlB,KAAKgwB,MAAMrzB,EAAI6G,GAAa,SAAJstB,EAE1B,KAAOn0B,EAAIqD,KAAKU,OAAS8C,EAAO7G,IAE9B4E,GADAuvB,GAA6B,EAAxB9wB,KAAKgwB,MAAMrzB,EAAI6G,IAAcjC,IACrB,GACbvB,KAAKgwB,MAAMrzB,EAAI6G,GAAa,SAAJstB,EAG1B,GAAc,IAAVvvB,EAAa,OAAOvB,KAAKgxB,QAK7B,IAFA3B,GAAkB,IAAX9tB,GACPA,EAAQ,EACH5E,EAAI,EAAGA,EAAIqD,KAAKU,OAAQ/D,IAE3B4E,GADAuvB,IAAsB,EAAhB9wB,KAAKgwB,MAAMrzB,IAAU4E,IACd,GACbvB,KAAKgwB,MAAMrzB,GAAS,SAAJm0B,EAIlB,OAFA9wB,KAAK+vB,SAAW,EAET/vB,KAAKgxB,SAGdpB,EAAGrxB,UAAUggC,SAAW,SAAmB9N,EAAK3yB,GAC9C,IAAI0F,GAAQxD,KAAKU,OAAS+vB,EAAI/vB,QAE1BQ,EAAIlB,KAAK6kB,QACT1jB,EAAIsvB,EAGJ+N,EAA8B,EAAxBr9B,EAAE6uB,MAAM7uB,EAAET,OAAS,GAGf,KADd8C,EAAQ,GADMxD,KAAKmzB,WAAWqL,MAG5Br9B,EAAIA,EAAE08B,MAAMr6B,GACZtC,EAAEg8B,OAAO15B,GACTg7B,EAA8B,EAAxBr9B,EAAE6uB,MAAM7uB,EAAET,OAAS,IAI3B,IACImC,EADA9F,EAAImE,EAAER,OAASS,EAAET,OAGrB,GAAa,QAAT5C,EAAgB,EAClB+E,EAAI,IAAI+sB,EAAG,OACTlvB,OAAS3D,EAAI,EACf8F,EAAEmtB,MAAQ,IAAIlvB,MAAM+B,EAAEnC,QACtB,IAAK,IAAI/D,EAAI,EAAGA,EAAIkG,EAAEnC,OAAQ/D,IAC5BkG,EAAEmtB,MAAMrzB,GAAK,EAIjB,IAAI8hC,EAAOv9B,EAAE2jB,QAAQyZ,aAAan9B,EAAG,EAAGpE,GAClB,IAAlB0hC,EAAK1O,WACP7uB,EAAIu9B,EACA57B,IACFA,EAAEmtB,MAAMjzB,GAAK,IAIjB,IAAK,IAAIsF,EAAItF,EAAI,EAAGsF,GAAK,EAAGA,IAAK,CAC/B,IAAIq8B,EAAmC,UAAL,EAAxBx9B,EAAE8uB,MAAM7uB,EAAET,OAAS2B,KACE,EAA5BnB,EAAE8uB,MAAM7uB,EAAET,OAAS2B,EAAI,IAO1B,IAHAq8B,EAAKr+B,KAAKiK,IAAKo0B,EAAKF,EAAO,EAAG,UAE9Bt9B,EAAEo9B,aAAan9B,EAAGu9B,EAAIr8B,GACA,IAAfnB,EAAE6uB,UACP2O,IACAx9B,EAAE6uB,SAAW,EACb7uB,EAAEo9B,aAAan9B,EAAG,EAAGkB,GAChBnB,EAAE4F,WACL5F,EAAE6uB,UAAY,GAGdltB,IACFA,EAAEmtB,MAAM3tB,GAAKq8B,GAajB,OAVI77B,GACFA,EAAEmuB,QAEJ9vB,EAAE8vB,QAGW,QAATlzB,GAA4B,IAAV0F,GACpBtC,EAAE+xB,OAAOzvB,GAGJ,CACLm7B,IAAK97B,GAAK,KACVyB,IAAKpD,IAQT0uB,EAAGrxB,UAAU8H,OAAS,SAAiBoqB,EAAK3yB,EAAM8gC,GAGhD,OAFAvP,GAAQoB,EAAI3pB,UAER9G,KAAK8G,SACA,CACL63B,IAAK,IAAI/O,EAAG,GACZtrB,IAAK,IAAIsrB,EAAG,IAKM,IAAlB5vB,KAAK+vB,UAAmC,IAAjBU,EAAIV,UAC7BgD,EAAM/yB,KAAKuL,MAAMlF,OAAOoqB,EAAK3yB,GAEhB,QAATA,IACF6gC,EAAM5L,EAAI4L,IAAIpzB,OAGH,QAATzN,IACFwG,EAAMyuB,EAAIzuB,IAAIiH,MACVqzB,GAA6B,IAAjBt6B,EAAIyrB,UAClBzrB,EAAIwwB,KAAKrE,IAIN,CACLkO,IAAKA,EACLr6B,IAAKA,IAIa,IAAlBtE,KAAK+vB,UAAmC,IAAjBU,EAAIV,UAC7BgD,EAAM/yB,KAAKqG,OAAOoqB,EAAIllB,MAAOzN,GAEhB,QAATA,IACF6gC,EAAM5L,EAAI4L,IAAIpzB,OAGT,CACLozB,IAAKA,EACLr6B,IAAKyuB,EAAIzuB,MAI0B,IAAlCtE,KAAK+vB,SAAWU,EAAIV,WACvBgD,EAAM/yB,KAAKuL,MAAMlF,OAAOoqB,EAAIllB,MAAOzN,GAEtB,QAATA,IACFwG,EAAMyuB,EAAIzuB,IAAIiH,MACVqzB,GAA6B,IAAjBt6B,EAAIyrB,UAClBzrB,EAAIywB,KAAKtE,IAIN,CACLkO,IAAK5L,EAAI4L,IACTr6B,IAAKA,IAOLmsB,EAAI/vB,OAASV,KAAKU,QAAUV,KAAKwN,IAAIijB,GAAO,EACvC,CACLkO,IAAK,IAAI/O,EAAG,GACZtrB,IAAKtE,MAKU,IAAfywB,EAAI/vB,OACO,QAAT5C,EACK,CACL6gC,IAAK3+B,KAAK6+B,KAAKpO,EAAIT,MAAM,IACzB1rB,IAAK,MAII,QAATxG,EACK,CACL6gC,IAAK,KACLr6B,IAAK,IAAIsrB,EAAG5vB,KAAKuyB,KAAK9B,EAAIT,MAAM,MAI7B,CACL2O,IAAK3+B,KAAK6+B,KAAKpO,EAAIT,MAAM,IACzB1rB,IAAK,IAAIsrB,EAAG5vB,KAAKuyB,KAAK9B,EAAIT,MAAM,MAI7BhwB,KAAKu+B,SAAS9N,EAAK3yB,GAlF1B,IAAI6gC,EAAKr6B,EAAKyuB,GAsFhBnD,EAAGrxB,UAAUogC,IAAM,SAAclO,GAC/B,OAAOzwB,KAAKqG,OAAOoqB,EAAK,OAAO,GAAOkO,KAIxC/O,EAAGrxB,UAAU+F,IAAM,SAAcmsB,GAC/B,OAAOzwB,KAAKqG,OAAOoqB,EAAK,OAAO,GAAOnsB,KAGxCsrB,EAAGrxB,UAAUugC,KAAO,SAAerO,GACjC,OAAOzwB,KAAKqG,OAAOoqB,EAAK,OAAO,GAAMnsB,KAIvCsrB,EAAGrxB,UAAUwgC,SAAW,SAAmBtO,GACzC,IAAIuO,EAAKh/B,KAAKqG,OAAOoqB,GAGrB,GAAIuO,EAAG16B,IAAIwC,SAAU,OAAOk4B,EAAGL,IAE/B,IAAIr6B,EAA0B,IAApB06B,EAAGL,IAAI5O,SAAiBiP,EAAG16B,IAAIywB,KAAKtE,GAAOuO,EAAG16B,IAEpD26B,EAAOxO,EAAIsN,MAAM,GACjBmB,EAAKzO,EAAIuC,MAAM,GACfxlB,EAAMlJ,EAAIkJ,IAAIyxB,GAGlB,OAAIzxB,EAAM,GAAY,IAAP0xB,GAAoB,IAAR1xB,EAAkBwxB,EAAGL,IAGrB,IAApBK,EAAGL,IAAI5O,SAAiBiP,EAAGL,IAAIT,MAAM,GAAKc,EAAGL,IAAIjL,MAAM,IAGhE9D,EAAGrxB,UAAUg0B,KAAO,SAAe9B,GACjCpB,EAAOoB,GAAO,UAId,IAHA,IAAIhyB,GAAK,GAAK,IAAMgyB,EAEhB0O,EAAM,EACDxiC,EAAIqD,KAAKU,OAAS,EAAG/D,GAAK,EAAGA,IACpCwiC,GAAO1gC,EAAI0gC,GAAuB,EAAhBn/B,KAAKgwB,MAAMrzB,KAAW8zB,EAG1C,OAAO0O,GAITvP,EAAGrxB,UAAUi0B,MAAQ,SAAgB/B,GACnCpB,EAAOoB,GAAO,UAGd,IADA,IAAIlvB,EAAQ,EACH5E,EAAIqD,KAAKU,OAAS,EAAG/D,GAAK,EAAGA,IAAK,CACzC,IAAIm0B,GAAqB,EAAhB9wB,KAAKgwB,MAAMrzB,IAAkB,SAAR4E,EAC9BvB,KAAKgwB,MAAMrzB,GAAMm0B,EAAIL,EAAO,EAC5BlvB,EAAQuvB,EAAIL,EAGd,OAAOzwB,KAAKgxB,SAGdpB,EAAGrxB,UAAUsgC,KAAO,SAAepO,GACjC,OAAOzwB,KAAK6kB,QAAQ2N,MAAM/B,IAG5Bb,EAAGrxB,UAAU6gC,KAAO,SAAe3gC,GACjC4wB,EAAsB,IAAf5wB,EAAEsxB,UACTV,GAAQ5wB,EAAEqI,UAEV,IAAIjG,EAAIb,KACJ6F,EAAIpH,EAAEomB,QAGRhkB,EADiB,IAAfA,EAAEkvB,SACAlvB,EAAEi+B,KAAKrgC,GAEPoC,EAAEgkB,QAaR,IATA,IAAIwa,EAAI,IAAIzP,EAAG,GACX0P,EAAI,IAAI1P,EAAG,GAGX2P,EAAI,IAAI3P,EAAG,GACX4P,EAAI,IAAI5P,EAAG,GAEX6P,EAAI,EAED5+B,EAAE8D,UAAYkB,EAAElB,UACrB9D,EAAEoyB,OAAO,GACTptB,EAAEotB,OAAO,KACPwM,EAMJ,IAHA,IAAIC,EAAK75B,EAAEgf,QACP8a,EAAK9+B,EAAEgkB,SAEHhkB,EAAEiG,UAAU,CAClB,IAAK,IAAInK,EAAI,EAAGijC,EAAK,EAAyB,IAArB/+B,EAAEmvB,MAAM,GAAK4P,IAAajjC,EAAI,KAAMA,EAAGijC,IAAO,GACvE,GAAIjjC,EAAI,EAEN,IADAkE,EAAEoyB,OAAOt2B,GACFA,KAAM,IACP0iC,EAAEp4B,SAAWq4B,EAAEr4B,WACjBo4B,EAAEvK,KAAK4K,GACPJ,EAAEvK,KAAK4K,IAGTN,EAAEpM,OAAO,GACTqM,EAAErM,OAAO,GAIb,IAAK,IAAI5wB,EAAI,EAAGw9B,EAAK,EAAyB,IAArBh6B,EAAEmqB,MAAM,GAAK6P,IAAax9B,EAAI,KAAMA,EAAGw9B,IAAO,GACvE,GAAIx9B,EAAI,EAEN,IADAwD,EAAEotB,OAAO5wB,GACFA,KAAM,IACPk9B,EAAEt4B,SAAWu4B,EAAEv4B,WACjBs4B,EAAEzK,KAAK4K,GACPF,EAAEzK,KAAK4K,IAGTJ,EAAEtM,OAAO,GACTuM,EAAEvM,OAAO,GAITpyB,EAAE2M,IAAI3H,IAAM,GACdhF,EAAEk0B,KAAKlvB,GACPw5B,EAAEtK,KAAKwK,GACPD,EAAEvK,KAAKyK,KAEP35B,EAAEkvB,KAAKl0B,GACP0+B,EAAExK,KAAKsK,GACPG,EAAEzK,KAAKuK,IAIX,MAAO,CACLp+B,EAAGq+B,EACHp+B,EAAGq+B,EACHj1B,IAAK1E,EAAEq3B,OAAOuC,KAOlB7P,EAAGrxB,UAAUuhC,OAAS,SAAiBrhC,GACrC4wB,EAAsB,IAAf5wB,EAAEsxB,UACTV,GAAQ5wB,EAAEqI,UAEV,IAAI5F,EAAIlB,KACJmB,EAAI1C,EAAEomB,QAGR3jB,EADiB,IAAfA,EAAE6uB,SACA7uB,EAAE49B,KAAKrgC,GAEPyC,EAAE2jB,QAQR,IALA,IAuCIkO,EAvCAgN,EAAK,IAAInQ,EAAG,GACZoQ,EAAK,IAAIpQ,EAAG,GAEZqQ,EAAQ9+B,EAAE0jB,QAEP3jB,EAAEg/B,KAAK,GAAK,GAAK/+B,EAAE++B,KAAK,GAAK,GAAG,CACrC,IAAK,IAAIvjC,EAAI,EAAGijC,EAAK,EAAyB,IAArB1+B,EAAE8uB,MAAM,GAAK4P,IAAajjC,EAAI,KAAMA,EAAGijC,IAAO,GACvE,GAAIjjC,EAAI,EAEN,IADAuE,EAAE+xB,OAAOt2B,GACFA,KAAM,GACPojC,EAAG94B,SACL84B,EAAGjL,KAAKmL,GAGVF,EAAG9M,OAAO,GAId,IAAK,IAAI5wB,EAAI,EAAGw9B,EAAK,EAAyB,IAArB1+B,EAAE6uB,MAAM,GAAK6P,IAAax9B,EAAI,KAAMA,EAAGw9B,IAAO,GACvE,GAAIx9B,EAAI,EAEN,IADAlB,EAAE8xB,OAAO5wB,GACFA,KAAM,GACP29B,EAAG/4B,SACL+4B,EAAGlL,KAAKmL,GAGVD,EAAG/M,OAAO,GAIV/xB,EAAEsM,IAAIrM,IAAM,GACdD,EAAE6zB,KAAK5zB,GACP4+B,EAAGhL,KAAKiL,KAER7+B,EAAE4zB,KAAK7zB,GACP8+B,EAAGjL,KAAKgL,IAeZ,OATEhN,EADgB,IAAd7xB,EAAEg/B,KAAK,GACHH,EAEAC,GAGAE,KAAK,GAAK,GAChBnN,EAAI+B,KAAKr2B,GAGJs0B,GAGTnD,EAAGrxB,UAAUgM,IAAM,SAAckmB,GAC/B,GAAIzwB,KAAK8G,SAAU,OAAO2pB,EAAIptB,MAC9B,GAAIotB,EAAI3pB,SAAU,OAAO9G,KAAKqD,MAE9B,IAAInC,EAAIlB,KAAK6kB,QACT1jB,EAAIsvB,EAAI5L,QACZ3jB,EAAE6uB,SAAW,EACb5uB,EAAE4uB,SAAW,EAGb,IAAK,IAAIvsB,EAAQ,EAAGtC,EAAEyD,UAAYxD,EAAEwD,SAAUnB,IAC5CtC,EAAE+xB,OAAO,GACT9xB,EAAE8xB,OAAO,GAGX,OAAG,CACD,KAAO/xB,EAAEyD,UACPzD,EAAE+xB,OAAO,GAEX,KAAO9xB,EAAEwD,UACPxD,EAAE8xB,OAAO,GAGX,IAAIx1B,EAAIyD,EAAEsM,IAAIrM,GACd,GAAI1D,EAAI,EAAG,CAET,IAAII,EAAIqD,EACRA,EAAIC,EACJA,EAAItD,OACC,GAAU,IAANJ,GAAyB,IAAd0D,EAAE++B,KAAK,GAC3B,MAGFh/B,EAAE6zB,KAAK5zB,GAGT,OAAOA,EAAE+7B,OAAO15B,IAIlBosB,EAAGrxB,UAAU4hC,KAAO,SAAe1P,GACjC,OAAOzwB,KAAKo/B,KAAK3O,GAAKvvB,EAAE49B,KAAKrO,IAG/Bb,EAAGrxB,UAAUoG,OAAS,WACpB,OAA+B,IAAP,EAAhB3E,KAAKgwB,MAAM,KAGrBJ,EAAGrxB,UAAU0I,MAAQ,WACnB,OAA+B,IAAP,EAAhBjH,KAAKgwB,MAAM,KAIrBJ,EAAGrxB,UAAUy0B,MAAQ,SAAgBvC,GACnC,OAAOzwB,KAAKgwB,MAAM,GAAKS,GAIzBb,EAAGrxB,UAAU6hC,MAAQ,SAAgBxL,GACnCvF,EAAsB,iBAARuF,GACd,IAAIn3B,EAAIm3B,EAAM,GACVl2B,GAAKk2B,EAAMn3B,GAAK,GAChBoF,EAAI,GAAKpF,EAGb,GAAIuC,KAAKU,QAAUhC,EAGjB,OAFAsB,KAAKyxB,QAAQ/yB,EAAI,GACjBsB,KAAKgwB,MAAMtxB,IAAMmE,EACV7C,KAKT,IADA,IAAIuB,EAAQsB,EACHlG,EAAI+B,EAAa,IAAV6C,GAAe5E,EAAIqD,KAAKU,OAAQ/D,IAAK,CACnD,IAAIm0B,EAAoB,EAAhB9wB,KAAKgwB,MAAMrzB,GAEnB4E,GADAuvB,GAAKvvB,KACS,GACduvB,GAAK,SACL9wB,KAAKgwB,MAAMrzB,GAAKm0B,EAMlB,OAJc,IAAVvvB,IACFvB,KAAKgwB,MAAMrzB,GAAK4E,EAChBvB,KAAKU,UAEAV,MAGT4vB,EAAGrxB,UAAUuI,OAAS,WACpB,OAAuB,IAAhB9G,KAAKU,QAAkC,IAAlBV,KAAKgwB,MAAM,IAGzCJ,EAAGrxB,UAAU2hC,KAAO,SAAezP,GACjC,IAOIsC,EAPAhD,EAAWU,EAAM,EAErB,GAAsB,IAAlBzwB,KAAK+vB,WAAmBA,EAAU,OAAQ,EAC9C,GAAsB,IAAlB/vB,KAAK+vB,UAAkBA,EAAU,OAAO,EAK5C,GAHA/vB,KAAKgxB,QAGDhxB,KAAKU,OAAS,EAChBqyB,EAAM,MACD,CACDhD,IACFU,GAAOA,GAGTpB,EAAOoB,GAAO,SAAW,qBAEzB,IAAIK,EAAoB,EAAhB9wB,KAAKgwB,MAAM,GACnB+C,EAAMjC,IAAML,EAAM,EAAIK,EAAIL,GAAO,EAAI,EAEvC,OAAsB,IAAlBzwB,KAAK+vB,SAA8B,GAANgD,EAC1BA,GAOTnD,EAAGrxB,UAAUiP,IAAM,SAAcijB,GAC/B,GAAsB,IAAlBzwB,KAAK+vB,UAAmC,IAAjBU,EAAIV,SAAgB,OAAQ,EACvD,GAAsB,IAAlB/vB,KAAK+vB,UAAmC,IAAjBU,EAAIV,SAAgB,OAAO,EAEtD,IAAIgD,EAAM/yB,KAAKqgC,KAAK5P,GACpB,OAAsB,IAAlBzwB,KAAK+vB,SAA8B,GAANgD,EAC1BA,GAITnD,EAAGrxB,UAAU8hC,KAAO,SAAe5P,GAEjC,GAAIzwB,KAAKU,OAAS+vB,EAAI/vB,OAAQ,OAAO,EACrC,GAAIV,KAAKU,OAAS+vB,EAAI/vB,OAAQ,OAAQ,EAGtC,IADA,IAAIqyB,EAAM,EACDp2B,EAAIqD,KAAKU,OAAS,EAAG/D,GAAK,EAAGA,IAAK,CACzC,IAAIuE,EAAoB,EAAhBlB,KAAKgwB,MAAMrzB,GACfwE,EAAmB,EAAfsvB,EAAIT,MAAMrzB,GAElB,GAAIuE,IAAMC,EAAV,CACID,EAAIC,EACN4xB,GAAO,EACE7xB,EAAIC,IACb4xB,EAAM,GAER,OAEF,OAAOA,GAGTnD,EAAGrxB,UAAU+hC,IAAM,SAAc7P,GAC/B,OAA0B,IAAnBzwB,KAAKkgC,KAAKzP,IAGnBb,EAAGrxB,UAAUkJ,GAAK,SAAagpB,GAC7B,OAAyB,IAAlBzwB,KAAKwN,IAAIijB,IAGlBb,EAAGrxB,UAAUgiC,KAAO,SAAe9P,GACjC,OAAOzwB,KAAKkgC,KAAKzP,IAAQ,GAG3Bb,EAAGrxB,UAAUiiC,IAAM,SAAc/P,GAC/B,OAAOzwB,KAAKwN,IAAIijB,IAAQ,GAG1Bb,EAAGrxB,UAAUkiC,IAAM,SAAchQ,GAC/B,OAA2B,IAApBzwB,KAAKkgC,KAAKzP,IAGnBb,EAAGrxB,UAAUmJ,GAAK,SAAa+oB,GAC7B,OAA0B,IAAnBzwB,KAAKwN,IAAIijB,IAGlBb,EAAGrxB,UAAUmiC,KAAO,SAAejQ,GACjC,OAAOzwB,KAAKkgC,KAAKzP,IAAQ,GAG3Bb,EAAGrxB,UAAUoiC,IAAM,SAAclQ,GAC/B,OAAOzwB,KAAKwN,IAAIijB,IAAQ,GAG1Bb,EAAGrxB,UAAUqiC,IAAM,SAAcnQ,GAC/B,OAA0B,IAAnBzwB,KAAKkgC,KAAKzP,IAGnBb,EAAGrxB,UAAU8I,GAAK,SAAaopB,GAC7B,OAAyB,IAAlBzwB,KAAKwN,IAAIijB,IAOlBb,EAAGK,IAAM,SAAcQ,GACrB,OAAO,IAAIoQ,EAAIpQ,IAGjBb,EAAGrxB,UAAUuiC,MAAQ,SAAgBC,GAGnC,OAFA1R,GAAQrvB,KAAKiwB,IAAK,yCAClBZ,EAAyB,IAAlBrvB,KAAK+vB,SAAgB,iCACrBgR,EAAIC,UAAUhhC,MAAMihC,UAAUF,IAGvCnR,EAAGrxB,UAAU2iC,QAAU,WAErB,OADA7R,EAAOrvB,KAAKiwB,IAAK,wDACVjwB,KAAKiwB,IAAIkR,YAAYnhC,OAG9B4vB,EAAGrxB,UAAU0iC,UAAY,SAAoBF,GAE3C,OADA/gC,KAAKiwB,IAAM8Q,EACJ/gC,MAGT4vB,EAAGrxB,UAAU6iC,SAAW,SAAmBL,GAEzC,OADA1R,GAAQrvB,KAAKiwB,IAAK,yCACXjwB,KAAKihC,UAAUF,IAGxBnR,EAAGrxB,UAAU8iC,OAAS,SAAiB5Q,GAErC,OADApB,EAAOrvB,KAAKiwB,IAAK,sCACVjwB,KAAKiwB,IAAIhvB,IAAIjB,KAAMywB,IAG5Bb,EAAGrxB,UAAU+iC,QAAU,SAAkB7Q,GAEvC,OADApB,EAAOrvB,KAAKiwB,IAAK,uCACVjwB,KAAKiwB,IAAI6E,KAAK90B,KAAMywB,IAG7Bb,EAAGrxB,UAAUgjC,OAAS,SAAiB9Q,GAErC,OADApB,EAAOrvB,KAAKiwB,IAAK,sCACVjwB,KAAKiwB,IAAI+E,IAAIh1B,KAAMywB,IAG5Bb,EAAGrxB,UAAUijC,QAAU,SAAkB/Q,GAEvC,OADApB,EAAOrvB,KAAKiwB,IAAK,uCACVjwB,KAAKiwB,IAAI8E,KAAK/0B,KAAMywB,IAG7Bb,EAAGrxB,UAAUkjC,OAAS,SAAiBhR,GAErC,OADApB,EAAOrvB,KAAKiwB,IAAK,sCACVjwB,KAAKiwB,IAAIyR,IAAI1hC,KAAMywB,IAG5Bb,EAAGrxB,UAAUojC,OAAS,SAAiBlR,GAGrC,OAFApB,EAAOrvB,KAAKiwB,IAAK,sCACjBjwB,KAAKiwB,IAAI2R,SAAS5hC,KAAMywB,GACjBzwB,KAAKiwB,IAAIO,IAAIxwB,KAAMywB,IAG5Bb,EAAGrxB,UAAUsjC,QAAU,SAAkBpR,GAGvC,OAFApB,EAAOrvB,KAAKiwB,IAAK,sCACjBjwB,KAAKiwB,IAAI2R,SAAS5hC,KAAMywB,GACjBzwB,KAAKiwB,IAAI8I,KAAK/4B,KAAMywB,IAG7Bb,EAAGrxB,UAAUujC,OAAS,WAGpB,OAFAzS,EAAOrvB,KAAKiwB,IAAK,sCACjBjwB,KAAKiwB,IAAI8R,SAAS/hC,MACXA,KAAKiwB,IAAI8M,IAAI/8B,OAGtB4vB,EAAGrxB,UAAUyjC,QAAU,WAGrB,OAFA3S,EAAOrvB,KAAKiwB,IAAK,uCACjBjwB,KAAKiwB,IAAI8R,SAAS/hC,MACXA,KAAKiwB,IAAI+M,KAAKh9B,OAIvB4vB,EAAGrxB,UAAU0jC,QAAU,WAGrB,OAFA5S,EAAOrvB,KAAKiwB,IAAK,uCACjBjwB,KAAKiwB,IAAI8R,SAAS/hC,MACXA,KAAKiwB,IAAIiS,KAAKliC,OAGvB4vB,EAAGrxB,UAAU4jC,QAAU,WAGrB,OAFA9S,EAAOrvB,KAAKiwB,IAAK,uCACjBjwB,KAAKiwB,IAAI8R,SAAS/hC,MACXA,KAAKiwB,IAAIkQ,KAAKngC,OAIvB4vB,EAAGrxB,UAAU6jC,OAAS,WAGpB,OAFA/S,EAAOrvB,KAAKiwB,IAAK,sCACjBjwB,KAAKiwB,IAAI8R,SAAS/hC,MACXA,KAAKiwB,IAAI1kB,IAAIvL,OAGtB4vB,EAAGrxB,UAAU8jC,OAAS,SAAiB5R,GAGrC,OAFApB,EAAOrvB,KAAKiwB,MAAQQ,EAAIR,IAAK,qBAC7BjwB,KAAKiwB,IAAI8R,SAAS/hC,MACXA,KAAKiwB,IAAI1pB,IAAIvG,KAAMywB,IAI5B,IAAI6R,EAAS,CACXC,KAAM,KACNC,KAAM,KACNC,KAAM,KACNC,OAAQ,MAIV,SAASC,EAAQzlC,EAAMuB,GAErBuB,KAAK9C,KAAOA,EACZ8C,KAAKvB,EAAI,IAAImxB,EAAGnxB,EAAG,IACnBuB,KAAK5B,EAAI4B,KAAKvB,EAAEyJ,YAChBlI,KAAKiyB,EAAI,IAAIrC,EAAG,GAAGsN,OAAOl9B,KAAK5B,GAAG22B,KAAK/0B,KAAKvB,GAE5CuB,KAAKyK,IAAMzK,KAAK4iC,OA2ClB,SAASC,IACPF,EAAO7lC,KACLkD,KACA,OACA,2EA+DJ,SAAS8iC,IACPH,EAAO7lC,KACLkD,KACA,OACA,kEAIJ,SAAS+iC,IACPJ,EAAO7lC,KACLkD,KACA,OACA,yDAIJ,SAASgjC,IAEPL,EAAO7lC,KACLkD,KACA,QACA,uEA8CJ,SAAS6gC,EAAK9jC,GACZ,GAAiB,iBAANA,EAAgB,CACzB,IAAIkmC,EAAQrT,EAAGsT,OAAOnmC,GACtBiD,KAAKjD,EAAIkmC,EAAMxkC,EACfuB,KAAKijC,MAAQA,OAEb5T,EAAOtyB,EAAEujC,IAAI,GAAI,kCACjBtgC,KAAKjD,EAAIA,EACTiD,KAAKijC,MAAQ,KAkOjB,SAASE,EAAMpmC,GACb8jC,EAAI/jC,KAAKkD,KAAMjD,GAEfiD,KAAKwD,MAAQxD,KAAKjD,EAAEmL,YAChBlI,KAAKwD,MAAQ,IAAO,IACtBxD,KAAKwD,OAAS,GAAMxD,KAAKwD,MAAQ,IAGnCxD,KAAKvC,EAAI,IAAImyB,EAAG,GAAGsN,OAAOl9B,KAAKwD,OAC/BxD,KAAKk/B,GAAKl/B,KAAKojC,KAAKpjC,KAAKvC,EAAEs/B,OAC3B/8B,KAAKqjC,KAAOrjC,KAAKvC,EAAEqiC,OAAO9/B,KAAKjD,GAE/BiD,KAAKsjC,KAAOtjC,KAAKqjC,KAAK7S,IAAIxwB,KAAKvC,GAAGygC,MAAM,GAAGS,IAAI3+B,KAAKjD,GACpDiD,KAAKsjC,KAAOtjC,KAAKsjC,KAAKxE,KAAK9+B,KAAKvC,GAChCuC,KAAKsjC,KAAOtjC,KAAKvC,EAAEu3B,IAAIh1B,KAAKsjC,MAta9BX,EAAOpkC,UAAUqkC,KAAO,WACtB,IAAIn4B,EAAM,IAAImlB,EAAG,MAEjB,OADAnlB,EAAIulB,MAAQ,IAAIlvB,MAAMT,KAAKW,KAAKhB,KAAK5B,EAAI,KAClCqM,GAGTk4B,EAAOpkC,UAAUglC,QAAU,SAAkB9S,GAG3C,IACI+S,EADA/lC,EAAIgzB,EAGR,GACEzwB,KAAKgM,MAAMvO,EAAGuC,KAAKyK,KAGnB+4B,GADA/lC,GADAA,EAAIuC,KAAKyjC,MAAMhmC,IACTq3B,KAAK90B,KAAKyK,MACPvC,kBACFs7B,EAAOxjC,KAAK5B,GAErB,IAAIoP,EAAMg2B,EAAOxjC,KAAK5B,GAAK,EAAIX,EAAE4iC,KAAKrgC,KAAKvB,GAU3C,OATY,IAAR+O,GACF/P,EAAEuyB,MAAM,GAAK,EACbvyB,EAAEiD,OAAS,GACF8M,EAAM,EACf/P,EAAEs3B,KAAK/0B,KAAKvB,GAEZhB,EAAEuzB,QAGGvzB,GAGTklC,EAAOpkC,UAAUyN,MAAQ,SAAgB+O,EAAOtP,GAC9CsP,EAAMkY,OAAOjzB,KAAK5B,EAAG,EAAGqN,IAG1Bk3B,EAAOpkC,UAAUklC,MAAQ,SAAgBhT,GACvC,OAAOA,EAAIsI,KAAK/4B,KAAKiyB,IASvB1C,EAASsT,EAAMF,GAEfE,EAAKtkC,UAAUyN,MAAQ,SAAgB+O,EAAOE,GAK5C,IAHA,IAEI0oB,EAAStjC,KAAKiK,IAAIyQ,EAAMra,OAAQ,GAC3B/D,EAAI,EAAGA,EAAIgnC,EAAQhnC,IAC1Bse,EAAO+U,MAAMrzB,GAAKoe,EAAMiV,MAAMrzB,GAIhC,GAFAse,EAAOva,OAASijC,EAEZ5oB,EAAMra,QAAU,EAGlB,OAFAqa,EAAMiV,MAAM,GAAK,OACjBjV,EAAMra,OAAS,GAKjB,IAAIsE,EAAO+V,EAAMiV,MAAM,GAGvB,IAFA/U,EAAO+U,MAAM/U,EAAOva,UAhBT,QAgBqBsE,EAE3BrI,EAAI,GAAIA,EAAIoe,EAAMra,OAAQ/D,IAAK,CAClC,IAAIuI,EAAwB,EAAjB6V,EAAMiV,MAAMrzB,GACvBoe,EAAMiV,MAAMrzB,EAAI,KApBP,QAoBeuI,IAAgB,EAAMF,IAAS,GACvDA,EAAOE,EAETF,KAAU,GACV+V,EAAMiV,MAAMrzB,EAAI,IAAMqI,EACT,IAATA,GAAc+V,EAAMra,OAAS,GAC/Bqa,EAAMra,QAAU,GAEhBqa,EAAMra,QAAU,GAIpBmiC,EAAKtkC,UAAUklC,MAAQ,SAAgBhT,GAErCA,EAAIT,MAAMS,EAAI/vB,QAAU,EACxB+vB,EAAIT,MAAMS,EAAI/vB,OAAS,GAAK,EAC5B+vB,EAAI/vB,QAAU,EAId,IADA,IAAIsxB,EAAK,EACAr1B,EAAI,EAAGA,EAAI8zB,EAAI/vB,OAAQ/D,IAAK,CACnC,IAAIm0B,EAAmB,EAAfL,EAAIT,MAAMrzB,GAClBq1B,GAAU,IAAJlB,EACNL,EAAIT,MAAMrzB,GAAU,SAALq1B,EACfA,EAAS,GAAJlB,GAAakB,EAAK,SAAa,GAUtC,OANkC,IAA9BvB,EAAIT,MAAMS,EAAI/vB,OAAS,KACzB+vB,EAAI/vB,SAC8B,IAA9B+vB,EAAIT,MAAMS,EAAI/vB,OAAS,IACzB+vB,EAAI/vB,UAGD+vB,GASTlB,EAASuT,EAAMH,GAQfpT,EAASwT,EAAMJ,GASfpT,EAASyT,EAAQL,GAEjBK,EAAOzkC,UAAUklC,MAAQ,SAAgBhT,GAGvC,IADA,IAAIlvB,EAAQ,EACH5E,EAAI,EAAGA,EAAI8zB,EAAI/vB,OAAQ/D,IAAK,CACnC,IAAI02B,EAA0B,IAAL,EAAf5C,EAAIT,MAAMrzB,IAAiB4E,EACjCywB,EAAU,SAALqB,EACTA,KAAQ,GAER5C,EAAIT,MAAMrzB,GAAKq1B,EACfzwB,EAAQ8xB,EAKV,OAHc,IAAV9xB,IACFkvB,EAAIT,MAAMS,EAAI/vB,UAAYa,GAErBkvB,GAITb,EAAGsT,OAAS,SAAgBhmC,GAE1B,GAAIolC,EAAOplC,GAAO,OAAOolC,EAAOplC,GAEhC,IAAI+lC,EACJ,GAAa,SAAT/lC,EACF+lC,EAAQ,IAAIJ,OACP,GAAa,SAAT3lC,EACT+lC,EAAQ,IAAIH,OACP,GAAa,SAAT5lC,EACT+lC,EAAQ,IAAIF,MACP,IAAa,WAAT7lC,EAGT,MAAM,IAAIiG,MAAM,iBAAmBjG,GAFnC+lC,EAAQ,IAAID,EAMd,OAFAV,EAAOplC,GAAQ+lC,EAERA,GAkBTpC,EAAItiC,UAAUwjC,SAAW,SAAmB7gC,GAC1CmuB,EAAsB,IAAfnuB,EAAE6uB,SAAgB,iCACzBV,EAAOnuB,EAAE+uB,IAAK,oCAGhB4Q,EAAItiC,UAAUqjC,SAAW,SAAmB1gC,EAAGC,GAC7CkuB,EAAqC,IAA7BnuB,EAAE6uB,SAAW5uB,EAAE4uB,UAAiB,iCACxCV,EAAOnuB,EAAE+uB,KAAO/uB,EAAE+uB,MAAQ9uB,EAAE8uB,IAC1B,oCAGJ4Q,EAAItiC,UAAU6kC,KAAO,SAAeliC,GAClC,OAAIlB,KAAKijC,MAAcjjC,KAAKijC,MAAMM,QAAQriC,GAAG+/B,UAAUjhC,MAChDkB,EAAE49B,KAAK9+B,KAAKjD,GAAGkkC,UAAUjhC,OAGlC6gC,EAAItiC,UAAUgN,IAAM,SAAcrK,GAChC,OAAIA,EAAE4F,SACG5F,EAAE2jB,QAGJ7kB,KAAKjD,EAAEi4B,IAAI9zB,GAAG+/B,UAAUjhC,OAGjC6gC,EAAItiC,UAAU0C,IAAM,SAAcC,EAAGC,GACnCnB,KAAK4hC,SAAS1gC,EAAGC,GAEjB,IAAI4xB,EAAM7xB,EAAED,IAAIE,GAIhB,OAHI4xB,EAAIvlB,IAAIxN,KAAKjD,IAAM,GACrBg2B,EAAIgC,KAAK/0B,KAAKjD,GAETg2B,EAAIkO,UAAUjhC,OAGvB6gC,EAAItiC,UAAUu2B,KAAO,SAAe5zB,EAAGC,GACrCnB,KAAK4hC,SAAS1gC,EAAGC,GAEjB,IAAI4xB,EAAM7xB,EAAE4zB,KAAK3zB,GAIjB,OAHI4xB,EAAIvlB,IAAIxN,KAAKjD,IAAM,GACrBg2B,EAAIgC,KAAK/0B,KAAKjD,GAETg2B,GAGT8N,EAAItiC,UAAUy2B,IAAM,SAAc9zB,EAAGC,GACnCnB,KAAK4hC,SAAS1gC,EAAGC,GAEjB,IAAI4xB,EAAM7xB,EAAE8zB,IAAI7zB,GAIhB,OAHI4xB,EAAImN,KAAK,GAAK,GAChBnN,EAAI+B,KAAK90B,KAAKjD,GAETg2B,EAAIkO,UAAUjhC,OAGvB6gC,EAAItiC,UAAUw2B,KAAO,SAAe7zB,EAAGC,GACrCnB,KAAK4hC,SAAS1gC,EAAGC,GAEjB,IAAI4xB,EAAM7xB,EAAE6zB,KAAK5zB,GAIjB,OAHI4xB,EAAImN,KAAK,GAAK,GAChBnN,EAAI+B,KAAK90B,KAAKjD,GAETg2B,GAGT8N,EAAItiC,UAAUmjC,IAAM,SAAcxgC,EAAGuvB,GAEnC,OADAzwB,KAAK+hC,SAAS7gC,GACPlB,KAAKojC,KAAKliC,EAAE28B,MAAMpN,KAG3BoQ,EAAItiC,UAAUw6B,KAAO,SAAe73B,EAAGC,GAErC,OADAnB,KAAK4hC,SAAS1gC,EAAGC,GACVnB,KAAKojC,KAAKliC,EAAE63B,KAAK53B,KAG1B0/B,EAAItiC,UAAUiyB,IAAM,SAActvB,EAAGC,GAEnC,OADAnB,KAAK4hC,SAAS1gC,EAAGC,GACVnB,KAAKojC,KAAKliC,EAAEsvB,IAAIrvB,KAGzB0/B,EAAItiC,UAAUy+B,KAAO,SAAe97B,GAClC,OAAOlB,KAAK+4B,KAAK73B,EAAGA,EAAE2jB,UAGxBgc,EAAItiC,UAAUw+B,IAAM,SAAc77B,GAChC,OAAOlB,KAAKwwB,IAAItvB,EAAGA,IAGrB2/B,EAAItiC,UAAU2jC,KAAO,SAAehhC,GAClC,GAAIA,EAAE4F,SAAU,OAAO5F,EAAE2jB,QAEzB,IAAI+e,EAAO5jC,KAAKjD,EAAEi2B,MAAM,GAIxB,GAHA3D,EAAOuU,EAAO,GAAM,GAGP,IAATA,EAAY,CACd,IAAIr9B,EAAMvG,KAAKjD,EAAEkE,IAAI,IAAI2uB,EAAG,IAAIqD,OAAO,GACvC,OAAOjzB,KAAKuG,IAAIrF,EAAGqF,GAQrB,IAFA,IAAI1D,EAAI7C,KAAKjD,EAAEqhC,KAAK,GAChB1/B,EAAI,GACAmE,EAAEiE,UAA2B,IAAfjE,EAAEmwB,MAAM,IAC5Bt0B,IACAmE,EAAEowB,OAAO,GAEX5D,GAAQxsB,EAAEiE,UAEV,IAAIgC,EAAM,IAAI8mB,EAAG,GAAGkR,MAAM9gC,MACtB6jC,EAAO/6B,EAAIs5B,SAIX0B,EAAO9jC,KAAKjD,EAAEqhC,KAAK,GAAGnL,OAAO,GAC7B8Q,EAAI/jC,KAAKjD,EAAEmL,YAGf,IAFA67B,EAAI,IAAInU,EAAG,EAAImU,EAAIA,GAAGjD,MAAM9gC,MAEW,IAAhCA,KAAKuG,IAAIw9B,EAAGD,GAAMt2B,IAAIq2B,IAC3BE,EAAEzC,QAAQuC,GAOZ,IAJA,IAAI7mC,EAAIgD,KAAKuG,IAAIw9B,EAAGlhC,GAChBpF,EAAIuC,KAAKuG,IAAIrF,EAAG2B,EAAEs7B,KAAK,GAAGlL,OAAO,IACjCp1B,EAAImC,KAAKuG,IAAIrF,EAAG2B,GAChB9F,EAAI2B,EACc,IAAfb,EAAE2P,IAAI1E,IAAY,CAEvB,IADA,IAAI2B,EAAM5M,EACDlB,EAAI,EAAoB,IAAjB8N,EAAI+C,IAAI1E,GAAYnM,IAClC8N,EAAMA,EAAIq3B,SAEZzS,EAAO1yB,EAAII,GACX,IAAIoE,EAAInB,KAAKuG,IAAIvJ,EAAG,IAAI4yB,EAAG,GAAGsN,OAAOngC,EAAIJ,EAAI,IAE7Cc,EAAIA,EAAEkkC,OAAOxgC,GACbnE,EAAImE,EAAE2gC,SACNjkC,EAAIA,EAAE8jC,OAAO3kC,GACbD,EAAIJ,EAGN,OAAOc,GAGTojC,EAAItiC,UAAU4hC,KAAO,SAAej/B,GAClC,IAAI8iC,EAAM9iC,EAAE4+B,OAAO9/B,KAAKjD,GACxB,OAAqB,IAAjBinC,EAAIjU,UACNiU,EAAIjU,SAAW,EACR/vB,KAAKojC,KAAKY,GAAK5B,UAEfpiC,KAAKojC,KAAKY,IAIrBnD,EAAItiC,UAAUgI,IAAM,SAAcrF,EAAGuvB,GACnC,GAAIA,EAAI3pB,SAAU,OAAO,IAAI8oB,EAAG,GAChC,GAAoB,IAAhBa,EAAIyP,KAAK,GAAU,OAAOh/B,EAAE2jB,QAEhC,IACIof,EAAM,IAAInjC,MAAM,IACpBmjC,EAAI,GAAK,IAAIrU,EAAG,GAAGkR,MAAM9gC,MACzBikC,EAAI,GAAK/iC,EACT,IAAK,IAAIvE,EAAI,EAAGA,EAAIsnC,EAAIvjC,OAAQ/D,IAC9BsnC,EAAItnC,GAAKqD,KAAKwwB,IAAIyT,EAAItnC,EAAI,GAAIuE,GAGhC,IAAI6xB,EAAMkR,EAAI,GACVC,EAAU,EACVC,EAAa,EACbn5B,EAAQylB,EAAIvoB,YAAc,GAK9B,IAJc,IAAV8C,IACFA,EAAQ,IAGLrO,EAAI8zB,EAAI/vB,OAAS,EAAG/D,GAAK,EAAGA,IAAK,CAEpC,IADA,IAAIy0B,EAAOX,EAAIT,MAAMrzB,GACZ0F,EAAI2I,EAAQ,EAAG3I,GAAK,EAAGA,IAAK,CACnC,IAAIuyB,EAAOxD,GAAQ/uB,EAAK,EACpB0wB,IAAQkR,EAAI,KACdlR,EAAM/yB,KAAK+8B,IAAIhK,IAGL,IAAR6B,GAAyB,IAAZsP,GAKjBA,IAAY,EACZA,GAAWtP,GA9BE,MA+BbuP,GACwC,IAANxnC,GAAiB,IAAN0F,KAE7C0wB,EAAM/yB,KAAKwwB,IAAIuC,EAAKkR,EAAIC,IACxBC,EAAa,EACbD,EAAU,IAXRC,EAAa,EAajBn5B,EAAQ,GAGV,OAAO+nB,GAGT8N,EAAItiC,UAAUyiC,UAAY,SAAoBvQ,GAC5C,IAAIhzB,EAAIgzB,EAAIqO,KAAK9+B,KAAKjD,GAEtB,OAAOU,IAAMgzB,EAAMhzB,EAAEonB,QAAUpnB,GAGjCojC,EAAItiC,UAAU4iC,YAAc,SAAsB1Q,GAChD,IAAIsC,EAAMtC,EAAI5L,QAEd,OADAkO,EAAI9C,IAAM,KACH8C,GAOTnD,EAAGwU,KAAO,SAAe3T,GACvB,OAAO,IAAI0S,EAAK1S,IAmBlBlB,EAAS4T,EAAMtC,GAEfsC,EAAK5kC,UAAUyiC,UAAY,SAAoBvQ,GAC7C,OAAOzwB,KAAKojC,KAAK3S,EAAIoN,MAAM79B,KAAKwD,SAGlC2/B,EAAK5kC,UAAU4iC,YAAc,SAAsB1Q,GACjD,IAAIhzB,EAAIuC,KAAKojC,KAAK3S,EAAID,IAAIxwB,KAAKqjC,OAE/B,OADA5lC,EAAEwyB,IAAM,KACDxyB,GAGT0lC,EAAK5kC,UAAUw6B,KAAO,SAAe73B,EAAGC,GACtC,GAAID,EAAE4F,UAAY3F,EAAE2F,SAGlB,OAFA5F,EAAE8uB,MAAM,GAAK,EACb9uB,EAAER,OAAS,EACJQ,EAGT,IAAIrD,EAAIqD,EAAE63B,KAAK53B,GACXnE,EAAIa,EAAEogC,MAAMj+B,KAAKwD,OAAOgtB,IAAIxwB,KAAKsjC,MAAMtF,OAAOh+B,KAAKwD,OAAOgtB,IAAIxwB,KAAKjD,GACnEsnC,EAAIxmC,EAAEk3B,KAAK/3B,GAAGi2B,OAAOjzB,KAAKwD,OAC1BuvB,EAAMsR,EAQV,OANIA,EAAE72B,IAAIxN,KAAKjD,IAAM,EACnBg2B,EAAMsR,EAAEtP,KAAK/0B,KAAKjD,GACTsnC,EAAEnE,KAAK,GAAK,IACrBnN,EAAMsR,EAAEvP,KAAK90B,KAAKjD,IAGbg2B,EAAIkO,UAAUjhC,OAGvBmjC,EAAK5kC,UAAUiyB,IAAM,SAActvB,EAAGC,GACpC,GAAID,EAAE4F,UAAY3F,EAAE2F,SAAU,OAAO,IAAI8oB,EAAG,GAAGqR,UAAUjhC,MAEzD,IAAInC,EAAIqD,EAAEsvB,IAAIrvB,GACVnE,EAAIa,EAAEogC,MAAMj+B,KAAKwD,OAAOgtB,IAAIxwB,KAAKsjC,MAAMtF,OAAOh+B,KAAKwD,OAAOgtB,IAAIxwB,KAAKjD,GACnEsnC,EAAIxmC,EAAEk3B,KAAK/3B,GAAGi2B,OAAOjzB,KAAKwD,OAC1BuvB,EAAMsR,EAOV,OANIA,EAAE72B,IAAIxN,KAAKjD,IAAM,EACnBg2B,EAAMsR,EAAEtP,KAAK/0B,KAAKjD,GACTsnC,EAAEnE,KAAK,GAAK,IACrBnN,EAAMsR,EAAEvP,KAAK90B,KAAKjD,IAGbg2B,EAAIkO,UAAUjhC,OAGvBmjC,EAAK5kC,UAAU4hC,KAAO,SAAej/B,GAGnC,OADUlB,KAAKojC,KAAKliC,EAAE4+B,OAAO9/B,KAAKjD,GAAGyzB,IAAIxwB,KAAKk/B,KACnC+B,UAAUjhC,OAh2GzB,CAk2GoCtD,EAAQsD,Q,qCCl2G5C,2BACE,aAGA,SAASqvB,EAAQnkB,EAAKokB,GACpB,IAAKpkB,EAAK,MAAM,IAAI/H,MAAMmsB,GAAO,oBAKnC,SAASC,EAAUC,EAAMC,GACvBD,EAAKE,OAASD,EACd,IAAIE,EAAW,aACfA,EAASpxB,UAAYkxB,EAAUlxB,UAC/BixB,EAAKjxB,UAAY,IAAIoxB,EACrBH,EAAKjxB,UAAU+Z,YAAckX,EAK/B,SAASI,EAAIjQ,EAAQne,EAAMquB,GACzB,GAAID,EAAGE,KAAKnQ,GACV,OAAOA,EAGT3f,KAAK+vB,SAAW,EAChB/vB,KAAKgwB,MAAQ,KACbhwB,KAAKU,OAAS,EAGdV,KAAKiwB,IAAM,KAEI,OAAXtQ,IACW,OAATne,GAA0B,OAATA,IACnBquB,EAASruB,EACTA,EAAO,IAGTxB,KAAKkwB,MAAMvQ,GAAU,EAAGne,GAAQ,GAAIquB,GAAU,OAYlD,IAAInd,EATkB,iBAAXhW,EACTA,EAAOD,QAAUmzB,EAEjBnzB,EAAQmzB,GAAKA,EAGfA,EAAGA,GAAKA,EACRA,EAAGO,SAAW,GAGd,IACEzd,EAAS,EAAQ,IAAeA,OAChC,MAAOhI,IAoIT,SAASiqC,EAAUroC,EAAKtB,EAAOulB,GAG7B,IAFA,IAAI9yB,EAAI,EACJ8oB,EAAMlmB,KAAKiK,IAAIgC,EAAI5L,OAAQ6vB,GACtB5zB,EAAIqO,EAAOrO,EAAI4pB,EAAK5pB,IAAK,CAChC,IAAIK,EAAIsP,EAAI6O,WAAWxe,GAAK,GAE5Bc,IAAM,EAIJA,GADET,GAAK,IAAMA,GAAK,GACbA,EAAI,GAAK,GAGLA,GAAK,IAAMA,GAAK,GACpBA,EAAI,GAAK,GAIL,GAAJA,EAGT,OAAOS,EAiCT,SAASmC,EAAW0M,EAAKtB,EAAOulB,EAAKC,GAGnC,IAFA,IAAI/yB,EAAI,EACJ8oB,EAAMlmB,KAAKiK,IAAIgC,EAAI5L,OAAQ6vB,GACtB5zB,EAAIqO,EAAOrO,EAAI4pB,EAAK5pB,IAAK,CAChC,IAAIK,EAAIsP,EAAI6O,WAAWxe,GAAK,GAE5Bc,GAAK+yB,EAIH/yB,GADET,GAAK,GACFA,EAAI,GAAK,GAGLA,GAAK,GACTA,EAAI,GAAK,GAITA,EAGT,OAAOS,EA5MTmyB,EAAGE,KAAO,SAAeW,GACvB,OAAIA,aAAeb,GAIJ,OAARa,GAA+B,iBAARA,GAC5BA,EAAInY,YAAY6X,WAAaP,EAAGO,UAAYrvB,MAAMwN,QAAQmiB,EAAIT,QAGlEJ,EAAG9pB,IAAM,SAAc4F,EAAMyZ,GAC3B,OAAIzZ,EAAK8B,IAAI2X,GAAS,EAAUzZ,EACzByZ,GAGTyK,EAAGtlB,IAAM,SAAcoB,EAAMyZ,GAC3B,OAAIzZ,EAAK8B,IAAI2X,GAAS,EAAUzZ,EACzByZ,GAGTyK,EAAGrxB,UAAU2xB,MAAQ,SAAevQ,EAAQne,EAAMquB,GAChD,GAAsB,iBAAXlQ,EACT,OAAO3f,KAAK0wB,YAAY/Q,EAAQne,EAAMquB,GAGxC,GAAsB,iBAAXlQ,EACT,OAAO3f,KAAK2wB,WAAWhR,EAAQne,EAAMquB,GAG1B,QAATruB,IACFA,EAAO,IAET6tB,EAAO7tB,KAAiB,EAAPA,IAAaA,GAAQ,GAAKA,GAAQ,IAGnD,IAAIwJ,EAAQ,EACM,OAFlB2U,EAASA,EAAOnZ,WAAWiM,QAAQ,OAAQ,KAEhC,IACTzH,IAGW,KAATxJ,EACFxB,KAAK4wB,UAAUjR,EAAQ3U,GAEvBhL,KAAK6wB,WAAWlR,EAAQne,EAAMwJ,GAGd,MAAd2U,EAAO,KACT3f,KAAK+vB,SAAW,GAGlB/vB,KAAKgxB,QAEU,OAAXnB,GAEJ7vB,KAAK2wB,WAAW3wB,KAAKqM,UAAW7K,EAAMquB,IAGxCD,EAAGrxB,UAAUmyB,YAAc,SAAsB/Q,EAAQne,EAAMquB,GACzDlQ,EAAS,IACX3f,KAAK+vB,SAAW,EAChBpQ,GAAUA,GAERA,EAAS,UACX3f,KAAKgwB,MAAQ,CAAW,SAATrQ,GACf3f,KAAKU,OAAS,GACLif,EAAS,kBAClB3f,KAAKgwB,MAAQ,CACF,SAATrQ,EACCA,EAAS,SAAa,UAEzB3f,KAAKU,OAAS,IAEd2uB,EAAO1P,EAAS,kBAChB3f,KAAKgwB,MAAQ,CACF,SAATrQ,EACCA,EAAS,SAAa,SACvB,GAEF3f,KAAKU,OAAS,GAGD,OAAXmvB,GAGJ7vB,KAAK2wB,WAAW3wB,KAAKqM,UAAW7K,EAAMquB,IAGxCD,EAAGrxB,UAAUoyB,WAAa,SAAqBhR,EAAQne,EAAMquB,GAG3D,GADAR,EAAgC,iBAAlB1P,EAAOjf,QACjBif,EAAOjf,QAAU,EAGnB,OAFAV,KAAKgwB,MAAQ,CAAE,GACfhwB,KAAKU,OAAS,EACPV,KAGTA,KAAKU,OAASL,KAAKW,KAAK2e,EAAOjf,OAAS,GACxCV,KAAKgwB,MAAQ,IAAIlvB,MAAMd,KAAKU,QAC5B,IAAK,IAAI/D,EAAI,EAAGA,EAAIqD,KAAKU,OAAQ/D,IAC/BqD,KAAKgwB,MAAMrzB,GAAK,EAGlB,IAAI0F,EAAGyuB,EACHC,EAAM,EACV,GAAe,OAAXlB,EACF,IAAKlzB,EAAIgjB,EAAOjf,OAAS,EAAG2B,EAAI,EAAG1F,GAAK,EAAGA,GAAK,EAC9Cm0B,EAAInR,EAAOhjB,GAAMgjB,EAAOhjB,EAAI,IAAM,EAAMgjB,EAAOhjB,EAAI,IAAM,GACzDqD,KAAKgwB,MAAM3tB,IAAOyuB,GAAKC,EAAO,SAC9B/wB,KAAKgwB,MAAM3tB,EAAI,GAAMyuB,IAAO,GAAKC,EAAQ,UACzCA,GAAO,KACI,KACTA,GAAO,GACP1uB,UAGC,GAAe,OAAXwtB,EACT,IAAKlzB,EAAI,EAAG0F,EAAI,EAAG1F,EAAIgjB,EAAOjf,OAAQ/D,GAAK,EACzCm0B,EAAInR,EAAOhjB,GAAMgjB,EAAOhjB,EAAI,IAAM,EAAMgjB,EAAOhjB,EAAI,IAAM,GACzDqD,KAAKgwB,MAAM3tB,IAAOyuB,GAAKC,EAAO,SAC9B/wB,KAAKgwB,MAAM3tB,EAAI,GAAMyuB,IAAO,GAAKC,EAAQ,UACzCA,GAAO,KACI,KACTA,GAAO,GACP1uB,KAIN,OAAOrC,KAAKgxB,SA2BdpB,EAAGrxB,UAAUqyB,UAAY,SAAoBjR,EAAQ3U,GAEnDhL,KAAKU,OAASL,KAAKW,MAAM2e,EAAOjf,OAASsK,GAAS,GAClDhL,KAAKgwB,MAAQ,IAAIlvB,MAAMd,KAAKU,QAC5B,IAAK,IAAI/D,EAAI,EAAGA,EAAIqD,KAAKU,OAAQ/D,IAC/BqD,KAAKgwB,MAAMrzB,GAAK,EAGlB,IAAI0F,EAAGyuB,EAEHC,EAAM,EACV,IAAKp0B,EAAIgjB,EAAOjf,OAAS,EAAG2B,EAAI,EAAG1F,GAAKqO,EAAOrO,GAAK,EAClDm0B,EAAI6jB,EAASh1B,EAAQhjB,EAAGA,EAAI,GAC5BqD,KAAKgwB,MAAM3tB,IAAOyuB,GAAKC,EAAO,SAE9B/wB,KAAKgwB,MAAM3tB,EAAI,IAAMyuB,IAAO,GAAKC,EAAO,SACxCA,GAAO,KACI,KACTA,GAAO,GACP1uB,KAGA1F,EAAI,IAAMqO,IACZ8lB,EAAI6jB,EAASh1B,EAAQ3U,EAAOrO,EAAI,GAChCqD,KAAKgwB,MAAM3tB,IAAOyuB,GAAKC,EAAO,SAC9B/wB,KAAKgwB,MAAM3tB,EAAI,IAAMyuB,IAAO,GAAKC,EAAO,SAE1C/wB,KAAKgxB,SA2BPpB,EAAGrxB,UAAUsyB,WAAa,SAAqBlR,EAAQne,EAAMwJ,GAE3DhL,KAAKgwB,MAAQ,CAAE,GACfhwB,KAAKU,OAAS,EAGd,IAAK,IAAIuwB,EAAU,EAAGC,EAAU,EAAGA,GAAW,SAAWA,GAAW1vB,EAClEyvB,IAEFA,IACAC,EAAWA,EAAU1vB,EAAQ,EAO7B,IALA,IAAI2vB,EAAQxR,EAAOjf,OAASsK,EACxB1G,EAAM6sB,EAAQF,EACdV,EAAMlwB,KAAKiK,IAAI6mB,EAAOA,EAAQ7sB,GAAO0G,EAErComB,EAAO,EACFz0B,EAAIqO,EAAOrO,EAAI4zB,EAAK5zB,GAAKs0B,EAChCG,EAAOxxB,EAAU+f,EAAQhjB,EAAGA,EAAIs0B,EAASzvB,GAEzCxB,KAAKqxB,MAAMH,GACPlxB,KAAKgwB,MAAM,GAAKoB,EAAO,SACzBpxB,KAAKgwB,MAAM,IAAMoB,EAEjBpxB,KAAKsxB,OAAOF,GAIhB,GAAY,IAAR9sB,EAAW,CACb,IAAIiC,EAAM,EAGV,IAFA6qB,EAAOxxB,EAAU+f,EAAQhjB,EAAGgjB,EAAOjf,OAAQc,GAEtC7E,EAAI,EAAGA,EAAI2H,EAAK3H,IACnB4J,GAAO/E,EAGTxB,KAAKqxB,MAAM9qB,GACPvG,KAAKgwB,MAAM,GAAKoB,EAAO,SACzBpxB,KAAKgwB,MAAM,IAAMoB,EAEjBpxB,KAAKsxB,OAAOF,KAKlBxB,EAAGrxB,UAAUgzB,KAAO,SAAeC,GACjCA,EAAKxB,MAAQ,IAAIlvB,MAAMd,KAAKU,QAC5B,IAAK,IAAI/D,EAAI,EAAGA,EAAIqD,KAAKU,OAAQ/D,IAC/B60B,EAAKxB,MAAMrzB,GAAKqD,KAAKgwB,MAAMrzB,GAE7B60B,EAAK9wB,OAASV,KAAKU,OACnB8wB,EAAKzB,SAAW/vB,KAAK+vB,SACrByB,EAAKvB,IAAMjwB,KAAKiwB,KAGlBL,EAAGrxB,UAAUsmB,MAAQ,WACnB,IAAIpnB,EAAI,IAAImyB,EAAG,MAEf,OADA5vB,KAAKuxB,KAAK9zB,GACHA,GAGTmyB,EAAGrxB,UAAUkzB,QAAU,SAAkBjgB,GACvC,KAAOxR,KAAKU,OAAS8Q,GACnBxR,KAAKgwB,MAAMhwB,KAAKU,UAAY,EAE9B,OAAOV,MAIT4vB,EAAGrxB,UAAUyyB,MAAQ,WACnB,KAAOhxB,KAAKU,OAAS,GAAqC,IAAhCV,KAAKgwB,MAAMhwB,KAAKU,OAAS,IACjDV,KAAKU,SAEP,OAAOV,KAAK0xB,aAGd9B,EAAGrxB,UAAUmzB,UAAY,WAKvB,OAHoB,IAAhB1xB,KAAKU,QAAkC,IAAlBV,KAAKgwB,MAAM,KAClChwB,KAAK+vB,SAAW,GAEX/vB,MAGT4vB,EAAGrxB,UAAUozB,QAAU,WACrB,OAAQ3xB,KAAKiwB,IAAM,UAAY,SAAWjwB,KAAKwG,SAAS,IAAM,KAiChE,IAAIorB,EAAQ,CACV,GACA,IACA,KACA,MACA,OACA,QACA,SACA,UACA,WACA,YACA,aACA,cACA,eACA,gBACA,iBACA,kBACA,mBACA,oBACA,qBACA,sBACA,uBACA,wBACA,yBACA,0BACA,2BACA,6BAGEC,EAAa,CACf,EAAG,EACH,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EACvB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAGhBC,EAAa,CACf,EAAG,EACH,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAC5D,SAAU,IAAU,SAAU,SAAU,SAAU,QAAS,SAC3D,SAAU,SAAU,SAAU,SAAU,KAAU,QAAS,QAC3D,QAAS,QAAS,QAAS,SAAU,SAAU,SAAU,SACzD,MAAU,SAAU,SAAU,SAAU,SAAU,SAAU,UAsjB9D,SAASC,EAAY7uB,EAAMutB,EAAKhlB,GAC9BA,EAAIskB,SAAWU,EAAIV,SAAW7sB,EAAK6sB,SACnC,IAAIxJ,EAAOrjB,EAAKxC,OAAS+vB,EAAI/vB,OAAU,EACvC+K,EAAI/K,OAAS6lB,EACbA,EAAOA,EAAM,EAAK,EAGlB,IAAIrlB,EAAoB,EAAhBgC,EAAK8sB,MAAM,GACf7uB,EAAmB,EAAfsvB,EAAIT,MAAM,GACdvyB,EAAIyD,EAAIC,EAER6wB,EAAS,SAAJv0B,EACL8D,EAAS9D,EAAI,SAAa,EAC9BgO,EAAIukB,MAAM,GAAKgC,EAEf,IAAK,IAAIC,EAAI,EAAGA,EAAI1L,EAAK0L,IAAK,CAM5B,IAHA,IAAIC,EAAS3wB,IAAU,GACnB4wB,EAAgB,SAAR5wB,EACR6wB,EAAO/xB,KAAKiK,IAAI2nB,EAAGxB,EAAI/vB,OAAS,GAC3B2B,EAAIhC,KAAKyF,IAAI,EAAGmsB,EAAI/uB,EAAKxC,OAAS,GAAI2B,GAAK+vB,EAAM/vB,IAAK,CAC7D,IAAI1F,EAAKs1B,EAAI5vB,EAAK,EAIlB6vB,IADAz0B,GAFAyD,EAAoB,EAAhBgC,EAAK8sB,MAAMrzB,KACfwE,EAAmB,EAAfsvB,EAAIT,MAAM3tB,IACF8vB,GACG,SAAa,EAC5BA,EAAY,SAAJ10B,EAEVgO,EAAIukB,MAAMiC,GAAa,EAARE,EACf5wB,EAAiB,EAAT2wB,EAQV,OANc,IAAV3wB,EACFkK,EAAIukB,MAAMiC,GAAa,EAAR1wB,EAEfkK,EAAI/K,SAGC+K,EAAIulB,QAzlBbpB,EAAGrxB,UAAUiI,SAAW,SAAmBhF,EAAMwZ,GAI/C,IAAIvP,EACJ,GAHAuP,EAAoB,EAAVA,GAAe,EAGZ,MAJbxZ,EAAOA,GAAQ,KAIa,QAATA,EAAgB,CACjCiK,EAAM,GAGN,IAFA,IAAIslB,EAAM,EACNxvB,EAAQ,EACH5E,EAAI,EAAGA,EAAIqD,KAAKU,OAAQ/D,IAAK,CACpC,IAAIm0B,EAAI9wB,KAAKgwB,MAAMrzB,GACfy0B,GAA+B,UAArBN,GAAKC,EAAOxvB,IAAmBiF,SAAS,IAGpDiF,EADY,KADdlK,EAASuvB,IAAO,GAAKC,EAAQ,WACVp0B,IAAMqD,KAAKU,OAAS,EAC/BkxB,EAAM,EAAIR,EAAK1wB,QAAU0wB,EAAO3lB,EAEhC2lB,EAAO3lB,GAEfslB,GAAO,IACI,KACTA,GAAO,GACPp0B,KAMJ,IAHc,IAAV4E,IACFkK,EAAMlK,EAAMiF,SAAS,IAAMiF,GAEtBA,EAAI/K,OAASsa,GAAY,GAC9BvP,EAAM,IAAMA,EAKd,OAHsB,IAAlBzL,KAAK+vB,WACPtkB,EAAM,IAAMA,GAEPA,EAGT,GAAIjK,KAAiB,EAAPA,IAAaA,GAAQ,GAAKA,GAAQ,GAAI,CAElD,IAAI6wB,EAAYR,EAAWrwB,GAEvB8wB,EAAYR,EAAWtwB,GAC3BiK,EAAM,GACN,IAAIzO,EAAIgD,KAAK6kB,QAEb,IADA7nB,EAAE+yB,SAAW,GACL/yB,EAAE8J,UAAU,CAClB,IAAIrJ,EAAIT,EAAEu1B,KAAKD,GAAW9rB,SAAShF,GAMjCiK,GALFzO,EAAIA,EAAEw1B,MAAMF,IAELxrB,SAGCrJ,EAAIgO,EAFJmmB,EAAMS,EAAY50B,EAAEiD,QAAUjD,EAAIgO,EAQ5C,IAHIzL,KAAK8G,WACP2E,EAAM,IAAMA,GAEPA,EAAI/K,OAASsa,GAAY,GAC9BvP,EAAM,IAAMA,EAKd,OAHsB,IAAlBzL,KAAK+vB,WACPtkB,EAAM,IAAMA,GAEPA,EAGT4jB,GAAO,EAAO,oCAGhBO,EAAGrxB,UAAU0hB,SAAW,WACtB,IAAIwS,EAAMzyB,KAAKgwB,MAAM,GASrB,OARoB,IAAhBhwB,KAAKU,OACP+xB,GAAuB,SAAhBzyB,KAAKgwB,MAAM,GACO,IAAhBhwB,KAAKU,QAAkC,IAAlBV,KAAKgwB,MAAM,GAEzCyC,GAAO,iBAAoC,SAAhBzyB,KAAKgwB,MAAM,GAC7BhwB,KAAKU,OAAS,GACvB2uB,GAAO,EAAO,8CAEU,IAAlBrvB,KAAK+vB,UAAmB0C,EAAMA,GAGxC7C,EAAGrxB,UAAUgO,OAAS,WACpB,OAAOvM,KAAKwG,SAAS,KAGvBopB,EAAGrxB,UAAUm0B,SAAW,SAAmB7C,EAAQnvB,GAEjD,OADA2uB,OAAyB,IAAX3c,GACP1S,KAAK2yB,YAAYjgB,EAAQmd,EAAQnvB,IAG1CkvB,EAAGrxB,UAAU8N,QAAU,SAAkBwjB,EAAQnvB,GAC/C,OAAOV,KAAK2yB,YAAY7xB,MAAO+uB,EAAQnvB,IAGzCkvB,EAAGrxB,UAAUo0B,YAAc,SAAsBC,EAAW/C,EAAQnvB,GAClE,IAAIuW,EAAajX,KAAKiX,aAClB4b,EAAYnyB,GAAUL,KAAKyF,IAAI,EAAGmR,GACtCoY,EAAOpY,GAAc4b,EAAW,yCAChCxD,EAAOwD,EAAY,EAAG,+BAEtB7yB,KAAKgxB,QACL,IAGI7vB,EAAGxE,EAHHm2B,EAA0B,OAAXjD,EACfkD,EAAM,IAAIH,EAAUC,GAGpBhwB,EAAI7C,KAAK6kB,QACb,GAAKiO,EAYE,CACL,IAAKn2B,EAAI,GAAIkG,EAAEiE,SAAUnK,IACvBwE,EAAI0B,EAAEmwB,MAAM,KACZnwB,EAAEowB,OAAO,GAETF,EAAIp2B,GAAKwE,EAGX,KAAOxE,EAAIk2B,EAAWl2B,IACpBo2B,EAAIp2B,GAAK,MArBM,CAEjB,IAAKA,EAAI,EAAGA,EAAIk2B,EAAY5b,EAAYta,IACtCo2B,EAAIp2B,GAAK,EAGX,IAAKA,EAAI,GAAIkG,EAAEiE,SAAUnK,IACvBwE,EAAI0B,EAAEmwB,MAAM,KACZnwB,EAAEowB,OAAO,GAETF,EAAIF,EAAYl2B,EAAI,GAAKwE,EAe7B,OAAO4xB,GAGL1yB,KAAK6yB,MACPtD,EAAGrxB,UAAU40B,WAAa,SAAqBrC,GAC7C,OAAO,GAAKzwB,KAAK6yB,MAAMpC,IAGzBlB,EAAGrxB,UAAU40B,WAAa,SAAqBrC,GAC7C,IAAIjzB,EAAIizB,EACJrzB,EAAI,EAiBR,OAhBII,GAAK,OACPJ,GAAK,GACLI,KAAO,IAELA,GAAK,KACPJ,GAAK,EACLI,KAAO,GAELA,GAAK,IACPJ,GAAK,EACLI,KAAO,GAELA,GAAK,IACPJ,GAAK,EACLI,KAAO,GAEFJ,EAAII,GAIf+xB,EAAGrxB,UAAU60B,UAAY,SAAoBtC,GAE3C,GAAU,IAANA,EAAS,OAAO,GAEpB,IAAIjzB,EAAIizB,EACJrzB,EAAI,EAoBR,OAnBqB,IAAZ,KAAJI,KACHJ,GAAK,GACLI,KAAO,IAEU,IAAV,IAAJA,KACHJ,GAAK,EACLI,KAAO,GAES,IAAT,GAAJA,KACHJ,GAAK,EACLI,KAAO,GAES,IAAT,EAAJA,KACHJ,GAAK,EACLI,KAAO,GAES,IAAT,EAAJA,IACHJ,IAEKA,GAITmyB,EAAGrxB,UAAU2J,UAAY,WACvB,IAAI4oB,EAAI9wB,KAAKgwB,MAAMhwB,KAAKU,OAAS,GAC7B2yB,EAAKrzB,KAAKmzB,WAAWrC,GACzB,OAA2B,IAAnB9wB,KAAKU,OAAS,GAAU2yB,GAiBlCzD,EAAGrxB,UAAU+0B,SAAW,WACtB,GAAItzB,KAAK8G,SAAU,OAAO,EAG1B,IADA,IAAIrJ,EAAI,EACCd,EAAI,EAAGA,EAAIqD,KAAKU,OAAQ/D,IAAK,CACpC,IAAIwE,EAAInB,KAAKozB,UAAUpzB,KAAKgwB,MAAMrzB,IAElC,GADAc,GAAK0D,EACK,KAANA,EAAU,MAEhB,OAAO1D,GAGTmyB,EAAGrxB,UAAU0Y,WAAa,WACxB,OAAO5W,KAAKW,KAAKhB,KAAKkI,YAAc,IAGtC0nB,EAAGrxB,UAAUg1B,OAAS,SAAiBC,GACrC,OAAsB,IAAlBxzB,KAAK+vB,SACA/vB,KAAKqD,MAAMowB,MAAMD,GAAOE,MAAM,GAEhC1zB,KAAK6kB,SAGd+K,EAAGrxB,UAAUo1B,SAAW,SAAmBH,GACzC,OAAIxzB,KAAK4zB,MAAMJ,EAAQ,GACdxzB,KAAK6zB,KAAKL,GAAOE,MAAM,GAAGI,OAE5B9zB,KAAK6kB,SAGd+K,EAAGrxB,UAAUw1B,MAAQ,WACnB,OAAyB,IAAlB/zB,KAAK+vB,UAIdH,EAAGrxB,UAAUgN,IAAM,WACjB,OAAOvL,KAAK6kB,QAAQiP,QAGtBlE,EAAGrxB,UAAUu1B,KAAO,WAKlB,OAJK9zB,KAAK8G,WACR9G,KAAK+vB,UAAY,GAGZ/vB,MAIT4vB,EAAGrxB,UAAUy1B,KAAO,SAAevD,GACjC,KAAOzwB,KAAKU,OAAS+vB,EAAI/vB,QACvBV,KAAKgwB,MAAMhwB,KAAKU,UAAY,EAG9B,IAAK,IAAI/D,EAAI,EAAGA,EAAI8zB,EAAI/vB,OAAQ/D,IAC9BqD,KAAKgwB,MAAMrzB,GAAKqD,KAAKgwB,MAAMrzB,GAAK8zB,EAAIT,MAAMrzB,GAG5C,OAAOqD,KAAKgxB,SAGdpB,EAAGrxB,UAAU01B,IAAM,SAAcxD,GAE/B,OADApB,EAA0C,IAAlCrvB,KAAK+vB,SAAWU,EAAIV,WACrB/vB,KAAKg0B,KAAKvD,IAInBb,EAAGrxB,UAAU4L,GAAK,SAAasmB,GAC7B,OAAIzwB,KAAKU,OAAS+vB,EAAI/vB,OAAeV,KAAK6kB,QAAQoP,IAAIxD,GAC/CA,EAAI5L,QAAQoP,IAAIj0B,OAGzB4vB,EAAGrxB,UAAU21B,IAAM,SAAczD,GAC/B,OAAIzwB,KAAKU,OAAS+vB,EAAI/vB,OAAeV,KAAK6kB,QAAQmP,KAAKvD,GAChDA,EAAI5L,QAAQmP,KAAKh0B,OAI1B4vB,EAAGrxB,UAAU41B,MAAQ,SAAgB1D,GAEnC,IAAItvB,EAEFA,EADEnB,KAAKU,OAAS+vB,EAAI/vB,OAChB+vB,EAEAzwB,KAGN,IAAK,IAAIrD,EAAI,EAAGA,EAAIwE,EAAET,OAAQ/D,IAC5BqD,KAAKgwB,MAAMrzB,GAAKqD,KAAKgwB,MAAMrzB,GAAK8zB,EAAIT,MAAMrzB,GAK5C,OAFAqD,KAAKU,OAASS,EAAET,OAETV,KAAKgxB,SAGdpB,EAAGrxB,UAAU61B,KAAO,SAAe3D,GAEjC,OADApB,EAA0C,IAAlCrvB,KAAK+vB,SAAWU,EAAIV,WACrB/vB,KAAKm0B,MAAM1D,IAIpBb,EAAGrxB,UAAU2L,IAAM,SAAcumB,GAC/B,OAAIzwB,KAAKU,OAAS+vB,EAAI/vB,OAAeV,KAAK6kB,QAAQuP,KAAK3D,GAChDA,EAAI5L,QAAQuP,KAAKp0B,OAG1B4vB,EAAGrxB,UAAU81B,KAAO,SAAe5D,GACjC,OAAIzwB,KAAKU,OAAS+vB,EAAI/vB,OAAeV,KAAK6kB,QAAQsP,MAAM1D,GACjDA,EAAI5L,QAAQsP,MAAMn0B,OAI3B4vB,EAAGrxB,UAAU+1B,MAAQ,SAAgB7D,GAEnC,IAAIvvB,EACAC,EACAnB,KAAKU,OAAS+vB,EAAI/vB,QACpBQ,EAAIlB,KACJmB,EAAIsvB,IAEJvvB,EAAIuvB,EACJtvB,EAAInB,MAGN,IAAK,IAAIrD,EAAI,EAAGA,EAAIwE,EAAET,OAAQ/D,IAC5BqD,KAAKgwB,MAAMrzB,GAAKuE,EAAE8uB,MAAMrzB,GAAKwE,EAAE6uB,MAAMrzB,GAGvC,GAAIqD,OAASkB,EACX,KAAOvE,EAAIuE,EAAER,OAAQ/D,IACnBqD,KAAKgwB,MAAMrzB,GAAKuE,EAAE8uB,MAAMrzB,GAM5B,OAFAqD,KAAKU,OAASQ,EAAER,OAETV,KAAKgxB,SAGdpB,EAAGrxB,UAAUg2B,KAAO,SAAe9D,GAEjC,OADApB,EAA0C,IAAlCrvB,KAAK+vB,SAAWU,EAAIV,WACrB/vB,KAAKs0B,MAAM7D,IAIpBb,EAAGrxB,UAAU6L,IAAM,SAAcqmB,GAC/B,OAAIzwB,KAAKU,OAAS+vB,EAAI/vB,OAAeV,KAAK6kB,QAAQ0P,KAAK9D,GAChDA,EAAI5L,QAAQ0P,KAAKv0B,OAG1B4vB,EAAGrxB,UAAUi2B,KAAO,SAAe/D,GACjC,OAAIzwB,KAAKU,OAAS+vB,EAAI/vB,OAAeV,KAAK6kB,QAAQyP,MAAM7D,GACjDA,EAAI5L,QAAQyP,MAAMt0B,OAI3B4vB,EAAGrxB,UAAUk1B,MAAQ,SAAgBD,GACnCnE,EAAwB,iBAAVmE,GAAsBA,GAAS,GAE7C,IAAIiB,EAAsC,EAAxBp0B,KAAKW,KAAKwyB,EAAQ,IAChCkB,EAAWlB,EAAQ,GAGvBxzB,KAAKyxB,QAAQgD,GAETC,EAAW,GACbD,IAIF,IAAK,IAAI93B,EAAI,EAAGA,EAAI83B,EAAa93B,IAC/BqD,KAAKgwB,MAAMrzB,GAAsB,UAAhBqD,KAAKgwB,MAAMrzB,GAS9B,OALI+3B,EAAW,IACb10B,KAAKgwB,MAAMrzB,IAAMqD,KAAKgwB,MAAMrzB,GAAM,UAAc,GAAK+3B,GAIhD10B,KAAKgxB,SAGdpB,EAAGrxB,UAAUs1B,KAAO,SAAeL,GACjC,OAAOxzB,KAAK6kB,QAAQ4O,MAAMD,IAI5B5D,EAAGrxB,UAAUo2B,KAAO,SAAeC,EAAK1pB,GACtCmkB,EAAsB,iBAARuF,GAAoBA,GAAO,GAEzC,IAAI7D,EAAO6D,EAAM,GAAM,EACnBC,EAAOD,EAAM,GAUjB,OARA50B,KAAKyxB,QAAQV,EAAM,GAGjB/wB,KAAKgwB,MAAMe,GADT7lB,EACgBlL,KAAKgwB,MAAMe,GAAQ,GAAK8D,EAExB70B,KAAKgwB,MAAMe,KAAS,GAAK8D,GAGtC70B,KAAKgxB,SAIdpB,EAAGrxB,UAAUu2B,KAAO,SAAerE,GACjC,IAAIhzB,EAkBAyD,EAAGC,EAfP,GAAsB,IAAlBnB,KAAK+vB,UAAmC,IAAjBU,EAAIV,SAI7B,OAHA/vB,KAAK+vB,SAAW,EAChBtyB,EAAIuC,KAAK+0B,KAAKtE,GACdzwB,KAAK+vB,UAAY,EACV/vB,KAAK0xB,YAGP,GAAsB,IAAlB1xB,KAAK+vB,UAAmC,IAAjBU,EAAIV,SAIpC,OAHAU,EAAIV,SAAW,EACftyB,EAAIuC,KAAK+0B,KAAKtE,GACdA,EAAIV,SAAW,EACRtyB,EAAEi0B,YAKP1xB,KAAKU,OAAS+vB,EAAI/vB,QACpBQ,EAAIlB,KACJmB,EAAIsvB,IAEJvvB,EAAIuvB,EACJtvB,EAAInB,MAIN,IADA,IAAIuB,EAAQ,EACH5E,EAAI,EAAGA,EAAIwE,EAAET,OAAQ/D,IAC5Bc,GAAkB,EAAbyD,EAAE8uB,MAAMrzB,KAAwB,EAAbwE,EAAE6uB,MAAMrzB,IAAU4E,EAC1CvB,KAAKgwB,MAAMrzB,GAAS,SAAJc,EAChB8D,EAAQ9D,IAAM,GAEhB,KAAiB,IAAV8D,GAAe5E,EAAIuE,EAAER,OAAQ/D,IAClCc,GAAkB,EAAbyD,EAAE8uB,MAAMrzB,IAAU4E,EACvBvB,KAAKgwB,MAAMrzB,GAAS,SAAJc,EAChB8D,EAAQ9D,IAAM,GAIhB,GADAuC,KAAKU,OAASQ,EAAER,OACF,IAAVa,EACFvB,KAAKgwB,MAAMhwB,KAAKU,QAAUa,EAC1BvB,KAAKU,cAEA,GAAIQ,IAAMlB,KACf,KAAOrD,EAAIuE,EAAER,OAAQ/D,IACnBqD,KAAKgwB,MAAMrzB,GAAKuE,EAAE8uB,MAAMrzB,GAI5B,OAAOqD,MAIT4vB,EAAGrxB,UAAU0C,IAAM,SAAcwvB,GAC/B,IAAIsC,EACJ,OAAqB,IAAjBtC,EAAIV,UAAoC,IAAlB/vB,KAAK+vB,UAC7BU,EAAIV,SAAW,EACfgD,EAAM/yB,KAAKg1B,IAAIvE,GACfA,EAAIV,UAAY,EACTgD,GACmB,IAAjBtC,EAAIV,UAAoC,IAAlB/vB,KAAK+vB,UACpC/vB,KAAK+vB,SAAW,EAChBgD,EAAMtC,EAAIuE,IAAIh1B,MACdA,KAAK+vB,SAAW,EACTgD,GAGL/yB,KAAKU,OAAS+vB,EAAI/vB,OAAeV,KAAK6kB,QAAQiQ,KAAKrE,GAEhDA,EAAI5L,QAAQiQ,KAAK90B,OAI1B4vB,EAAGrxB,UAAUw2B,KAAO,SAAetE,GAEjC,GAAqB,IAAjBA,EAAIV,SAAgB,CACtBU,EAAIV,SAAW,EACf,IAAItyB,EAAIuC,KAAK80B,KAAKrE,GAElB,OADAA,EAAIV,SAAW,EACRtyB,EAAEi0B,YAGJ,GAAsB,IAAlB1xB,KAAK+vB,SAId,OAHA/vB,KAAK+vB,SAAW,EAChB/vB,KAAK80B,KAAKrE,GACVzwB,KAAK+vB,SAAW,EACT/vB,KAAK0xB,YAId,IAWIxwB,EAAGC,EAXHqM,EAAMxN,KAAKwN,IAAIijB,GAGnB,GAAY,IAARjjB,EAIF,OAHAxN,KAAK+vB,SAAW,EAChB/vB,KAAKU,OAAS,EACdV,KAAKgwB,MAAM,GAAK,EACThwB,KAKLwN,EAAM,GACRtM,EAAIlB,KACJmB,EAAIsvB,IAEJvvB,EAAIuvB,EACJtvB,EAAInB,MAIN,IADA,IAAIuB,EAAQ,EACH5E,EAAI,EAAGA,EAAIwE,EAAET,OAAQ/D,IAE5B4E,GADA9D,GAAkB,EAAbyD,EAAE8uB,MAAMrzB,KAAwB,EAAbwE,EAAE6uB,MAAMrzB,IAAU4E,IAC7B,GACbvB,KAAKgwB,MAAMrzB,GAAS,SAAJc,EAElB,KAAiB,IAAV8D,GAAe5E,EAAIuE,EAAER,OAAQ/D,IAElC4E,GADA9D,GAAkB,EAAbyD,EAAE8uB,MAAMrzB,IAAU4E,IACV,GACbvB,KAAKgwB,MAAMrzB,GAAS,SAAJc,EAIlB,GAAc,IAAV8D,GAAe5E,EAAIuE,EAAER,QAAUQ,IAAMlB,KACvC,KAAOrD,EAAIuE,EAAER,OAAQ/D,IACnBqD,KAAKgwB,MAAMrzB,GAAKuE,EAAE8uB,MAAMrzB,GAU5B,OANAqD,KAAKU,OAASL,KAAKyF,IAAI9F,KAAKU,OAAQ/D,GAEhCuE,IAAMlB,OACRA,KAAK+vB,SAAW,GAGX/vB,KAAKgxB,SAIdpB,EAAGrxB,UAAUy2B,IAAM,SAAcvE,GAC/B,OAAOzwB,KAAK6kB,QAAQkQ,KAAKtE,IA+C3B,IAAIwE,EAAc,SAAsB/xB,EAAMutB,EAAKhlB,GACjD,IAIIumB,EACAxK,EACA6L,EANAnyB,EAAIgC,EAAK8sB,MACT7uB,EAAIsvB,EAAIT,MACR5yB,EAAIqO,EAAIukB,MACRhzB,EAAI,EAIJk4B,EAAY,EAAPh0B,EAAE,GACPi0B,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPn0B,EAAE,GACPo0B,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPt0B,EAAE,GACPu0B,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPz0B,EAAE,GACP00B,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP50B,EAAE,GACP60B,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP/0B,EAAE,GACPg1B,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPl1B,EAAE,GACPm1B,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPr1B,EAAE,GACPs1B,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPx1B,EAAE,GACPy1B,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP31B,EAAE,GACP41B,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP71B,EAAE,GACP81B,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPh2B,EAAE,GACPi2B,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPn2B,EAAE,GACPo2B,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPt2B,EAAE,GACPu2B,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPz2B,EAAE,GACP02B,EAAW,KAALD,EACNE,GAAMF,IAAO,GACbG,GAAY,EAAP52B,EAAE,GACP62B,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbG,GAAY,EAAP/2B,EAAE,GACPg3B,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbG,GAAY,EAAPl3B,EAAE,GACPm3B,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbG,GAAY,EAAPr3B,EAAE,GACPs3B,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbG,GAAY,EAAPx3B,EAAE,GACPy3B,GAAW,KAALD,GACNE,GAAMF,KAAO,GAEjBltB,EAAIskB,SAAW7sB,EAAK6sB,SAAWU,EAAIV,SACnCtkB,EAAI/K,OAAS,GAMb,IAAIo4B,IAAQ97B,GAJZg1B,EAAK3xB,KAAK04B,KAAK5D,EAAK8B,IAIE,KAAa,MAFnCzP,GADAA,EAAMnnB,KAAK04B,KAAK5D,EAAK+B,IACR72B,KAAK04B,KAAK3D,EAAK6B,GAAQ,KAEU,IAAO,EACrDj6B,IAFAq2B,EAAKhzB,KAAK04B,KAAK3D,EAAK8B,KAEP1P,IAAQ,IAAO,IAAMsR,KAAO,IAAO,EAChDA,IAAM,SAEN9G,EAAK3xB,KAAK04B,KAAKzD,EAAK2B,GAEpBzP,GADAA,EAAMnnB,KAAK04B,KAAKzD,EAAK4B,IACR72B,KAAK04B,KAAKxD,EAAK0B,GAAQ,EACpC5D,EAAKhzB,KAAK04B,KAAKxD,EAAK2B,GAKpB,IAAI8B,IAAQh8B,GAJZg1B,EAAMA,EAAK3xB,KAAK04B,KAAK5D,EAAKiC,GAAQ,GAIZ,KAAa,MAFnC5P,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK5D,EAAKkC,GAAQ,GACvBh3B,KAAK04B,KAAK3D,EAAKgC,GAAQ,KAEU,IAAO,EACrDp6B,IAFAq2B,EAAMA,EAAKhzB,KAAK04B,KAAK3D,EAAKiC,GAAQ,IAErB7P,IAAQ,IAAO,IAAMwR,KAAO,IAAO,EAChDA,IAAM,SAENhH,EAAK3xB,KAAK04B,KAAKtD,EAAKwB,GAEpBzP,GADAA,EAAMnnB,KAAK04B,KAAKtD,EAAKyB,IACR72B,KAAK04B,KAAKrD,EAAKuB,GAAQ,EACpC5D,EAAKhzB,KAAK04B,KAAKrD,EAAKwB,GACpBlF,EAAMA,EAAK3xB,KAAK04B,KAAKzD,EAAK8B,GAAQ,EAElC5P,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKzD,EAAK+B,GAAQ,GACvBh3B,KAAK04B,KAAKxD,EAAK6B,GAAQ,EACpC/D,EAAMA,EAAKhzB,KAAK04B,KAAKxD,EAAK8B,GAAQ,EAKlC,IAAI4B,IAAQj8B,GAJZg1B,EAAMA,EAAK3xB,KAAK04B,KAAK5D,EAAKoC,GAAQ,GAIZ,KAAa,MAFnC/P,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK5D,EAAKqC,GAAQ,GACvBn3B,KAAK04B,KAAK3D,EAAKmC,GAAQ,KAEU,IAAO,EACrDv6B,IAFAq2B,EAAMA,EAAKhzB,KAAK04B,KAAK3D,EAAKoC,GAAQ,IAErBhQ,IAAQ,IAAO,IAAMyR,KAAO,IAAO,EAChDA,IAAM,SAENjH,EAAK3xB,KAAK04B,KAAKnD,EAAKqB,GAEpBzP,GADAA,EAAMnnB,KAAK04B,KAAKnD,EAAKsB,IACR72B,KAAK04B,KAAKlD,EAAKoB,GAAQ,EACpC5D,EAAKhzB,KAAK04B,KAAKlD,EAAKqB,GACpBlF,EAAMA,EAAK3xB,KAAK04B,KAAKtD,EAAK2B,GAAQ,EAElC5P,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKtD,EAAK4B,GAAQ,GACvBh3B,KAAK04B,KAAKrD,EAAK0B,GAAQ,EACpC/D,EAAMA,EAAKhzB,KAAK04B,KAAKrD,EAAK2B,GAAQ,EAClCrF,EAAMA,EAAK3xB,KAAK04B,KAAKzD,EAAKiC,GAAQ,EAElC/P,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKzD,EAAKkC,GAAQ,GACvBn3B,KAAK04B,KAAKxD,EAAKgC,GAAQ,EACpClE,EAAMA,EAAKhzB,KAAK04B,KAAKxD,EAAKiC,GAAQ,EAKlC,IAAI0B,IAAQl8B,GAJZg1B,EAAMA,EAAK3xB,KAAK04B,KAAK5D,EAAKuC,GAAQ,GAIZ,KAAa,MAFnClQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK5D,EAAKwC,GAAQ,GACvBt3B,KAAK04B,KAAK3D,EAAKsC,GAAQ,KAEU,IAAO,EACrD16B,IAFAq2B,EAAMA,EAAKhzB,KAAK04B,KAAK3D,EAAKuC,GAAQ,IAErBnQ,IAAQ,IAAO,IAAM0R,KAAO,IAAO,EAChDA,IAAM,SAENlH,EAAK3xB,KAAK04B,KAAKhD,EAAKkB,GAEpBzP,GADAA,EAAMnnB,KAAK04B,KAAKhD,EAAKmB,IACR72B,KAAK04B,KAAK/C,EAAKiB,GAAQ,EACpC5D,EAAKhzB,KAAK04B,KAAK/C,EAAKkB,GACpBlF,EAAMA,EAAK3xB,KAAK04B,KAAKnD,EAAKwB,GAAQ,EAElC5P,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKnD,EAAKyB,GAAQ,GACvBh3B,KAAK04B,KAAKlD,EAAKuB,GAAQ,EACpC/D,EAAMA,EAAKhzB,KAAK04B,KAAKlD,EAAKwB,GAAQ,EAClCrF,EAAMA,EAAK3xB,KAAK04B,KAAKtD,EAAK8B,GAAQ,EAElC/P,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKtD,EAAK+B,GAAQ,GACvBn3B,KAAK04B,KAAKrD,EAAK6B,GAAQ,EACpClE,EAAMA,EAAKhzB,KAAK04B,KAAKrD,EAAK8B,GAAQ,EAClCxF,EAAMA,EAAK3xB,KAAK04B,KAAKzD,EAAKoC,GAAQ,EAElClQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKzD,EAAKqC,GAAQ,GACvBt3B,KAAK04B,KAAKxD,EAAKmC,GAAQ,EACpCrE,EAAMA,EAAKhzB,KAAK04B,KAAKxD,EAAKoC,GAAQ,EAKlC,IAAIwB,IAAQn8B,GAJZg1B,EAAMA,EAAK3xB,KAAK04B,KAAK5D,EAAK0C,GAAQ,GAIZ,KAAa,MAFnCrQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK5D,EAAK2C,IAAQ,GACvBz3B,KAAK04B,KAAK3D,EAAKyC,GAAQ,KAEU,IAAO,EACrD76B,IAFAq2B,EAAMA,EAAKhzB,KAAK04B,KAAK3D,EAAK0C,IAAQ,IAErBtQ,IAAQ,IAAO,IAAM2R,KAAO,IAAO,EAChDA,IAAM,SAENnH,EAAK3xB,KAAK04B,KAAK7C,EAAKe,GAEpBzP,GADAA,EAAMnnB,KAAK04B,KAAK7C,EAAKgB,IACR72B,KAAK04B,KAAK5C,EAAKc,GAAQ,EACpC5D,EAAKhzB,KAAK04B,KAAK5C,EAAKe,GACpBlF,EAAMA,EAAK3xB,KAAK04B,KAAKhD,EAAKqB,GAAQ,EAElC5P,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKhD,EAAKsB,GAAQ,GACvBh3B,KAAK04B,KAAK/C,EAAKoB,GAAQ,EACpC/D,EAAMA,EAAKhzB,KAAK04B,KAAK/C,EAAKqB,GAAQ,EAClCrF,EAAMA,EAAK3xB,KAAK04B,KAAKnD,EAAK2B,GAAQ,EAElC/P,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKnD,EAAK4B,GAAQ,GACvBn3B,KAAK04B,KAAKlD,EAAK0B,GAAQ,EACpClE,EAAMA,EAAKhzB,KAAK04B,KAAKlD,EAAK2B,GAAQ,EAClCxF,EAAMA,EAAK3xB,KAAK04B,KAAKtD,EAAKiC,GAAQ,EAElClQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKtD,EAAKkC,GAAQ,GACvBt3B,KAAK04B,KAAKrD,EAAKgC,GAAQ,EACpCrE,EAAMA,EAAKhzB,KAAK04B,KAAKrD,EAAKiC,GAAQ,EAClC3F,EAAMA,EAAK3xB,KAAK04B,KAAKzD,EAAKuC,GAAQ,EAElCrQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKzD,EAAKwC,IAAQ,GACvBz3B,KAAK04B,KAAKxD,EAAKsC,GAAQ,EACpCxE,EAAMA,EAAKhzB,KAAK04B,KAAKxD,EAAKuC,IAAQ,EAKlC,IAAIsB,IAAQp8B,GAJZg1B,EAAMA,EAAK3xB,KAAK04B,KAAK5D,EAAK6C,IAAQ,GAIZ,KAAa,MAFnCxQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK5D,EAAK8C,IAAQ,GACvB53B,KAAK04B,KAAK3D,EAAK4C,IAAQ,KAEU,IAAO,EACrDh7B,IAFAq2B,EAAMA,EAAKhzB,KAAK04B,KAAK3D,EAAK6C,IAAQ,IAErBzQ,IAAQ,IAAO,IAAM4R,KAAO,IAAO,EAChDA,IAAM,SAENpH,EAAK3xB,KAAK04B,KAAK1C,EAAKY,GAEpBzP,GADAA,EAAMnnB,KAAK04B,KAAK1C,EAAKa,IACR72B,KAAK04B,KAAKzC,EAAKW,GAAQ,EACpC5D,EAAKhzB,KAAK04B,KAAKzC,EAAKY,GACpBlF,EAAMA,EAAK3xB,KAAK04B,KAAK7C,EAAKkB,GAAQ,EAElC5P,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK7C,EAAKmB,GAAQ,GACvBh3B,KAAK04B,KAAK5C,EAAKiB,GAAQ,EACpC/D,EAAMA,EAAKhzB,KAAK04B,KAAK5C,EAAKkB,GAAQ,EAClCrF,EAAMA,EAAK3xB,KAAK04B,KAAKhD,EAAKwB,GAAQ,EAElC/P,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKhD,EAAKyB,GAAQ,GACvBn3B,KAAK04B,KAAK/C,EAAKuB,GAAQ,EACpClE,EAAMA,EAAKhzB,KAAK04B,KAAK/C,EAAKwB,GAAQ,EAClCxF,EAAMA,EAAK3xB,KAAK04B,KAAKnD,EAAK8B,GAAQ,EAElClQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKnD,EAAK+B,GAAQ,GACvBt3B,KAAK04B,KAAKlD,EAAK6B,GAAQ,EACpCrE,EAAMA,EAAKhzB,KAAK04B,KAAKlD,EAAK8B,GAAQ,EAClC3F,EAAMA,EAAK3xB,KAAK04B,KAAKtD,EAAKoC,GAAQ,EAElCrQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKtD,EAAKqC,IAAQ,GACvBz3B,KAAK04B,KAAKrD,EAAKmC,GAAQ,EACpCxE,EAAMA,EAAKhzB,KAAK04B,KAAKrD,EAAKoC,IAAQ,EAClC9F,EAAMA,EAAK3xB,KAAK04B,KAAKzD,EAAK0C,IAAQ,EAElCxQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKzD,EAAK2C,IAAQ,GACvB53B,KAAK04B,KAAKxD,EAAKyC,IAAQ,EACpC3E,EAAMA,EAAKhzB,KAAK04B,KAAKxD,EAAK0C,IAAQ,EAKlC,IAAIoB,IAAQr8B,GAJZg1B,EAAMA,EAAK3xB,KAAK04B,KAAK5D,EAAKgD,IAAQ,GAIZ,KAAa,MAFnC3Q,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK5D,EAAKiD,IAAQ,GACvB/3B,KAAK04B,KAAK3D,EAAK+C,IAAQ,KAEU,IAAO,EACrDn7B,IAFAq2B,EAAMA,EAAKhzB,KAAK04B,KAAK3D,EAAKgD,IAAQ,IAErB5Q,IAAQ,IAAO,IAAM6R,KAAO,IAAO,EAChDA,IAAM,SAENrH,EAAK3xB,KAAK04B,KAAKvC,EAAKS,GAEpBzP,GADAA,EAAMnnB,KAAK04B,KAAKvC,EAAKU,IACR72B,KAAK04B,KAAKtC,EAAKQ,GAAQ,EACpC5D,EAAKhzB,KAAK04B,KAAKtC,EAAKS,GACpBlF,EAAMA,EAAK3xB,KAAK04B,KAAK1C,EAAKe,GAAQ,EAElC5P,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK1C,EAAKgB,GAAQ,GACvBh3B,KAAK04B,KAAKzC,EAAKc,GAAQ,EACpC/D,EAAMA,EAAKhzB,KAAK04B,KAAKzC,EAAKe,GAAQ,EAClCrF,EAAMA,EAAK3xB,KAAK04B,KAAK7C,EAAKqB,GAAQ,EAElC/P,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK7C,EAAKsB,GAAQ,GACvBn3B,KAAK04B,KAAK5C,EAAKoB,GAAQ,EACpClE,EAAMA,EAAKhzB,KAAK04B,KAAK5C,EAAKqB,GAAQ,EAClCxF,EAAMA,EAAK3xB,KAAK04B,KAAKhD,EAAK2B,GAAQ,EAElClQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKhD,EAAK4B,GAAQ,GACvBt3B,KAAK04B,KAAK/C,EAAK0B,GAAQ,EACpCrE,EAAMA,EAAKhzB,KAAK04B,KAAK/C,EAAK2B,GAAQ,EAClC3F,EAAMA,EAAK3xB,KAAK04B,KAAKnD,EAAKiC,GAAQ,EAElCrQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKnD,EAAKkC,IAAQ,GACvBz3B,KAAK04B,KAAKlD,EAAKgC,GAAQ,EACpCxE,EAAMA,EAAKhzB,KAAK04B,KAAKlD,EAAKiC,IAAQ,EAClC9F,EAAMA,EAAK3xB,KAAK04B,KAAKtD,EAAKuC,IAAQ,EAElCxQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKtD,EAAKwC,IAAQ,GACvB53B,KAAK04B,KAAKrD,EAAKsC,IAAQ,EACpC3E,EAAMA,EAAKhzB,KAAK04B,KAAKrD,EAAKuC,IAAQ,EAClCjG,EAAMA,EAAK3xB,KAAK04B,KAAKzD,EAAK6C,IAAQ,EAElC3Q,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKzD,EAAK8C,IAAQ,GACvB/3B,KAAK04B,KAAKxD,EAAK4C,IAAQ,EACpC9E,EAAMA,EAAKhzB,KAAK04B,KAAKxD,EAAK6C,IAAQ,EAKlC,IAAIkB,IAAQt8B,GAJZg1B,EAAMA,EAAK3xB,KAAK04B,KAAK5D,EAAKmD,IAAQ,GAIZ,KAAa,MAFnC9Q,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK5D,EAAKoD,IAAQ,GACvBl4B,KAAK04B,KAAK3D,EAAKkD,IAAQ,KAEU,IAAO,EACrDt7B,IAFAq2B,EAAMA,EAAKhzB,KAAK04B,KAAK3D,EAAKmD,IAAQ,IAErB/Q,IAAQ,IAAO,IAAM8R,KAAO,IAAO,EAChDA,IAAM,SAENtH,EAAK3xB,KAAK04B,KAAKpC,EAAKM,GAEpBzP,GADAA,EAAMnnB,KAAK04B,KAAKpC,EAAKO,IACR72B,KAAK04B,KAAKnC,EAAKK,GAAQ,EACpC5D,EAAKhzB,KAAK04B,KAAKnC,EAAKM,GACpBlF,EAAMA,EAAK3xB,KAAK04B,KAAKvC,EAAKY,GAAQ,EAElC5P,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKvC,EAAKa,GAAQ,GACvBh3B,KAAK04B,KAAKtC,EAAKW,GAAQ,EACpC/D,EAAMA,EAAKhzB,KAAK04B,KAAKtC,EAAKY,GAAQ,EAClCrF,EAAMA,EAAK3xB,KAAK04B,KAAK1C,EAAKkB,GAAQ,EAElC/P,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK1C,EAAKmB,GAAQ,GACvBn3B,KAAK04B,KAAKzC,EAAKiB,GAAQ,EACpClE,EAAMA,EAAKhzB,KAAK04B,KAAKzC,EAAKkB,GAAQ,EAClCxF,EAAMA,EAAK3xB,KAAK04B,KAAK7C,EAAKwB,GAAQ,EAElClQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK7C,EAAKyB,GAAQ,GACvBt3B,KAAK04B,KAAK5C,EAAKuB,GAAQ,EACpCrE,EAAMA,EAAKhzB,KAAK04B,KAAK5C,EAAKwB,GAAQ,EAClC3F,EAAMA,EAAK3xB,KAAK04B,KAAKhD,EAAK8B,GAAQ,EAElCrQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKhD,EAAK+B,IAAQ,GACvBz3B,KAAK04B,KAAK/C,EAAK6B,GAAQ,EACpCxE,EAAMA,EAAKhzB,KAAK04B,KAAK/C,EAAK8B,IAAQ,EAClC9F,EAAMA,EAAK3xB,KAAK04B,KAAKnD,EAAKoC,IAAQ,EAElCxQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKnD,EAAKqC,IAAQ,GACvB53B,KAAK04B,KAAKlD,EAAKmC,IAAQ,EACpC3E,EAAMA,EAAKhzB,KAAK04B,KAAKlD,EAAKoC,IAAQ,EAClCjG,EAAMA,EAAK3xB,KAAK04B,KAAKtD,EAAK0C,IAAQ,EAElC3Q,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKtD,EAAK2C,IAAQ,GACvB/3B,KAAK04B,KAAKrD,EAAKyC,IAAQ,EACpC9E,EAAMA,EAAKhzB,KAAK04B,KAAKrD,EAAK0C,IAAQ,EAClCpG,EAAMA,EAAK3xB,KAAK04B,KAAKzD,EAAKgD,IAAQ,EAElC9Q,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKzD,EAAKiD,IAAQ,GACvBl4B,KAAK04B,KAAKxD,EAAK+C,IAAQ,EACpCjF,EAAMA,EAAKhzB,KAAK04B,KAAKxD,EAAKgD,IAAQ,EAKlC,IAAIgB,IAAQv8B,GAJZg1B,EAAMA,EAAK3xB,KAAK04B,KAAK5D,EAAKsD,IAAQ,GAIZ,KAAa,MAFnCjR,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK5D,EAAKuD,IAAQ,GACvBr4B,KAAK04B,KAAK3D,EAAKqD,IAAQ,KAEU,IAAO,EACrDz7B,IAFAq2B,EAAMA,EAAKhzB,KAAK04B,KAAK3D,EAAKsD,IAAQ,IAErBlR,IAAQ,IAAO,IAAM+R,KAAO,IAAO,EAChDA,IAAM,SAENvH,EAAK3xB,KAAK04B,KAAKjC,EAAKG,GAEpBzP,GADAA,EAAMnnB,KAAK04B,KAAKjC,EAAKI,IACR72B,KAAK04B,KAAKhC,EAAKE,GAAQ,EACpC5D,EAAKhzB,KAAK04B,KAAKhC,EAAKG,GACpBlF,EAAMA,EAAK3xB,KAAK04B,KAAKpC,EAAKS,GAAQ,EAElC5P,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKpC,EAAKU,GAAQ,GACvBh3B,KAAK04B,KAAKnC,EAAKQ,GAAQ,EACpC/D,EAAMA,EAAKhzB,KAAK04B,KAAKnC,EAAKS,GAAQ,EAClCrF,EAAMA,EAAK3xB,KAAK04B,KAAKvC,EAAKe,GAAQ,EAElC/P,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKvC,EAAKgB,GAAQ,GACvBn3B,KAAK04B,KAAKtC,EAAKc,GAAQ,EACpClE,EAAMA,EAAKhzB,KAAK04B,KAAKtC,EAAKe,GAAQ,EAClCxF,EAAMA,EAAK3xB,KAAK04B,KAAK1C,EAAKqB,GAAQ,EAElClQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK1C,EAAKsB,GAAQ,GACvBt3B,KAAK04B,KAAKzC,EAAKoB,GAAQ,EACpCrE,EAAMA,EAAKhzB,KAAK04B,KAAKzC,EAAKqB,GAAQ,EAClC3F,EAAMA,EAAK3xB,KAAK04B,KAAK7C,EAAK2B,GAAQ,EAElCrQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK7C,EAAK4B,IAAQ,GACvBz3B,KAAK04B,KAAK5C,EAAK0B,GAAQ,EACpCxE,EAAMA,EAAKhzB,KAAK04B,KAAK5C,EAAK2B,IAAQ,EAClC9F,EAAMA,EAAK3xB,KAAK04B,KAAKhD,EAAKiC,IAAQ,EAElCxQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKhD,EAAKkC,IAAQ,GACvB53B,KAAK04B,KAAK/C,EAAKgC,IAAQ,EACpC3E,EAAMA,EAAKhzB,KAAK04B,KAAK/C,EAAKiC,IAAQ,EAClCjG,EAAMA,EAAK3xB,KAAK04B,KAAKnD,EAAKuC,IAAQ,EAElC3Q,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKnD,EAAKwC,IAAQ,GACvB/3B,KAAK04B,KAAKlD,EAAKsC,IAAQ,EACpC9E,EAAMA,EAAKhzB,KAAK04B,KAAKlD,EAAKuC,IAAQ,EAClCpG,EAAMA,EAAK3xB,KAAK04B,KAAKtD,EAAK6C,IAAQ,EAElC9Q,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKtD,EAAK8C,IAAQ,GACvBl4B,KAAK04B,KAAKrD,EAAK4C,IAAQ,EACpCjF,EAAMA,EAAKhzB,KAAK04B,KAAKrD,EAAK6C,IAAQ,EAClCvG,EAAMA,EAAK3xB,KAAK04B,KAAKzD,EAAKmD,IAAQ,EAElCjR,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKzD,EAAKoD,IAAQ,GACvBr4B,KAAK04B,KAAKxD,EAAKkD,IAAQ,EACpCpF,EAAMA,EAAKhzB,KAAK04B,KAAKxD,EAAKmD,IAAQ,EAKlC,IAAIc,IAAQx8B,GAJZg1B,EAAMA,EAAK3xB,KAAK04B,KAAK5D,EAAKyD,IAAQ,GAIZ,KAAa,MAFnCpR,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK5D,EAAK0D,IAAQ,GACvBx4B,KAAK04B,KAAK3D,EAAKwD,IAAQ,KAEU,IAAO,EACrD57B,IAFAq2B,EAAMA,EAAKhzB,KAAK04B,KAAK3D,EAAKyD,IAAQ,IAErBrR,IAAQ,IAAO,IAAMgS,KAAO,IAAO,EAChDA,IAAM,SAENxH,EAAK3xB,KAAK04B,KAAKjC,EAAKM,GAEpB5P,GADAA,EAAMnnB,KAAK04B,KAAKjC,EAAKO,IACRh3B,KAAK04B,KAAKhC,EAAKK,GAAQ,EACpC/D,EAAKhzB,KAAK04B,KAAKhC,EAAKM,GACpBrF,EAAMA,EAAK3xB,KAAK04B,KAAKpC,EAAKY,GAAQ,EAElC/P,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKpC,EAAKa,GAAQ,GACvBn3B,KAAK04B,KAAKnC,EAAKW,GAAQ,EACpClE,EAAMA,EAAKhzB,KAAK04B,KAAKnC,EAAKY,GAAQ,EAClCxF,EAAMA,EAAK3xB,KAAK04B,KAAKvC,EAAKkB,GAAQ,EAElClQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKvC,EAAKmB,GAAQ,GACvBt3B,KAAK04B,KAAKtC,EAAKiB,GAAQ,EACpCrE,EAAMA,EAAKhzB,KAAK04B,KAAKtC,EAAKkB,GAAQ,EAClC3F,EAAMA,EAAK3xB,KAAK04B,KAAK1C,EAAKwB,GAAQ,EAElCrQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK1C,EAAKyB,IAAQ,GACvBz3B,KAAK04B,KAAKzC,EAAKuB,GAAQ,EACpCxE,EAAMA,EAAKhzB,KAAK04B,KAAKzC,EAAKwB,IAAQ,EAClC9F,EAAMA,EAAK3xB,KAAK04B,KAAK7C,EAAK8B,IAAQ,EAElCxQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK7C,EAAK+B,IAAQ,GACvB53B,KAAK04B,KAAK5C,EAAK6B,IAAQ,EACpC3E,EAAMA,EAAKhzB,KAAK04B,KAAK5C,EAAK8B,IAAQ,EAClCjG,EAAMA,EAAK3xB,KAAK04B,KAAKhD,EAAKoC,IAAQ,EAElC3Q,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKhD,EAAKqC,IAAQ,GACvB/3B,KAAK04B,KAAK/C,EAAKmC,IAAQ,EACpC9E,EAAMA,EAAKhzB,KAAK04B,KAAK/C,EAAKoC,IAAQ,EAClCpG,EAAMA,EAAK3xB,KAAK04B,KAAKnD,EAAK0C,IAAQ,EAElC9Q,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKnD,EAAK2C,IAAQ,GACvBl4B,KAAK04B,KAAKlD,EAAKyC,IAAQ,EACpCjF,EAAMA,EAAKhzB,KAAK04B,KAAKlD,EAAK0C,IAAQ,EAClCvG,EAAMA,EAAK3xB,KAAK04B,KAAKtD,EAAKgD,IAAQ,EAElCjR,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKtD,EAAKiD,IAAQ,GACvBr4B,KAAK04B,KAAKrD,EAAK+C,IAAQ,EACpCpF,EAAMA,EAAKhzB,KAAK04B,KAAKrD,EAAKgD,IAAQ,EAKlC,IAAIe,IAASz8B,GAJbg1B,EAAMA,EAAK3xB,KAAK04B,KAAKzD,EAAKsD,IAAQ,GAIX,KAAa,MAFpCpR,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKzD,EAAKuD,IAAQ,GACvBx4B,KAAK04B,KAAKxD,EAAKqD,IAAQ,KAEW,IAAO,EACtD57B,IAFAq2B,EAAMA,EAAKhzB,KAAK04B,KAAKxD,EAAKsD,IAAQ,IAErBrR,IAAQ,IAAO,IAAMiS,KAAQ,IAAO,EACjDA,IAAO,SAEPzH,EAAK3xB,KAAK04B,KAAKjC,EAAKS,GAEpB/P,GADAA,EAAMnnB,KAAK04B,KAAKjC,EAAKU,IACRn3B,KAAK04B,KAAKhC,EAAKQ,GAAQ,EACpClE,EAAKhzB,KAAK04B,KAAKhC,EAAKS,GACpBxF,EAAMA,EAAK3xB,KAAK04B,KAAKpC,EAAKe,GAAQ,EAElClQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKpC,EAAKgB,GAAQ,GACvBt3B,KAAK04B,KAAKnC,EAAKc,GAAQ,EACpCrE,EAAMA,EAAKhzB,KAAK04B,KAAKnC,EAAKe,GAAQ,EAClC3F,EAAMA,EAAK3xB,KAAK04B,KAAKvC,EAAKqB,GAAQ,EAElCrQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKvC,EAAKsB,IAAQ,GACvBz3B,KAAK04B,KAAKtC,EAAKoB,GAAQ,EACpCxE,EAAMA,EAAKhzB,KAAK04B,KAAKtC,EAAKqB,IAAQ,EAClC9F,EAAMA,EAAK3xB,KAAK04B,KAAK1C,EAAK2B,IAAQ,EAElCxQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK1C,EAAK4B,IAAQ,GACvB53B,KAAK04B,KAAKzC,EAAK0B,IAAQ,EACpC3E,EAAMA,EAAKhzB,KAAK04B,KAAKzC,EAAK2B,IAAQ,EAClCjG,EAAMA,EAAK3xB,KAAK04B,KAAK7C,EAAKiC,IAAQ,EAElC3Q,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK7C,EAAKkC,IAAQ,GACvB/3B,KAAK04B,KAAK5C,EAAKgC,IAAQ,EACpC9E,EAAMA,EAAKhzB,KAAK04B,KAAK5C,EAAKiC,IAAQ,EAClCpG,EAAMA,EAAK3xB,KAAK04B,KAAKhD,EAAKuC,IAAQ,EAElC9Q,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKhD,EAAKwC,IAAQ,GACvBl4B,KAAK04B,KAAK/C,EAAKsC,IAAQ,EACpCjF,EAAMA,EAAKhzB,KAAK04B,KAAK/C,EAAKuC,IAAQ,EAClCvG,EAAMA,EAAK3xB,KAAK04B,KAAKnD,EAAK6C,IAAQ,EAElCjR,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKnD,EAAK8C,IAAQ,GACvBr4B,KAAK04B,KAAKlD,EAAK4C,IAAQ,EACpCpF,EAAMA,EAAKhzB,KAAK04B,KAAKlD,EAAK6C,IAAQ,EAKlC,IAAIgB,IAAS18B,GAJbg1B,EAAMA,EAAK3xB,KAAK04B,KAAKtD,EAAKmD,IAAQ,GAIX,KAAa,MAFpCpR,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKtD,EAAKoD,IAAQ,GACvBx4B,KAAK04B,KAAKrD,EAAKkD,IAAQ,KAEW,IAAO,EACtD57B,IAFAq2B,EAAMA,EAAKhzB,KAAK04B,KAAKrD,EAAKmD,IAAQ,IAErBrR,IAAQ,IAAO,IAAMkS,KAAQ,IAAO,EACjDA,IAAO,SAEP1H,EAAK3xB,KAAK04B,KAAKjC,EAAKY,GAEpBlQ,GADAA,EAAMnnB,KAAK04B,KAAKjC,EAAKa,IACRt3B,KAAK04B,KAAKhC,EAAKW,GAAQ,EACpCrE,EAAKhzB,KAAK04B,KAAKhC,EAAKY,GACpB3F,EAAMA,EAAK3xB,KAAK04B,KAAKpC,EAAKkB,GAAQ,EAElCrQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKpC,EAAKmB,IAAQ,GACvBz3B,KAAK04B,KAAKnC,EAAKiB,GAAQ,EACpCxE,EAAMA,EAAKhzB,KAAK04B,KAAKnC,EAAKkB,IAAQ,EAClC9F,EAAMA,EAAK3xB,KAAK04B,KAAKvC,EAAKwB,IAAQ,EAElCxQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKvC,EAAKyB,IAAQ,GACvB53B,KAAK04B,KAAKtC,EAAKuB,IAAQ,EACpC3E,EAAMA,EAAKhzB,KAAK04B,KAAKtC,EAAKwB,IAAQ,EAClCjG,EAAMA,EAAK3xB,KAAK04B,KAAK1C,EAAK8B,IAAQ,EAElC3Q,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK1C,EAAK+B,IAAQ,GACvB/3B,KAAK04B,KAAKzC,EAAK6B,IAAQ,EACpC9E,EAAMA,EAAKhzB,KAAK04B,KAAKzC,EAAK8B,IAAQ,EAClCpG,EAAMA,EAAK3xB,KAAK04B,KAAK7C,EAAKoC,IAAQ,EAElC9Q,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK7C,EAAKqC,IAAQ,GACvBl4B,KAAK04B,KAAK5C,EAAKmC,IAAQ,EACpCjF,EAAMA,EAAKhzB,KAAK04B,KAAK5C,EAAKoC,IAAQ,EAClCvG,EAAMA,EAAK3xB,KAAK04B,KAAKhD,EAAK0C,IAAQ,EAElCjR,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKhD,EAAK2C,IAAQ,GACvBr4B,KAAK04B,KAAK/C,EAAKyC,IAAQ,EACpCpF,EAAMA,EAAKhzB,KAAK04B,KAAK/C,EAAK0C,IAAQ,EAKlC,IAAIiB,IAAS38B,GAJbg1B,EAAMA,EAAK3xB,KAAK04B,KAAKnD,EAAKgD,IAAQ,GAIX,KAAa,MAFpCpR,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKnD,EAAKiD,IAAQ,GACvBx4B,KAAK04B,KAAKlD,EAAK+C,IAAQ,KAEW,IAAO,EACtD57B,IAFAq2B,EAAMA,EAAKhzB,KAAK04B,KAAKlD,EAAKgD,IAAQ,IAErBrR,IAAQ,IAAO,IAAMmS,KAAQ,IAAO,EACjDA,IAAO,SAEP3H,EAAK3xB,KAAK04B,KAAKjC,EAAKe,GAEpBrQ,GADAA,EAAMnnB,KAAK04B,KAAKjC,EAAKgB,KACRz3B,KAAK04B,KAAKhC,EAAKc,GAAQ,EACpCxE,EAAKhzB,KAAK04B,KAAKhC,EAAKe,IACpB9F,EAAMA,EAAK3xB,KAAK04B,KAAKpC,EAAKqB,IAAQ,EAElCxQ,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKpC,EAAKsB,IAAQ,GACvB53B,KAAK04B,KAAKnC,EAAKoB,IAAQ,EACpC3E,EAAMA,EAAKhzB,KAAK04B,KAAKnC,EAAKqB,IAAQ,EAClCjG,EAAMA,EAAK3xB,KAAK04B,KAAKvC,EAAK2B,IAAQ,EAElC3Q,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKvC,EAAK4B,IAAQ,GACvB/3B,KAAK04B,KAAKtC,EAAK0B,IAAQ,EACpC9E,EAAMA,EAAKhzB,KAAK04B,KAAKtC,EAAK2B,IAAQ,EAClCpG,EAAMA,EAAK3xB,KAAK04B,KAAK1C,EAAKiC,IAAQ,EAElC9Q,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK1C,EAAKkC,IAAQ,GACvBl4B,KAAK04B,KAAKzC,EAAKgC,IAAQ,EACpCjF,EAAMA,EAAKhzB,KAAK04B,KAAKzC,EAAKiC,IAAQ,EAClCvG,EAAMA,EAAK3xB,KAAK04B,KAAK7C,EAAKuC,IAAQ,EAElCjR,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK7C,EAAKwC,IAAQ,GACvBr4B,KAAK04B,KAAK5C,EAAKsC,IAAQ,EACpCpF,EAAMA,EAAKhzB,KAAK04B,KAAK5C,EAAKuC,IAAQ,EAKlC,IAAIkB,IAAS58B,GAJbg1B,EAAMA,EAAK3xB,KAAK04B,KAAKhD,EAAK6C,IAAQ,GAIX,KAAa,MAFpCpR,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKhD,EAAK8C,IAAQ,GACvBx4B,KAAK04B,KAAK/C,EAAK4C,IAAQ,KAEW,IAAO,EACtD57B,IAFAq2B,EAAMA,EAAKhzB,KAAK04B,KAAK/C,EAAK6C,IAAQ,IAErBrR,IAAQ,IAAO,IAAMoS,KAAQ,IAAO,EACjDA,IAAO,SAEP5H,EAAK3xB,KAAK04B,KAAKjC,EAAKkB,IAEpBxQ,GADAA,EAAMnnB,KAAK04B,KAAKjC,EAAKmB,KACR53B,KAAK04B,KAAKhC,EAAKiB,IAAQ,EACpC3E,EAAKhzB,KAAK04B,KAAKhC,EAAKkB,IACpBjG,EAAMA,EAAK3xB,KAAK04B,KAAKpC,EAAKwB,IAAQ,EAElC3Q,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKpC,EAAKyB,IAAQ,GACvB/3B,KAAK04B,KAAKnC,EAAKuB,IAAQ,EACpC9E,EAAMA,EAAKhzB,KAAK04B,KAAKnC,EAAKwB,IAAQ,EAClCpG,EAAMA,EAAK3xB,KAAK04B,KAAKvC,EAAK8B,IAAQ,EAElC9Q,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKvC,EAAK+B,IAAQ,GACvBl4B,KAAK04B,KAAKtC,EAAK6B,IAAQ,EACpCjF,EAAMA,EAAKhzB,KAAK04B,KAAKtC,EAAK8B,IAAQ,EAClCvG,EAAMA,EAAK3xB,KAAK04B,KAAK1C,EAAKoC,IAAQ,EAElCjR,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK1C,EAAKqC,IAAQ,GACvBr4B,KAAK04B,KAAKzC,EAAKmC,IAAQ,EACpCpF,EAAMA,EAAKhzB,KAAK04B,KAAKzC,EAAKoC,IAAQ,EAKlC,IAAImB,IAAS78B,GAJbg1B,EAAMA,EAAK3xB,KAAK04B,KAAK7C,EAAK0C,IAAQ,GAIX,KAAa,MAFpCpR,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK7C,EAAK2C,IAAQ,GACvBx4B,KAAK04B,KAAK5C,EAAKyC,IAAQ,KAEW,IAAO,EACtD57B,IAFAq2B,EAAMA,EAAKhzB,KAAK04B,KAAK5C,EAAK0C,IAAQ,IAErBrR,IAAQ,IAAO,IAAMqS,KAAQ,IAAO,EACjDA,IAAO,SAEP7H,EAAK3xB,KAAK04B,KAAKjC,EAAKqB,IAEpB3Q,GADAA,EAAMnnB,KAAK04B,KAAKjC,EAAKsB,KACR/3B,KAAK04B,KAAKhC,EAAKoB,IAAQ,EACpC9E,EAAKhzB,KAAK04B,KAAKhC,EAAKqB,IACpBpG,EAAMA,EAAK3xB,KAAK04B,KAAKpC,EAAK2B,IAAQ,EAElC9Q,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKpC,EAAK4B,IAAQ,GACvBl4B,KAAK04B,KAAKnC,EAAK0B,IAAQ,EACpCjF,EAAMA,EAAKhzB,KAAK04B,KAAKnC,EAAK2B,IAAQ,EAClCvG,EAAMA,EAAK3xB,KAAK04B,KAAKvC,EAAKiC,IAAQ,EAElCjR,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKvC,EAAKkC,IAAQ,GACvBr4B,KAAK04B,KAAKtC,EAAKgC,IAAQ,EACpCpF,EAAMA,EAAKhzB,KAAK04B,KAAKtC,EAAKiC,IAAQ,EAKlC,IAAIoB,IAAS98B,GAJbg1B,EAAMA,EAAK3xB,KAAK04B,KAAK1C,EAAKuC,IAAQ,GAIX,KAAa,MAFpCpR,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAK1C,EAAKwC,IAAQ,GACvBx4B,KAAK04B,KAAKzC,EAAKsC,IAAQ,KAEW,IAAO,EACtD57B,IAFAq2B,EAAMA,EAAKhzB,KAAK04B,KAAKzC,EAAKuC,IAAQ,IAErBrR,IAAQ,IAAO,IAAMsS,KAAQ,IAAO,EACjDA,IAAO,SAEP9H,EAAK3xB,KAAK04B,KAAKjC,EAAKwB,IAEpB9Q,GADAA,EAAMnnB,KAAK04B,KAAKjC,EAAKyB,KACRl4B,KAAK04B,KAAKhC,EAAKuB,IAAQ,EACpCjF,EAAKhzB,KAAK04B,KAAKhC,EAAKwB,IACpBvG,EAAMA,EAAK3xB,KAAK04B,KAAKpC,EAAK8B,IAAQ,EAElCjR,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKpC,EAAK+B,IAAQ,GACvBr4B,KAAK04B,KAAKnC,EAAK6B,IAAQ,EACpCpF,EAAMA,EAAKhzB,KAAK04B,KAAKnC,EAAK8B,IAAQ,EAKlC,IAAIqB,IAAS/8B,GAJbg1B,EAAMA,EAAK3xB,KAAK04B,KAAKvC,EAAKoC,IAAQ,GAIX,KAAa,MAFpCpR,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKvC,EAAKqC,IAAQ,GACvBx4B,KAAK04B,KAAKtC,EAAKmC,IAAQ,KAEW,IAAO,EACtD57B,IAFAq2B,EAAMA,EAAKhzB,KAAK04B,KAAKtC,EAAKoC,IAAQ,IAErBrR,IAAQ,IAAO,IAAMuS,KAAQ,IAAO,EACjDA,IAAO,SAEP/H,EAAK3xB,KAAK04B,KAAKjC,EAAK2B,IAEpBjR,GADAA,EAAMnnB,KAAK04B,KAAKjC,EAAK4B,KACRr4B,KAAK04B,KAAKhC,EAAK0B,IAAQ,EACpCpF,EAAKhzB,KAAK04B,KAAKhC,EAAK2B,IAKpB,IAAIsB,IAASh9B,GAJbg1B,EAAMA,EAAK3xB,KAAK04B,KAAKpC,EAAKiC,IAAQ,GAIX,KAAa,MAFpCpR,GADAA,EAAOA,EAAMnnB,KAAK04B,KAAKpC,EAAKkC,IAAQ,GACvBx4B,KAAK04B,KAAKnC,EAAKgC,IAAQ,KAEW,IAAO,EACtD57B,IAFAq2B,EAAMA,EAAKhzB,KAAK04B,KAAKnC,EAAKiC,IAAQ,IAErBrR,IAAQ,IAAO,IAAMwS,KAAQ,IAAO,EACjDA,IAAO,SAMP,IAAIC,IAASj9B,GAJbg1B,EAAK3xB,KAAK04B,KAAKjC,EAAK8B,KAIG,KAAa,MAFpCpR,GADAA,EAAMnnB,KAAK04B,KAAKjC,EAAK+B,KACRx4B,KAAK04B,KAAKhC,EAAK6B,IAAQ,KAEW,IAAO,EA0BtD,OAzBA57B,IAFAq2B,EAAKhzB,KAAK04B,KAAKhC,EAAK8B,MAEPrR,IAAQ,IAAO,IAAMyS,KAAQ,IAAO,EACjDA,IAAO,SACP78B,EAAE,GAAK07B,GACP17B,EAAE,GAAK47B,GACP57B,EAAE,GAAK67B,GACP77B,EAAE,GAAK87B,GACP97B,EAAE,GAAK+7B,GACP/7B,EAAE,GAAKg8B,GACPh8B,EAAE,GAAKi8B,GACPj8B,EAAE,GAAKk8B,GACPl8B,EAAE,GAAKm8B,GACPn8B,EAAE,GAAKo8B,GACPp8B,EAAE,IAAMq8B,GACRr8B,EAAE,IAAMs8B,GACRt8B,EAAE,IAAMu8B,GACRv8B,EAAE,IAAMw8B,GACRx8B,EAAE,IAAMy8B,GACRz8B,EAAE,IAAM08B,GACR18B,EAAE,IAAM28B,GACR38B,EAAE,IAAM48B,GACR58B,EAAE,IAAM68B,GACE,IAANj9B,IACFI,EAAE,IAAMJ,EACRyO,EAAI/K,UAEC+K,GAiDT,SAASyuB,EAAYh3B,EAAMutB,EAAKhlB,GAE9B,OADW,IAAI0uB,GACHC,KAAKl3B,EAAMutB,EAAKhlB,GAsB9B,SAAS0uB,EAAMt5B,EAAGgF,GAChB7F,KAAKa,EAAIA,EACTb,KAAK6F,EAAIA,EAvENxF,KAAK04B,OACR9D,EAAclD,GAiDhBnC,EAAGrxB,UAAU87B,MAAQ,SAAgB5J,EAAKhlB,GACxC,IACI8a,EAAMvmB,KAAKU,OAAS+vB,EAAI/vB,OAW5B,OAVoB,KAAhBV,KAAKU,QAAgC,KAAf+vB,EAAI/vB,OACtBu0B,EAAYj1B,KAAMywB,EAAKhlB,GACpB8a,EAAM,GACTwL,EAAW/xB,KAAMywB,EAAKhlB,GACnB8a,EAAM,KArDnB,SAAmBrjB,EAAMutB,EAAKhlB,GAC5BA,EAAIskB,SAAWU,EAAIV,SAAW7sB,EAAK6sB,SACnCtkB,EAAI/K,OAASwC,EAAKxC,OAAS+vB,EAAI/vB,OAI/B,IAFA,IAAIa,EAAQ,EACR+4B,EAAU,EACLrI,EAAI,EAAGA,EAAIxmB,EAAI/K,OAAS,EAAGuxB,IAAK,CAGvC,IAAIC,EAASoI,EACbA,EAAU,EAGV,IAFA,IAAInI,EAAgB,SAAR5wB,EACR6wB,EAAO/xB,KAAKiK,IAAI2nB,EAAGxB,EAAI/vB,OAAS,GAC3B2B,EAAIhC,KAAKyF,IAAI,EAAGmsB,EAAI/uB,EAAKxC,OAAS,GAAI2B,GAAK+vB,EAAM/vB,IAAK,CAC7D,IAAI1F,EAAIs1B,EAAI5vB,EAGR5E,GAFoB,EAAhByF,EAAK8sB,MAAMrzB,KACI,EAAf8zB,EAAIT,MAAM3tB,IAGd2vB,EAAS,SAAJv0B,EAGT00B,EAAa,UADbH,EAAMA,EAAKG,EAAS,GAIpBmI,IAFApI,GAHAA,EAAUA,GAAWz0B,EAAI,SAAa,GAAM,IAGxBu0B,IAAO,IAAO,KAEZ,GACtBE,GAAU,SAEZzmB,EAAIukB,MAAMiC,GAAKE,EACf5wB,EAAQ2wB,EACRA,EAASoI,EAQX,OANc,IAAV/4B,EACFkK,EAAIukB,MAAMiC,GAAK1wB,EAEfkK,EAAI/K,SAGC+K,EAAIulB,QAgBHuJ,CAASv6B,KAAMywB,EAAKhlB,GAEpByuB,EAAWl6B,KAAMywB,EAAKhlB,IAchC0uB,EAAK57B,UAAUi8B,QAAU,SAAkBC,GAGzC,IAFA,IAAI58B,EAAI,IAAIiD,MAAM25B,GACd79B,EAAIgzB,EAAGrxB,UAAU40B,WAAWsH,GAAK,EAC5B99B,EAAI,EAAGA,EAAI89B,EAAG99B,IACrBkB,EAAElB,GAAKqD,KAAK06B,OAAO/9B,EAAGC,EAAG69B,GAG3B,OAAO58B,GAITs8B,EAAK57B,UAAUm8B,OAAS,SAAiB75B,EAAGjE,EAAG69B,GAC7C,GAAU,IAAN55B,GAAWA,IAAM45B,EAAI,EAAG,OAAO55B,EAGnC,IADA,IAAI85B,EAAK,EACAh+B,EAAI,EAAGA,EAAIC,EAAGD,IACrBg+B,IAAW,EAAJ95B,IAAWjE,EAAID,EAAI,EAC1BkE,IAAM,EAGR,OAAO85B,GAKTR,EAAK57B,UAAUq8B,QAAU,SAAkBC,EAAKC,EAAKC,EAAKC,EAAMC,EAAMR,GACpE,IAAK,IAAI99B,EAAI,EAAGA,EAAI89B,EAAG99B,IACrBq+B,EAAKr+B,GAAKm+B,EAAID,EAAIl+B,IAClBs+B,EAAKt+B,GAAKo+B,EAAIF,EAAIl+B,KAItBw9B,EAAK57B,UAAUsT,UAAY,SAAoBipB,EAAKC,EAAKC,EAAMC,EAAMR,EAAGI,GACtE76B,KAAK46B,QAAQC,EAAKC,EAAKC,EAAKC,EAAMC,EAAMR,GAExC,IAAK,IAAI/7B,EAAI,EAAGA,EAAI+7B,EAAG/7B,IAAM,EAM3B,IALA,IAAI9B,EAAI8B,GAAK,EAETw8B,EAAQ76B,KAAK86B,IAAI,EAAI96B,KAAK+6B,GAAKx+B,GAC/By+B,EAAQh7B,KAAKi7B,IAAI,EAAIj7B,KAAK+6B,GAAKx+B,GAE1B6B,EAAI,EAAGA,EAAIg8B,EAAGh8B,GAAK7B,EAI1B,IAHA,IAAI2+B,EAASL,EACTM,EAASH,EAEJh5B,EAAI,EAAGA,EAAI3D,EAAG2D,IAAK,CAC1B,IAAIo5B,EAAKT,EAAKv8B,EAAI4D,GACdq5B,EAAKT,EAAKx8B,EAAI4D,GAEds5B,EAAKX,EAAKv8B,EAAI4D,EAAI3D,GAClBk9B,EAAKX,EAAKx8B,EAAI4D,EAAI3D,GAElBm9B,EAAKN,EAASI,EAAKH,EAASI,EAEhCA,EAAKL,EAASK,EAAKJ,EAASG,EAC5BA,EAAKE,EAELb,EAAKv8B,EAAI4D,GAAKo5B,EAAKE,EACnBV,EAAKx8B,EAAI4D,GAAKq5B,EAAKE,EAEnBZ,EAAKv8B,EAAI4D,EAAI3D,GAAK+8B,EAAKE,EACvBV,EAAKx8B,EAAI4D,EAAI3D,GAAKg9B,EAAKE,EAGnBv5B,IAAMzF,IACRi/B,EAAKX,EAAQK,EAASF,EAAQG,EAE9BA,EAASN,EAAQM,EAASH,EAAQE,EAClCA,EAASM,KAOnB1B,EAAK57B,UAAUu9B,YAAc,SAAsB19B,EAAGrB,GACpD,IAAI09B,EAAqB,EAAjBp6B,KAAKyF,IAAI/I,EAAGqB,GAChB29B,EAAU,EAAJtB,EACN99B,EAAI,EACR,IAAK89B,EAAIA,EAAI,EAAI,EAAGA,EAAGA,KAAU,EAC/B99B,IAGF,OAAO,GAAKA,EAAI,EAAIo/B,GAGtB5B,EAAK57B,UAAUy9B,UAAY,SAAoBlB,EAAKC,EAAKN,GACvD,KAAIA,GAAK,GAET,IAAK,IAAI99B,EAAI,EAAGA,EAAI89B,EAAI,EAAG99B,IAAK,CAC9B,IAAIkB,EAAIi9B,EAAIn+B,GAEZm+B,EAAIn+B,GAAKm+B,EAAIL,EAAI99B,EAAI,GACrBm+B,EAAIL,EAAI99B,EAAI,GAAKkB,EAEjBA,EAAIk9B,EAAIp+B,GAERo+B,EAAIp+B,IAAMo+B,EAAIN,EAAI99B,EAAI,GACtBo+B,EAAIN,EAAI99B,EAAI,IAAMkB,IAItBs8B,EAAK57B,UAAU09B,aAAe,SAAuBC,EAAIzB,GAEvD,IADA,IAAIl5B,EAAQ,EACH5E,EAAI,EAAGA,EAAI89B,EAAI,EAAG99B,IAAK,CAC9B,IAAIm0B,EAAoC,KAAhCzwB,KAAK87B,MAAMD,EAAG,EAAIv/B,EAAI,GAAK89B,GACjCp6B,KAAK87B,MAAMD,EAAG,EAAIv/B,GAAK89B,GACvBl5B,EAEF26B,EAAGv/B,GAAS,SAAJm0B,EAGNvvB,EADEuvB,EAAI,SACE,EAEAA,EAAI,SAAY,EAI5B,OAAOoL,GAGT/B,EAAK57B,UAAU69B,WAAa,SAAqBF,EAAI3V,EAAKuU,EAAKL,GAE7D,IADA,IAAIl5B,EAAQ,EACH5E,EAAI,EAAGA,EAAI4pB,EAAK5pB,IACvB4E,GAAyB,EAAR26B,EAAGv/B,GAEpBm+B,EAAI,EAAIn+B,GAAa,KAAR4E,EAAgBA,KAAkB,GAC/Cu5B,EAAI,EAAIn+B,EAAI,GAAa,KAAR4E,EAAgBA,KAAkB,GAIrD,IAAK5E,EAAI,EAAI4pB,EAAK5pB,EAAI89B,IAAK99B,EACzBm+B,EAAIn+B,GAAK,EAGX0yB,EAAiB,IAAV9tB,GACP8tB,EAA6B,KAAb,KAAR9tB,KAGV44B,EAAK57B,UAAU89B,KAAO,SAAe5B,GAEnC,IADA,IAAI6B,EAAK,IAAIx7B,MAAM25B,GACV99B,EAAI,EAAGA,EAAI89B,EAAG99B,IACrB2/B,EAAG3/B,GAAK,EAGV,OAAO2/B,GAGTnC,EAAK57B,UAAU67B,KAAO,SAAev5B,EAAGgF,EAAG4F,GACzC,IAAIgvB,EAAI,EAAIz6B,KAAK87B,YAAYj7B,EAAEH,OAAQmF,EAAEnF,QAErCm6B,EAAM76B,KAAKw6B,QAAQC,GAEnB3Z,EAAI9gB,KAAKq8B,KAAK5B,GAEdK,EAAM,IAAIh6B,MAAM25B,GAChB8B,EAAO,IAAIz7B,MAAM25B,GACjB+B,EAAO,IAAI17B,MAAM25B,GAEjBgC,EAAO,IAAI37B,MAAM25B,GACjBiC,EAAQ,IAAI57B,MAAM25B,GAClBkC,EAAQ,IAAI77B,MAAM25B,GAElBmC,EAAOnxB,EAAIukB,MACf4M,EAAKl8B,OAAS+5B,EAEdz6B,KAAKo8B,WAAWv7B,EAAEmvB,MAAOnvB,EAAEH,OAAQo6B,EAAKL,GACxCz6B,KAAKo8B,WAAWv2B,EAAEmqB,MAAOnqB,EAAEnF,OAAQ+7B,EAAMhC,GAEzCz6B,KAAK6R,UAAUipB,EAAKha,EAAGyb,EAAMC,EAAM/B,EAAGI,GACtC76B,KAAK6R,UAAU4qB,EAAM3b,EAAG4b,EAAOC,EAAOlC,EAAGI,GAEzC,IAAK,IAAIl+B,EAAI,EAAGA,EAAI89B,EAAG99B,IAAK,CAC1B,IAAIk/B,EAAKU,EAAK5/B,GAAK+/B,EAAM//B,GAAK6/B,EAAK7/B,GAAKggC,EAAMhgC,GAC9C6/B,EAAK7/B,GAAK4/B,EAAK5/B,GAAKggC,EAAMhgC,GAAK6/B,EAAK7/B,GAAK+/B,EAAM//B,GAC/C4/B,EAAK5/B,GAAKk/B,EAUZ,OAPA77B,KAAKg8B,UAAUO,EAAMC,EAAM/B,GAC3Bz6B,KAAK6R,UAAU0qB,EAAMC,EAAMI,EAAM9b,EAAG2Z,EAAGI,GACvC76B,KAAKg8B,UAAUY,EAAM9b,EAAG2Z,GACxBz6B,KAAKi8B,aAAaW,EAAMnC,GAExBhvB,EAAIskB,SAAWlvB,EAAEkvB,SAAWlqB,EAAEkqB,SAC9BtkB,EAAI/K,OAASG,EAAEH,OAASmF,EAAEnF,OACnB+K,EAAIulB,SAIbpB,EAAGrxB,UAAUiyB,IAAM,SAAcC,GAC/B,IAAIhlB,EAAM,IAAImkB,EAAG,MAEjB,OADAnkB,EAAIukB,MAAQ,IAAIlvB,MAAMd,KAAKU,OAAS+vB,EAAI/vB,QACjCV,KAAKq6B,MAAM5J,EAAKhlB,IAIzBmkB,EAAGrxB,UAAUs+B,KAAO,SAAepM,GACjC,IAAIhlB,EAAM,IAAImkB,EAAG,MAEjB,OADAnkB,EAAIukB,MAAQ,IAAIlvB,MAAMd,KAAKU,OAAS+vB,EAAI/vB,QACjCw5B,EAAWl6B,KAAMywB,EAAKhlB,IAI/BmkB,EAAGrxB,UAAUw6B,KAAO,SAAetI,GACjC,OAAOzwB,KAAK6kB,QAAQwV,MAAM5J,EAAKzwB,OAGjC4vB,EAAGrxB,UAAU8yB,MAAQ,SAAgBZ,GACnCpB,EAAsB,iBAARoB,GACdpB,EAAOoB,EAAM,UAIb,IADA,IAAIlvB,EAAQ,EACH5E,EAAI,EAAGA,EAAIqD,KAAKU,OAAQ/D,IAAK,CACpC,IAAIm0B,GAAqB,EAAhB9wB,KAAKgwB,MAAMrzB,IAAU8zB,EAC1BuB,GAAU,SAAJlB,IAA0B,SAARvvB,GAC5BA,IAAU,GACVA,GAAUuvB,EAAI,SAAa,EAE3BvvB,GAASywB,IAAO,GAChBhyB,KAAKgwB,MAAMrzB,GAAU,SAALq1B,EAQlB,OALc,IAAVzwB,IACFvB,KAAKgwB,MAAMrzB,GAAK4E,EAChBvB,KAAKU,UAGAV,MAGT4vB,EAAGrxB,UAAUu+B,KAAO,SAAerM,GACjC,OAAOzwB,KAAK6kB,QAAQwM,MAAMZ,IAI5Bb,EAAGrxB,UAAUw+B,IAAM,WACjB,OAAO/8B,KAAKwwB,IAAIxwB,OAIlB4vB,EAAGrxB,UAAUy+B,KAAO,WAClB,OAAOh9B,KAAK+4B,KAAK/4B,KAAK6kB,UAIxB+K,EAAGrxB,UAAUgI,IAAM,SAAckqB,GAC/B,IAAIK,EAxxCN,SAAqBL,GAGnB,IAFA,IAAIK,EAAI,IAAIhwB,MAAM2vB,EAAIvoB,aAEb0sB,EAAM,EAAGA,EAAM9D,EAAEpwB,OAAQk0B,IAAO,CACvC,IAAI7D,EAAO6D,EAAM,GAAM,EACnBC,EAAOD,EAAM,GAEjB9D,EAAE8D,IAAQnE,EAAIT,MAAMe,GAAQ,GAAK8D,KAAWA,EAG9C,OAAO/D,EA8wCCmM,CAAWxM,GACnB,GAAiB,IAAbK,EAAEpwB,OAAc,OAAO,IAAIkvB,EAAG,GAIlC,IADA,IAAImD,EAAM/yB,KACDrD,EAAI,EAAGA,EAAIm0B,EAAEpwB,QACP,IAATowB,EAAEn0B,GADsBA,IAAKo2B,EAAMA,EAAIgK,OAI7C,KAAMpgC,EAAIm0B,EAAEpwB,OACV,IAAK,IAAImC,EAAIkwB,EAAIgK,MAAOpgC,EAAIm0B,EAAEpwB,OAAQ/D,IAAKkG,EAAIA,EAAEk6B,MAClC,IAATjM,EAAEn0B,KAENo2B,EAAMA,EAAIvC,IAAI3tB,IAIlB,OAAOkwB,GAITnD,EAAGrxB,UAAU2+B,OAAS,SAAiBj1B,GACrConB,EAAuB,iBAATpnB,GAAqBA,GAAQ,GAC3C,IAGItL,EAHAc,EAAIwK,EAAO,GACXvJ,GAAKuJ,EAAOxK,GAAK,GACjB0/B,EAAa,WAAe,GAAK1/B,GAAQ,GAAKA,EAGlD,GAAU,IAANA,EAAS,CACX,IAAI8D,EAAQ,EAEZ,IAAK5E,EAAI,EAAGA,EAAIqD,KAAKU,OAAQ/D,IAAK,CAChC,IAAIygC,EAAWp9B,KAAKgwB,MAAMrzB,GAAKwgC,EAC3BngC,GAAsB,EAAhBgD,KAAKgwB,MAAMrzB,IAAUygC,GAAa3/B,EAC5CuC,KAAKgwB,MAAMrzB,GAAKK,EAAIuE,EACpBA,EAAQ67B,IAAc,GAAK3/B,EAGzB8D,IACFvB,KAAKgwB,MAAMrzB,GAAK4E,EAChBvB,KAAKU,UAIT,GAAU,IAANhC,EAAS,CACX,IAAK/B,EAAIqD,KAAKU,OAAS,EAAG/D,GAAK,EAAGA,IAChCqD,KAAKgwB,MAAMrzB,EAAI+B,GAAKsB,KAAKgwB,MAAMrzB,GAGjC,IAAKA,EAAI,EAAGA,EAAI+B,EAAG/B,IACjBqD,KAAKgwB,MAAMrzB,GAAK,EAGlBqD,KAAKU,QAAUhC,EAGjB,OAAOsB,KAAKgxB,SAGdpB,EAAGrxB,UAAU8+B,MAAQ,SAAgBp1B,GAGnC,OADAonB,EAAyB,IAAlBrvB,KAAK+vB,UACL/vB,KAAKk9B,OAAOj1B,IAMrB2nB,EAAGrxB,UAAU00B,OAAS,SAAiBhrB,EAAMq1B,EAAMC,GAEjD,IAAIC,EADJnO,EAAuB,iBAATpnB,GAAqBA,GAAQ,GAGzCu1B,EADEF,GACGA,EAAQA,EAAO,IAAO,GAEvB,EAGN,IAAI7/B,EAAIwK,EAAO,GACXvJ,EAAI2B,KAAKiK,KAAKrC,EAAOxK,GAAK,GAAIuC,KAAKU,QACnC+8B,EAAO,SAAc,WAAchgC,GAAMA,EACzCigC,EAAcH,EAMlB,GAJAC,GAAK9+B,EACL8+B,EAAIn9B,KAAKyF,IAAI,EAAG03B,GAGZE,EAAa,CACf,IAAK,IAAI/gC,EAAI,EAAGA,EAAI+B,EAAG/B,IACrB+gC,EAAY1N,MAAMrzB,GAAKqD,KAAKgwB,MAAMrzB,GAEpC+gC,EAAYh9B,OAAShC,EAGvB,GAAU,IAANA,QAEG,GAAIsB,KAAKU,OAAShC,EAEvB,IADAsB,KAAKU,QAAUhC,EACV/B,EAAI,EAAGA,EAAIqD,KAAKU,OAAQ/D,IAC3BqD,KAAKgwB,MAAMrzB,GAAKqD,KAAKgwB,MAAMrzB,EAAI+B,QAGjCsB,KAAKgwB,MAAM,GAAK,EAChBhwB,KAAKU,OAAS,EAGhB,IAAIa,EAAQ,EACZ,IAAK5E,EAAIqD,KAAKU,OAAS,EAAG/D,GAAK,IAAgB,IAAV4E,GAAe5E,GAAK6gC,GAAI7gC,IAAK,CAChE,IAAIy0B,EAAuB,EAAhBpxB,KAAKgwB,MAAMrzB,GACtBqD,KAAKgwB,MAAMrzB,GAAM4E,GAAU,GAAK9D,EAAO2zB,IAAS3zB,EAChD8D,EAAQ6vB,EAAOqM,EAajB,OATIC,GAAyB,IAAVn8B,IACjBm8B,EAAY1N,MAAM0N,EAAYh9B,UAAYa,GAGxB,IAAhBvB,KAAKU,SACPV,KAAKgwB,MAAM,GAAK,EAChBhwB,KAAKU,OAAS,GAGTV,KAAKgxB,SAGdpB,EAAGrxB,UAAUo/B,MAAQ,SAAgB11B,EAAMq1B,EAAMC,GAG/C,OADAlO,EAAyB,IAAlBrvB,KAAK+vB,UACL/vB,KAAKizB,OAAOhrB,EAAMq1B,EAAMC,IAIjC3N,EAAGrxB,UAAUq/B,KAAO,SAAe31B,GACjC,OAAOjI,KAAK6kB,QAAQwY,MAAMp1B,IAG5B2nB,EAAGrxB,UAAUs/B,MAAQ,SAAgB51B,GACnC,OAAOjI,KAAK6kB,QAAQqY,OAAOj1B,IAI7B2nB,EAAGrxB,UAAUu/B,KAAO,SAAe71B,GACjC,OAAOjI,KAAK6kB,QAAQ8Y,MAAM11B,IAG5B2nB,EAAGrxB,UAAUw/B,MAAQ,SAAgB91B,GACnC,OAAOjI,KAAK6kB,QAAQoO,OAAOhrB,IAI7B2nB,EAAGrxB,UAAUq1B,MAAQ,SAAgBgB,GACnCvF,EAAsB,iBAARuF,GAAoBA,GAAO,GACzC,IAAIn3B,EAAIm3B,EAAM,GACVl2B,GAAKk2B,EAAMn3B,GAAK,GAChBoF,EAAI,GAAKpF,EAGb,QAAIuC,KAAKU,QAAUhC,OAGXsB,KAAKgwB,MAAMtxB,GAELmE,IAIhB+sB,EAAGrxB,UAAUy/B,OAAS,SAAiB/1B,GACrConB,EAAuB,iBAATpnB,GAAqBA,GAAQ,GAC3C,IAAIxK,EAAIwK,EAAO,GACXvJ,GAAKuJ,EAAOxK,GAAK,GAIrB,GAFA4xB,EAAyB,IAAlBrvB,KAAK+vB,SAAgB,2CAExB/vB,KAAKU,QAAUhC,EACjB,OAAOsB,KAQT,GALU,IAANvC,GACFiB,IAEFsB,KAAKU,OAASL,KAAKiK,IAAI5L,EAAGsB,KAAKU,QAErB,IAANjD,EAAS,CACX,IAAIggC,EAAO,SAAc,WAAchgC,GAAMA,EAC7CuC,KAAKgwB,MAAMhwB,KAAKU,OAAS,IAAM+8B,EAGjC,OAAOz9B,KAAKgxB,SAIdpB,EAAGrxB,UAAU0/B,MAAQ,SAAgBh2B,GACnC,OAAOjI,KAAK6kB,QAAQmZ,OAAO/1B,IAI7B2nB,EAAGrxB,UAAUm1B,MAAQ,SAAgBjD,GAGnC,OAFApB,EAAsB,iBAARoB,GACdpB,EAAOoB,EAAM,UACTA,EAAM,EAAUzwB,KAAKk+B,OAAOzN,GAGV,IAAlBzwB,KAAK+vB,SACa,IAAhB/vB,KAAKU,SAAiC,EAAhBV,KAAKgwB,MAAM,IAAUS,GAC7CzwB,KAAKgwB,MAAM,GAAKS,GAAuB,EAAhBzwB,KAAKgwB,MAAM,IAClChwB,KAAK+vB,SAAW,EACT/vB,OAGTA,KAAK+vB,SAAW,EAChB/vB,KAAKk+B,MAAMzN,GACXzwB,KAAK+vB,SAAW,EACT/vB,MAIFA,KAAKsxB,OAAOb,IAGrBb,EAAGrxB,UAAU+yB,OAAS,SAAiBb,GACrCzwB,KAAKgwB,MAAM,IAAMS,EAGjB,IAAK,IAAI9zB,EAAI,EAAGA,EAAIqD,KAAKU,QAAUV,KAAKgwB,MAAMrzB,IAAM,SAAWA,IAC7DqD,KAAKgwB,MAAMrzB,IAAM,SACbA,IAAMqD,KAAKU,OAAS,EACtBV,KAAKgwB,MAAMrzB,EAAI,GAAK,EAEpBqD,KAAKgwB,MAAMrzB,EAAI,KAKnB,OAFAqD,KAAKU,OAASL,KAAKyF,IAAI9F,KAAKU,OAAQ/D,EAAI,GAEjCqD,MAIT4vB,EAAGrxB,UAAU2/B,MAAQ,SAAgBzN,GAGnC,GAFApB,EAAsB,iBAARoB,GACdpB,EAAOoB,EAAM,UACTA,EAAM,EAAG,OAAOzwB,KAAK0zB,OAAOjD,GAEhC,GAAsB,IAAlBzwB,KAAK+vB,SAIP,OAHA/vB,KAAK+vB,SAAW,EAChB/vB,KAAK0zB,MAAMjD,GACXzwB,KAAK+vB,SAAW,EACT/vB,KAKT,GAFAA,KAAKgwB,MAAM,IAAMS,EAEG,IAAhBzwB,KAAKU,QAAgBV,KAAKgwB,MAAM,GAAK,EACvChwB,KAAKgwB,MAAM,IAAMhwB,KAAKgwB,MAAM,GAC5BhwB,KAAK+vB,SAAW,OAGhB,IAAK,IAAIpzB,EAAI,EAAGA,EAAIqD,KAAKU,QAAUV,KAAKgwB,MAAMrzB,GAAK,EAAGA,IACpDqD,KAAKgwB,MAAMrzB,IAAM,SACjBqD,KAAKgwB,MAAMrzB,EAAI,IAAM,EAIzB,OAAOqD,KAAKgxB,SAGdpB,EAAGrxB,UAAU4/B,KAAO,SAAe1N,GACjC,OAAOzwB,KAAK6kB,QAAQ6O,MAAMjD,IAG5Bb,EAAGrxB,UAAU6/B,KAAO,SAAe3N,GACjC,OAAOzwB,KAAK6kB,QAAQqZ,MAAMzN,IAG5Bb,EAAGrxB,UAAU8/B,KAAO,WAGlB,OAFAr+B,KAAK+vB,SAAW,EAET/vB,MAGT4vB,EAAGrxB,UAAU8E,IAAM,WACjB,OAAOrD,KAAK6kB,QAAQwZ,QAGtBzO,EAAGrxB,UAAU+/B,aAAe,SAAuB7N,EAAKD,EAAKhtB,GAC3D,IACI7G,EAIAm0B,EALAvK,EAAMkK,EAAI/vB,OAAS8C,EAGvBxD,KAAKyxB,QAAQlL,GAGb,IAAIhlB,EAAQ,EACZ,IAAK5E,EAAI,EAAGA,EAAI8zB,EAAI/vB,OAAQ/D,IAAK,CAC/Bm0B,GAA6B,EAAxB9wB,KAAKgwB,MAAMrzB,EAAI6G,IAAcjC,EAClC,IAAI4jB,GAAwB,EAAfsL,EAAIT,MAAMrzB,IAAU6zB,EAEjCjvB,IADAuvB,GAAa,SAAR3L,IACS,KAAQA,EAAQ,SAAa,GAC3CnlB,KAAKgwB,MAAMrzB,EAAI6G,GAAa,SAAJstB,EAE1B,KAAOn0B,EAAIqD,KAAKU,OAAS8C,EAAO7G,IAE9B4E,GADAuvB,GAA6B,EAAxB9wB,KAAKgwB,MAAMrzB,EAAI6G,IAAcjC,IACrB,GACbvB,KAAKgwB,MAAMrzB,EAAI6G,GAAa,SAAJstB,EAG1B,GAAc,IAAVvvB,EAAa,OAAOvB,KAAKgxB,QAK7B,IAFA3B,GAAkB,IAAX9tB,GACPA,EAAQ,EACH5E,EAAI,EAAGA,EAAIqD,KAAKU,OAAQ/D,IAE3B4E,GADAuvB,IAAsB,EAAhB9wB,KAAKgwB,MAAMrzB,IAAU4E,IACd,GACbvB,KAAKgwB,MAAMrzB,GAAS,SAAJm0B,EAIlB,OAFA9wB,KAAK+vB,SAAW,EAET/vB,KAAKgxB,SAGdpB,EAAGrxB,UAAUggC,SAAW,SAAmB9N,EAAK3yB,GAC9C,IAAI0F,GAAQxD,KAAKU,OAAS+vB,EAAI/vB,QAE1BQ,EAAIlB,KAAK6kB,QACT1jB,EAAIsvB,EAGJ+N,EAA8B,EAAxBr9B,EAAE6uB,MAAM7uB,EAAET,OAAS,GAGf,KADd8C,EAAQ,GADMxD,KAAKmzB,WAAWqL,MAG5Br9B,EAAIA,EAAE08B,MAAMr6B,GACZtC,EAAEg8B,OAAO15B,GACTg7B,EAA8B,EAAxBr9B,EAAE6uB,MAAM7uB,EAAET,OAAS,IAI3B,IACImC,EADA9F,EAAImE,EAAER,OAASS,EAAET,OAGrB,GAAa,QAAT5C,EAAgB,EAClB+E,EAAI,IAAI+sB,EAAG,OACTlvB,OAAS3D,EAAI,EACf8F,EAAEmtB,MAAQ,IAAIlvB,MAAM+B,EAAEnC,QACtB,IAAK,IAAI/D,EAAI,EAAGA,EAAIkG,EAAEnC,OAAQ/D,IAC5BkG,EAAEmtB,MAAMrzB,GAAK,EAIjB,IAAI8hC,EAAOv9B,EAAE2jB,QAAQyZ,aAAan9B,EAAG,EAAGpE,GAClB,IAAlB0hC,EAAK1O,WACP7uB,EAAIu9B,EACA57B,IACFA,EAAEmtB,MAAMjzB,GAAK,IAIjB,IAAK,IAAIsF,EAAItF,EAAI,EAAGsF,GAAK,EAAGA,IAAK,CAC/B,IAAIq8B,EAAmC,UAAL,EAAxBx9B,EAAE8uB,MAAM7uB,EAAET,OAAS2B,KACE,EAA5BnB,EAAE8uB,MAAM7uB,EAAET,OAAS2B,EAAI,IAO1B,IAHAq8B,EAAKr+B,KAAKiK,IAAKo0B,EAAKF,EAAO,EAAG,UAE9Bt9B,EAAEo9B,aAAan9B,EAAGu9B,EAAIr8B,GACA,IAAfnB,EAAE6uB,UACP2O,IACAx9B,EAAE6uB,SAAW,EACb7uB,EAAEo9B,aAAan9B,EAAG,EAAGkB,GAChBnB,EAAE4F,WACL5F,EAAE6uB,UAAY,GAGdltB,IACFA,EAAEmtB,MAAM3tB,GAAKq8B,GAajB,OAVI77B,GACFA,EAAEmuB,QAEJ9vB,EAAE8vB,QAGW,QAATlzB,GAA4B,IAAV0F,GACpBtC,EAAE+xB,OAAOzvB,GAGJ,CACLm7B,IAAK97B,GAAK,KACVyB,IAAKpD,IAQT0uB,EAAGrxB,UAAU8H,OAAS,SAAiBoqB,EAAK3yB,EAAM8gC,GAGhD,OAFAvP,GAAQoB,EAAI3pB,UAER9G,KAAK8G,SACA,CACL63B,IAAK,IAAI/O,EAAG,GACZtrB,IAAK,IAAIsrB,EAAG,IAKM,IAAlB5vB,KAAK+vB,UAAmC,IAAjBU,EAAIV,UAC7BgD,EAAM/yB,KAAKuL,MAAMlF,OAAOoqB,EAAK3yB,GAEhB,QAATA,IACF6gC,EAAM5L,EAAI4L,IAAIpzB,OAGH,QAATzN,IACFwG,EAAMyuB,EAAIzuB,IAAIiH,MACVqzB,GAA6B,IAAjBt6B,EAAIyrB,UAClBzrB,EAAIwwB,KAAKrE,IAIN,CACLkO,IAAKA,EACLr6B,IAAKA,IAIa,IAAlBtE,KAAK+vB,UAAmC,IAAjBU,EAAIV,UAC7BgD,EAAM/yB,KAAKqG,OAAOoqB,EAAIllB,MAAOzN,GAEhB,QAATA,IACF6gC,EAAM5L,EAAI4L,IAAIpzB,OAGT,CACLozB,IAAKA,EACLr6B,IAAKyuB,EAAIzuB,MAI0B,IAAlCtE,KAAK+vB,SAAWU,EAAIV,WACvBgD,EAAM/yB,KAAKuL,MAAMlF,OAAOoqB,EAAIllB,MAAOzN,GAEtB,QAATA,IACFwG,EAAMyuB,EAAIzuB,IAAIiH,MACVqzB,GAA6B,IAAjBt6B,EAAIyrB,UAClBzrB,EAAIywB,KAAKtE,IAIN,CACLkO,IAAK5L,EAAI4L,IACTr6B,IAAKA,IAOLmsB,EAAI/vB,OAASV,KAAKU,QAAUV,KAAKwN,IAAIijB,GAAO,EACvC,CACLkO,IAAK,IAAI/O,EAAG,GACZtrB,IAAKtE,MAKU,IAAfywB,EAAI/vB,OACO,QAAT5C,EACK,CACL6gC,IAAK3+B,KAAK6+B,KAAKpO,EAAIT,MAAM,IACzB1rB,IAAK,MAII,QAATxG,EACK,CACL6gC,IAAK,KACLr6B,IAAK,IAAIsrB,EAAG5vB,KAAKuyB,KAAK9B,EAAIT,MAAM,MAI7B,CACL2O,IAAK3+B,KAAK6+B,KAAKpO,EAAIT,MAAM,IACzB1rB,IAAK,IAAIsrB,EAAG5vB,KAAKuyB,KAAK9B,EAAIT,MAAM,MAI7BhwB,KAAKu+B,SAAS9N,EAAK3yB,GAlF1B,IAAI6gC,EAAKr6B,EAAKyuB,GAsFhBnD,EAAGrxB,UAAUogC,IAAM,SAAclO,GAC/B,OAAOzwB,KAAKqG,OAAOoqB,EAAK,OAAO,GAAOkO,KAIxC/O,EAAGrxB,UAAU+F,IAAM,SAAcmsB,GAC/B,OAAOzwB,KAAKqG,OAAOoqB,EAAK,OAAO,GAAOnsB,KAGxCsrB,EAAGrxB,UAAUugC,KAAO,SAAerO,GACjC,OAAOzwB,KAAKqG,OAAOoqB,EAAK,OAAO,GAAMnsB,KAIvCsrB,EAAGrxB,UAAUwgC,SAAW,SAAmBtO,GACzC,IAAIuO,EAAKh/B,KAAKqG,OAAOoqB,GAGrB,GAAIuO,EAAG16B,IAAIwC,SAAU,OAAOk4B,EAAGL,IAE/B,IAAIr6B,EAA0B,IAApB06B,EAAGL,IAAI5O,SAAiBiP,EAAG16B,IAAIywB,KAAKtE,GAAOuO,EAAG16B,IAEpD26B,EAAOxO,EAAIsN,MAAM,GACjBmB,EAAKzO,EAAIuC,MAAM,GACfxlB,EAAMlJ,EAAIkJ,IAAIyxB,GAGlB,OAAIzxB,EAAM,GAAY,IAAP0xB,GAAoB,IAAR1xB,EAAkBwxB,EAAGL,IAGrB,IAApBK,EAAGL,IAAI5O,SAAiBiP,EAAGL,IAAIT,MAAM,GAAKc,EAAGL,IAAIjL,MAAM,IAGhE9D,EAAGrxB,UAAUg0B,KAAO,SAAe9B,GACjCpB,EAAOoB,GAAO,UAId,IAHA,IAAIhyB,GAAK,GAAK,IAAMgyB,EAEhB0O,EAAM,EACDxiC,EAAIqD,KAAKU,OAAS,EAAG/D,GAAK,EAAGA,IACpCwiC,GAAO1gC,EAAI0gC,GAAuB,EAAhBn/B,KAAKgwB,MAAMrzB,KAAW8zB,EAG1C,OAAO0O,GAITvP,EAAGrxB,UAAUi0B,MAAQ,SAAgB/B,GACnCpB,EAAOoB,GAAO,UAGd,IADA,IAAIlvB,EAAQ,EACH5E,EAAIqD,KAAKU,OAAS,EAAG/D,GAAK,EAAGA,IAAK,CACzC,IAAIm0B,GAAqB,EAAhB9wB,KAAKgwB,MAAMrzB,IAAkB,SAAR4E,EAC9BvB,KAAKgwB,MAAMrzB,GAAMm0B,EAAIL,EAAO,EAC5BlvB,EAAQuvB,EAAIL,EAGd,OAAOzwB,KAAKgxB,SAGdpB,EAAGrxB,UAAUsgC,KAAO,SAAepO,GACjC,OAAOzwB,KAAK6kB,QAAQ2N,MAAM/B,IAG5Bb,EAAGrxB,UAAU6gC,KAAO,SAAe3gC,GACjC4wB,EAAsB,IAAf5wB,EAAEsxB,UACTV,GAAQ5wB,EAAEqI,UAEV,IAAIjG,EAAIb,KACJ6F,EAAIpH,EAAEomB,QAGRhkB,EADiB,IAAfA,EAAEkvB,SACAlvB,EAAEi+B,KAAKrgC,GAEPoC,EAAEgkB,QAaR,IATA,IAAIwa,EAAI,IAAIzP,EAAG,GACX0P,EAAI,IAAI1P,EAAG,GAGX2P,EAAI,IAAI3P,EAAG,GACX4P,EAAI,IAAI5P,EAAG,GAEX6P,EAAI,EAED5+B,EAAE8D,UAAYkB,EAAElB,UACrB9D,EAAEoyB,OAAO,GACTptB,EAAEotB,OAAO,KACPwM,EAMJ,IAHA,IAAIC,EAAK75B,EAAEgf,QACP8a,EAAK9+B,EAAEgkB,SAEHhkB,EAAEiG,UAAU,CAClB,IAAK,IAAInK,EAAI,EAAGijC,EAAK,EAAyB,IAArB/+B,EAAEmvB,MAAM,GAAK4P,IAAajjC,EAAI,KAAMA,EAAGijC,IAAO,GACvE,GAAIjjC,EAAI,EAEN,IADAkE,EAAEoyB,OAAOt2B,GACFA,KAAM,IACP0iC,EAAEp4B,SAAWq4B,EAAEr4B,WACjBo4B,EAAEvK,KAAK4K,GACPJ,EAAEvK,KAAK4K,IAGTN,EAAEpM,OAAO,GACTqM,EAAErM,OAAO,GAIb,IAAK,IAAI5wB,EAAI,EAAGw9B,EAAK,EAAyB,IAArBh6B,EAAEmqB,MAAM,GAAK6P,IAAax9B,EAAI,KAAMA,EAAGw9B,IAAO,GACvE,GAAIx9B,EAAI,EAEN,IADAwD,EAAEotB,OAAO5wB,GACFA,KAAM,IACPk9B,EAAEt4B,SAAWu4B,EAAEv4B,WACjBs4B,EAAEzK,KAAK4K,GACPF,EAAEzK,KAAK4K,IAGTJ,EAAEtM,OAAO,GACTuM,EAAEvM,OAAO,GAITpyB,EAAE2M,IAAI3H,IAAM,GACdhF,EAAEk0B,KAAKlvB,GACPw5B,EAAEtK,KAAKwK,GACPD,EAAEvK,KAAKyK,KAEP35B,EAAEkvB,KAAKl0B,GACP0+B,EAAExK,KAAKsK,GACPG,EAAEzK,KAAKuK,IAIX,MAAO,CACLp+B,EAAGq+B,EACHp+B,EAAGq+B,EACHj1B,IAAK1E,EAAEq3B,OAAOuC,KAOlB7P,EAAGrxB,UAAUuhC,OAAS,SAAiBrhC,GACrC4wB,EAAsB,IAAf5wB,EAAEsxB,UACTV,GAAQ5wB,EAAEqI,UAEV,IAAI5F,EAAIlB,KACJmB,EAAI1C,EAAEomB,QAGR3jB,EADiB,IAAfA,EAAE6uB,SACA7uB,EAAE49B,KAAKrgC,GAEPyC,EAAE2jB,QAQR,IALA,IAuCIkO,EAvCAgN,EAAK,IAAInQ,EAAG,GACZoQ,EAAK,IAAIpQ,EAAG,GAEZqQ,EAAQ9+B,EAAE0jB,QAEP3jB,EAAEg/B,KAAK,GAAK,GAAK/+B,EAAE++B,KAAK,GAAK,GAAG,CACrC,IAAK,IAAIvjC,EAAI,EAAGijC,EAAK,EAAyB,IAArB1+B,EAAE8uB,MAAM,GAAK4P,IAAajjC,EAAI,KAAMA,EAAGijC,IAAO,GACvE,GAAIjjC,EAAI,EAEN,IADAuE,EAAE+xB,OAAOt2B,GACFA,KAAM,GACPojC,EAAG94B,SACL84B,EAAGjL,KAAKmL,GAGVF,EAAG9M,OAAO,GAId,IAAK,IAAI5wB,EAAI,EAAGw9B,EAAK,EAAyB,IAArB1+B,EAAE6uB,MAAM,GAAK6P,IAAax9B,EAAI,KAAMA,EAAGw9B,IAAO,GACvE,GAAIx9B,EAAI,EAEN,IADAlB,EAAE8xB,OAAO5wB,GACFA,KAAM,GACP29B,EAAG/4B,SACL+4B,EAAGlL,KAAKmL,GAGVD,EAAG/M,OAAO,GAIV/xB,EAAEsM,IAAIrM,IAAM,GACdD,EAAE6zB,KAAK5zB,GACP4+B,EAAGhL,KAAKiL,KAER7+B,EAAE4zB,KAAK7zB,GACP8+B,EAAGjL,KAAKgL,IAeZ,OATEhN,EADgB,IAAd7xB,EAAEg/B,KAAK,GACHH,EAEAC,GAGAE,KAAK,GAAK,GAChBnN,EAAI+B,KAAKr2B,GAGJs0B,GAGTnD,EAAGrxB,UAAUgM,IAAM,SAAckmB,GAC/B,GAAIzwB,KAAK8G,SAAU,OAAO2pB,EAAIptB,MAC9B,GAAIotB,EAAI3pB,SAAU,OAAO9G,KAAKqD,MAE9B,IAAInC,EAAIlB,KAAK6kB,QACT1jB,EAAIsvB,EAAI5L,QACZ3jB,EAAE6uB,SAAW,EACb5uB,EAAE4uB,SAAW,EAGb,IAAK,IAAIvsB,EAAQ,EAAGtC,EAAEyD,UAAYxD,EAAEwD,SAAUnB,IAC5CtC,EAAE+xB,OAAO,GACT9xB,EAAE8xB,OAAO,GAGX,OAAG,CACD,KAAO/xB,EAAEyD,UACPzD,EAAE+xB,OAAO,GAEX,KAAO9xB,EAAEwD,UACPxD,EAAE8xB,OAAO,GAGX,IAAIx1B,EAAIyD,EAAEsM,IAAIrM,GACd,GAAI1D,EAAI,EAAG,CAET,IAAII,EAAIqD,EACRA,EAAIC,EACJA,EAAItD,OACC,GAAU,IAANJ,GAAyB,IAAd0D,EAAE++B,KAAK,GAC3B,MAGFh/B,EAAE6zB,KAAK5zB,GAGT,OAAOA,EAAE+7B,OAAO15B,IAIlBosB,EAAGrxB,UAAU4hC,KAAO,SAAe1P,GACjC,OAAOzwB,KAAKo/B,KAAK3O,GAAKvvB,EAAE49B,KAAKrO,IAG/Bb,EAAGrxB,UAAUoG,OAAS,WACpB,OAA+B,IAAP,EAAhB3E,KAAKgwB,MAAM,KAGrBJ,EAAGrxB,UAAU0I,MAAQ,WACnB,OAA+B,IAAP,EAAhBjH,KAAKgwB,MAAM,KAIrBJ,EAAGrxB,UAAUy0B,MAAQ,SAAgBvC,GACnC,OAAOzwB,KAAKgwB,MAAM,GAAKS,GAIzBb,EAAGrxB,UAAU6hC,MAAQ,SAAgBxL,GACnCvF,EAAsB,iBAARuF,GACd,IAAIn3B,EAAIm3B,EAAM,GACVl2B,GAAKk2B,EAAMn3B,GAAK,GAChBoF,EAAI,GAAKpF,EAGb,GAAIuC,KAAKU,QAAUhC,EAGjB,OAFAsB,KAAKyxB,QAAQ/yB,EAAI,GACjBsB,KAAKgwB,MAAMtxB,IAAMmE,EACV7C,KAKT,IADA,IAAIuB,EAAQsB,EACHlG,EAAI+B,EAAa,IAAV6C,GAAe5E,EAAIqD,KAAKU,OAAQ/D,IAAK,CACnD,IAAIm0B,EAAoB,EAAhB9wB,KAAKgwB,MAAMrzB,GAEnB4E,GADAuvB,GAAKvvB,KACS,GACduvB,GAAK,SACL9wB,KAAKgwB,MAAMrzB,GAAKm0B,EAMlB,OAJc,IAAVvvB,IACFvB,KAAKgwB,MAAMrzB,GAAK4E,EAChBvB,KAAKU,UAEAV,MAGT4vB,EAAGrxB,UAAUuI,OAAS,WACpB,OAAuB,IAAhB9G,KAAKU,QAAkC,IAAlBV,KAAKgwB,MAAM,IAGzCJ,EAAGrxB,UAAU2hC,KAAO,SAAezP,GACjC,IAOIsC,EAPAhD,EAAWU,EAAM,EAErB,GAAsB,IAAlBzwB,KAAK+vB,WAAmBA,EAAU,OAAQ,EAC9C,GAAsB,IAAlB/vB,KAAK+vB,UAAkBA,EAAU,OAAO,EAK5C,GAHA/vB,KAAKgxB,QAGDhxB,KAAKU,OAAS,EAChBqyB,EAAM,MACD,CACDhD,IACFU,GAAOA,GAGTpB,EAAOoB,GAAO,SAAW,qBAEzB,IAAIK,EAAoB,EAAhB9wB,KAAKgwB,MAAM,GACnB+C,EAAMjC,IAAML,EAAM,EAAIK,EAAIL,GAAO,EAAI,EAEvC,OAAsB,IAAlBzwB,KAAK+vB,SAA8B,GAANgD,EAC1BA,GAOTnD,EAAGrxB,UAAUiP,IAAM,SAAcijB,GAC/B,GAAsB,IAAlBzwB,KAAK+vB,UAAmC,IAAjBU,EAAIV,SAAgB,OAAQ,EACvD,GAAsB,IAAlB/vB,KAAK+vB,UAAmC,IAAjBU,EAAIV,SAAgB,OAAO,EAEtD,IAAIgD,EAAM/yB,KAAKqgC,KAAK5P,GACpB,OAAsB,IAAlBzwB,KAAK+vB,SAA8B,GAANgD,EAC1BA,GAITnD,EAAGrxB,UAAU8hC,KAAO,SAAe5P,GAEjC,GAAIzwB,KAAKU,OAAS+vB,EAAI/vB,OAAQ,OAAO,EACrC,GAAIV,KAAKU,OAAS+vB,EAAI/vB,OAAQ,OAAQ,EAGtC,IADA,IAAIqyB,EAAM,EACDp2B,EAAIqD,KAAKU,OAAS,EAAG/D,GAAK,EAAGA,IAAK,CACzC,IAAIuE,EAAoB,EAAhBlB,KAAKgwB,MAAMrzB,GACfwE,EAAmB,EAAfsvB,EAAIT,MAAMrzB,GAElB,GAAIuE,IAAMC,EAAV,CACID,EAAIC,EACN4xB,GAAO,EACE7xB,EAAIC,IACb4xB,EAAM,GAER,OAEF,OAAOA,GAGTnD,EAAGrxB,UAAU+hC,IAAM,SAAc7P,GAC/B,OAA0B,IAAnBzwB,KAAKkgC,KAAKzP,IAGnBb,EAAGrxB,UAAUkJ,GAAK,SAAagpB,GAC7B,OAAyB,IAAlBzwB,KAAKwN,IAAIijB,IAGlBb,EAAGrxB,UAAUgiC,KAAO,SAAe9P,GACjC,OAAOzwB,KAAKkgC,KAAKzP,IAAQ,GAG3Bb,EAAGrxB,UAAUiiC,IAAM,SAAc/P,GAC/B,OAAOzwB,KAAKwN,IAAIijB,IAAQ,GAG1Bb,EAAGrxB,UAAUkiC,IAAM,SAAchQ,GAC/B,OAA2B,IAApBzwB,KAAKkgC,KAAKzP,IAGnBb,EAAGrxB,UAAUmJ,GAAK,SAAa+oB,GAC7B,OAA0B,IAAnBzwB,KAAKwN,IAAIijB,IAGlBb,EAAGrxB,UAAUmiC,KAAO,SAAejQ,GACjC,OAAOzwB,KAAKkgC,KAAKzP,IAAQ,GAG3Bb,EAAGrxB,UAAUoiC,IAAM,SAAclQ,GAC/B,OAAOzwB,KAAKwN,IAAIijB,IAAQ,GAG1Bb,EAAGrxB,UAAUqiC,IAAM,SAAcnQ,GAC/B,OAA0B,IAAnBzwB,KAAKkgC,KAAKzP,IAGnBb,EAAGrxB,UAAU8I,GAAK,SAAaopB,GAC7B,OAAyB,IAAlBzwB,KAAKwN,IAAIijB,IAOlBb,EAAGK,IAAM,SAAcQ,GACrB,OAAO,IAAIoQ,EAAIpQ,IAGjBb,EAAGrxB,UAAUuiC,MAAQ,SAAgBC,GAGnC,OAFA1R,GAAQrvB,KAAKiwB,IAAK,yCAClBZ,EAAyB,IAAlBrvB,KAAK+vB,SAAgB,iCACrBgR,EAAIC,UAAUhhC,MAAMihC,UAAUF,IAGvCnR,EAAGrxB,UAAU2iC,QAAU,WAErB,OADA7R,EAAOrvB,KAAKiwB,IAAK,wDACVjwB,KAAKiwB,IAAIkR,YAAYnhC,OAG9B4vB,EAAGrxB,UAAU0iC,UAAY,SAAoBF,GAE3C,OADA/gC,KAAKiwB,IAAM8Q,EACJ/gC,MAGT4vB,EAAGrxB,UAAU6iC,SAAW,SAAmBL,GAEzC,OADA1R,GAAQrvB,KAAKiwB,IAAK,yCACXjwB,KAAKihC,UAAUF,IAGxBnR,EAAGrxB,UAAU8iC,OAAS,SAAiB5Q,GAErC,OADApB,EAAOrvB,KAAKiwB,IAAK,sCACVjwB,KAAKiwB,IAAIhvB,IAAIjB,KAAMywB,IAG5Bb,EAAGrxB,UAAU+iC,QAAU,SAAkB7Q,GAEvC,OADApB,EAAOrvB,KAAKiwB,IAAK,uCACVjwB,KAAKiwB,IAAI6E,KAAK90B,KAAMywB,IAG7Bb,EAAGrxB,UAAUgjC,OAAS,SAAiB9Q,GAErC,OADApB,EAAOrvB,KAAKiwB,IAAK,sCACVjwB,KAAKiwB,IAAI+E,IAAIh1B,KAAMywB,IAG5Bb,EAAGrxB,UAAUijC,QAAU,SAAkB/Q,GAEvC,OADApB,EAAOrvB,KAAKiwB,IAAK,uCACVjwB,KAAKiwB,IAAI8E,KAAK/0B,KAAMywB,IAG7Bb,EAAGrxB,UAAUkjC,OAAS,SAAiBhR,GAErC,OADApB,EAAOrvB,KAAKiwB,IAAK,sCACVjwB,KAAKiwB,IAAIyR,IAAI1hC,KAAMywB,IAG5Bb,EAAGrxB,UAAUojC,OAAS,SAAiBlR,GAGrC,OAFApB,EAAOrvB,KAAKiwB,IAAK,sCACjBjwB,KAAKiwB,IAAI2R,SAAS5hC,KAAMywB,GACjBzwB,KAAKiwB,IAAIO,IAAIxwB,KAAMywB,IAG5Bb,EAAGrxB,UAAUsjC,QAAU,SAAkBpR,GAGvC,OAFApB,EAAOrvB,KAAKiwB,IAAK,sCACjBjwB,KAAKiwB,IAAI2R,SAAS5hC,KAAMywB,GACjBzwB,KAAKiwB,IAAI8I,KAAK/4B,KAAMywB,IAG7Bb,EAAGrxB,UAAUujC,OAAS,WAGpB,OAFAzS,EAAOrvB,KAAKiwB,IAAK,sCACjBjwB,KAAKiwB,IAAI8R,SAAS/hC,MACXA,KAAKiwB,IAAI8M,IAAI/8B,OAGtB4vB,EAAGrxB,UAAUyjC,QAAU,WAGrB,OAFA3S,EAAOrvB,KAAKiwB,IAAK,uCACjBjwB,KAAKiwB,IAAI8R,SAAS/hC,MACXA,KAAKiwB,IAAI+M,KAAKh9B,OAIvB4vB,EAAGrxB,UAAU0jC,QAAU,WAGrB,OAFA5S,EAAOrvB,KAAKiwB,IAAK,uCACjBjwB,KAAKiwB,IAAI8R,SAAS/hC,MACXA,KAAKiwB,IAAIiS,KAAKliC,OAGvB4vB,EAAGrxB,UAAU4jC,QAAU,WAGrB,OAFA9S,EAAOrvB,KAAKiwB,IAAK,uCACjBjwB,KAAKiwB,IAAI8R,SAAS/hC,MACXA,KAAKiwB,IAAIkQ,KAAKngC,OAIvB4vB,EAAGrxB,UAAU6jC,OAAS,WAGpB,OAFA/S,EAAOrvB,KAAKiwB,IAAK,sCACjBjwB,KAAKiwB,IAAI8R,SAAS/hC,MACXA,KAAKiwB,IAAI1kB,IAAIvL,OAGtB4vB,EAAGrxB,UAAU8jC,OAAS,SAAiB5R,GAGrC,OAFApB,EAAOrvB,KAAKiwB,MAAQQ,EAAIR,IAAK,qBAC7BjwB,KAAKiwB,IAAI8R,SAAS/hC,MACXA,KAAKiwB,IAAI1pB,IAAIvG,KAAMywB,IAI5B,IAAI6R,EAAS,CACXC,KAAM,KACNC,KAAM,KACNC,KAAM,KACNC,OAAQ,MAIV,SAASC,EAAQzlC,EAAMuB,GAErBuB,KAAK9C,KAAOA,EACZ8C,KAAKvB,EAAI,IAAImxB,EAAGnxB,EAAG,IACnBuB,KAAK5B,EAAI4B,KAAKvB,EAAEyJ,YAChBlI,KAAKiyB,EAAI,IAAIrC,EAAG,GAAGsN,OAAOl9B,KAAK5B,GAAG22B,KAAK/0B,KAAKvB,GAE5CuB,KAAKyK,IAAMzK,KAAK4iC,OA2ClB,SAASC,IACPF,EAAO7lC,KACLkD,KACA,OACA,2EA+DJ,SAAS8iC,IACPH,EAAO7lC,KACLkD,KACA,OACA,kEAIJ,SAAS+iC,IACPJ,EAAO7lC,KACLkD,KACA,OACA,yDAIJ,SAASgjC,IAEPL,EAAO7lC,KACLkD,KACA,QACA,uEA8CJ,SAAS6gC,EAAK9jC,GACZ,GAAiB,iBAANA,EAAgB,CACzB,IAAIkmC,EAAQrT,EAAGsT,OAAOnmC,GACtBiD,KAAKjD,EAAIkmC,EAAMxkC,EACfuB,KAAKijC,MAAQA,OAEb5T,EAAOtyB,EAAEujC,IAAI,GAAI,kCACjBtgC,KAAKjD,EAAIA,EACTiD,KAAKijC,MAAQ,KAkOjB,SAASE,EAAMpmC,GACb8jC,EAAI/jC,KAAKkD,KAAMjD,GAEfiD,KAAKwD,MAAQxD,KAAKjD,EAAEmL,YAChBlI,KAAKwD,MAAQ,IAAO,IACtBxD,KAAKwD,OAAS,GAAMxD,KAAKwD,MAAQ,IAGnCxD,KAAKvC,EAAI,IAAImyB,EAAG,GAAGsN,OAAOl9B,KAAKwD,OAC/BxD,KAAKk/B,GAAKl/B,KAAKojC,KAAKpjC,KAAKvC,EAAEs/B,OAC3B/8B,KAAKqjC,KAAOrjC,KAAKvC,EAAEqiC,OAAO9/B,KAAKjD,GAE/BiD,KAAKsjC,KAAOtjC,KAAKqjC,KAAK7S,IAAIxwB,KAAKvC,GAAGygC,MAAM,GAAGS,IAAI3+B,KAAKjD,GACpDiD,KAAKsjC,KAAOtjC,KAAKsjC,KAAKxE,KAAK9+B,KAAKvC,GAChCuC,KAAKsjC,KAAOtjC,KAAKvC,EAAEu3B,IAAIh1B,KAAKsjC,MAta9BX,EAAOpkC,UAAUqkC,KAAO,WACtB,IAAIn4B,EAAM,IAAImlB,EAAG,MAEjB,OADAnlB,EAAIulB,MAAQ,IAAIlvB,MAAMT,KAAKW,KAAKhB,KAAK5B,EAAI,KAClCqM,GAGTk4B,EAAOpkC,UAAUglC,QAAU,SAAkB9S,GAG3C,IACI+S,EADA/lC,EAAIgzB,EAGR,GACEzwB,KAAKgM,MAAMvO,EAAGuC,KAAKyK,KAGnB+4B,GADA/lC,GADAA,EAAIuC,KAAKyjC,MAAMhmC,IACTq3B,KAAK90B,KAAKyK,MACPvC,kBACFs7B,EAAOxjC,KAAK5B,GAErB,IAAIoP,EAAMg2B,EAAOxjC,KAAK5B,GAAK,EAAIX,EAAE4iC,KAAKrgC,KAAKvB,GAU3C,OATY,IAAR+O,GACF/P,EAAEuyB,MAAM,GAAK,EACbvyB,EAAEiD,OAAS,GACF8M,EAAM,EACf/P,EAAEs3B,KAAK/0B,KAAKvB,GAEZhB,EAAEuzB,QAGGvzB,GAGTklC,EAAOpkC,UAAUyN,MAAQ,SAAgB+O,EAAOtP,GAC9CsP,EAAMkY,OAAOjzB,KAAK5B,EAAG,EAAGqN,IAG1Bk3B,EAAOpkC,UAAUklC,MAAQ,SAAgBhT,GACvC,OAAOA,EAAIsI,KAAK/4B,KAAKiyB,IASvB1C,EAASsT,EAAMF,GAEfE,EAAKtkC,UAAUyN,MAAQ,SAAgB+O,EAAOE,GAK5C,IAHA,IAEI0oB,EAAStjC,KAAKiK,IAAIyQ,EAAMra,OAAQ,GAC3B/D,EAAI,EAAGA,EAAIgnC,EAAQhnC,IAC1Bse,EAAO+U,MAAMrzB,GAAKoe,EAAMiV,MAAMrzB,GAIhC,GAFAse,EAAOva,OAASijC,EAEZ5oB,EAAMra,QAAU,EAGlB,OAFAqa,EAAMiV,MAAM,GAAK,OACjBjV,EAAMra,OAAS,GAKjB,IAAIsE,EAAO+V,EAAMiV,MAAM,GAGvB,IAFA/U,EAAO+U,MAAM/U,EAAOva,UAhBT,QAgBqBsE,EAE3BrI,EAAI,GAAIA,EAAIoe,EAAMra,OAAQ/D,IAAK,CAClC,IAAIuI,EAAwB,EAAjB6V,EAAMiV,MAAMrzB,GACvBoe,EAAMiV,MAAMrzB,EAAI,KApBP,QAoBeuI,IAAgB,EAAMF,IAAS,GACvDA,EAAOE,EAETF,KAAU,GACV+V,EAAMiV,MAAMrzB,EAAI,IAAMqI,EACT,IAATA,GAAc+V,EAAMra,OAAS,GAC/Bqa,EAAMra,QAAU,GAEhBqa,EAAMra,QAAU,GAIpBmiC,EAAKtkC,UAAUklC,MAAQ,SAAgBhT,GAErCA,EAAIT,MAAMS,EAAI/vB,QAAU,EACxB+vB,EAAIT,MAAMS,EAAI/vB,OAAS,GAAK,EAC5B+vB,EAAI/vB,QAAU,EAId,IADA,IAAIsxB,EAAK,EACAr1B,EAAI,EAAGA,EAAI8zB,EAAI/vB,OAAQ/D,IAAK,CACnC,IAAIm0B,EAAmB,EAAfL,EAAIT,MAAMrzB,GAClBq1B,GAAU,IAAJlB,EACNL,EAAIT,MAAMrzB,GAAU,SAALq1B,EACfA,EAAS,GAAJlB,GAAakB,EAAK,SAAa,GAUtC,OANkC,IAA9BvB,EAAIT,MAAMS,EAAI/vB,OAAS,KACzB+vB,EAAI/vB,SAC8B,IAA9B+vB,EAAIT,MAAMS,EAAI/vB,OAAS,IACzB+vB,EAAI/vB,UAGD+vB,GASTlB,EAASuT,EAAMH,GAQfpT,EAASwT,EAAMJ,GASfpT,EAASyT,EAAQL,GAEjBK,EAAOzkC,UAAUklC,MAAQ,SAAgBhT,GAGvC,IADA,IAAIlvB,EAAQ,EACH5E,EAAI,EAAGA,EAAI8zB,EAAI/vB,OAAQ/D,IAAK,CACnC,IAAI02B,EAA0B,IAAL,EAAf5C,EAAIT,MAAMrzB,IAAiB4E,EACjCywB,EAAU,SAALqB,EACTA,KAAQ,GAER5C,EAAIT,MAAMrzB,GAAKq1B,EACfzwB,EAAQ8xB,EAKV,OAHc,IAAV9xB,IACFkvB,EAAIT,MAAMS,EAAI/vB,UAAYa,GAErBkvB,GAITb,EAAGsT,OAAS,SAAgBhmC,GAE1B,GAAIolC,EAAOplC,GAAO,OAAOolC,EAAOplC,GAEhC,IAAI+lC,EACJ,GAAa,SAAT/lC,EACF+lC,EAAQ,IAAIJ,OACP,GAAa,SAAT3lC,EACT+lC,EAAQ,IAAIH,OACP,GAAa,SAAT5lC,EACT+lC,EAAQ,IAAIF,MACP,IAAa,WAAT7lC,EAGT,MAAM,IAAIiG,MAAM,iBAAmBjG,GAFnC+lC,EAAQ,IAAID,EAMd,OAFAV,EAAOplC,GAAQ+lC,EAERA,GAkBTpC,EAAItiC,UAAUwjC,SAAW,SAAmB7gC,GAC1CmuB,EAAsB,IAAfnuB,EAAE6uB,SAAgB,iCACzBV,EAAOnuB,EAAE+uB,IAAK,oCAGhB4Q,EAAItiC,UAAUqjC,SAAW,SAAmB1gC,EAAGC,GAC7CkuB,EAAqC,IAA7BnuB,EAAE6uB,SAAW5uB,EAAE4uB,UAAiB,iCACxCV,EAAOnuB,EAAE+uB,KAAO/uB,EAAE+uB,MAAQ9uB,EAAE8uB,IAC1B,oCAGJ4Q,EAAItiC,UAAU6kC,KAAO,SAAeliC,GAClC,OAAIlB,KAAKijC,MAAcjjC,KAAKijC,MAAMM,QAAQriC,GAAG+/B,UAAUjhC,MAChDkB,EAAE49B,KAAK9+B,KAAKjD,GAAGkkC,UAAUjhC,OAGlC6gC,EAAItiC,UAAUgN,IAAM,SAAcrK,GAChC,OAAIA,EAAE4F,SACG5F,EAAE2jB,QAGJ7kB,KAAKjD,EAAEi4B,IAAI9zB,GAAG+/B,UAAUjhC,OAGjC6gC,EAAItiC,UAAU0C,IAAM,SAAcC,EAAGC,GACnCnB,KAAK4hC,SAAS1gC,EAAGC,GAEjB,IAAI4xB,EAAM7xB,EAAED,IAAIE,GAIhB,OAHI4xB,EAAIvlB,IAAIxN,KAAKjD,IAAM,GACrBg2B,EAAIgC,KAAK/0B,KAAKjD,GAETg2B,EAAIkO,UAAUjhC,OAGvB6gC,EAAItiC,UAAUu2B,KAAO,SAAe5zB,EAAGC,GACrCnB,KAAK4hC,SAAS1gC,EAAGC,GAEjB,IAAI4xB,EAAM7xB,EAAE4zB,KAAK3zB,GAIjB,OAHI4xB,EAAIvlB,IAAIxN,KAAKjD,IAAM,GACrBg2B,EAAIgC,KAAK/0B,KAAKjD,GAETg2B,GAGT8N,EAAItiC,UAAUy2B,IAAM,SAAc9zB,EAAGC,GACnCnB,KAAK4hC,SAAS1gC,EAAGC,GAEjB,IAAI4xB,EAAM7xB,EAAE8zB,IAAI7zB,GAIhB,OAHI4xB,EAAImN,KAAK,GAAK,GAChBnN,EAAI+B,KAAK90B,KAAKjD,GAETg2B,EAAIkO,UAAUjhC,OAGvB6gC,EAAItiC,UAAUw2B,KAAO,SAAe7zB,EAAGC,GACrCnB,KAAK4hC,SAAS1gC,EAAGC,GAEjB,IAAI4xB,EAAM7xB,EAAE6zB,KAAK5zB,GAIjB,OAHI4xB,EAAImN,KAAK,GAAK,GAChBnN,EAAI+B,KAAK90B,KAAKjD,GAETg2B,GAGT8N,EAAItiC,UAAUmjC,IAAM,SAAcxgC,EAAGuvB,GAEnC,OADAzwB,KAAK+hC,SAAS7gC,GACPlB,KAAKojC,KAAKliC,EAAE28B,MAAMpN,KAG3BoQ,EAAItiC,UAAUw6B,KAAO,SAAe73B,EAAGC,GAErC,OADAnB,KAAK4hC,SAAS1gC,EAAGC,GACVnB,KAAKojC,KAAKliC,EAAE63B,KAAK53B,KAG1B0/B,EAAItiC,UAAUiyB,IAAM,SAActvB,EAAGC,GAEnC,OADAnB,KAAK4hC,SAAS1gC,EAAGC,GACVnB,KAAKojC,KAAKliC,EAAEsvB,IAAIrvB,KAGzB0/B,EAAItiC,UAAUy+B,KAAO,SAAe97B,GAClC,OAAOlB,KAAK+4B,KAAK73B,EAAGA,EAAE2jB,UAGxBgc,EAAItiC,UAAUw+B,IAAM,SAAc77B,GAChC,OAAOlB,KAAKwwB,IAAItvB,EAAGA,IAGrB2/B,EAAItiC,UAAU2jC,KAAO,SAAehhC,GAClC,GAAIA,EAAE4F,SAAU,OAAO5F,EAAE2jB,QAEzB,IAAI+e,EAAO5jC,KAAKjD,EAAEi2B,MAAM,GAIxB,GAHA3D,EAAOuU,EAAO,GAAM,GAGP,IAATA,EAAY,CACd,IAAIr9B,EAAMvG,KAAKjD,EAAEkE,IAAI,IAAI2uB,EAAG,IAAIqD,OAAO,GACvC,OAAOjzB,KAAKuG,IAAIrF,EAAGqF,GAQrB,IAFA,IAAI1D,EAAI7C,KAAKjD,EAAEqhC,KAAK,GAChB1/B,EAAI,GACAmE,EAAEiE,UAA2B,IAAfjE,EAAEmwB,MAAM,IAC5Bt0B,IACAmE,EAAEowB,OAAO,GAEX5D,GAAQxsB,EAAEiE,UAEV,IAAIgC,EAAM,IAAI8mB,EAAG,GAAGkR,MAAM9gC,MACtB6jC,EAAO/6B,EAAIs5B,SAIX0B,EAAO9jC,KAAKjD,EAAEqhC,KAAK,GAAGnL,OAAO,GAC7B8Q,EAAI/jC,KAAKjD,EAAEmL,YAGf,IAFA67B,EAAI,IAAInU,EAAG,EAAImU,EAAIA,GAAGjD,MAAM9gC,MAEW,IAAhCA,KAAKuG,IAAIw9B,EAAGD,GAAMt2B,IAAIq2B,IAC3BE,EAAEzC,QAAQuC,GAOZ,IAJA,IAAI7mC,EAAIgD,KAAKuG,IAAIw9B,EAAGlhC,GAChBpF,EAAIuC,KAAKuG,IAAIrF,EAAG2B,EAAEs7B,KAAK,GAAGlL,OAAO,IACjCp1B,EAAImC,KAAKuG,IAAIrF,EAAG2B,GAChB9F,EAAI2B,EACc,IAAfb,EAAE2P,IAAI1E,IAAY,CAEvB,IADA,IAAI2B,EAAM5M,EACDlB,EAAI,EAAoB,IAAjB8N,EAAI+C,IAAI1E,GAAYnM,IAClC8N,EAAMA,EAAIq3B,SAEZzS,EAAO1yB,EAAII,GACX,IAAIoE,EAAInB,KAAKuG,IAAIvJ,EAAG,IAAI4yB,EAAG,GAAGsN,OAAOngC,EAAIJ,EAAI,IAE7Cc,EAAIA,EAAEkkC,OAAOxgC,GACbnE,EAAImE,EAAE2gC,SACNjkC,EAAIA,EAAE8jC,OAAO3kC,GACbD,EAAIJ,EAGN,OAAOc,GAGTojC,EAAItiC,UAAU4hC,KAAO,SAAej/B,GAClC,IAAI8iC,EAAM9iC,EAAE4+B,OAAO9/B,KAAKjD,GACxB,OAAqB,IAAjBinC,EAAIjU,UACNiU,EAAIjU,SAAW,EACR/vB,KAAKojC,KAAKY,GAAK5B,UAEfpiC,KAAKojC,KAAKY,IAIrBnD,EAAItiC,UAAUgI,IAAM,SAAcrF,EAAGuvB,GACnC,GAAIA,EAAI3pB,SAAU,OAAO,IAAI8oB,EAAG,GAChC,GAAoB,IAAhBa,EAAIyP,KAAK,GAAU,OAAOh/B,EAAE2jB,QAEhC,IACIof,EAAM,IAAInjC,MAAM,IACpBmjC,EAAI,GAAK,IAAIrU,EAAG,GAAGkR,MAAM9gC,MACzBikC,EAAI,GAAK/iC,EACT,IAAK,IAAIvE,EAAI,EAAGA,EAAIsnC,EAAIvjC,OAAQ/D,IAC9BsnC,EAAItnC,GAAKqD,KAAKwwB,IAAIyT,EAAItnC,EAAI,GAAIuE,GAGhC,IAAI6xB,EAAMkR,EAAI,GACVC,EAAU,EACVC,EAAa,EACbn5B,EAAQylB,EAAIvoB,YAAc,GAK9B,IAJc,IAAV8C,IACFA,EAAQ,IAGLrO,EAAI8zB,EAAI/vB,OAAS,EAAG/D,GAAK,EAAGA,IAAK,CAEpC,IADA,IAAIy0B,EAAOX,EAAIT,MAAMrzB,GACZ0F,EAAI2I,EAAQ,EAAG3I,GAAK,EAAGA,IAAK,CACnC,IAAIuyB,EAAOxD,GAAQ/uB,EAAK,EACpB0wB,IAAQkR,EAAI,KACdlR,EAAM/yB,KAAK+8B,IAAIhK,IAGL,IAAR6B,GAAyB,IAAZsP,GAKjBA,IAAY,EACZA,GAAWtP,GA9BE,MA+BbuP,GACwC,IAANxnC,GAAiB,IAAN0F,KAE7C0wB,EAAM/yB,KAAKwwB,IAAIuC,EAAKkR,EAAIC,IACxBC,EAAa,EACbD,EAAU,IAXRC,EAAa,EAajBn5B,EAAQ,GAGV,OAAO+nB,GAGT8N,EAAItiC,UAAUyiC,UAAY,SAAoBvQ,GAC5C,IAAIhzB,EAAIgzB,EAAIqO,KAAK9+B,KAAKjD,GAEtB,OAAOU,IAAMgzB,EAAMhzB,EAAEonB,QAAUpnB,GAGjCojC,EAAItiC,UAAU4iC,YAAc,SAAsB1Q,GAChD,IAAIsC,EAAMtC,EAAI5L,QAEd,OADAkO,EAAI9C,IAAM,KACH8C,GAOTnD,EAAGwU,KAAO,SAAe3T,GACvB,OAAO,IAAI0S,EAAK1S,IAmBlBlB,EAAS4T,EAAMtC,GAEfsC,EAAK5kC,UAAUyiC,UAAY,SAAoBvQ,GAC7C,OAAOzwB,KAAKojC,KAAK3S,EAAIoN,MAAM79B,KAAKwD,SAGlC2/B,EAAK5kC,UAAU4iC,YAAc,SAAsB1Q,GACjD,IAAIhzB,EAAIuC,KAAKojC,KAAK3S,EAAID,IAAIxwB,KAAKqjC,OAE/B,OADA5lC,EAAEwyB,IAAM,KACDxyB,GAGT0lC,EAAK5kC,UAAUw6B,KAAO,SAAe73B,EAAGC,GACtC,GAAID,EAAE4F,UAAY3F,EAAE2F,SAGlB,OAFA5F,EAAE8uB,MAAM,GAAK,EACb9uB,EAAER,OAAS,EACJQ,EAGT,IAAIrD,EAAIqD,EAAE63B,KAAK53B,GACXnE,EAAIa,EAAEogC,MAAMj+B,KAAKwD,OAAOgtB,IAAIxwB,KAAKsjC,MAAMtF,OAAOh+B,KAAKwD,OAAOgtB,IAAIxwB,KAAKjD,GACnEsnC,EAAIxmC,EAAEk3B,KAAK/3B,GAAGi2B,OAAOjzB,KAAKwD,OAC1BuvB,EAAMsR,EAQV,OANIA,EAAE72B,IAAIxN,KAAKjD,IAAM,EACnBg2B,EAAMsR,EAAEtP,KAAK/0B,KAAKjD,GACTsnC,EAAEnE,KAAK,GAAK,IACrBnN,EAAMsR,EAAEvP,KAAK90B,KAAKjD,IAGbg2B,EAAIkO,UAAUjhC,OAGvBmjC,EAAK5kC,UAAUiyB,IAAM,SAActvB,EAAGC,GACpC,GAAID,EAAE4F,UAAY3F,EAAE2F,SAAU,OAAO,IAAI8oB,EAAG,GAAGqR,UAAUjhC,MAEzD,IAAInC,EAAIqD,EAAEsvB,IAAIrvB,GACVnE,EAAIa,EAAEogC,MAAMj+B,KAAKwD,OAAOgtB,IAAIxwB,KAAKsjC,MAAMtF,OAAOh+B,KAAKwD,OAAOgtB,IAAIxwB,KAAKjD,GACnEsnC,EAAIxmC,EAAEk3B,KAAK/3B,GAAGi2B,OAAOjzB,KAAKwD,OAC1BuvB,EAAMsR,EAOV,OANIA,EAAE72B,IAAIxN,KAAKjD,IAAM,EACnBg2B,EAAMsR,EAAEtP,KAAK/0B,KAAKjD,GACTsnC,EAAEnE,KAAK,GAAK,IACrBnN,EAAMsR,EAAEvP,KAAK90B,KAAKjD,IAGbg2B,EAAIkO,UAAUjhC,OAGvBmjC,EAAK5kC,UAAU4hC,KAAO,SAAej/B,GAGnC,OADUlB,KAAKojC,KAAKliC,EAAE4+B,OAAO9/B,KAAKjD,GAAGyzB,IAAIxwB,KAAKk/B,KACnC+B,UAAUjhC,OAh2GzB,CAk2GoCtD,EAAQsD,Q,oCCl2G5C,IAAIorC,EAAgB,EAAQ,IAO5B1uC,EAAOD,QAAU,SAAwB6P,GACvC,MAAmB,iBAARA,EACFA,EAGF8+B,EAAc9+B,GAAOA,EAAIvG,MAAM,GAAKuG,I,cCN7C5P,EAAOD,QAAU,SAAuB6P,GACtC,GAAmB,iBAARA,EACT,MAAM,IAAInJ,MAAM,2EAA8EmJ,EAAO,mCAGvG,MAA2B,OAApBA,EAAIvG,MAAM,EAAG,K,iBCVpB,SAASwK,GAEV,IAiLIqkC,EACAC,EACAC,EAnLAC,EAAqBhrC,OAAOwR,aAGhC,SAASy5B,EAAWx1B,GAMnB,IALA,IAGI5hB,EACAq3C,EAJAh6B,EAAS,GACTi6B,EAAU,EACVx0C,EAAS8e,EAAO9e,OAGbw0C,EAAUx0C,IAChB9C,EAAQ4hB,EAAOrE,WAAW+5B,OACb,OAAUt3C,GAAS,OAAUs3C,EAAUx0C,EAG3B,QAAX,OADbu0C,EAAQz1B,EAAOrE,WAAW+5B,OAEzBj6B,EAAOxZ,OAAe,KAAR7D,IAAkB,KAAe,KAARq3C,GAAiB,QAIxDh6B,EAAOxZ,KAAK7D,GACZs3C,KAGDj6B,EAAOxZ,KAAK7D,GAGd,OAAOqd,EAqBR,SAASk6B,EAAiB1B,GACzB,GAAIA,GAAa,OAAUA,GAAa,MACvC,MAAMtwC,MACL,oBAAsBswC,EAAUjtC,SAAS,IAAI2gC,cAC7C,0BAMH,SAASiO,EAAW3B,EAAWjwC,GAC9B,OAAOuxC,EAAqBtB,GAAajwC,EAAS,GAAQ,KAG3D,SAAS6xC,EAAgB5B,GACxB,GAAgC,IAAf,WAAZA,GACJ,OAAOsB,EAAmBtB,GAE3B,IAAIv5B,EAAS,GAeb,OAdgC,IAAf,WAAZu5B,GACJv5B,EAAS66B,EAAqBtB,GAAa,EAAK,GAAQ,KAEpB,IAAf,WAAZA,IACT0B,EAAiB1B,GACjBv5B,EAAS66B,EAAqBtB,GAAa,GAAM,GAAQ,KACzDv5B,GAAUk7B,EAAW3B,EAAW,IAEI,IAAf,WAAZA,KACTv5B,EAAS66B,EAAqBtB,GAAa,GAAM,EAAQ,KACzDv5B,GAAUk7B,EAAW3B,EAAW,IAChCv5B,GAAUk7B,EAAW3B,EAAW,IAEjCv5B,GAAU66B,EAAgC,GAAZtB,EAAoB,KAmBnD,SAAS6B,IACR,GAAIR,GAAaD,EAChB,MAAM1xC,MAAM,sBAGb,IAAIoyC,EAA0C,IAAvBX,EAAUE,GAGjC,GAFAA,IAEiC,MAAT,IAAnBS,GACJ,OAA0B,GAAnBA,EAIR,MAAMpyC,MAAM,6BAGb,SAASqyC,IACR,IAAIC,EAIAhC,EAEJ,GAAIqB,EAAYD,EACf,MAAM1xC,MAAM,sBAGb,GAAI2xC,GAAaD,EAChB,OAAO,EAQR,GAJAY,EAA+B,IAAvBb,EAAUE,GAClBA,IAGsB,IAAT,IAARW,GACJ,OAAOA,EAIR,GAAsB,MAAT,IAARA,GAAuB,CAG3B,IADAhC,GAAsB,GAARgC,IAAiB,EADvBH,MAES,IAChB,OAAO7B,EAEP,MAAMtwC,MAAM,6BAKd,GAAsB,MAAT,IAARsyC,GAAuB,CAI3B,IADAhC,GAAsB,GAARgC,IAAiB,GAFvBH,KAEuC,EADvCA,MAES,KAEhB,OADAH,EAAiB1B,GACVA,EAEP,MAAMtwC,MAAM,6BAKd,GAAsB,MAAT,IAARsyC,KAIJhC,GAAsB,EAARgC,IAAiB,GAHvBH,KAGyC,GAFzCA,KAGG,EAFHA,MAGS,OAAY7B,GAAa,QACzC,OAAOA,EAIT,MAAMtwC,MAAM,0BAoBboN,EAAKmlC,QAAU,QACfnlC,EAAKgM,OAhHL,SAAoBiD,GAMnB,IALA,IAAIm2B,EAAaX,EAAWx1B,GACxB9e,EAASi1C,EAAWj1C,OACpB4Q,GAAS,EAETskC,EAAa,KACRtkC,EAAQ5Q,GAEhBk1C,GAAcP,EADFM,EAAWrkC,IAGxB,OAAOskC,GAuGRrlC,EAAKkM,OAhBL,SAAoBm5B,GACnBhB,EAAYI,EAAWY,GACvBf,EAAYD,EAAUl0C,OACtBo0C,EAAY,EAGZ,IAFA,IACIrqC,EADAkrC,EAAa,IAEiB,KAA1BlrC,EAAM+qC,MACbG,EAAWl0C,KAAKgJ,GAEjB,OA/JD,SAAoB2G,GAKnB,IAJA,IAEIxT,EAFA8C,EAAS0Q,EAAM1Q,OACf4Q,GAAS,EAET2J,EAAS,KACJ3J,EAAQ5Q,IAChB9C,EAAQwT,EAAME,IACF,QAEX2J,GAAU85B,GADVn3C,GAAS,SAC8B,GAAK,KAAQ,OACpDA,EAAQ,MAAiB,KAARA,GAElBqd,GAAU85B,EAAmBn3C,GAE9B,OAAOqd,EAiJA46B,CAAWF,IA/LnB,CAwMmDl5C,I,cCjLpD,MAAMq5C,EAAY,mBAAmB9pC,MAAM,IACrC+pC,EAAiB,CAAC,EAAG,IAAK,MAAO,UACjCC,EAAQ,CAAC,EAAG,EAAG,GAAI,IACnBC,EAAK,CAAC,EAAG,EAAG,MAAO,EAAG,MAAO,WAAY,WAAY,WAAY,MAAO,EAAG,WAAY,EAAG,WAAY,WAAY,MAAO,WAAY,IAAK,EAAG,IAAK,EAAG,WAAY,EAAG,WAAY,EAAG,WAAY,EAAG,IAAK,WAAY,MAAO,WAAY,MAAO,WAAY,MAAO,WAAY,IAAK,WAAY,MAAO,EAAG,WAAY,WAAY,WAAY,WAAY,MAAO,WAAY,WAAY,EAAG,WAAY,YAwGrYvoC,EAAIhP,IACR,IAAI8+B,EAAG5gC,EAAGwB,EAAG83C,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAI3f,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIie,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,GAAKC,GAAKC,GAAKC,GAAKC,GAAKC,GAAKC,GAAKC,GAAKC,GAAKC,GAAKC,GAEhS,IAAK/6C,EAAI,EAAGA,EAAI,GAAIA,GAAK,EACvB83C,EAAKx3C,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IACtCy3C,EAAKz3C,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IACtC03C,EAAK13C,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IACtC23C,EAAK33C,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IACtC43C,EAAK53C,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IACtC63C,EAAK73C,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IACtC83C,EAAK93C,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IACtC+3C,EAAK/3C,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAItC8+B,GAHAkZ,EAAKh4C,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,MAG5B03C,GAAM,EAAIC,IAAO,IAC3Bz5C,GAHA+5C,EAAKj4C,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,MAG5B23C,GAAM,EAAID,IAAO,IAC3B13C,EAAE,IAAM8+B,EACR9+B,EAAE,IAAM9B,EACR8B,EAAE,KAAO8+B,EACT9+B,EAAE,KAAO9B,EACT8B,EAAE,KAAO8+B,EACT9+B,EAAE,KAAO9B,EACT8B,EAAE,KAAO8+B,EACT9+B,EAAE,KAAO9B,EACT8B,EAAE,KAAO8+B,EACT9+B,EAAE,KAAO9B,EACT4gC,EAAI0Y,GAAMI,GAAM,EAAIC,IAAO,IAC3B35C,EAAIu5C,GAAMI,GAAM,EAAID,IAAO,IAC3B53C,EAAE,IAAM8+B,EACR9+B,EAAE,IAAM9B,EACR8B,EAAE,KAAO8+B,EACT9+B,EAAE,KAAO9B,EACT8B,EAAE,KAAO8+B,EACT9+B,EAAE,KAAO9B,EACT8B,EAAE,KAAO8+B,EACT9+B,EAAE,KAAO9B,EACT8B,EAAE,KAAO8+B,EACT9+B,EAAE,KAAO9B,EACT4gC,EAAI4Y,GAAMI,GAAM,EAAIC,IAAO,IAC3B75C,EAAIy5C,GAAMI,GAAM,EAAID,IAAO,IAC3B93C,EAAE,IAAM8+B,EACR9+B,EAAE,IAAM9B,EACR8B,EAAE,KAAO8+B,EACT9+B,EAAE,KAAO9B,EACT8B,EAAE,KAAO8+B,EACT9+B,EAAE,KAAO9B,EACT8B,EAAE,KAAO8+B,EACT9+B,EAAE,KAAO9B,EACT8B,EAAE,KAAO8+B,EACT9+B,EAAE,KAAO9B,EACT4gC,EAAI8Y,GAAMI,GAAM,EAAIC,IAAO,IAC3B/5C,EAAI25C,GAAMI,GAAM,EAAID,IAAO,IAC3Bh4C,EAAE,IAAM8+B,EACR9+B,EAAE,IAAM9B,EACR8B,EAAE,KAAO8+B,EACT9+B,EAAE,KAAO9B,EACT8B,EAAE,KAAO8+B,EACT9+B,EAAE,KAAO9B,EACT8B,EAAE,KAAO8+B,EACT9+B,EAAE,KAAO9B,EACT8B,EAAE,KAAO8+B,EACT9+B,EAAE,KAAO9B,EACT4gC,EAAIgZ,GAAMN,GAAM,EAAIC,IAAO,IAC3Bv5C,EAAI65C,GAAMN,GAAM,EAAID,IAAO,IAC3Bx3C,EAAE,IAAM8+B,EACR9+B,EAAE,IAAM9B,EACR8B,EAAE,KAAO8+B,EACT9+B,EAAE,KAAO9B,EACT8B,EAAE,KAAO8+B,EACT9+B,EAAE,KAAO9B,EACT8B,EAAE,KAAO8+B,EACT9+B,EAAE,KAAO9B,EACT8B,EAAE,KAAO8+B,EACT9+B,EAAE,KAAO9B,EAETo6B,EAAKt4B,EAAE,GACPy4B,EAAKz4B,EAAE,GACPw5C,EAAMx5C,EAAE,KAAO,EAAIA,EAAE,MAAQ,GAC7By5C,EAAMz5C,EAAE,KAAO,EAAIA,EAAE,MAAQ,GAC7Bs4C,EAAMt4C,EAAE,KAAO,EAAIA,EAAE,MAAQ,GAC7Bu4C,EAAMv4C,EAAE,KAAO,EAAIA,EAAE,MAAQ,GAC7Bs6C,GAAMt6C,EAAE,KAAO,EAAIA,EAAE,MAAQ,GAC7Bu6C,GAAMv6C,EAAE,KAAO,EAAIA,EAAE,MAAQ,GAC7Bo5C,EAAMp5C,EAAE,KAAO,GAAKA,EAAE,MAAQ,GAC9Bq5C,EAAMr5C,EAAE,KAAO,GAAKA,EAAE,MAAQ,GAC9B44C,EAAM54C,EAAE,IAAM,EAAIA,EAAE,KAAO,GAC3B64C,EAAM74C,EAAE,IAAM,EAAIA,EAAE,KAAO,GAC3B44B,EAAK54B,EAAE,KAAO,GAAKA,EAAE,MAAQ,GAC7B+4B,EAAK/4B,EAAE,KAAO,GAAKA,EAAE,MAAQ,GAC7B05C,EAAM15C,EAAE,KAAO,GAAKA,EAAE,MAAQ,GAC9B25C,EAAM35C,EAAE,KAAO,GAAKA,EAAE,MAAQ,GAC9Bw4C,EAAMx4C,EAAE,KAAO,GAAKA,EAAE,MAAQ,GAC9By4C,EAAMz4C,EAAE,KAAO,GAAKA,EAAE,MAAQ,GAC9Bw6C,GAAMx6C,EAAE,KAAO,EAAIA,EAAE,MAAQ,GAC7By6C,GAAMz6C,EAAE,KAAO,EAAIA,EAAE,MAAQ,GAC7Bg6C,GAAMh6C,EAAE,IAAM,GAAKA,EAAE,KAAO,EAC5Bi6C,GAAMj6C,EAAE,IAAM,GAAKA,EAAE,KAAO,EAC5B84C,EAAM94C,EAAE,KAAO,EAAIA,EAAE,MAAQ,GAC7B+4C,EAAM/4C,EAAE,KAAO,EAAIA,EAAE,MAAQ,GAC7Bk5B,EAAKl5B,EAAE,KAAO,GAAKA,EAAE,MAAQ,GAC7Bq5B,EAAKr5B,EAAE,KAAO,GAAKA,EAAE,MAAQ,GAC7B45C,EAAM55C,EAAE,KAAO,GAAKA,EAAE,MAAQ,GAC9B65C,EAAM75C,EAAE,KAAO,GAAKA,EAAE,MAAQ,GAC9B04C,EAAM14C,EAAE,KAAO,GAAKA,EAAE,MAAQ,EAC9B24C,EAAM34C,EAAE,KAAO,GAAKA,EAAE,MAAQ,EAC9Bk4C,EAAMl4C,EAAE,IAAM,GAAKA,EAAE,KAAO,EAC5Bm4C,EAAMn4C,EAAE,IAAM,GAAKA,EAAE,KAAO,EAC5Bk6C,GAAMl6C,EAAE,KAAO,GAAKA,EAAE,MAAQ,EAC9Bm6C,GAAMn6C,EAAE,KAAO,GAAKA,EAAE,MAAQ,EAC9Bg5C,EAAMh5C,EAAE,KAAO,GAAKA,EAAE,MAAQ,EAC9Bi5C,EAAMj5C,EAAE,KAAO,GAAKA,EAAE,MAAQ,EAC9Bw5B,EAAKx5B,EAAE,KAAO,GAAKA,EAAE,MAAQ,GAC7B25B,EAAK35B,EAAE,KAAO,GAAKA,EAAE,MAAQ,GAC7B85C,EAAM95C,EAAE,KAAO,GAAKA,EAAE,MAAQ,EAC9B+5C,GAAM/5C,EAAE,KAAO,GAAKA,EAAE,MAAQ,EAC9Bs5C,EAAMt5C,EAAE,IAAM,GAAKA,EAAE,KAAO,EAC5Bu5C,EAAMv5C,EAAE,IAAM,GAAKA,EAAE,KAAO,EAC5Bo4C,EAAMp4C,EAAE,KAAO,GAAKA,EAAE,MAAQ,GAC9Bq4C,EAAMr4C,EAAE,KAAO,GAAKA,EAAE,MAAQ,GAC9Bo6C,GAAMp6C,EAAE,KAAO,EAAIA,EAAE,MAAQ,GAC7Bq6C,GAAMr6C,EAAE,KAAO,EAAIA,EAAE,MAAQ,GAC7Bk5C,EAAMl5C,EAAE,KAAO,EAAIA,EAAE,MAAQ,GAC7Bm5C,EAAMn5C,EAAE,KAAO,EAAIA,EAAE,MAAQ,GAC7B85B,EAAK95B,EAAE,KAAO,GAAKA,EAAE,MAAQ,GAC7Bi6B,EAAKj6B,EAAE,KAAO,GAAKA,EAAE,MAAQ,GAE7BA,EAAE,GAAKs4B,GAAMM,EAAKM,EAClBl5B,EAAE,GAAKy4B,GAAMM,EAAKM,EAClBr5B,EAAE,IAAMk4C,GAAOE,EAAME,EACrBt4C,EAAE,IAAMm4C,GAAOE,EAAME,EACrBv4C,EAAE,IAAM44C,GAAOE,EAAME,EACrBh5C,EAAE,IAAM64C,GAAOE,EAAME,EACrBj5C,EAAE,IAAMs5C,GAAOE,EAAME,EACrB15C,EAAE,IAAMu5C,GAAOE,EAAME,EACrB35C,EAAE,IAAMg6C,IAAOE,GAAME,GACrBp6C,EAAE,IAAMi6C,IAAOE,GAAME,GACrBr6C,EAAE,GAAK44B,GAAMM,EAAKM,EAClBx5B,EAAE,GAAK+4B,GAAMM,EAAKM,EAClB35B,EAAE,IAAMo4C,GAAOE,EAAME,EACrBx4C,EAAE,IAAMq4C,GAAOE,EAAME,EACrBz4C,EAAE,IAAM84C,GAAOE,EAAME,EACrBl5C,EAAE,IAAM+4C,GAAOE,EAAME,EACrBn5C,EAAE,IAAMw5C,GAAOE,EAAME,EACrB55C,EAAE,IAAMy5C,GAAOE,EAAME,EACrB75C,EAAE,IAAMk6C,IAAOE,GAAME,GACrBt6C,EAAE,IAAMm6C,IAAOE,GAAME,GACrBv6C,EAAE,GAAKk5B,GAAMM,EAAKM,EAClB95B,EAAE,GAAKq5B,GAAMM,EAAKM,EAClBj6B,EAAE,IAAMs4C,GAAOE,EAAME,EACrB14C,EAAE,IAAMu4C,GAAOE,EAAME,EACrB34C,EAAE,IAAMg5C,GAAOE,EAAME,EACrBp5C,EAAE,IAAMi5C,GAAOE,EAAME,EACrBr5C,EAAE,IAAM05C,GAAOE,EAAME,EACrB95C,EAAE,IAAM25C,GAAOE,EAAME,GACrB/5C,EAAE,IAAMo6C,IAAOE,GAAME,GACrBx6C,EAAE,IAAMq6C,IAAOE,GAAME,GACrBz6C,EAAE,GAAKw5B,GAAMM,EAAKxB,EAClBt4B,EAAE,GAAK25B,GAAMM,EAAKxB,EAClBz4B,EAAE,IAAMw4C,GAAOE,EAAMR,EACrBl4C,EAAE,IAAMy4C,GAAOE,EAAMR,EACrBn4C,EAAE,IAAMk5C,GAAOE,EAAMR,EACrB54C,EAAE,IAAMm5C,GAAOE,EAAMR,EACrB74C,EAAE,IAAM45C,GAAOE,EAAMR,EACrBt5C,EAAE,IAAM65C,GAAOE,GAAMR,EACrBv5C,EAAE,IAAMs6C,IAAOE,GAAMR,GACrBh6C,EAAE,IAAMu6C,IAAOE,GAAMR,GACrBj6C,EAAE,GAAK85B,GAAMxB,EAAKM,EAClB54B,EAAE,GAAKi6B,GAAMxB,EAAKM,EAClB/4B,EAAE,IAAM04C,GAAOR,EAAME,EACrBp4C,EAAE,IAAM24C,GAAOR,EAAME,EACrBr4C,EAAE,IAAMo5C,GAAOR,EAAME,EACrB94C,EAAE,IAAMq5C,GAAOR,EAAME,EACrB/4C,EAAE,IAAM85C,GAAOR,EAAME,EACrBx5C,EAAE,IAAM+5C,IAAOR,EAAME,EACrBz5C,EAAE,IAAMw6C,IAAOR,GAAME,GACrBl6C,EAAE,IAAMy6C,IAAOR,GAAME,GAErBn6C,EAAE,IAAMu3C,EAAG73C,GACXM,EAAE,IAAMu3C,EAAG73C,EAAI,IAIbg7C,EAASnxC,GAAQqE,IACrB,IAAIgjB,EACJ,GAAwB,OAApBhjB,EAAIvG,MAAM,EAAG,GAAa,CAC5BupB,EAAM,GACN,IAAK,IAAI3yB,EAAI,EAAGC,EAAI0P,EAAI5L,OAAQ/D,EAAIC,EAAGD,GAAK,EAAG2yB,EAAI7tB,KAAK+K,SAASF,EAAIvG,MAAMpJ,EAAGA,EAAI,GAAI,UAEtF2yB,EAAMhjB,EAER,MA3Ra,EAAC+sC,EAAOjiC,KAYrB,IAXA,IAQIkuB,EARA5kC,EAAS0W,EAAQ1W,OACjB44C,EAASD,EAAMC,OACfzE,EAAYwE,EAAME,YAAc,EAChCA,EAAaF,EAAME,WACnBC,EAAeH,EAAMG,aACrB96C,EAAI26C,EAAM36C,EACV4S,EAAQ,EAKLA,EAAQ5Q,GAAQ,CACrB,GAAI24C,EAAMI,MAGR,IAFAJ,EAAMI,OAAQ,EACdH,EAAO,GAAKD,EAAMK,MACb/8C,EAAI,EAAGA,EAAI48C,EAAa,IAAK58C,EAChC28C,EAAO38C,GAAK,EAGhB,GAAuB,iBAAZya,EACT,IAAKza,EAAI08C,EAAMruC,MAAOsG,EAAQ5Q,GAAU/D,EAAIk4C,IAAavjC,EACvDgoC,EAAO38C,GAAK,IAAMya,EAAQ9F,IAAU0kC,EAAY,EAANr5C,UAG5C,IAAKA,EAAI08C,EAAMruC,MAAOsG,EAAQ5Q,GAAU/D,EAAIk4C,IAAavjC,GACvDg0B,EAAOluB,EAAQ+D,WAAW7J,IACf,IACTgoC,EAAO38C,GAAK,IAAM2oC,GAAQ0Q,EAAY,EAANr5C,KACvB2oC,EAAO,MAChBgU,EAAO38C,GAAK,KAAO,IAAO2oC,GAAQ,IAAM0Q,EAAY,EAANr5C,KAC9C28C,EAAO38C,GAAK,KAAO,IAAc,GAAP2oC,IAAgB0Q,EAAY,EAANr5C,MACvC2oC,EAAO,OAAUA,GAAQ,OAClCgU,EAAO38C,GAAK,KAAO,IAAO2oC,GAAQ,KAAO0Q,EAAY,EAANr5C,KAC/C28C,EAAO38C,GAAK,KAAO,IAAO2oC,GAAQ,EAAI,KAAS0Q,EAAY,EAANr5C,KACrD28C,EAAO38C,GAAK,KAAO,IAAc,GAAP2oC,IAAgB0Q,EAAY,EAANr5C,OAEhD2oC,EAAO,QAAmB,KAAPA,IAAiB,GAAmC,KAA9BluB,EAAQ+D,aAAa7J,IAC9DgoC,EAAO38C,GAAK,KAAO,IAAO2oC,GAAQ,KAAO0Q,EAAY,EAANr5C,KAC/C28C,EAAO38C,GAAK,KAAO,IAAO2oC,GAAQ,GAAK,KAAS0Q,EAAY,EAANr5C,KACtD28C,EAAO38C,GAAK,KAAO,IAAO2oC,GAAQ,EAAI,KAAS0Q,EAAY,EAANr5C,KACrD28C,EAAO38C,GAAK,KAAO,IAAc,GAAP2oC,IAAgB0Q,EAAY,EAANr5C,MAKtD,GADA08C,EAAMM,cAAgBh9C,EAClBA,GAAKk4C,EAAW,CAGlB,IAFAwE,EAAMruC,MAAQrO,EAAIk4C,EAClBwE,EAAMK,MAAQJ,EAAOC,GAChB58C,EAAI,EAAGA,EAAI48C,IAAc58C,EAC5B+B,EAAE/B,IAAM28C,EAAO38C,GAEjB+Q,EAAEhP,GACF26C,EAAMI,OAAQ,OAEdJ,EAAMruC,MAAQrO,EAOlB,GADA28C,GADA38C,EAAI08C,EAAMM,gBACE,IAAM5D,EAAmB,EAAJp5C,GAC7B08C,EAAMM,gBAAkB9E,EAE1B,IADAyE,EAAO,GAAKA,EAAOC,GACd58C,EAAI,EAAGA,EAAI48C,EAAa,IAAK58C,EAChC28C,EAAO38C,GAAK,EAIhB,IADA28C,EAAOC,EAAa,IAAM,WACrB58C,EAAI,EAAGA,EAAI48C,IAAc58C,EAC5B+B,EAAE/B,IAAM28C,EAAO38C,GAEjB+Q,EAAEhP,GAOF,IAJA,IAGIg7C,EAHAtU,EAAM,GACNzoC,EAAI,EACJ0F,EAAI,EAEDA,EAAIm3C,GAAc,CACvB,IAAK78C,EAAI,EAAGA,EAAI48C,GAAcl3C,EAAIm3C,IAAgB78C,IAAK0F,EACrDq3C,EAAQh7C,EAAE/B,GACVyoC,GAAO0Q,EAAU4D,GAAS,EAAI,IAAQ5D,EAAkB,GAAR4D,GAAgB5D,EAAU4D,GAAS,GAAK,IAAQ5D,EAAU4D,GAAS,EAAI,IAAQ5D,EAAU4D,GAAS,GAAK,IAAQ5D,EAAU4D,GAAS,GAAK,IAAQ5D,EAAU4D,GAAS,GAAK,IAAQ5D,EAAU4D,GAAS,GAAK,IAErPr3C,EAAIk3C,GAAe,IACrB7rC,EAAEhP,GACF/B,EAAI,GAGR,MAAO,KAAOyoC,GAkMPwU,CArSM3xC,KAAQ,OACrBqxC,OAAQ,GACRG,OAAO,EACPC,MAAO,EACP1uC,MAAO,EACPuuC,WAAY,MAAQtxC,GAAQ,IAAM,EAClCuxC,aAAcvxC,GAAQ,EACtBvJ,GAAIA,EAA+B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAtD,GAAG8D,OAAO9D,EAAGA,EAAGA,EAAGA,EAAGA,KAA5B,IAACA,GA8RUm7C,CAAO5xC,GAAaqnB,IAGpC5yB,EAAOD,QAAU,CACfkqC,UAAWyS,EAAO,KAClBU,UAAWV,EAAO,KAClBW,WAAYX,EAAO,KACnBY,WAAYZ,EAAO,O,6BCxUrB/7C,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,IACtD,MAAMq8C,EAAU,EAAQ,IAKxB,SAASpR,EAAQiD,GACb,MAAqB,iBAAVA,MAGN,wBAAwB3/B,KAAK2/B,OAG9B,uBAAuB3/B,KAAK2/B,KAC5B,uBAAuB3/B,KAAK2/B,KAYpC,SAAS5C,EAAU4C,EAAOluC,GACD,iBAAVA,GAAsBA,EAAM0a,cAAgB3F,aACnD/U,EAAQq8C,EAAQ3S,WAAW1pC,IAE/B,MAAMs8C,EAAOD,EAAQtT,UAAU/oC,GAAO6U,QAAQ,KAAM,IACpD,IAAK,IAAI9V,EAAI,EAAGA,EAAI,GAAIA,GAAK,EAAG,CAE5B,MAAMw9C,GAAW3tC,SAAS0tC,EAAK3U,OAAO5oC,EAAG,GAAI,KAAO,GAChD6P,SAAS0tC,EAAK3U,OAAO5oC,EAAI,EAAG,GAAI,IAChC,KAGE2c,EAAS,GAAK6gC,EAAS,EAC7B,IAFaC,EAAetO,EAAM3wB,WAAW2wB,EAAMprC,OAAS,EAAIL,KAAKC,MAAM65C,EAAS,KAExE7gC,KAAYA,EACpB,OAAO,EAGf,OAAO,EAOX,SAAS8gC,EAAe3G,GACpB,GAAIA,GAAa,IAAMA,GAAa,GAEhC,OAAOA,EAAY,GAEvB,GAAIA,GAAa,IAAMA,GAAa,GAEhC,OAAOA,EAAY,GAEvB,GAAIA,GAAa,IAAMA,GAAa,IAEhC,OAAOA,EAAY,GAEvB,MAAM,IAAItwC,MAAM,iBA6DpB,SAAS6lC,EAAQiD,GACb,MAAqB,iBAAVA,MAGN,uBAAuB9/B,KAAK8/B,OAGxB,sBAAsB9/B,KAAK8/B,KAChC,sBAAsB9/B,KAAK8/B,KAUnC,SAASnF,EAAUle,GACf,MAAuB,iBAAZA,MAGPA,EAAQlJ,MAAM,6BAGdkJ,EAAQlJ,MAAM,mCAlItBjjB,EAAQosC,QAAUA,EA0BlBpsC,EAAQysC,UAAYA,EA0CpBzsC,EAAQqsC,6BAhBR,SAAsCgD,EAAOC,GACzC,IAAKlD,EAAQiD,GACT,MAAM,IAAI3oC,MAAM,uBAEpB,IAAK2jC,EAAUiF,GACX,MAAM,IAAI5oC,MAAM,oCAAoC4oC,MASxD,OAAO7C,EAAU4C,EADDmO,EAAQzR,QAAQuD,EAAiB,MAmBrDtvC,EAAQssC,yBATR,SAAkC+C,EAAOE,GACrC,IAAKnD,EAAQiD,GACT,MAAM,IAAI3oC,MAAM,uBAEpB,IAAK2jC,EAAUkF,GACX,MAAM,IAAI7oC,MAAM,oCAAoC6oC,MAExD,OAAO9C,EAAU4C,EAAOE,IAkB5BvvC,EAAQwsC,eATR,SAAwB6C,EAAOG,GAC3B,IAAKpD,EAAQiD,GACT,MAAM,IAAI3oC,MAAM,uBAEpB,IAAK6lC,EAAQiD,GACT,MAAM,IAAI9oC,MAAM,iBAEpB,OAAO+lC,EAAU4C,EAAOG,IAoB5BxvC,EAAQusC,QAAUA,EAiBlBvsC,EAAQqqC,UAAYA,G,6BC1JpBzpC,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,IACtD,MAAM6oC,EAAO,EAAQ,IAqCrB,SAAS4T,EAAYz8C,GACjB,GAAa,MAATA,EACA,MAAM,IAAIuF,MAAM,sCAEpB,GAAqB,iBAAVvF,EAAoB,CAC3B,MAAM8hB,EAAQ9hB,EAAM8hB,MAAM,uBAC1B,IAAKA,EACD,MAAM,IAAIvc,MAAM,8BAEpB,GAAiB,OAAbuc,EAAM,GACN,MAAM,IAAIvc,MAAM,mCAEpBvF,EAAQA,EAAMonC,UAAU,IACdtkC,OAAS,IACf9C,EAAQ,IAAMA,GAElB,MAAM6F,EAAS,GACf,IAAK,IAAI9G,EAAI,EAAGA,EAAIiB,EAAM8C,OAAQ/D,GAAK,EACnC8G,EAAOhC,KAAK+K,SAAS5O,EAAM2nC,OAAO5oC,EAAG,GAAI,KAE7C,OAAO29C,EAAS,IAAI3nC,WAAWlP,IAEnC,GAUJ,SAAqB7F,GACjB,IAAKA,GAED4O,SAASzC,OAAOnM,EAAM8C,UAAY9C,EAAM8C,QACvB,iBAAV9C,EACP,OAAO,EAEX,IAAK,IAAIjB,EAAI,EAAGA,EAAIiB,EAAM8C,OAAQ/D,IAAK,CACnC,MAAM6C,EAAI5B,EAAMjB,GAEhB,GAAI6C,EAAI,GAAKA,GAAK,KAAOgN,SAASzC,OAAOvK,KAAOA,EAC5C,OAAO,EAGf,OAAO,EAxBH+6C,CAAY38C,GACZ,OAAO08C,EAAS,IAAI3nC,WAAW/U,IAEnC,MAAM,IAAIuF,MAAM,0BA2BpB,SAASm3C,EAASlpC,GACd,YAAoB/C,IAAhB+C,EAAMrL,QAGVqL,EAAMrL,MAAQ,KACV,MAAM2a,EAAO5f,MAAMvC,UAAUwH,MAAMjJ,KAAKwd,WACxC,OAAOggC,EAAS,IAAI3nC,WAAW7R,MAAMvC,UAAUwH,MAAMqF,MAAMgG,EAAOsP,OAJ3DtP,EAnFf3U,EAAQkqC,UAHR,SAAmB9xB,GACf,MAAO,KAAO4xB,EAAK+T,WAAWH,EAAYxlC,KAQ9CpY,EAAQ+rC,QAAU,CAAC5qC,EAAOuuC,KACtB,MAAMC,EAAY,OAAOjgC,KAAKvO,IAA2B,iBAAVA,EAEzCod,EAAUmxB,GADhBvuC,EAAQA,EAAM4I,WAAWiM,QAAQ,OAAQ,KACX/R,OAAS,GAAK,EAAIyrC,EAAQvuC,EAAM8C,OAAS,EAAI,EAC3E,OAAQ0rC,EAAY,KAAO,IAAM,IAAItrC,MAAMka,GAASlP,KAAK,KAAOlO,GAcpEnB,EAAQ6qC,WARR,SAAoBoE,GAChB,MAAMtG,EAAM,GACZ,IAAK,IAAIzoC,EAAI,EAAGA,EAAI+uC,EAAMhrC,OAAQ/D,IAC9ByoC,EAAI3jC,MAAMiqC,EAAM/uC,KAAO,GAAG6J,SAAS,KACnC4+B,EAAI3jC,MAAiB,GAAXiqC,EAAM/uC,IAAU6J,SAAS,KAEvC,MAAO,KAAK4+B,EAAIt5B,KAAK,IAAI2G,QAAQ,MAAO,KAkC5ChW,EAAQ49C,YAAcA,G,gBClEtB;;;;;;;;IASA,WACE,aAEA,IAAII,EAAc,wBAEdC,EAA2B,iBAAXjgC,OAChBlK,EAAOmqC,EAASjgC,OAAS,GACzBlK,EAAKoqC,oBACPD,GAAS,GAEX,IAAIE,GAAcF,GAA0B,iBAATx3C,MACpBqN,EAAKsqC,oBAAyC,iBAAZ/pC,SAAwBA,QAAQgqC,UAAYhqC,QAAQgqC,SAASjtC,KAE5G0C,EAAOF,OACEuqC,IACTrqC,EAAOrN,MAET,IAAI63C,GAAaxqC,EAAKyqC,sBAA0C,iBAAXt+C,GAAuBA,EAAOD,QAC/Ew+C,EAAsC,MACtCC,GAAgB3qC,EAAK4qC,yBAAkD,oBAAhBhhC,YACvD27B,EAAY,mBAAmB9pC,MAAM,IAErCovC,EAAiB,CAAC,EAAG,KAAM,OAAQ,UAGnCpF,EAAQ,CAAC,EAAG,EAAG,GAAI,IACnBC,EAAK,CAAC,EAAG,EAAG,MAAO,EAAG,MAAO,WAAY,WAAY,WAAY,MAAO,EAAG,WAC7E,EAAG,WAAY,WAAY,MAAO,WAAY,IAAK,EAAG,IAAK,EAAG,WAAY,EAC1E,WAAY,EAAG,WAAY,EAAG,IAAK,WAAY,MAAO,WAAY,MAClE,WAAY,MAAO,WAAY,IAAK,WAAY,MAAO,EAAG,WAAY,WACtE,WAAY,WAAY,MAAO,WAAY,WAAY,EAAG,WAAY,YACpEoF,EAAO,CAAC,IAAK,IAAK,IAAK,KACvBC,EAAa,CAAC,IAAK,KACnBC,EAAe,CAAC,MAAO,SAAU,cAAe,QAAS,UACzDC,EAAiB,CACnB,IAAO,IACP,IAAO,MAGLjrC,EAAKsqC,oBAAuB/5C,MAAMwN,UACpCxN,MAAMwN,QAAU,SAAUhB,GACxB,MAA+C,mBAAxCjQ,OAAOkB,UAAUiI,SAAS1J,KAAKwQ,MAItC4tC,IAAiB3qC,EAAKkrC,iCAAoCthC,YAAYuhC,SACxEvhC,YAAYuhC,OAAS,SAAUpuC,GAC7B,MAAsB,iBAARA,GAAoBA,EAAI6J,QAAU7J,EAAI6J,OAAOmB,cAAgB6B,cAgG/E,IA5FA,IAAIwhC,EAAqB,SAAU1zC,EAAM+S,EAAS4gC,GAChD,OAAO,SAAUxkC,GACf,OAAO,IAAIyiC,EAAO5xC,EAAM+S,EAAS/S,GAAM2xC,OAAOxiC,GAASwkC,OAIvDC,EAA0B,SAAU5zC,EAAM+S,EAAS4gC,GACrD,OAAO,SAAUxkC,EAAS0kC,GACxB,OAAO,IAAIjC,EAAO5xC,EAAM+S,EAAS8gC,GAAYlC,OAAOxiC,GAASwkC,OAI7DG,EAA2B,SAAU9zC,EAAM+S,EAAS4gC,GACtD,OAAO,SAAUxkC,EAAS0kC,EAAY19C,EAAGM,GACvC,OAAOosB,EAAQ,SAAW7iB,GAAM2xC,OAAOxiC,EAAS0kC,EAAY19C,EAAGM,GAAGk9C,OAIlEI,EAAyB,SAAU/zC,EAAM+S,EAAS4gC,GACpD,OAAO,SAAU19C,EAAKkZ,EAAS0kC,EAAYp9C,GACzC,OAAOosB,EAAQ,OAAS7iB,GAAM2xC,OAAO17C,EAAKkZ,EAAS0kC,EAAYp9C,GAAGk9C,OAIlEK,EAAsB,SAAU73B,EAAQ83B,EAAcj0C,EAAM+S,GAC9D,IAAK,IAAIre,EAAI,EAAGA,EAAI4+C,EAAa76C,SAAU/D,EAAG,CAC5C,IAAIgd,EAAO4hC,EAAa5+C,GACxBynB,EAAOzK,GAAQuiC,EAAaj0C,EAAM+S,EAASrB,GAE7C,OAAOyK,GAGL83B,EAAe,SAAUj0C,EAAM+S,GACjC,IAAIoJ,EAASu3B,EAAmB1zC,EAAM+S,EAAS,OAO/C,OANAoJ,EAAOnmB,OAAS,WACd,OAAO,IAAI47C,EAAO5xC,EAAM+S,EAAS/S,IAEnCmc,EAAOw1B,OAAS,SAAUxiC,GACxB,OAAOgN,EAAOnmB,SAAS27C,OAAOxiC,IAEzB6kC,EAAoB73B,EAAQu3B,EAAoB1zC,EAAM+S,IA0C3DmhC,EAAa,CACf,CAAEj/C,KAAM,SAAU8d,QA/GC,CAAC,EAAG,IAAK,MAAO,UA+GQ/S,KAAMozC,EAAMa,aAAcA,GACrE,CAAEh/C,KAAM,OAAQ8d,QA/GJ,CAAC,EAAG,KAAM,OAAQ,WA+GI/S,KAAMozC,EAAMa,aAAcA,GAC5D,CAAEh/C,KAAM,QAAS8d,QAnHC,CAAC,GAAI,KAAM,QAAS,WAmHG/S,KAAMqzC,EAAYY,aA1CrC,SAAUj0C,EAAM+S,GACtC,IAAIoJ,EAASy3B,EAAwB5zC,EAAM+S,EAAS,OAOpD,OANAoJ,EAAOnmB,OAAS,SAAU69C,GACxB,OAAO,IAAIjC,EAAO5xC,EAAM+S,EAAS8gC,IAEnC13B,EAAOw1B,OAAS,SAAUxiC,EAAS0kC,GACjC,OAAO13B,EAAOnmB,OAAO69C,GAAYlC,OAAOxiC,IAEnC6kC,EAAoB73B,EAAQy3B,EAAyB5zC,EAAM+S,KAmClE,CAAE9d,KAAM,SAAU8d,QAASogC,EAAgBnzC,KAAMqzC,EAAYY,aAhCtC,SAAUj0C,EAAM+S,GACvC,IAAI8V,EAAI0qB,EAAevzC,GACnBmc,EAAS23B,EAAyB9zC,EAAM+S,EAAS,OAWrD,OAVAoJ,EAAOnmB,OAAS,SAAU69C,EAAY19C,EAAGM,GACvC,OAAKN,GAAMM,EAGF,IAAIm7C,EAAO5xC,EAAM+S,EAAS8gC,GAAYM,QAAQ,CAACh+C,EAAGM,GAAIoyB,GAFtDhG,EAAQ,QAAU7iB,GAAMhK,OAAO69C,IAK1C13B,EAAOw1B,OAAS,SAAUxiC,EAAS0kC,EAAY19C,EAAGM,GAChD,OAAO0lB,EAAOnmB,OAAO69C,EAAY19C,EAAGM,GAAGk7C,OAAOxiC,IAEzC6kC,EAAoB73B,EAAQ23B,EAA0B9zC,EAAM+S,KAoBnE,CAAE9d,KAAM,OAAQ8d,QAASogC,EAAgBnzC,KAAMqzC,EAAYY,aAjBtC,SAAUj0C,EAAM+S,GACrC,IAAI8V,EAAI0qB,EAAevzC,GACnBmc,EAAS43B,EAAuB/zC,EAAM+S,EAAS,OAOnD,OANAoJ,EAAOnmB,OAAS,SAAUC,EAAK49C,EAAYp9C,GACzC,OAAO,IAAI29C,EAAKp0C,EAAM+S,EAAS8gC,GAAYM,QAAQ,CAAC,OAAQ19C,GAAIoyB,GAAGsrB,QAAQ,CAACl+C,GAAM4yB,IAEpF1M,EAAOw1B,OAAS,SAAU17C,EAAKkZ,EAAS0kC,EAAYp9C,GAClD,OAAO0lB,EAAOnmB,OAAOC,EAAK49C,EAAYp9C,GAAGk7C,OAAOxiC,IAE3C6kC,EAAoB73B,EAAQ43B,EAAwB/zC,EAAM+S,MAW/D8P,EAAU,GAAIwxB,EAAc,GAEvB3/C,EAAI,EAAGA,EAAIw/C,EAAWz7C,SAAU/D,EAGvC,IAFA,IAAI4/C,EAAYJ,EAAWx/C,GACvBsL,EAAOs0C,EAAUt0C,KACZ5F,EAAI,EAAGA,EAAI4F,EAAKvH,SAAU2B,EAAG,CACpC,IAAIm6C,EAAaD,EAAUr/C,KAAO,IAAM+K,EAAK5F,GAG7C,GAFAi6C,EAAY76C,KAAK+6C,GACjB1xB,EAAQ0xB,GAAcD,EAAUL,aAAaj0C,EAAK5F,GAAIk6C,EAAUvhC,SACzC,SAAnBuhC,EAAUr/C,KAAiB,CAC7B,IAAIu/C,EAAgBF,EAAUr/C,KAAO+K,EAAK5F,GAC1Ci6C,EAAY76C,KAAKg7C,GACjB3xB,EAAQ2xB,GAAiB3xB,EAAQ0xB,IAKvC,SAAS3C,EAAO5xC,EAAM+S,EAAS8gC,GAC7B97C,KAAKs5C,OAAS,GACdt5C,KAAKtB,EAAI,GACTsB,KAAKgb,QAAUA,EACfhb,KAAK87C,WAAaA,EAClB97C,KAAKy5C,OAAQ,EACbz5C,KAAK08C,WAAY,EACjB18C,KAAK05C,MAAQ,EACb15C,KAAKgL,MAAQ,EACbhL,KAAKu5C,WAAc,MAAQtxC,GAAQ,IAAO,EAC1CjI,KAAK60C,UAAY70C,KAAKu5C,YAAc,EACpCv5C,KAAKw5C,aAAesC,GAAc,EAClC97C,KAAK28C,YAA2B,GAAbb,IAAoB,EAEvC,IAAK,IAAIn/C,EAAI,EAAGA,EAAI,KAAMA,EACxBqD,KAAKtB,EAAE/B,GAAK,EAyQhB,SAAS0/C,EAAKp0C,EAAM+S,EAAS8gC,GAC3BjC,EAAO/8C,KAAKkD,KAAMiI,EAAM+S,EAAS8gC,GAtQnCjC,EAAOt7C,UAAUq7C,OAAS,SAAUxiC,GAClC,GAAIpX,KAAK08C,UACP,MAAM,IAAIv5C,MA/KO,2BAiLnB,IAAIy5C,EAAWjjC,SAAcvC,EAC7B,GAAa,WAATuC,EAAmB,CACrB,GAAa,WAATA,EAWF,MAAM,IAAIxW,MAAMs3C,GAVhB,GAAgB,OAAZrjC,EACF,MAAM,IAAIjU,MAAMs3C,GACX,GAAIS,GAAgB9jC,EAAQkB,cAAgB6B,YACjD/C,EAAU,IAAIzE,WAAWyE,QACpB,KAAKtW,MAAMwN,QAAQ8I,IACnB8jC,GAAiB/gC,YAAYuhC,OAAOtkC,IACvC,MAAM,IAAIjU,MAAMs3C,GAMtBmC,GAAY,EAKd,IAHA,IACuDjgD,EAAG2oC,EADtDgU,EAASt5C,KAAKs5C,OAAQzE,EAAY70C,KAAK60C,UAAWn0C,EAAS0W,EAAQ1W,OACrE64C,EAAav5C,KAAKu5C,WAAYjoC,EAAQ,EAAG5S,EAAIsB,KAAKtB,EAE7C4S,EAAQ5Q,GAAQ,CACrB,GAAIV,KAAKy5C,MAGP,IAFAz5C,KAAKy5C,OAAQ,EACbH,EAAO,GAAKt5C,KAAK05C,MACZ/8C,EAAI,EAAGA,EAAI48C,EAAa,IAAK58C,EAChC28C,EAAO38C,GAAK,EAGhB,GAAIigD,EACF,IAAKjgD,EAAIqD,KAAKgL,MAAOsG,EAAQ5Q,GAAU/D,EAAIk4C,IAAavjC,EACtDgoC,EAAO38C,GAAK,IAAMya,EAAQ9F,IAAU0kC,EAAY,EAANr5C,UAG5C,IAAKA,EAAIqD,KAAKgL,MAAOsG,EAAQ5Q,GAAU/D,EAAIk4C,IAAavjC,GACtDg0B,EAAOluB,EAAQ+D,WAAW7J,IACf,IACTgoC,EAAO38C,GAAK,IAAM2oC,GAAQ0Q,EAAY,EAANr5C,KACvB2oC,EAAO,MAChBgU,EAAO38C,GAAK,KAAO,IAAQ2oC,GAAQ,IAAO0Q,EAAY,EAANr5C,KAChD28C,EAAO38C,GAAK,KAAO,IAAe,GAAP2oC,IAAiB0Q,EAAY,EAANr5C,MACzC2oC,EAAO,OAAUA,GAAQ,OAClCgU,EAAO38C,GAAK,KAAO,IAAQ2oC,GAAQ,KAAQ0Q,EAAY,EAANr5C,KACjD28C,EAAO38C,GAAK,KAAO,IAAS2oC,GAAQ,EAAK,KAAU0Q,EAAY,EAANr5C,KACzD28C,EAAO38C,GAAK,KAAO,IAAe,GAAP2oC,IAAiB0Q,EAAY,EAANr5C,OAElD2oC,EAAO,QAAoB,KAAPA,IAAiB,GAAqC,KAA9BluB,EAAQ+D,aAAa7J,IACjEgoC,EAAO38C,GAAK,KAAO,IAAQ2oC,GAAQ,KAAQ0Q,EAAY,EAANr5C,KACjD28C,EAAO38C,GAAK,KAAO,IAAS2oC,GAAQ,GAAM,KAAU0Q,EAAY,EAANr5C,KAC1D28C,EAAO38C,GAAK,KAAO,IAAS2oC,GAAQ,EAAK,KAAU0Q,EAAY,EAANr5C,KACzD28C,EAAO38C,GAAK,KAAO,IAAe,GAAP2oC,IAAiB0Q,EAAY,EAANr5C,MAKxD,GADAqD,KAAK25C,cAAgBh9C,EACjBA,GAAKk4C,EAAW,CAGlB,IAFA70C,KAAKgL,MAAQrO,EAAIk4C,EACjB70C,KAAK05C,MAAQJ,EAAOC,GACf58C,EAAI,EAAGA,EAAI48C,IAAc58C,EAC5B+B,EAAE/B,IAAM28C,EAAO38C,GAEjB+Q,EAAEhP,GACFsB,KAAKy5C,OAAQ,OAEbz5C,KAAKgL,MAAQrO,EAGjB,OAAOqD,MAGT65C,EAAOt7C,UAAUge,OAAS,SAAU1b,EAAGskB,GACrC,IAAI/nB,EAAQ,IAAJyD,EAASzC,EAAI,EACjBstC,EAAQ,CAACtuC,GAGb,IADAA,EAAQ,KADRyD,IAAS,GAEFzD,EAAI,GACTsuC,EAAMxnC,QAAQ9G,GAEdA,EAAQ,KADRyD,IAAS,KAEPzC,EAQJ,OANI+mB,EACFumB,EAAMjqC,KAAKrD,GAEXstC,EAAMxnC,QAAQ9F,GAEhB4B,KAAK45C,OAAOlO,GACLA,EAAMhrC,QAGfm5C,EAAOt7C,UAAUs+C,aAAe,SAAUvwC,GACxC,IAAIswC,EAAWjjC,SAAcrN,EAC7B,GAAa,WAATqN,EAAmB,CACrB,GAAa,WAATA,EAWF,MAAM,IAAIxW,MAAMs3C,GAVhB,GAAY,OAARnuC,EACF,MAAM,IAAInJ,MAAMs3C,GACX,GAAIS,GAAgB5uC,EAAIgM,cAAgB6B,YAC7C7N,EAAM,IAAIqG,WAAWrG,QAChB,KAAKxL,MAAMwN,QAAQhC,IACnB4uC,GAAiB/gC,YAAYuhC,OAAOpvC,IACvC,MAAM,IAAInJ,MAAMs3C,GAMtBmC,GAAY,EAEd,IAAIlR,EAAQ,EAAGhrC,EAAS4L,EAAI5L,OAC5B,GAAIk8C,EACFlR,EAAQhrC,OAER,IAAK,IAAI/D,EAAI,EAAGA,EAAI2P,EAAI5L,SAAU/D,EAAG,CACnC,IAAI2oC,EAAOh5B,EAAI6O,WAAWxe,GACtB2oC,EAAO,IACToG,GAAS,EACApG,EAAO,KAChBoG,GAAS,EACApG,EAAO,OAAUA,GAAQ,MAClCoG,GAAS,GAETpG,EAAO,QAAoB,KAAPA,IAAiB,GAA6B,KAAtBh5B,EAAI6O,aAAaxe,IAC7D+uC,GAAS,GAMf,OAFAA,GAAS1rC,KAAKuc,OAAe,EAARmvB,GACrB1rC,KAAK45C,OAAOttC,GACLo/B,GAGTmO,EAAOt7C,UAAU69C,QAAU,SAAUU,EAAMhsB,GAEzC,IADA,IAAI4a,EAAQ1rC,KAAKuc,OAAOuU,GACfn0B,EAAI,EAAGA,EAAImgD,EAAKp8C,SAAU/D,EACjC+uC,GAAS1rC,KAAK68C,aAAaC,EAAKngD,IAElC,IAAIogD,EAAejsB,EAAI4a,EAAQ5a,EAC3Bc,EAAQ,GAGZ,OAFAA,EAAMlxB,OAASq8C,EACf/8C,KAAK45C,OAAOhoB,GACL5xB,MAGT65C,EAAOt7C,UAAUy+C,SAAW,WAC1B,IAAIh9C,KAAK08C,UAAT,CAGA18C,KAAK08C,WAAY,EACjB,IAAIpD,EAASt5C,KAAKs5C,OAAQ38C,EAAIqD,KAAK25C,cAAeJ,EAAav5C,KAAKu5C,WAAY76C,EAAIsB,KAAKtB,EAEzF,GADA46C,EAAO38C,GAAK,IAAMqD,KAAKgb,QAAY,EAAJre,GAC3BqD,KAAK25C,gBAAkB35C,KAAK60C,UAE9B,IADAyE,EAAO,GAAKA,EAAOC,GACd58C,EAAI,EAAGA,EAAI48C,EAAa,IAAK58C,EAChC28C,EAAO38C,GAAK,EAIhB,IADA28C,EAAOC,EAAa,IAAM,WACrB58C,EAAI,EAAGA,EAAI48C,IAAc58C,EAC5B+B,EAAE/B,IAAM28C,EAAO38C,GAEjB+Q,EAAEhP,KAGJm7C,EAAOt7C,UAAUiI,SAAWqzC,EAAOt7C,UAAU6mC,IAAM,WACjDplC,KAAKg9C,WAKL,IAHA,IAEctD,EAFVH,EAAav5C,KAAKu5C,WAAY76C,EAAIsB,KAAKtB,EAAG86C,EAAex5C,KAAKw5C,aAChEmD,EAAa38C,KAAK28C,WAAYhgD,EAAI,EAAG0F,EAAI,EACvC+iC,EAAM,GACH/iC,EAAIm3C,GAAc,CACvB,IAAK78C,EAAI,EAAGA,EAAI48C,GAAcl3C,EAAIm3C,IAAgB78C,IAAK0F,EACrDq3C,EAAQh7C,EAAE/B,GACVyoC,GAAO0Q,EAAW4D,GAAS,EAAK,IAAQ5D,EAAkB,GAAR4D,GAChD5D,EAAW4D,GAAS,GAAM,IAAQ5D,EAAW4D,GAAS,EAAK,IAC3D5D,EAAW4D,GAAS,GAAM,IAAQ5D,EAAW4D,GAAS,GAAM,IAC5D5D,EAAW4D,GAAS,GAAM,IAAQ5D,EAAW4D,GAAS,GAAM,IAE5Dr3C,EAAIk3C,GAAe,IACrB7rC,EAAEhP,GACF/B,EAAI,GAaR,OAVIggD,IACFjD,EAAQh7C,EAAE/B,GACVyoC,GAAO0Q,EAAW4D,GAAS,EAAK,IAAQ5D,EAAkB,GAAR4D,GAC9CiD,EAAa,IACfvX,GAAO0Q,EAAW4D,GAAS,GAAM,IAAQ5D,EAAW4D,GAAS,EAAK,KAEhEiD,EAAa,IACfvX,GAAO0Q,EAAW4D,GAAS,GAAM,IAAQ5D,EAAW4D,GAAS,GAAM,MAGhEtU,GAGTyU,EAAOt7C,UAAU0+C,YAAc,WAC7Bj9C,KAAKg9C,WAEL,IAGI7lC,EAHAoiC,EAAav5C,KAAKu5C,WAAY76C,EAAIsB,KAAKtB,EAAG86C,EAAex5C,KAAKw5C,aAChEmD,EAAa38C,KAAK28C,WAAYhgD,EAAI,EAAG0F,EAAI,EACvCqpC,EAAQ1rC,KAAK87C,YAAc,EAG7B3kC,EADEwlC,EACO,IAAIxiC,YAAaq/B,EAAe,GAAM,GAEtC,IAAIr/B,YAAYuxB,GAG3B,IADA,IAAIt6B,EAAQ,IAAI8rC,YAAY/lC,GACrB9U,EAAIm3C,GAAc,CACvB,IAAK78C,EAAI,EAAGA,EAAI48C,GAAcl3C,EAAIm3C,IAAgB78C,IAAK0F,EACrD+O,EAAM/O,GAAK3D,EAAE/B,GAEX0F,EAAIk3C,GAAe,GACrB7rC,EAAEhP,GAON,OAJIi+C,IACFvrC,EAAMzU,GAAK+B,EAAE/B,GACbwa,EAASA,EAAOpR,MAAM,EAAG2lC,IAEpBv0B,GAGT0iC,EAAOt7C,UAAU4Y,OAAS0iC,EAAOt7C,UAAU0+C,YAE3CpD,EAAOt7C,UAAU4+C,OAAStD,EAAOt7C,UAAU6S,MAAQ,WACjDpR,KAAKg9C,WAKL,IAHA,IAEgB1jC,EAAQogC,EAFpBH,EAAav5C,KAAKu5C,WAAY76C,EAAIsB,KAAKtB,EAAG86C,EAAex5C,KAAKw5C,aAChEmD,EAAa38C,KAAK28C,WAAYhgD,EAAI,EAAG0F,EAAI,EACvC+O,EAAQ,GACL/O,EAAIm3C,GAAc,CACvB,IAAK78C,EAAI,EAAGA,EAAI48C,GAAcl3C,EAAIm3C,IAAgB78C,IAAK0F,EACrDiX,EAASjX,GAAK,EACdq3C,EAAQh7C,EAAE/B,GACVyU,EAAMkI,GAAkB,IAARogC,EAChBtoC,EAAMkI,EAAS,GAAMogC,GAAS,EAAK,IACnCtoC,EAAMkI,EAAS,GAAMogC,GAAS,GAAM,IACpCtoC,EAAMkI,EAAS,GAAMogC,GAAS,GAAM,IAElCr3C,EAAIk3C,GAAe,GACrB7rC,EAAEhP,GAcN,OAXIi+C,IACFrjC,EAASjX,GAAK,EACdq3C,EAAQh7C,EAAE/B,GACVyU,EAAMkI,GAAkB,IAARogC,EACZiD,EAAa,IACfvrC,EAAMkI,EAAS,GAAMogC,GAAS,EAAK,KAEjCiD,EAAa,IACfvrC,EAAMkI,EAAS,GAAMogC,GAAS,GAAM,MAGjCtoC,GAOTirC,EAAK99C,UAAY,IAAIs7C,EAErBwC,EAAK99C,UAAUy+C,SAAW,WAExB,OADAh9C,KAAKuc,OAAOvc,KAAK87C,YAAY,GACtBjC,EAAOt7C,UAAUy+C,SAASlgD,KAAKkD,OAGxC,IAAI0N,EAAI,SAAUhP,GAChB,IAAI8+B,EAAG5gC,EAAGwB,EAAG83C,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAC/C3f,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIie,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAC3EC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAC3EC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,GAAKC,GAAKC,GAAKC,GAAKC,GAAKC,GAAKC,GAAKC,GAAKC,GAAKC,GAAKC,GAC7E,IAAK/6C,EAAI,EAAGA,EAAI,GAAIA,GAAK,EACvB83C,EAAKx3C,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IACtCy3C,EAAKz3C,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IACtC03C,EAAK13C,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IACtC23C,EAAK33C,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IACtC43C,EAAK53C,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IACtC63C,EAAK73C,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IACtC83C,EAAK93C,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IACtC+3C,EAAK/3C,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAItC8+B,GAHAkZ,EAAKh4C,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,MAG3B03C,GAAM,EAAMC,IAAO,IAC9Bz5C,GAHA+5C,EAAKj4C,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,MAG3B23C,GAAM,EAAMD,IAAO,IAC9B13C,EAAE,IAAM8+B,EACR9+B,EAAE,IAAM9B,EACR8B,EAAE,KAAO8+B,EACT9+B,EAAE,KAAO9B,EACT8B,EAAE,KAAO8+B,EACT9+B,EAAE,KAAO9B,EACT8B,EAAE,KAAO8+B,EACT9+B,EAAE,KAAO9B,EACT8B,EAAE,KAAO8+B,EACT9+B,EAAE,KAAO9B,EACT4gC,EAAI0Y,GAAOI,GAAM,EAAMC,IAAO,IAC9B35C,EAAIu5C,GAAOI,GAAM,EAAMD,IAAO,IAC9B53C,EAAE,IAAM8+B,EACR9+B,EAAE,IAAM9B,EACR8B,EAAE,KAAO8+B,EACT9+B,EAAE,KAAO9B,EACT8B,EAAE,KAAO8+B,EACT9+B,EAAE,KAAO9B,EACT8B,EAAE,KAAO8+B,EACT9+B,EAAE,KAAO9B,EACT8B,EAAE,KAAO8+B,EACT9+B,EAAE,KAAO9B,EACT4gC,EAAI4Y,GAAOI,GAAM,EAAMC,IAAO,IAC9B75C,EAAIy5C,GAAOI,GAAM,EAAMD,IAAO,IAC9B93C,EAAE,IAAM8+B,EACR9+B,EAAE,IAAM9B,EACR8B,EAAE,KAAO8+B,EACT9+B,EAAE,KAAO9B,EACT8B,EAAE,KAAO8+B,EACT9+B,EAAE,KAAO9B,EACT8B,EAAE,KAAO8+B,EACT9+B,EAAE,KAAO9B,EACT8B,EAAE,KAAO8+B,EACT9+B,EAAE,KAAO9B,EACT4gC,EAAI8Y,GAAOI,GAAM,EAAMC,IAAO,IAC9B/5C,EAAI25C,GAAOI,GAAM,EAAMD,IAAO,IAC9Bh4C,EAAE,IAAM8+B,EACR9+B,EAAE,IAAM9B,EACR8B,EAAE,KAAO8+B,EACT9+B,EAAE,KAAO9B,EACT8B,EAAE,KAAO8+B,EACT9+B,EAAE,KAAO9B,EACT8B,EAAE,KAAO8+B,EACT9+B,EAAE,KAAO9B,EACT8B,EAAE,KAAO8+B,EACT9+B,EAAE,KAAO9B,EACT4gC,EAAIgZ,GAAON,GAAM,EAAMC,IAAO,IAC9Bv5C,EAAI65C,GAAON,GAAM,EAAMD,IAAO,IAC9Bx3C,EAAE,IAAM8+B,EACR9+B,EAAE,IAAM9B,EACR8B,EAAE,KAAO8+B,EACT9+B,EAAE,KAAO9B,EACT8B,EAAE,KAAO8+B,EACT9+B,EAAE,KAAO9B,EACT8B,EAAE,KAAO8+B,EACT9+B,EAAE,KAAO9B,EACT8B,EAAE,KAAO8+B,EACT9+B,EAAE,KAAO9B,EAETo6B,EAAKt4B,EAAE,GACPy4B,EAAKz4B,EAAE,GACPw5C,EAAOx5C,EAAE,KAAO,EAAMA,EAAE,MAAQ,GAChCy5C,EAAOz5C,EAAE,KAAO,EAAMA,EAAE,MAAQ,GAChCs4C,EAAOt4C,EAAE,KAAO,EAAMA,EAAE,MAAQ,GAChCu4C,EAAOv4C,EAAE,KAAO,EAAMA,EAAE,MAAQ,GAChCs6C,GAAOt6C,EAAE,KAAO,EAAMA,EAAE,MAAQ,GAChCu6C,GAAOv6C,EAAE,KAAO,EAAMA,EAAE,MAAQ,GAChCo5C,EAAOp5C,EAAE,KAAO,GAAOA,EAAE,MAAQ,GACjCq5C,EAAOr5C,EAAE,KAAO,GAAOA,EAAE,MAAQ,GACjC44C,EAAO54C,EAAE,IAAM,EAAMA,EAAE,KAAO,GAC9B64C,EAAO74C,EAAE,IAAM,EAAMA,EAAE,KAAO,GAC9B44B,EAAM54B,EAAE,KAAO,GAAOA,EAAE,MAAQ,GAChC+4B,EAAM/4B,EAAE,KAAO,GAAOA,EAAE,MAAQ,GAChC05C,EAAO15C,EAAE,KAAO,GAAOA,EAAE,MAAQ,GACjC25C,EAAO35C,EAAE,KAAO,GAAOA,EAAE,MAAQ,GACjCw4C,EAAOx4C,EAAE,KAAO,GAAOA,EAAE,MAAQ,GACjCy4C,EAAOz4C,EAAE,KAAO,GAAOA,EAAE,MAAQ,GACjCw6C,GAAOx6C,EAAE,KAAO,EAAMA,EAAE,MAAQ,GAChCy6C,GAAOz6C,EAAE,KAAO,EAAMA,EAAE,MAAQ,GAChCg6C,GAAOh6C,EAAE,IAAM,GAAOA,EAAE,KAAO,EAC/Bi6C,GAAOj6C,EAAE,IAAM,GAAOA,EAAE,KAAO,EAC/B84C,EAAO94C,EAAE,KAAO,EAAMA,EAAE,MAAQ,GAChC+4C,EAAO/4C,EAAE,KAAO,EAAMA,EAAE,MAAQ,GAChCk5B,EAAMl5B,EAAE,KAAO,GAAOA,EAAE,MAAQ,GAChCq5B,EAAMr5B,EAAE,KAAO,GAAOA,EAAE,MAAQ,GAChC45C,EAAO55C,EAAE,KAAO,GAAOA,EAAE,MAAQ,GACjC65C,EAAO75C,EAAE,KAAO,GAAOA,EAAE,MAAQ,GACjC04C,EAAO14C,EAAE,KAAO,GAAOA,EAAE,MAAQ,EACjC24C,EAAO34C,EAAE,KAAO,GAAOA,EAAE,MAAQ,EACjCk4C,EAAOl4C,EAAE,IAAM,GAAOA,EAAE,KAAO,EAC/Bm4C,EAAOn4C,EAAE,IAAM,GAAOA,EAAE,KAAO,EAC/Bk6C,GAAOl6C,EAAE,KAAO,GAAOA,EAAE,MAAQ,EACjCm6C,GAAOn6C,EAAE,KAAO,GAAOA,EAAE,MAAQ,EACjCg5C,EAAOh5C,EAAE,KAAO,GAAOA,EAAE,MAAQ,EACjCi5C,EAAOj5C,EAAE,KAAO,GAAOA,EAAE,MAAQ,EACjCw5B,EAAMx5B,EAAE,KAAO,GAAOA,EAAE,MAAQ,GAChC25B,EAAM35B,EAAE,KAAO,GAAOA,EAAE,MAAQ,GAChC85C,EAAO95C,EAAE,KAAO,GAAOA,EAAE,MAAQ,EACjC+5C,GAAO/5C,EAAE,KAAO,GAAOA,EAAE,MAAQ,EACjCs5C,EAAOt5C,EAAE,IAAM,GAAOA,EAAE,KAAO,EAC/Bu5C,EAAOv5C,EAAE,IAAM,GAAOA,EAAE,KAAO,EAC/Bo4C,EAAOp4C,EAAE,KAAO,GAAOA,EAAE,MAAQ,GACjCq4C,EAAOr4C,EAAE,KAAO,GAAOA,EAAE,MAAQ,GACjCo6C,GAAOp6C,EAAE,KAAO,EAAMA,EAAE,MAAQ,GAChCq6C,GAAOr6C,EAAE,KAAO,EAAMA,EAAE,MAAQ,GAChCk5C,EAAOl5C,EAAE,KAAO,EAAMA,EAAE,MAAQ,GAChCm5C,EAAOn5C,EAAE,KAAO,EAAMA,EAAE,MAAQ,GAChC85B,EAAM95B,EAAE,KAAO,GAAOA,EAAE,MAAQ,GAChCi6B,EAAMj6B,EAAE,KAAO,GAAOA,EAAE,MAAQ,GAEhCA,EAAE,GAAKs4B,GAAOM,EAAKM,EACnBl5B,EAAE,GAAKy4B,GAAOM,EAAKM,EACnBr5B,EAAE,IAAMk4C,GAAQE,EAAME,EACtBt4C,EAAE,IAAMm4C,GAAQE,EAAME,EACtBv4C,EAAE,IAAM44C,GAAQE,EAAME,EACtBh5C,EAAE,IAAM64C,GAAQE,EAAME,EACtBj5C,EAAE,IAAMs5C,GAAQE,EAAME,EACtB15C,EAAE,IAAMu5C,GAAQE,EAAME,EACtB35C,EAAE,IAAMg6C,IAAQE,GAAME,GACtBp6C,EAAE,IAAMi6C,IAAQE,GAAME,GACtBr6C,EAAE,GAAK44B,GAAOM,EAAKM,EACnBx5B,EAAE,GAAK+4B,GAAOM,EAAKM,EACnB35B,EAAE,IAAMo4C,GAAQE,EAAME,EACtBx4C,EAAE,IAAMq4C,GAAQE,EAAME,EACtBz4C,EAAE,IAAM84C,GAAQE,EAAME,EACtBl5C,EAAE,IAAM+4C,GAAQE,EAAME,EACtBn5C,EAAE,IAAMw5C,GAAQE,EAAME,EACtB55C,EAAE,IAAMy5C,GAAQE,EAAME,EACtB75C,EAAE,IAAMk6C,IAAQE,GAAME,GACtBt6C,EAAE,IAAMm6C,IAAQE,GAAME,GACtBv6C,EAAE,GAAKk5B,GAAOM,EAAKM,EACnB95B,EAAE,GAAKq5B,GAAOM,EAAKM,EACnBj6B,EAAE,IAAMs4C,GAAQE,EAAME,EACtB14C,EAAE,IAAMu4C,GAAQE,EAAME,EACtB34C,EAAE,IAAMg5C,GAAQE,EAAME,EACtBp5C,EAAE,IAAMi5C,GAAQE,EAAME,EACtBr5C,EAAE,IAAM05C,GAAQE,EAAME,EACtB95C,EAAE,IAAM25C,GAAQE,EAAME,GACtB/5C,EAAE,IAAMo6C,IAAQE,GAAME,GACtBx6C,EAAE,IAAMq6C,IAAQE,GAAME,GACtBz6C,EAAE,GAAKw5B,GAAOM,EAAKxB,EACnBt4B,EAAE,GAAK25B,GAAOM,EAAKxB,EACnBz4B,EAAE,IAAMw4C,GAAQE,EAAMR,EACtBl4C,EAAE,IAAMy4C,GAAQE,EAAMR,EACtBn4C,EAAE,IAAMk5C,GAAQE,EAAMR,EACtB54C,EAAE,IAAMm5C,GAAQE,EAAMR,EACtB74C,EAAE,IAAM45C,GAAQE,EAAMR,EACtBt5C,EAAE,IAAM65C,GAAQE,GAAMR,EACtBv5C,EAAE,IAAMs6C,IAAQE,GAAMR,GACtBh6C,EAAE,IAAMu6C,IAAQE,GAAMR,GACtBj6C,EAAE,GAAK85B,GAAOxB,EAAKM,EACnB54B,EAAE,GAAKi6B,GAAOxB,EAAKM,EACnB/4B,EAAE,IAAM04C,GAAQR,EAAME,EACtBp4C,EAAE,IAAM24C,GAAQR,EAAME,EACtBr4C,EAAE,IAAMo5C,GAAQR,EAAME,EACtB94C,EAAE,IAAMq5C,GAAQR,EAAME,EACtB/4C,EAAE,IAAM85C,GAAQR,EAAME,EACtBx5C,EAAE,IAAM+5C,IAAQR,EAAME,EACtBz5C,EAAE,IAAMw6C,IAAQR,GAAME,GACtBl6C,EAAE,IAAMy6C,IAAQR,GAAME,GAEtBn6C,EAAE,IAAMu3C,EAAG73C,GACXM,EAAE,IAAMu3C,EAAG73C,EAAI,IAInB,GAAI28C,EACFr+C,EAAOD,QAAUquB,MACZ,CACL,IAAKnuB,EAAI,EAAGA,EAAI2/C,EAAY57C,SAAU/D,EACpC4T,EAAK+rC,EAAY3/C,IAAMmuB,EAAQwxB,EAAY3/C,IAEzCs+C,SAGD,KAFD,aACE,OAAOnwB,GACR,gCAnoBP,I,eCTA,YACApuB,EAAOD,QAAU2gD,I,+BCoBjB,IAAIt8B,EAAI,EAAQ,IACZ8O,EAAK,EAAQ,IACb2U,EAAQ,EAAQ,IAuChB8Y,EAAe,SAAUlqC,GACzB,IAAIwG,SAAcxG,EAClB,GAAa,WAATwG,EACA,OAAI4qB,EAAMc,YAAYlyB,GACX,IAAIyc,EAAGzc,EAAIV,QAAQ,MAAO,IAAK,IAG/B,IAAImd,EAAGzc,EAAK,IAGtB,GAAa,WAATwG,EACL,OAAO,IAAIiW,EAAGzc,GAEb,GAAIoxB,EAAMgC,YAAYpzB,GACvB,OAAO,IAAIyc,EAAGzc,EAAI3M,SAAS,KAE1B,GAAI+9B,EAAMzU,KAAK3c,GAChB,OAAOA,EAGP,MAAM,IAAIhQ,MAAMgQ,EAAM,qBAG1BmqC,EAAgB,SAAU3jC,EAAM/b,EAAO2/C,GAEvC,IAAI/rC,EAAMif,EA/DkBvzB,EAiE5B,GAAa,WADbyc,GAhE4Bzc,EAgELyc,GA9Dd6jC,WAAW,QACT,SAAWtgD,EAAK6I,MAAM,GAEf,QAAT7I,EACE,SAEFA,EAAKsgD,WAAW,SACd,UAAYtgD,EAAK6I,MAAM,GAEhB,SAAT7I,EACE,UAEFA,EAAKsgD,WAAW,UACd,eAAiBtgD,EAAK6I,MAAM,GAErB,UAAT7I,EACE,eAEFA,EAAKsgD,WAAW,WACd,gBAAkBtgD,EAAK6I,MAAM,GAEtB,WAAT7I,EACE,gBAEJA,GAuCe,CAClB,GAAIU,EAAM6U,QAAQ,OAAQ,IAAI/R,OAAS,GAAM,EACzC,MAAM,IAAIyC,MAAM,4BAA8BvF,EAAM8C,QAExD,OAAO9C,EAEN,GAAa,WAAT+b,EACL,OAAO4qB,EAAM0D,UAAUrqC,GAEtB,GAAa,SAAT+b,EACL,OAAO/b,EAAQ,KAAO,KAErB,GAAI+b,EAAK6jC,WAAW,WAAY,CAOjC,GALIhsC,EADA+rC,EACO,GAGA,IAENhZ,EAAMuC,UAAUlpC,GACjB,MAAM,IAAIuF,MAAMvF,EAAQ,wDAE5B,OAAO2mC,EAAMkE,QAAQ7qC,EAAMgN,cAAe4G,GAG9C,GADAA,EA5Dc,SAAUmI,GACxB,IAAI8jC,EAAW,eAAerrC,KAAKuH,GACnC,OAAO8jC,EAAWjxC,SAASixC,EAAS,GAAI,IAAM,KA0DvCC,CAAY/jC,GACfA,EAAK6jC,WAAW,SAAU,CAC1B,IAAKhsC,EACD,MAAM,IAAIrO,MAAM,yCAMpB,GAHIo6C,IACA/rC,EAAO,IAEPA,EAAO,GAAKA,EAAO,IAAMA,EAAO5T,EAAM6U,QAAQ,OAAQ,IAAI/R,OAAS,EACnE,MAAM,IAAIyC,MAAM,gBAAkBqO,EAAO,QAAU5T,GAEvD,OAAO2mC,EAAMoE,SAAS/qC,EAAc,EAAP4T,GAE5B,GAAImI,EAAK6jC,WAAW,QAAS,CAC9B,GAAKhsC,EAAO,GAAOA,EAAO,GAAOA,EAAO,IACpC,MAAM,IAAIrO,MAAM,eAAiBqO,EAAO,SAG5C,IADAif,EAAM4sB,EAAaz/C,IACXsK,YAAcsJ,EAClB,MAAM,IAAIrO,MAAM,gCAAkCqO,EAAO,OAASif,EAAIvoB,aAE1E,GAAIuoB,EAAI/oB,GAAG,IAAIkoB,EAAG,IACd,MAAM,IAAIzsB,MAAM,iBAAmBstB,EAAIjqB,WAAa,gBAExD,OAAOgL,EAAO+yB,EAAMkE,QAAQhY,EAAIjqB,SAAS,OAAQgL,EAAO,EAAI,GAAKif,EAEhE,GAAI9W,EAAK6jC,WAAW,OAAQ,CAC7B,GAAKhsC,EAAO,GAAOA,EAAO,GAAOA,EAAO,IACpC,MAAM,IAAIrO,MAAM,cAAgBqO,EAAO,SAG3C,IADAif,EAAM4sB,EAAaz/C,IACXsK,YAAcsJ,EAClB,MAAM,IAAIrO,MAAM,+BAAiCqO,EAAO,OAASif,EAAIvoB,aAEzE,OAAIuoB,EAAI/oB,GAAG,IAAIkoB,EAAG,IACPa,EAAI8C,OAAO/hB,GAAMhL,SAAS,OAG1BgL,EAAO+yB,EAAMkE,QAAQhY,EAAIjqB,SAAS,OAAQgL,EAAO,EAAI,GAAKif,EAKrE,MAAM,IAAIttB,MAAM,gCAAkCwW,IAGtDgkC,EAAmC,SAAUxqC,GAE7C,GAAI2N,EAAExS,QAAQ6E,GACV,MAAM,IAAIhQ,MAAM,kDAEpB,IAAIwW,EACQ4jC,EADF3/C,EAAQ,GAmBlB,GAhBIkjB,EAAEnI,SAASxF,KAASA,EAAI3U,eAAe,MAAQ2U,EAAI3U,eAAe,MAAQ2U,EAAI3U,eAAe,UAAY2U,EAAI3U,eAAe,UAC5Hmb,EAAOxG,EAAI3U,eAAe,KAAO2U,EAAItV,EAAIsV,EAAIwG,KAC7C/b,EAAQuV,EAAI3U,eAAe,KAAO2U,EAAI3T,EAAI2T,EAAIvV,QAI9C+b,EAAO4qB,EAAM6C,MAAMj0B,GAAK,GACxBvV,EAAQ2mC,EAAM6C,MAAMj0B,GACfwG,EAAK6jC,WAAW,QAAW7jC,EAAK6jC,WAAW,UAC5C7jC,EAAO,WAGVA,EAAK6jC,WAAW,SAAU7jC,EAAK6jC,WAAW,SAA6B,iBAAV5/C,GAAuB,WAAWuO,KAAKvO,KACrGA,EAAQ,IAAIgyB,EAAGhyB,IAGfkjB,EAAExS,QAAQ1Q,GAAQ,CAElB,IADA2/C,EA/He,SAAU5jC,GAC7B,IAAI4jC,EAAY,oBAAoBnrC,KAAKuH,GACzC,OAAO4jC,EAAY/wC,SAAS+wC,EAAU,GAAI,IAAM,KA6HhCK,CAAiBjkC,KACZ/b,EAAM8C,SAAW68C,EAC9B,MAAM,IAAIp6C,MAAMwW,EAAO,oCAAsCtM,KAAKxB,UAAUjO,IAG5E2/C,EAAY3/C,EAAM8C,OAG1B,OAAIogB,EAAExS,QAAQ1Q,GACDA,EAAMyN,KAAI,SAAUH,GACzB,OAAOoyC,EAAc3jC,EAAMzO,EAAKqyC,GAAW/2C,SAAS,OAAOiM,QAAQ,KAAM,OAE/D3G,KAAK,IAGVwxC,EAAc3jC,EAAM/b,EAAO2/C,GACtB/2C,SAAS,OAAOiM,QAAQ,KAAM,KAsCpD/V,EAAOD,QAAU,CACb+nC,aA9Be,WAEf,IAAI9jB,EAAO5f,MAAMvC,UAAUwH,MAAMjJ,KAAKwd,WAClCujC,EAAU/8B,EAAEzV,IAAIqV,EAAMi9B,GAG1B,OAAOpZ,EAAMkC,KAAK,KAAOoX,EAAQ/xC,KAAK,MAyBtC86B,gBAjBkB,WAClB,OAAOrC,EAAMmC,QAAQ,KAAO5lB,EAAEzV,IAAIvK,MAAMvC,UAAUwH,MAAMjJ,KAAKwd,WAAYqjC,GAAkC7xC,KAAK,MAiBhH+6B,aATe,WAEf,IAAInmB,EAAO5f,MAAMvC,UAAUwH,MAAMjJ,KAAKwd,WAClCujC,EAAU/8B,EAAEzV,IAAIqV,EAAMi9B,GAC1B,MAAO,KAAOE,EAAQ/xC,KAAK,IAAIlB,iB,gBC7OnClO,EAAOD,QAAU,EAAQ,IAAUqhD,a,cCAnCphD,EAAOD,QAAU0Q,QAAQ,W,cCAzB,SAAS4wC,EAAoBC,GAC5B,IAAItzC,EAAI,IAAIvH,MAAM,uBAAyB66C,EAAM,KAEjD,MADAtzC,EAAE46B,KAAO,mBACH56B,EAEPqzC,EAAoBtvC,KAAO,WAAa,MAAO,IAC/CsvC,EAAoB3jC,QAAU2jC,EAC9BrhD,EAAOD,QAAUshD,EACjBA,EAAoB7vB,GAAK,I,6BCRzB,qNASA,MAAM+vB,EAAW,EAAOA,SAElBC,EAASxgD,OAAO,UAChBygD,EAAOzgD,OAAO,QAEpB,MAAM0gD,EACL,cACCp+C,KAAKm+C,GAAQ,GAEb,MAAME,EAAY/jC,UAAU,GACtB9K,EAAU8K,UAAU,GAEpBgkC,EAAU,GAChB,IAAI9sC,EAAO,EAEX,GAAI6sC,EAAW,CACd,MAAMn9C,EAAIm9C,EACJ39C,EAAS8K,OAAOtK,EAAER,QACxB,IAAK,IAAI/D,EAAI,EAAGA,EAAI+D,EAAQ/D,IAAK,CAChC,MAAM4hD,EAAUr9C,EAAEvE,GAClB,IAAIwa,EAEHA,EADGonC,aAAmB7rC,OACb6rC,EACCpkC,YAAYuhC,OAAO6C,GACpB7rC,OAAO8rC,KAAKD,EAAQpnC,OAAQonC,EAAQrnC,WAAYqnC,EAAQtnC,YACvDsnC,aAAmBpkC,YACpBzH,OAAO8rC,KAAKD,GACXA,aAAmBH,EACpBG,EAAQL,GAERxrC,OAAO8rC,KAAwB,iBAAZD,EAAuBA,EAAUx0C,OAAOw0C,IAErE/sC,GAAQ2F,EAAOzW,OACf49C,EAAQ78C,KAAK0V,IAIfnX,KAAKk+C,GAAUxrC,OAAOlQ,OAAO87C,GAE7B,IAAI3kC,EAAOnK,QAA4BnB,IAAjBmB,EAAQmK,MAAsB5P,OAAOyF,EAAQmK,MAAM/O,cACrE+O,IAAS,mBAAmBxN,KAAKwN,KACpC3Z,KAAKm+C,GAAQxkC,GAGf,WACC,OAAO3Z,KAAKk+C,GAAQx9C,OAErB,WACC,OAAOV,KAAKm+C,GAEb,OACC,OAAO5qC,QAAQ6G,QAAQpa,KAAKk+C,GAAQ13C,YAErC,cACC,MAAMi4C,EAAMz+C,KAAKk+C,GACXQ,EAAKD,EAAItnC,OAAOpR,MAAM04C,EAAIvnC,WAAYunC,EAAIvnC,WAAaunC,EAAIxnC,YACjE,OAAO1D,QAAQ6G,QAAQskC,GAExB,SACC,MAAMC,EAAW,IAAIV,EAIrB,OAHAU,EAASC,MAAQ,aACjBD,EAASl9C,KAAKzB,KAAKk+C,IACnBS,EAASl9C,KAAK,MACPk9C,EAER,WACC,MAAO,gBAER,QACC,MAAMntC,EAAOxR,KAAKwR,KAEZxG,EAAQsP,UAAU,GAClBiW,EAAMjW,UAAU,GACtB,IAAIukC,EAAeC,EAElBD,OADaxwC,IAAVrD,EACa,EACNA,EAAQ,EACF3K,KAAKyF,IAAI0L,EAAOxG,EAAO,GAEvB3K,KAAKiK,IAAIU,EAAOwG,GAGhCstC,OADWzwC,IAARkiB,EACW/e,EACJ+e,EAAM,EACFlwB,KAAKyF,IAAI0L,EAAO+e,EAAK,GAErBlwB,KAAKiK,IAAIimB,EAAK/e,GAE7B,MAAMutC,EAAO1+C,KAAKyF,IAAIg5C,EAAcD,EAAe,GAG7CG,EADSh/C,KAAKk+C,GACQn4C,MAAM84C,EAAeA,EAAgBE,GAC3DE,EAAO,IAAIb,EAAK,GAAI,CAAEzkC,KAAMW,UAAU,KAE5C,OADA2kC,EAAKf,GAAUc,EACRC,GA+BT,SAASC,EAAW9nC,EAASuC,EAAMwlC,GACjCh8C,MAAMrG,KAAKkD,KAAMoX,GAEjBpX,KAAKoX,QAAUA,EACfpX,KAAK2Z,KAAOA,EAGRwlC,IACFn/C,KAAKslC,KAAOtlC,KAAKo/C,MAAQD,EAAY7Z,MAIvCniC,MAAMk8C,kBAAkBr/C,KAAMA,KAAKsY,aAOrC,IAAIjB,EA9CJha,OAAOiiD,iBAAiBlB,EAAK7/C,UAAW,CACvCiT,KAAM,CAAEjU,YAAY,GACpBoc,KAAM,CAAEpc,YAAY,GACpBwI,MAAO,CAAExI,YAAY,KAGtBF,OAAOC,eAAe8gD,EAAK7/C,UAAWb,OAAOC,YAAa,CACzDC,MAAO,OACP2hD,UAAU,EACVhiD,YAAY,EACZiiD,cAAc,IAgCfN,EAAW3gD,UAAYlB,OAAOY,OAAOkF,MAAM5E,WAC3C2gD,EAAW3gD,UAAU+Z,YAAc4mC,EACnCA,EAAW3gD,UAAUrB,KAAO,aAG5B,IACCma,EAAUlK,QAAQ,YAAYkK,QAC7B,MAAO3M,IAET,MAAM+0C,EAAY/hD,OAAO,kBAGnBgiD,EAAc,EAAOA,YAW3B,SAASC,EAAKC,GACb,IAAIC,EAAQ7/C,KAER8/C,EAAOxlC,UAAU5Z,OAAS,QAAsB2N,IAAjBiM,UAAU,GAAmBA,UAAU,GAAK,GAC3EylC,EAAYD,EAAKtuC,KAErB,IAAIA,OAAqBnD,IAAd0xC,EAA0B,EAAIA,EACzC,IAAIC,EAAeF,EAAK52B,QACxB,IAAIA,OAA2B7a,IAAjB2xC,EAA6B,EAAIA,EAEnC,MAARJ,EAEHA,EAAO,KACGK,EAAkBL,GAE5BA,EAAOltC,OAAO8rC,KAAKoB,EAAKp5C,YACd05C,EAAON,IAAkBltC,OAAOO,SAAS2sC,KAA2D,yBAAzCviD,OAAOkB,UAAUiI,SAAS1J,KAAK8iD,GAEpGA,EAAOltC,OAAO8rC,KAAKoB,GACTzlC,YAAYuhC,OAAOkE,GAE7BA,EAAOltC,OAAO8rC,KAAKoB,EAAKzoC,OAAQyoC,EAAK1oC,WAAY0oC,EAAK3oC,YAC5C2oC,aAAgB,IAG1BA,EAAOltC,OAAO8rC,KAAKz0C,OAAO61C,MAE3B5/C,KAAKy/C,GAAa,CACjBG,OACAO,WAAW,EACXxlC,MAAO,MAER3a,KAAKwR,KAAOA,EACZxR,KAAKkpB,QAAUA,EAEX02B,aAAgB,GACnBA,EAAKQ,GAAG,SAAS,SAAUC,GAC1B,MAAM1lC,EAAqB,eAAb0lC,EAAInjD,KAAwBmjD,EAAM,IAAInB,EAAW,+CAA+CW,EAAMtwC,QAAQ8wC,EAAIjpC,UAAW,SAAUipC,GACrJR,EAAMJ,GAAW9kC,MAAQA,KA0H5B,SAAS2lC,IACR,IAAIC,EAASvgD,KAEb,GAAIA,KAAKy/C,GAAWU,UACnB,OAAOR,EAAKpsC,QAAQkQ,OAAO,IAAIjV,UAAU,0BAA0BxO,KAAKuP,MAKzE,GAFAvP,KAAKy/C,GAAWU,WAAY,EAExBngD,KAAKy/C,GAAW9kC,MACnB,OAAOglC,EAAKpsC,QAAQkQ,OAAOzjB,KAAKy/C,GAAW9kC,OAG5C,IAAIilC,EAAO5/C,KAAK4/C,KAGhB,GAAa,OAATA,EACH,OAAOD,EAAKpsC,QAAQ6G,QAAQ1H,OAAO8tC,MAAM,IAS1C,GALIN,EAAON,KACVA,EAAOA,EAAKa,UAIT/tC,OAAOO,SAAS2sC,GACnB,OAAOD,EAAKpsC,QAAQ6G,QAAQwlC,GAI7B,KAAMA,aAAgB,GACrB,OAAOD,EAAKpsC,QAAQ6G,QAAQ1H,OAAO8tC,MAAM,IAK1C,IAAIpzB,EAAQ,GACRszB,EAAa,EACbC,GAAQ,EAEZ,OAAO,IAAIhB,EAAKpsC,SAAQ,SAAU6G,EAASqJ,GAC1C,IAAIm9B,EAGAL,EAAOr3B,UACV03B,EAAa73B,YAAW,WACvB43B,GAAQ,EACRl9B,EAAO,IAAIy7B,EAAW,0CAA0CqB,EAAOhxC,aAAagxC,EAAOr3B,aAAc,mBACvGq3B,EAAOr3B,UAIX02B,EAAKQ,GAAG,SAAS,SAAUC,GACT,eAAbA,EAAInjD,MAEPyjD,GAAQ,EACRl9B,EAAO48B,IAGP58B,EAAO,IAAIy7B,EAAW,+CAA+CqB,EAAOhxC,QAAQ8wC,EAAIjpC,UAAW,SAAUipC,OAI/GT,EAAKQ,GAAG,QAAQ,SAAUr4B,GACzB,IAAI44B,GAAmB,OAAV54B,EAAb,CAIA,GAAIw4B,EAAO/uC,MAAQkvC,EAAa34B,EAAMrnB,OAAS6/C,EAAO/uC,KAGrD,OAFAmvC,GAAQ,OACRl9B,EAAO,IAAIy7B,EAAW,mBAAmBqB,EAAOhxC,mBAAmBgxC,EAAO/uC,OAAQ,aAInFkvC,GAAc34B,EAAMrnB,OACpB0sB,EAAM3rB,KAAKsmB,OAGZ63B,EAAKQ,GAAG,OAAO,WACd,IAAIO,EAAJ,CAIAl3B,aAAam3B,GAEb,IACCxmC,EAAQ1H,OAAOlQ,OAAO4qB,EAAOszB,IAC5B,MAAOL,GAER58B,EAAO,IAAIy7B,EAAW,kDAAkDqB,EAAOhxC,QAAQ8wC,EAAIjpC,UAAW,SAAUipC,YA8EpH,SAASJ,EAAkB3yC,GAE1B,MAAmB,iBAARA,GAA0C,mBAAfA,EAAIuzC,QAA+C,mBAAfvzC,EAAIwzC,QAA4C,mBAAZxzC,EAAI9P,KAA4C,mBAAf8P,EAAIyzC,QAA4C,mBAAZzzC,EAAIwB,KAAyC,mBAAZxB,EAAIoE,MAKxL,oBAAzBpE,EAAIgL,YAAYpb,MAAsE,6BAAxCG,OAAOkB,UAAUiI,SAAS1J,KAAKwQ,IAA2D,mBAAbA,EAAIqB,MAQvI,SAASuxC,EAAO5yC,GACf,MAAsB,iBAARA,GAA+C,mBAApBA,EAAI2vC,aAAkD,iBAAb3vC,EAAIqM,MAA2C,mBAAfrM,EAAImzC,QAAoD,mBAApBnzC,EAAIgL,aAA8D,iBAAzBhL,EAAIgL,YAAYpb,MAAqB,gBAAgBiP,KAAKmB,EAAIgL,YAAYpb,OAAS,gBAAgBiP,KAAKmB,EAAI5P,OAAOC,cASnT,SAASknB,EAAMoK,GACd,IAAI+xB,EAAIC,EACJrB,EAAO3wB,EAAS2wB,KAGpB,GAAI3wB,EAASiyB,SACZ,MAAM,IAAI/9C,MAAM,sCAgBjB,OAXIy8C,aAAgB,GAAsC,mBAArBA,EAAKuB,cAEzCH,EAAK,IAAItB,EACTuB,EAAK,IAAIvB,EACTE,EAAKwB,KAAKJ,GACVpB,EAAKwB,KAAKH,GAEVhyB,EAASwwB,GAAWG,KAAOoB,EAC3BpB,EAAOqB,GAGDrB,EAYR,SAASyB,EAAmBzB,GAC3B,OAAa,OAATA,EAEI,KACmB,iBAATA,EAEV,2BACGK,EAAkBL,GAErB,kDACGM,EAAON,GAEVA,EAAKjmC,MAAQ,KACVjH,OAAOO,SAAS2sC,IAGyB,yBAAzCviD,OAAOkB,UAAUiI,SAAS1J,KAAK8iD,IAG/BzlC,YAAYuhC,OAAOkE,GAJtB,KAO+B,mBAArBA,EAAKuB,YAEf,gCAAgCvB,EAAKuB,cAClCvB,aAAgB,EAGnB,KAGA,2BAaT,SAAS0B,EAAcryB,GACtB,MAAM2wB,EAAO3wB,EAAS2wB,KAGtB,OAAa,OAATA,EAEI,EACGM,EAAON,GACVA,EAAKpuC,KACFkB,OAAOO,SAAS2sC,GAEnBA,EAAKl/C,OACFk/C,GAAsC,mBAAvBA,EAAK2B,gBAE1B3B,EAAK4B,mBAAsD,GAAjC5B,EAAK4B,kBAAkB9gD,QACrDk/C,EAAK6B,gBAAkB7B,EAAK6B,kBAEpB7B,EAAK2B,gBAKN,KA1ZT5B,EAAKphD,UAAY,CAChB,WACC,OAAOyB,KAAKy/C,GAAWG,MAGxB,eACC,OAAO5/C,KAAKy/C,GAAWU,WAQxB,cACC,OAAOG,EAAYxjD,KAAKkD,MAAM0hD,MAAK,SAAUjD,GAC5C,OAAOA,EAAItnC,OAAOpR,MAAM04C,EAAIvnC,WAAYunC,EAAIvnC,WAAaunC,EAAIxnC,gBAS/D,OACC,IAAI0qC,EAAK3hD,KAAK4hD,SAAW5hD,KAAK4hD,QAAQpkD,IAAI,iBAAmB,GAC7D,OAAO8iD,EAAYxjD,KAAKkD,MAAM0hD,MAAK,SAAUjD,GAC5C,OAAOphD,OAAO+tB,OAEd,IAAIgzB,EAAK,GAAI,CACZzkC,KAAMgoC,EAAG/2C,gBACN,CACH,CAACszC,GAASO,QAUb,OACC,IAAIoD,EAAS7hD,KAEb,OAAOsgD,EAAYxjD,KAAKkD,MAAM0hD,MAAK,SAAUvqC,GAC5C,IACC,OAAO9J,KAAKmlC,MAAMr7B,EAAO3Q,YACxB,MAAO65C,GACR,OAAOV,EAAKpsC,QAAQkQ,OAAO,IAAIy7B,EAAW,iCAAiC2C,EAAOtyC,eAAe8wC,EAAIjpC,UAAW,sBAUnH,OACC,OAAOkpC,EAAYxjD,KAAKkD,MAAM0hD,MAAK,SAAUvqC,GAC5C,OAAOA,EAAO3Q,eAShB,SACC,OAAO85C,EAAYxjD,KAAKkD,OASzB,gBACC,IAAI8hD,EAAS9hD,KAEb,OAAOsgD,EAAYxjD,KAAKkD,MAAM0hD,MAAK,SAAUvqC,GAC5C,OAwIH,SAAqBA,EAAQyqC,GAC5B,GAAuB,mBAAZvqC,EACV,MAAM,IAAIlU,MAAM,gFAGjB,MAAMw+C,EAAKC,EAAQpkD,IAAI,gBACvB,IACIu1B,EAAKzmB,EADLy1C,EAAU,QAIVJ,IACH5uB,EAAM,mBAAmB3gB,KAAKuvC,IAI/Br1C,EAAM6K,EAAOpR,MAAM,EAAG,MAAMS,YAGvBusB,GAAOzmB,IACXymB,EAAM,iCAAiC3gB,KAAK9F,KAIxCymB,GAAOzmB,IACXymB,EAAM,yEAAyE3gB,KAAK9F,GAC/EymB,IACJA,EAAM,yEAAyE3gB,KAAK9F,GAChFymB,GACHA,EAAIlZ,OAIFkZ,IACHA,EAAM,gBAAgB3gB,KAAK2gB,EAAIlZ,UAK5BkZ,GAAOzmB,IACXymB,EAAM,mCAAmC3gB,KAAK9F,IAI3CymB,IACHgvB,EAAUhvB,EAAIlZ,MAIE,WAAZkoC,GAAoC,QAAZA,IAC3BA,EAAU,YAKZ,OAAO1qC,EAAQF,EAAQ,QAAS4qC,GAASv7C,WA9LhCw7C,CAAY7qC,EAAQ2qC,EAAOF,cAMrCvkD,OAAOiiD,iBAAiBK,EAAKphD,UAAW,CACvCqhD,KAAM,CAAEriD,YAAY,GACpB2jD,SAAU,CAAE3jD,YAAY,GACxB0/C,YAAa,CAAE1/C,YAAY,GAC3B0hD,KAAM,CAAE1hD,YAAY,GACpB6P,KAAM,CAAE7P,YAAY,GACpBoN,KAAM,CAAEpN,YAAY,KAGrBoiD,EAAKsC,MAAQ,SAAUjpC,GACtB,IAAK,MAAM9b,KAAQG,OAAOwB,oBAAoB8gD,EAAKphD,WAElD,KAAMrB,KAAQ8b,GAAQ,CACrB,MAAMkpC,EAAO7kD,OAAO8kD,yBAAyBxC,EAAKphD,UAAWrB,GAC7DG,OAAOC,eAAe0b,EAAO9b,EAAMglD,KA+UtCvC,EAAKpsC,QAAUlD,OAAOkD,QAQtB,MAAM6uC,EAAoB,gCACpBC,EAAyB,0BAE/B,SAASC,EAAaplD,GAErB,GADAA,EAAO,GAAGA,EACNklD,EAAkBj2C,KAAKjP,IAAkB,KAATA,EACnC,MAAM,IAAIsR,UAAatR,EAAH,oCAItB,SAASqlD,EAAc3kD,GAEtB,GADAA,EAAQ,GAAGA,EACPykD,EAAuBl2C,KAAKvO,GAC/B,MAAM,IAAI4Q,UAAa5Q,EAAH,qCAYtB,SAASslB,EAAK7X,EAAKnO,GAClBA,EAAOA,EAAK0N,cACZ,IAAK,MAAM1M,KAAOmN,EACjB,GAAInN,EAAI0M,gBAAkB1N,EACzB,OAAOgB,EAMV,MAAMskD,EAAM9kD,OAAO,OACnB,MAAMgS,EAOL,cACC,IAAI+yC,EAAOnoC,UAAU5Z,OAAS,QAAsB2N,IAAjBiM,UAAU,GAAmBA,UAAU,QAAKjM,EAI/E,GAFArO,KAAKwiD,GAAOnlD,OAAOY,OAAO,MAEtBwkD,aAAgB/yC,EAApB,CACC,MAAMgzC,EAAaD,EAAKE,MAClBC,EAAcvlD,OAAOoR,KAAKi0C,GAEhC,IAAK,MAAMG,KAAcD,EACxB,IAAK,MAAMhlD,KAAS8kD,EAAWG,GAC9B7iD,KAAK6gD,OAAOgC,EAAYjlD,QAS3B,GAAY,MAAR6kD,OAAqB,IAAoB,iBAATA,EA+BnC,MAAM,IAAIj0C,UAAU,0CA/BkC,CACtD,MAAM4V,EAASq+B,EAAK/kD,OAAOolD,UAC3B,GAAc,MAAV1+B,EAAgB,CACnB,GAAsB,mBAAXA,EACV,MAAM,IAAI5V,UAAU,iCAKrB,MAAMsL,EAAQ,GACd,IAAK,MAAMipC,KAAQN,EAAM,CACxB,GAAoB,iBAATM,GAAsD,mBAA1BA,EAAKrlD,OAAOolD,UAClD,MAAM,IAAIt0C,UAAU,qCAErBsL,EAAMrY,KAAKX,MAAM09C,KAAKuE,IAGvB,IAAK,MAAMA,KAAQjpC,EAAO,CACzB,GAAoB,IAAhBipC,EAAKriD,OACR,MAAM,IAAI8N,UAAU,+CAErBxO,KAAK6gD,OAAOkC,EAAK,GAAIA,EAAK,UAI3B,IAAK,MAAM7kD,KAAOb,OAAOoR,KAAKg0C,GAAO,CACpC,MAAM7kD,EAAQ6kD,EAAKvkD,GACnB8B,KAAK6gD,OAAO3iD,EAAKN,MAcrB,IAAIV,GAEHolD,EADAplD,EAAO,GAAGA,GAEV,MAAMgB,EAAMglB,EAAKljB,KAAKwiD,GAAMtlD,GAC5B,YAAYmR,IAARnQ,EACI,KAGD8B,KAAKwiD,GAAKtkD,GAAK4N,KAAK,MAU5B,QAAQg6B,GACP,IAAI2K,EAAUn2B,UAAU5Z,OAAS,QAAsB2N,IAAjBiM,UAAU,GAAmBA,UAAU,QAAKjM,EAE9EyL,EAAQkpC,EAAWhjD,MACnBrD,EAAI,EACR,KAAOA,EAAImd,EAAMpZ,QAAQ,CACxB,IAAIuiD,EAAWnpC,EAAMnd,GACrB,MAAMO,EAAO+lD,EAAS,GAChBrlD,EAAQqlD,EAAS,GAEvBnd,EAAShpC,KAAK2zC,EAAS7yC,EAAOV,EAAM8C,MACpC8Z,EAAQkpC,EAAWhjD,MACnBrD,KAWF,IAAIO,EAAMU,GAETA,EAAQ,GAAGA,EACX0kD,EAFAplD,EAAO,GAAGA,GAGVqlD,EAAc3kD,GACd,MAAMM,EAAMglB,EAAKljB,KAAKwiD,GAAMtlD,GAC5B8C,KAAKwiD,QAAan0C,IAARnQ,EAAoBA,EAAMhB,GAAQ,CAACU,GAU9C,OAAOV,EAAMU,GAEZA,EAAQ,GAAGA,EACX0kD,EAFAplD,EAAO,GAAGA,GAGVqlD,EAAc3kD,GACd,MAAMM,EAAMglB,EAAKljB,KAAKwiD,GAAMtlD,QAChBmR,IAARnQ,EACH8B,KAAKwiD,GAAKtkD,GAAKuD,KAAK7D,GAEpBoC,KAAKwiD,GAAKtlD,GAAQ,CAACU,GAUrB,IAAIV,GAGH,OADAolD,EADAplD,EAAO,GAAGA,QAEuBmR,IAA1B6U,EAAKljB,KAAKwiD,GAAMtlD,GASxB,OAAOA,GAENolD,EADAplD,EAAO,GAAGA,GAEV,MAAMgB,EAAMglB,EAAKljB,KAAKwiD,GAAMtlD,QAChBmR,IAARnQ,UACI8B,KAAKwiD,GAAKtkD,GASnB,MACC,OAAO8B,KAAKwiD,GAQb,OACC,OAAOU,EAAsBljD,KAAM,OAQpC,SACC,OAAOkjD,EAAsBljD,KAAM,SAUpC,CAACtC,OAAOolD,YACP,OAAOI,EAAsBljD,KAAM,cAwBrC,SAASgjD,EAAWpB,GACnB,IAAIuB,EAAO7oC,UAAU5Z,OAAS,QAAsB2N,IAAjBiM,UAAU,GAAmBA,UAAU,GAAK,YAE/E,MAAM7L,EAAOpR,OAAOoR,KAAKmzC,EAAQY,IAAM7zC,OACvC,OAAOF,EAAKpD,IAAa,QAAT83C,EAAiB,SAAUlxB,GAC1C,OAAOA,EAAErnB,eACG,UAATu4C,EAAmB,SAAUlxB,GAChC,OAAO2vB,EAAQY,GAAKvwB,GAAGnmB,KAAK,OACzB,SAAUmmB,GACb,MAAO,CAACA,EAAErnB,cAAeg3C,EAAQY,GAAKvwB,GAAGnmB,KAAK,SA9BhD4D,EAAQnR,UAAU6V,QAAU1E,EAAQnR,UAAUb,OAAOolD,UAErDzlD,OAAOC,eAAeoS,EAAQnR,UAAWb,OAAOC,YAAa,CAC5DC,MAAO,UACP2hD,UAAU,EACVhiD,YAAY,EACZiiD,cAAc,IAGfniD,OAAOiiD,iBAAiB5vC,EAAQnR,UAAW,CAC1Cf,IAAK,CAAED,YAAY,GACnBuB,QAAS,CAAEvB,YAAY,GACvBmU,IAAK,CAAEnU,YAAY,GACnBsjD,OAAQ,CAAEtjD,YAAY,GACtBuR,IAAK,CAAEvR,YAAY,GACnBujD,OAAQ,CAAEvjD,YAAY,GACtBkR,KAAM,CAAElR,YAAY,GACpBmX,OAAQ,CAAEnX,YAAY,GACtB6W,QAAS,CAAE7W,YAAY,KAgBxB,MAAM6lD,EAAW1lD,OAAO,YAExB,SAASwlD,EAAsBG,EAAQF,GACtC,MAAML,EAAWzlD,OAAOY,OAAOqlD,GAM/B,OALAR,EAASM,GAAY,CACpBC,SACAF,OACA7xC,MAAO,GAEDwxC,EAGR,MAAMQ,EAA2BjmD,OAAOkmD,eAAe,CACtD,OAEC,IAAKvjD,MAAQ3C,OAAOmmD,eAAexjD,QAAUsjD,EAC5C,MAAM,IAAI90C,UAAU,4CAGrB,IAAIi1C,EAAYzjD,KAAKojD,GACrB,MAAMC,EAASI,EAAUJ,OACnBF,EAAOM,EAAUN,KACjB7xC,EAAQmyC,EAAUnyC,MAElBoD,EAASsuC,EAAWK,EAAQF,GAElC,OAAI7xC,GADQoD,EAAOhU,OAEX,CACN9C,WAAOyQ,EACPq1C,MAAM,IAIR1jD,KAAKojD,GAAU9xC,MAAQA,EAAQ,EAExB,CACN1T,MAAO8W,EAAOpD,GACdoyC,MAAM,MAGNrmD,OAAOmmD,eAAenmD,OAAOmmD,eAAe,GAAG9lD,OAAOolD,eAezD,SAASa,EAA4B/B,GACpC,MAAMt0C,EAAMjQ,OAAO+tB,OAAO,CAAEw4B,UAAW,MAAQhC,EAAQY,IAIjDqB,EAAgB3gC,EAAK0+B,EAAQY,GAAM,QAKzC,YAJsBn0C,IAAlBw1C,IACHv2C,EAAIu2C,GAAiBv2C,EAAIu2C,GAAe,IAGlCv2C,EAvBRjQ,OAAOC,eAAegmD,EAA0B5lD,OAAOC,YAAa,CACnEC,MAAO,kBACP2hD,UAAU,EACVhiD,YAAY,EACZiiD,cAAc,IAqDf,MAAMsE,EAAcpmD,OAAO,sBAGrBqmD,EAAe,EAAKA,aAS1B,MAAMn0C,EACL,cACC,IAAIgwC,EAAOtlC,UAAU5Z,OAAS,QAAsB2N,IAAjBiM,UAAU,GAAmBA,UAAU,GAAK,KAC3E/M,EAAO+M,UAAU5Z,OAAS,QAAsB2N,IAAjBiM,UAAU,GAAmBA,UAAU,GAAK,GAE/EqlC,EAAK7iD,KAAKkD,KAAM4/C,EAAMryC,GAEtB,MAAMy2C,EAASz2C,EAAKy2C,QAAU,IACxBpC,EAAU,IAAIlyC,EAAQnC,EAAKq0C,SAEjC,GAAY,MAARhC,IAAiBgC,EAAQ9yC,IAAI,gBAAiB,CACjD,MAAMm1C,EAAc5C,EAAmBzB,GACnCqE,GACHrC,EAAQf,OAAO,eAAgBoD,GAIjCjkD,KAAK8jD,GAAe,CACnBv0C,IAAKhC,EAAKgC,IACVy0C,SACAE,WAAY32C,EAAK22C,YAAcH,EAAaC,GAC5CpC,UACA1M,QAAS3nC,EAAK2nC,SAIhB,UACC,OAAOl1C,KAAK8jD,GAAav0C,KAAO,GAGjC,aACC,OAAOvP,KAAK8jD,GAAaE,OAM1B,SACC,OAAOhkD,KAAK8jD,GAAaE,QAAU,KAAOhkD,KAAK8jD,GAAaE,OAAS,IAGtE,iBACC,OAAOhkD,KAAK8jD,GAAa5O,QAAU,EAGpC,iBACC,OAAOl1C,KAAK8jD,GAAaI,WAG1B,cACC,OAAOlkD,KAAK8jD,GAAalC,QAQ1B,QACC,OAAO,IAAIhyC,EAASiV,EAAM7kB,MAAO,CAChCuP,IAAKvP,KAAKuP,IACVy0C,OAAQhkD,KAAKgkD,OACbE,WAAYlkD,KAAKkkD,WACjBtC,QAAS5hD,KAAK4hD,QACduC,GAAInkD,KAAKmkD,GACTC,WAAYpkD,KAAKokD,cAKpBzE,EAAKsC,MAAMryC,EAASrR,WAEpBlB,OAAOiiD,iBAAiB1vC,EAASrR,UAAW,CAC3CgR,IAAK,CAAEhS,YAAY,GACnBymD,OAAQ,CAAEzmD,YAAY,GACtB4mD,GAAI,CAAE5mD,YAAY,GAClB6mD,WAAY,CAAE7mD,YAAY,GAC1B2mD,WAAY,CAAE3mD,YAAY,GAC1BqkD,QAAS,CAAErkD,YAAY,GACvBsnB,MAAO,CAAEtnB,YAAY,KAGtBF,OAAOC,eAAesS,EAASrR,UAAWb,OAAOC,YAAa,CAC7DC,MAAO,WACP2hD,UAAU,EACVhiD,YAAY,EACZiiD,cAAc,IAGf,MAAM6E,EAAc3mD,OAAO,qBAGrB4mD,EAAY,EAAI9R,MAChB+R,EAAa,EAAIC,OAEjBC,EAA6B,YAAa,EAAOxG,SAAS1/C,UAQhE,SAASmmD,EAAU3pC,GAClB,MAAwB,iBAAVA,GAAoD,iBAAvBA,EAAMspC,GAelD,MAAM10C,EACL,YAAYoL,GACX,IAEI4pC,EAFAlC,EAAOnoC,UAAU5Z,OAAS,QAAsB2N,IAAjBiM,UAAU,GAAmBA,UAAU,GAAK,GAK1EoqC,EAAU3pC,GAYd4pC,EAAYL,EAAUvpC,EAAMxL,MAP3Bo1C,EAJG5pC,GAASA,EAAM6pC,KAINN,EAAUvpC,EAAM6pC,MAGhBN,EAAU,GAAGvpC,GAE1BA,EAAQ,IAKT,IAAIqJ,EAASq+B,EAAKr+B,QAAUrJ,EAAMqJ,QAAU,MAG5C,GAFAA,EAASA,EAAO+iB,eAEE,MAAbsb,EAAK7C,MAAgB8E,EAAU3pC,IAAyB,OAAfA,EAAM6kC,QAA8B,QAAXx7B,GAA+B,SAAXA,GAC1F,MAAM,IAAI5V,UAAU,iDAGrB,IAAIq2C,EAAyB,MAAbpC,EAAK7C,KAAe6C,EAAK7C,KAAO8E,EAAU3pC,IAAyB,OAAfA,EAAM6kC,KAAgB/6B,EAAM9J,GAAS,KAEzG4kC,EAAK7iD,KAAKkD,KAAM6kD,EAAW,CAC1B37B,QAASu5B,EAAKv5B,SAAWnO,EAAMmO,SAAW,EAC1C1X,KAAMixC,EAAKjxC,MAAQuJ,EAAMvJ,MAAQ,IAGlC,MAAMowC,EAAU,IAAIlyC,EAAQ+yC,EAAKb,SAAW7mC,EAAM6mC,SAAW,IAE7D,GAAiB,MAAbiD,IAAsBjD,EAAQ9yC,IAAI,gBAAiB,CACtD,MAAMm1C,EAAc5C,EAAmBwD,GACnCZ,GACHrC,EAAQf,OAAO,eAAgBoD,GAIjC,IAAIa,EAASJ,EAAU3pC,GAASA,EAAM+pC,OAAS,KAG/C,GAFI,WAAYrC,IAAMqC,EAASrC,EAAKqC,QAEtB,MAAVA,IA5DN,SAAuBA,GACtB,MAAM9rC,EAAQ8rC,GAA4B,iBAAXA,GAAuBznD,OAAOmmD,eAAesB,GAC5E,SAAU9rC,GAAoC,gBAA3BA,EAAMV,YAAYpb,MA0Db6nD,CAAcD,GACpC,MAAM,IAAIt2C,UAAU,mDAGrBxO,KAAKqkD,GAAe,CACnBjgC,SACA4gC,SAAUvC,EAAKuC,UAAYjqC,EAAMiqC,UAAY,SAC7CpD,UACA+C,YACAG,UAID9kD,KAAKilD,YAAyB52C,IAAhBo0C,EAAKwC,OAAuBxC,EAAKwC,YAA0B52C,IAAjB0M,EAAMkqC,OAAuBlqC,EAAMkqC,OAAS,GACpGjlD,KAAKklD,cAA6B72C,IAAlBo0C,EAAKyC,SAAyBzC,EAAKyC,cAA8B72C,IAAnB0M,EAAMmqC,UAAyBnqC,EAAMmqC,SACnGllD,KAAKk1C,QAAUuN,EAAKvN,SAAWn6B,EAAMm6B,SAAW,EAChDl1C,KAAKmlD,MAAQ1C,EAAK0C,OAASpqC,EAAMoqC,MAGlC,aACC,OAAOnlD,KAAKqkD,GAAajgC,OAG1B,UACC,OAAOmgC,EAAWvkD,KAAKqkD,GAAaM,WAGrC,cACC,OAAO3kD,KAAKqkD,GAAazC,QAG1B,eACC,OAAO5hD,KAAKqkD,GAAaW,SAG1B,aACC,OAAOhlD,KAAKqkD,GAAaS,OAQ1B,QACC,OAAO,IAAIn1C,EAAQ3P,OA0GrB,SAASolD,EAAWhuC,GAClBjU,MAAMrG,KAAKkD,KAAMoX,GAEjBpX,KAAK2Z,KAAO,UACZ3Z,KAAKoX,QAAUA,EAGfjU,MAAMk8C,kBAAkBr/C,KAAMA,KAAKsY,aA7GrCqnC,EAAKsC,MAAMtyC,EAAQpR,WAEnBlB,OAAOC,eAAeqS,EAAQpR,UAAWb,OAAOC,YAAa,CAC5DC,MAAO,UACP2hD,UAAU,EACVhiD,YAAY,EACZiiD,cAAc,IAGfniD,OAAOiiD,iBAAiB3vC,EAAQpR,UAAW,CAC1C6lB,OAAQ,CAAE7mB,YAAY,GACtBgS,IAAK,CAAEhS,YAAY,GACnBqkD,QAAS,CAAErkD,YAAY,GACvBynD,SAAU,CAAEznD,YAAY,GACxBsnB,MAAO,CAAEtnB,YAAY,GACrBunD,OAAQ,CAAEvnD,YAAY,KAiGvB6nD,EAAW7mD,UAAYlB,OAAOY,OAAOkF,MAAM5E,WAC3C6mD,EAAW7mD,UAAU+Z,YAAc8sC,EACnCA,EAAW7mD,UAAUrB,KAAO,aAG5B,MAAMmoD,EAAgB,EAAO3F,YACvB4F,EAAc,EAAIlrC,QASxB,SAAS9K,EAAMC,EAAKhC,GAGnB,IAAK+B,EAAMiE,QACV,MAAM,IAAIpQ,MAAM,0EAMjB,OAHAw8C,EAAKpsC,QAAUjE,EAAMiE,QAGd,IAAIjE,EAAMiE,SAAQ,SAAU6G,EAASqJ,GAE3C,MAAM8hC,EAAU,IAAI51C,EAAQJ,EAAKhC,GAC3BiC,EApHR,SAA+B+1C,GAC9B,MAAMZ,EAAYY,EAAQlB,GAAaM,UACjC/C,EAAU,IAAIlyC,EAAQ61C,EAAQlB,GAAazC,SAQjD,GALKA,EAAQ9yC,IAAI,WAChB8yC,EAAQlwC,IAAI,SAAU,QAIlBizC,EAAUa,WAAab,EAAUc,SACrC,MAAM,IAAIj3C,UAAU,oCAGrB,IAAK,YAAYrC,KAAKw4C,EAAUa,UAC/B,MAAM,IAAIh3C,UAAU,wCAGrB,GAAI+2C,EAAQT,QAAUS,EAAQ3F,gBAAgB,EAAO3B,WAAawG,EACjE,MAAM,IAAIthD,MAAM,mFAIjB,IAAIuiD,EAAqB,KAIzB,GAHoB,MAAhBH,EAAQ3F,MAAgB,gBAAgBzzC,KAAKo5C,EAAQnhC,UACxDshC,EAAqB,KAEF,MAAhBH,EAAQ3F,KAAc,CACzB,MAAM+F,EAAarE,EAAciE,GACP,iBAAfI,IACVD,EAAqB37C,OAAO47C,IAG1BD,GACH9D,EAAQlwC,IAAI,iBAAkBg0C,GAI1B9D,EAAQ9yC,IAAI,eAChB8yC,EAAQlwC,IAAI,aAAc,0DAIvB6zC,EAAQL,WAAatD,EAAQ9yC,IAAI,oBACpC8yC,EAAQlwC,IAAI,kBAAmB,gBAGhC,IAAIyzC,EAAQI,EAAQJ,MAYpB,MAXqB,mBAAVA,IACVA,EAAQA,EAAMR,IAGV/C,EAAQ9yC,IAAI,eAAkBq2C,GAClCvD,EAAQlwC,IAAI,aAAc,SAMpBrU,OAAO+tB,OAAO,GAAIu5B,EAAW,CACnCvgC,OAAQmhC,EAAQnhC,OAChBw9B,QAAS+B,EAA4B/B,GACrCuD,UAsDgBS,CAAsBL,GAEhCM,GAA6B,WAArBr2C,EAAQg2C,SAAwB,EAAQ,GAAMD,QACtDT,EAASS,EAAQT,OAEvB,IAAIgB,EAAW,KAEf,MAAMnF,EAAQ,WACb,IAAIhmC,EAAQ,IAAIyqC,EAAW,+BAC3B3hC,EAAO9I,GACH4qC,EAAQ3F,MAAQ2F,EAAQ3F,gBAAgB,EAAO3B,UAClDsH,EAAQ3F,KAAKmG,QAAQprC,GAEjBmrC,GAAaA,EAASlG,MAC3BkG,EAASlG,KAAK1Z,KAAK,QAASvrB,IAG7B,GAAImqC,GAAUA,EAAOkB,QAEpB,YADArF,IAID,MAAMsF,EAAmB,WACxBtF,IACA3D,KAIKgB,EAAM6H,EAAKr2C,GACjB,IAAI02C,EAMJ,SAASlJ,IACRgB,EAAI2C,QACAmE,GAAQA,EAAOqB,oBAAoB,QAASF,GAChDx8B,aAAay8B,GAPVpB,GACHA,EAAOsB,iBAAiB,QAASH,GAS9BV,EAAQr8B,SACX80B,EAAI3zB,KAAK,UAAU,SAAUg8B,GAC5BH,EAAan9B,YAAW,WACvBtF,EAAO,IAAIy7B,EAAW,uBAAuBqG,EAAQh2C,IAAO,oBAC5DytC,MACEuI,EAAQr8B,YAIb80B,EAAIoC,GAAG,SAAS,SAAUC,GACzB58B,EAAO,IAAIy7B,EAAW,cAAcqG,EAAQh2C,uBAAuB8wC,EAAIjpC,UAAW,SAAUipC,IAC5FrD,OAGDgB,EAAIoC,GAAG,YAAY,SAAUrtB,GAC5BtJ,aAAay8B,GAEb,MAAMtE,EAlcT,SAA8Bt0C,GAC7B,MAAMs0C,EAAU,IAAIlyC,EACpB,IAAK,MAAMxS,KAAQG,OAAOoR,KAAKnB,GAC9B,IAAI80C,EAAkBj2C,KAAKjP,GAG3B,GAAI4D,MAAMwN,QAAQhB,EAAIpQ,IACrB,IAAK,MAAMgO,KAAOoC,EAAIpQ,GACjBmlD,EAAuBl2C,KAAKjB,UAGLmD,IAAvBuzC,EAAQY,GAAKtlD,GAChB0kD,EAAQY,GAAKtlD,GAAQ,CAACgO,GAEtB02C,EAAQY,GAAKtlD,GAAMuE,KAAKyJ,SAGfm3C,EAAuBl2C,KAAKmB,EAAIpQ,MAC3C0kD,EAAQY,GAAKtlD,GAAQ,CAACoQ,EAAIpQ,KAG5B,OAAO0kD,EA6aW0E,CAAqBvzB,EAAI6uB,SAGzC,GAAItyC,EAAMi3C,WAAWxzB,EAAIyzB,YAAa,CAErC,MAAMC,EAAW7E,EAAQpkD,IAAI,YAGvBkpD,EAA2B,OAAbD,EAAoB,KAAOnB,EAAYC,EAAQh2C,IAAKk3C,GAGxE,OAAQlB,EAAQP,UACf,IAAK,QAGJ,OAFAvhC,EAAO,IAAIy7B,EAAW,0EAA0EqG,EAAQh2C,IAAO,qBAC/GytC,IAED,IAAK,SAEJ,GAAoB,OAAhB0J,EAEH,IACC9E,EAAQlwC,IAAI,WAAYg1C,GACvB,MAAOrG,GAER58B,EAAO48B,GAGT,MACD,IAAK,SAEJ,GAAoB,OAAhBqG,EACH,MAID,GAAInB,EAAQrQ,SAAWqQ,EAAQN,OAG9B,OAFAxhC,EAAO,IAAIy7B,EAAW,gCAAgCqG,EAAQh2C,IAAO,sBACrEytC,IAMD,MAAM2J,EAAc,CACnB/E,QAAS,IAAIlyC,EAAQ61C,EAAQ3D,SAC7BqD,OAAQM,EAAQN,OAChB/P,QAASqQ,EAAQrQ,QAAU,EAC3BiQ,MAAOI,EAAQJ,MACfD,SAAUK,EAAQL,SAClB9gC,OAAQmhC,EAAQnhC,OAChBw7B,KAAM2F,EAAQ3F,KACdkF,OAAQS,EAAQT,OAChB57B,QAASq8B,EAAQr8B,QACjB1X,KAAM+zC,EAAQ/zC,MAIf,OAAuB,MAAnBuhB,EAAIyzB,YAAsBjB,EAAQ3F,MAAmC,OAA3B0B,EAAciE,IAC3D9hC,EAAO,IAAIy7B,EAAW,2DAA4D,8BAClFlC,MAKsB,MAAnBjqB,EAAIyzB,aAA0C,MAAnBzzB,EAAIyzB,YAAyC,MAAnBzzB,EAAIyzB,YAA0C,SAAnBjB,EAAQnhC,UAC3FuiC,EAAYviC,OAAS,MACrBuiC,EAAY/G,UAAOvxC,EACnBs4C,EAAY/E,QAAQd,OAAO,mBAI5B1mC,EAAQ9K,EAAM,IAAIK,EAAQ+2C,EAAaC,UACvC3J,MAMHjqB,EAAI1I,KAAK,OAAO,WACXy6B,GAAQA,EAAOqB,oBAAoB,QAASF,MAEjD,IAAIrG,EAAO7sB,EAAIquB,KAAK,IAAIiE,GAExB,MAAMuB,EAAmB,CACxBr3C,IAAKg2C,EAAQh2C,IACby0C,OAAQjxB,EAAIyzB,WACZtC,WAAYnxB,EAAI8zB,cAChBjF,QAASA,EACTpwC,KAAM+zC,EAAQ/zC,KACd0X,QAASq8B,EAAQr8B,QACjBgsB,QAASqQ,EAAQrQ,SAIZ4R,EAAUlF,EAAQpkD,IAAI,oBAU5B,IAAK+nD,EAAQL,UAA+B,SAAnBK,EAAQnhC,QAAiC,OAAZ0iC,GAAuC,MAAnB/zB,EAAIyzB,YAAyC,MAAnBzzB,EAAIyzB,WAGvG,OAFAV,EAAW,IAAIl2C,EAASgwC,EAAMgH,QAC9BxsC,EAAQ0rC,GAST,MAAMiB,EAAc,CACnBC,MAAO,EAAKC,aACZC,YAAa,EAAKD,cAInB,GAAe,QAAXH,GAAgC,UAAXA,EAIxB,OAHAlH,EAAOA,EAAKwB,KAAK,EAAK+F,aAAaJ,IACnCjB,EAAW,IAAIl2C,EAASgwC,EAAMgH,QAC9BxsC,EAAQ0rC,GAKT,GAAe,WAAXgB,GAAmC,aAAXA,EAA5B,CAkBA,GAAe,MAAXA,GAA0D,mBAAhC,EAAKM,uBAIlC,OAHAxH,EAAOA,EAAKwB,KAAK,EAAKgG,0BACtBtB,EAAW,IAAIl2C,EAASgwC,EAAMgH,QAC9BxsC,EAAQ0rC,GAKTA,EAAW,IAAIl2C,EAASgwC,EAAMgH,GAC9BxsC,EAAQ0rC,OA3BR,CAGa/yB,EAAIquB,KAAK,IAAIiE,GACrBh7B,KAAK,QAAQ,SAAUtC,GAGzB63B,EADyB,IAAV,GAAX73B,EAAM,IACH63B,EAAKwB,KAAK,EAAKiG,iBAEfzH,EAAKwB,KAAK,EAAKkG,oBAEvBxB,EAAW,IAAIl2C,EAASgwC,EAAMgH,GAC9BxsC,EAAQ0rC,UAv8Bb,SAAuBt0B,EAAMvC,GAC5B,MAAM2wB,EAAO3wB,EAAS2wB,KAGT,OAATA,EAEHpuB,EAAKjB,MACK2vB,EAAON,GACjBA,EAAKa,SAASW,KAAK5vB,GACT9e,OAAOO,SAAS2sC,IAE1BpuB,EAAK+1B,MAAM3H,GACXpuB,EAAKjB,OAGLqvB,EAAKwB,KAAK5vB,GA08BVg2B,CAAcxJ,EAAKuH,MASrBj2C,EAAMi3C,WAAa,SAAUjhB,GAC5B,OAAgB,MAATA,GAAyB,MAATA,GAAyB,MAATA,GAAyB,MAATA,GAAyB,MAATA,GAIxEh2B,EAAMiE,QAAUlD,OAAOkD,QAER,a,6CCnmDf,MAAMk0C,EAAa,EAAQ,KACpBC,OAAQC,EAAaC,OAAQC,GAAe,EAAQ,KACrD,iBACLC,EAAgB,+BAChBC,GACG,EAAQ,KAEN,QAACz5C,GAAWxN,MAGZknD,EAAe,CACpB,OACA,OACA,UACA,WAGKC,EAAS5qD,OAAOY,OAAO,MAY7B,MAAMiqD,EACL,YAAY14C,GAEX,OAAO24C,EAAa34C,IAItB,MAAM24C,EAAe34C,IACpB,MAAM44C,EAAQ,GAcd,MAhCoB,EAAC/pD,EAAQmR,EAAU,MACvC,GAAIA,EAAQtB,SAAW1C,OAAO68C,UAAU74C,EAAQtB,QAAUsB,EAAQtB,OAAS,GAAKsB,EAAQtB,OAAS,GAChG,MAAM,IAAI/K,MAAM,uDAIjB,MAAMmlD,EAAaX,EAAcA,EAAYz5C,MAAQ,EACrD7P,EAAO6P,WAA0BG,IAAlBmB,EAAQtB,MAAsBo6C,EAAa94C,EAAQtB,OAYlEq6C,CAAaH,EAAO54C,GAEpB44C,EAAM15B,SAAW,IAAI85B,IAAeC,EAASL,EAAM15B,YAAa85B,GAEhEnrD,OAAOkmD,eAAe6E,EAAOM,EAAMnqD,WACnClB,OAAOkmD,eAAe6E,EAAM15B,SAAU05B,GAEtCA,EAAM15B,SAASpW,YAAc,KAC5B,MAAM,IAAInV,MAAM,6EAGjBilD,EAAM15B,SAASi6B,SAAWT,EAEnBE,EAAM15B,UAGd,SAASg6B,EAAMl5C,GACd,OAAO24C,EAAa34C,GAGrB,IAAK,MAAOo5C,EAAWC,KAAUxrD,OAAO+W,QAAQqzC,GAC/CQ,EAAOW,GAAa,CACnB,MACC,MAAME,EAAUC,EAAc/oD,KAAMgpD,EAAaH,EAAMI,KAAMJ,EAAMK,MAAOlpD,KAAKmpD,SAAUnpD,KAAKopD,UAE9F,OADA/rD,OAAOC,eAAe0C,KAAM4oD,EAAW,CAAChrD,MAAOkrD,IACxCA,IAKVb,EAAOoB,QAAU,CAChB,MACC,MAAMP,EAAUC,EAAc/oD,KAAMA,KAAKmpD,SAAS,GAElD,OADA9rD,OAAOC,eAAe0C,KAAM,UAAW,CAACpC,MAAOkrD,IACxCA,IAIT,MAAMQ,EAAa,CAAC,MAAO,MAAO,UAAW,MAAO,MAAO,MAAO,OAAQ,WAE1E,IAAK,MAAM/b,KAAS+b,EACnBrB,EAAO1a,GAAS,CACf,MACC,MAAM,MAACr/B,GAASlO,KAChB,OAAO,YAAawoD,GACnB,MAAMe,EAASP,EAAavB,EAAWzY,MAAMgZ,EAAa95C,IAAQq/B,MAAUib,GAAaf,EAAWzY,MAAMka,MAAOlpD,KAAKmpD,SACtH,OAAOJ,EAAc/oD,KAAMupD,EAAQvpD,KAAKopD,aAM5C,IAAK,MAAM7b,KAAS+b,EAAY,CAE/BrB,EADgB,KAAO1a,EAAM,GAAGpG,cAAgBoG,EAAMxnC,MAAM,IAC1C,CACjB,MACC,MAAM,MAACmI,GAASlO,KAChB,OAAO,YAAawoD,GACnB,MAAMe,EAASP,EAAavB,EAAW+B,QAAQxB,EAAa95C,IAAQq/B,MAAUib,GAAaf,EAAW+B,QAAQN,MAAOlpD,KAAKmpD,SAC1H,OAAOJ,EAAc/oD,KAAMupD,EAAQvpD,KAAKopD,aAM5C,MAAMpwC,EAAQ3b,OAAOiiD,iBAAiB,OAAU,IAC5C2I,EACH/5C,MAAO,CACN3Q,YAAY,EACZ,MACC,OAAOyC,KAAKypD,WAAWv7C,OAExB,IAAIA,GACHlO,KAAKypD,WAAWv7C,MAAQA,MAKrB86C,EAAe,CAACC,EAAMC,EAAOj7C,KAClC,IAAIy7C,EACAC,EASJ,YARet7C,IAAXJ,GACHy7C,EAAUT,EACVU,EAAWT,IAEXQ,EAAUz7C,EAAOy7C,QAAUT,EAC3BU,EAAWT,EAAQj7C,EAAO07C,UAGpB,CACNV,OACAC,QACAQ,UACAC,WACA17C,WAII86C,EAAgB,CAAC7lD,EAAMimD,EAASC,KACrC,MAAMN,EAAU,IAAIN,IACfl6C,EAAQk6C,EAAW,KAAOl6C,EAAQk6C,EAAW,GAAG7F,KAE5CiH,EAAWd,EAASL,EAASK,KAAYN,IAK1CoB,EAAWd,EAAgC,IAAtBN,EAAW9nD,OAAiB,GAAK8nD,EAAW,GAAMA,EAAW18C,KAAK,MAW/F,OANAzO,OAAOkmD,eAAeuF,EAAS9vC,GAE/B8vC,EAAQW,WAAavmD,EACrB4lD,EAAQK,QAAUA,EAClBL,EAAQM,SAAWA,EAEZN,GAGFc,EAAa,CAAC1mD,EAAMsc,KACzB,GAAItc,EAAKgL,OAAS,IAAMsR,EACvB,OAAOtc,EAAKkmD,SAAW,GAAK5pC,EAG7B,IAAI+pC,EAASrmD,EAAKimD,QAElB,QAAe96C,IAAXk7C,EACH,OAAO/pC,EAGR,MAAM,QAACkqC,EAAO,SAAEC,GAAYJ,EAC5B,IAAkC,IAA9B/pC,EAAOtT,QAAQ,KAClB,UAAkBmC,IAAXk7C,GAIN/pC,EAASsoC,EAAiBtoC,EAAQ+pC,EAAOL,MAAOK,EAAON,MAEvDM,EAASA,EAAOt7C,OAOlB,MAAM47C,EAAUrqC,EAAOtT,QAAQ,MAK/B,OAJiB,IAAb29C,IACHrqC,EAASuoC,EAA+BvoC,EAAQmqC,EAAUD,EAASG,IAG7DH,EAAUlqC,EAASmqC,GAG3B,IAAIj7B,EACJ,MAAM+5B,EAAW,CAACL,KAAU0B,KAC3B,MAAOC,GAAeD,EAEtB,IAAKx7C,EAAQy7C,KAAiBz7C,EAAQy7C,EAAYpH,KAGjD,OAAOmH,EAAQh+C,KAAK,KAGrB,MAAM08C,EAAasB,EAAQ/jD,MAAM,GAC3BikD,EAAQ,CAACD,EAAYpH,IAAI,IAE/B,IAAK,IAAIhmD,EAAI,EAAGA,EAAIotD,EAAYrpD,OAAQ/D,IACvCqtD,EAAMvoD,KACLsI,OAAOy+C,EAAW7rD,EAAI,IAAI8V,QAAQ,UAAW,QAC7C1I,OAAOggD,EAAYpH,IAAIhmD,KAQzB,YAJiB0R,IAAbqgB,IACHA,EAAW,EAAQ,KAGbA,EAAS05B,EAAO4B,EAAMl+C,KAAK,MAGnCzO,OAAOiiD,iBAAiBoJ,EAAMnqD,UAAW0pD,GAEzC,MAAMG,EAAQM,IACdN,EAAM6B,cAAgBtC,EACtBS,EAAMR,OAASc,EAAM,CAACx6C,MAAO25C,EAAcA,EAAY35C,MAAQ,IAC/Dk6C,EAAMR,OAAOqC,cAAgBpC,EAE7BnrD,EAAOD,QAAU2rD,G,8BCpOjB,YAEA,MAAM8B,EAAa,CAAC7gD,EAAIiQ,IAAW,IAAIoH,IAE/B,KADMrX,KAAMqX,GACKpH,KAGnB6wC,EAAc,CAAC9gD,EAAIiQ,IAAW,IAAIoH,KACvC,MAAM4kB,EAAOj8B,KAAMqX,GACnB,MAAO,KAAU,GAAKpH,OAAYgsB,MAG7B8kB,EAAc,CAAC/gD,EAAIiQ,IAAW,IAAIoH,KACvC,MAAM6rB,EAAMljC,KAAMqX,GAClB,MAAO,KAAU,GAAKpH,OAAYizB,EAAI,MAAMA,EAAI,MAAMA,EAAI,OAGrD8d,EAAYjsD,GAAKA,EACjBksD,EAAU,CAAC7sD,EAAGgiC,EAAGt+B,IAAM,CAAC1D,EAAGgiC,EAAGt+B,GAE9BopD,EAAkB,CAAClsD,EAAQC,EAAUd,KAC1CH,OAAOC,eAAee,EAAQC,EAAU,CACvCd,IAAK,KACJ,MAAMI,EAAQJ,IAQd,OANAH,OAAOC,eAAee,EAAQC,EAAU,CACvCV,QACAL,YAAY,EACZiiD,cAAc,IAGR5hD,GAERL,YAAY,EACZiiD,cAAc,KAKhB,IAAIgL,EACJ,MAAMC,EAAoB,CAACzgC,EAAM0gC,EAAavsC,EAAUwsC,UAClCt8C,IAAjBm8C,IACHA,EAAe,EAAQ,KAGxB,MAAMlxC,EAASqxC,EAAe,GAAK,EAC7B1C,EAAS,GAEf,IAAK,MAAO2C,EAAaC,KAAUxtD,OAAO+W,QAAQo2C,GAAe,CAChE,MAAMttD,EAAuB,WAAhB0tD,EAA2B,OAASA,EAC7CA,IAAgBF,EACnBzC,EAAO/qD,GAAQ8sB,EAAK7L,EAAU7E,GACH,iBAAVuxC,IACjB5C,EAAO/qD,GAAQ8sB,EAAK6gC,EAAMH,GAAcpxC,IAI1C,OAAO2uC,GAsGR5qD,OAAOC,eAAeZ,EAAQ,UAAW,CACxCa,YAAY,EACZC,IArGD,WACC,MAAMstD,EAAQ,IAAIx3C,IACZ20C,EAAS,CACd8C,SAAU,CACTtR,MAAO,CAAC,EAAG,GAEXuR,KAAM,CAAC,EAAG,IACVC,IAAK,CAAC,EAAG,IACTC,OAAQ,CAAC,EAAG,IACZC,UAAW,CAAC,EAAG,IACf7gB,QAAS,CAAC,EAAG,IACb8gB,OAAQ,CAAC,EAAG,IACZC,cAAe,CAAC,EAAG,KAEpBrc,MAAO,CACNsc,MAAO,CAAC,GAAI,IACZr7B,IAAK,CAAC,GAAI,IACVs7B,MAAO,CAAC,GAAI,IACZC,OAAQ,CAAC,GAAI,IACbC,KAAM,CAAC,GAAI,IACXC,QAAS,CAAC,GAAI,IACdC,KAAM,CAAC,GAAI,IACX9Y,MAAO,CAAC,GAAI,IAGZ+Y,YAAa,CAAC,GAAI,IAClBC,UAAW,CAAC,GAAI,IAChBC,YAAa,CAAC,GAAI,IAClBC,aAAc,CAAC,GAAI,IACnBC,WAAY,CAAC,GAAI,IACjBC,cAAe,CAAC,GAAI,IACpBC,WAAY,CAAC,GAAI,IACjBC,YAAa,CAAC,GAAI,KAEnB3C,QAAS,CACR4C,QAAS,CAAC,GAAI,IACdC,MAAO,CAAC,GAAI,IACZC,QAAS,CAAC,GAAI,IACdC,SAAU,CAAC,GAAI,IACfC,OAAQ,CAAC,GAAI,IACbC,UAAW,CAAC,GAAI,IAChBC,OAAQ,CAAC,GAAI,IACbC,QAAS,CAAC,GAAI,IAGdC,cAAe,CAAC,IAAK,IACrBC,YAAa,CAAC,IAAK,IACnBC,cAAe,CAAC,IAAK,IACrBC,eAAgB,CAAC,IAAK,IACtBC,aAAc,CAAC,IAAK,IACpBC,gBAAiB,CAAC,IAAK,IACvBC,aAAc,CAAC,IAAK,IACpBC,cAAe,CAAC,IAAK,MAKvBlF,EAAOjZ,MAAM1B,KAAO2a,EAAOjZ,MAAM4c,YACjC3D,EAAOuB,QAAQ4D,OAASnF,EAAOuB,QAAQoD,cACvC3E,EAAOjZ,MAAMqe,KAAOpF,EAAOjZ,MAAM4c,YACjC3D,EAAOuB,QAAQ8D,OAASrF,EAAOuB,QAAQoD,cAEvC,IAAK,MAAOW,EAAWnoC,KAAU/nB,OAAO+W,QAAQ6zC,GAAS,CACxD,IAAK,MAAOW,EAAWC,KAAUxrD,OAAO+W,QAAQgR,GAC/C6iC,EAAOW,GAAa,CACnBK,KAAM,KAAUJ,EAAM,MACtBK,MAAO,KAAUL,EAAM,OAGxBzjC,EAAMwjC,GAAaX,EAAOW,GAE1BkC,EAAMp5C,IAAIm3C,EAAM,GAAIA,EAAM,IAG3BxrD,OAAOC,eAAe2qD,EAAQsF,EAAW,CACxC3vD,MAAOwnB,EACP7nB,YAAY,IAmBd,OAfAF,OAAOC,eAAe2qD,EAAQ,QAAS,CACtCrqD,MAAOktD,EACPvtD,YAAY,IAGb0qD,EAAOjZ,MAAMka,MAAQ,QACrBjB,EAAOuB,QAAQN,MAAQ,QAEvBqB,EAAgBtC,EAAOjZ,MAAO,OAAQ,IAAMyb,EAAkBP,EAAY,SAAUG,GAAW,IAC/FE,EAAgBtC,EAAOjZ,MAAO,UAAW,IAAMyb,EAAkBN,EAAa,UAAWE,GAAW,IACpGE,EAAgBtC,EAAOjZ,MAAO,UAAW,IAAMyb,EAAkBL,EAAa,MAAOE,GAAS,IAC9FC,EAAgBtC,EAAOuB,QAAS,OAAQ,IAAMiB,EAAkBP,EAAY,SAAUG,GAAW,IACjGE,EAAgBtC,EAAOuB,QAAS,UAAW,IAAMiB,EAAkBN,EAAa,UAAWE,GAAW,IACtGE,EAAgBtC,EAAOuB,QAAS,UAAW,IAAMiB,EAAkBL,EAAa,MAAOE,GAAS,IAEzFrC,O,oCC3JR,MAAMuF,EAAc,EAAQ,IACtBC,EAAQ,EAAQ,IAEhBp2C,EAAU,GAEDha,OAAOoR,KAAK++C,GA0DpB1uD,QAAQ4uD,IACdr2C,EAAQq2C,GAAa,GAErBrwD,OAAOC,eAAe+Z,EAAQq2C,GAAY,WAAY,CAAC9vD,MAAO4vD,EAAYE,GAAWlhB,WACrFnvC,OAAOC,eAAe+Z,EAAQq2C,GAAY,SAAU,CAAC9vD,MAAO4vD,EAAYE,GAAWjhB,SAEnF,MAAMkhB,EAASF,EAAMC,GACDrwD,OAAOoR,KAAKk/C,GAEpB7uD,QAAQ8uD,IACnB,MAAMvkD,EAAKskD,EAAOC,GAElBv2C,EAAQq2C,GAAWE,GA9CrB,SAAqBvkD,GACpB,MAAMwkD,EAAY,YAAantC,GAC9B,MAAMotC,EAAOptC,EAAK,GAElB,GAAIotC,QACH,OAAOA,EAGJA,EAAKptD,OAAS,IACjBggB,EAAOotC,GAGR,MAAMrqD,EAAS4F,EAAGqX,GAKlB,GAAsB,iBAAXjd,EACV,IAAK,IAAI8iB,EAAM9iB,EAAO/C,OAAQ/D,EAAI,EAAGA,EAAI4pB,EAAK5pB,IAC7C8G,EAAO9G,GAAK0D,KAAK87B,MAAM14B,EAAO9G,IAIhC,OAAO8G,GAQR,MAJI,eAAgB4F,IACnBwkD,EAAUE,WAAa1kD,EAAG0kD,YAGpBF,EAewBG,CAAY3kD,GAC1CgO,EAAQq2C,GAAWE,GAASjL,IArE9B,SAAiBt5C,GAChB,MAAMwkD,EAAY,YAAantC,GAC9B,MAAMotC,EAAOptC,EAAK,GAClB,OAAIotC,QACIA,GAGJA,EAAKptD,OAAS,IACjBggB,EAAOotC,GAGDzkD,EAAGqX,KAQX,MAJI,eAAgBrX,IACnBwkD,EAAUE,WAAa1kD,EAAG0kD,YAGpBF,EAkD4BI,CAAQ5kD,OAI5C3M,EAAOD,QAAU4a,G,6BC9EjB3a,EAAOD,QAAU,CAChB,UAAa,CAAC,IAAK,IAAK,KACxB,aAAgB,CAAC,IAAK,IAAK,KAC3B,KAAQ,CAAC,EAAG,IAAK,KACjB,WAAc,CAAC,IAAK,IAAK,KACzB,MAAS,CAAC,IAAK,IAAK,KACpB,MAAS,CAAC,IAAK,IAAK,KACpB,OAAU,CAAC,IAAK,IAAK,KACrB,MAAS,CAAC,EAAG,EAAG,GAChB,eAAkB,CAAC,IAAK,IAAK,KAC7B,KAAQ,CAAC,EAAG,EAAG,KACf,WAAc,CAAC,IAAK,GAAI,KACxB,MAAS,CAAC,IAAK,GAAI,IACnB,UAAa,CAAC,IAAK,IAAK,KACxB,UAAa,CAAC,GAAI,IAAK,KACvB,WAAc,CAAC,IAAK,IAAK,GACzB,UAAa,CAAC,IAAK,IAAK,IACxB,MAAS,CAAC,IAAK,IAAK,IACpB,eAAkB,CAAC,IAAK,IAAK,KAC7B,SAAY,CAAC,IAAK,IAAK,KACvB,QAAW,CAAC,IAAK,GAAI,IACrB,KAAQ,CAAC,EAAG,IAAK,KACjB,SAAY,CAAC,EAAG,EAAG,KACnB,SAAY,CAAC,EAAG,IAAK,KACrB,cAAiB,CAAC,IAAK,IAAK,IAC5B,SAAY,CAAC,IAAK,IAAK,KACvB,UAAa,CAAC,EAAG,IAAK,GACtB,SAAY,CAAC,IAAK,IAAK,KACvB,UAAa,CAAC,IAAK,IAAK,KACxB,YAAe,CAAC,IAAK,EAAG,KACxB,eAAkB,CAAC,GAAI,IAAK,IAC5B,WAAc,CAAC,IAAK,IAAK,GACzB,WAAc,CAAC,IAAK,GAAI,KACxB,QAAW,CAAC,IAAK,EAAG,GACpB,WAAc,CAAC,IAAK,IAAK,KACzB,aAAgB,CAAC,IAAK,IAAK,KAC3B,cAAiB,CAAC,GAAI,GAAI,KAC1B,cAAiB,CAAC,GAAI,GAAI,IAC1B,cAAiB,CAAC,GAAI,GAAI,IAC1B,cAAiB,CAAC,EAAG,IAAK,KAC1B,WAAc,CAAC,IAAK,EAAG,KACvB,SAAY,CAAC,IAAK,GAAI,KACtB,YAAe,CAAC,EAAG,IAAK,KACxB,QAAW,CAAC,IAAK,IAAK,KACtB,QAAW,CAAC,IAAK,IAAK,KACtB,WAAc,CAAC,GAAI,IAAK,KACxB,UAAa,CAAC,IAAK,GAAI,IACvB,YAAe,CAAC,IAAK,IAAK,KAC1B,YAAe,CAAC,GAAI,IAAK,IACzB,QAAW,CAAC,IAAK,EAAG,KACpB,UAAa,CAAC,IAAK,IAAK,KACxB,WAAc,CAAC,IAAK,IAAK,KACzB,KAAQ,CAAC,IAAK,IAAK,GACnB,UAAa,CAAC,IAAK,IAAK,IACxB,KAAQ,CAAC,IAAK,IAAK,KACnB,MAAS,CAAC,EAAG,IAAK,GAClB,YAAe,CAAC,IAAK,IAAK,IAC1B,KAAQ,CAAC,IAAK,IAAK,KACnB,SAAY,CAAC,IAAK,IAAK,KACvB,QAAW,CAAC,IAAK,IAAK,KACtB,UAAa,CAAC,IAAK,GAAI,IACvB,OAAU,CAAC,GAAI,EAAG,KAClB,MAAS,CAAC,IAAK,IAAK,KACpB,MAAS,CAAC,IAAK,IAAK,KACpB,SAAY,CAAC,IAAK,IAAK,KACvB,cAAiB,CAAC,IAAK,IAAK,KAC5B,UAAa,CAAC,IAAK,IAAK,GACxB,aAAgB,CAAC,IAAK,IAAK,KAC3B,UAAa,CAAC,IAAK,IAAK,KACxB,WAAc,CAAC,IAAK,IAAK,KACzB,UAAa,CAAC,IAAK,IAAK,KACxB,qBAAwB,CAAC,IAAK,IAAK,KACnC,UAAa,CAAC,IAAK,IAAK,KACxB,WAAc,CAAC,IAAK,IAAK,KACzB,UAAa,CAAC,IAAK,IAAK,KACxB,UAAa,CAAC,IAAK,IAAK,KACxB,YAAe,CAAC,IAAK,IAAK,KAC1B,cAAiB,CAAC,GAAI,IAAK,KAC3B,aAAgB,CAAC,IAAK,IAAK,KAC3B,eAAkB,CAAC,IAAK,IAAK,KAC7B,eAAkB,CAAC,IAAK,IAAK,KAC7B,eAAkB,CAAC,IAAK,IAAK,KAC7B,YAAe,CAAC,IAAK,IAAK,KAC1B,KAAQ,CAAC,EAAG,IAAK,GACjB,UAAa,CAAC,GAAI,IAAK,IACvB,MAAS,CAAC,IAAK,IAAK,KACpB,QAAW,CAAC,IAAK,EAAG,KACpB,OAAU,CAAC,IAAK,EAAG,GACnB,iBAAoB,CAAC,IAAK,IAAK,KAC/B,WAAc,CAAC,EAAG,EAAG,KACrB,aAAgB,CAAC,IAAK,GAAI,KAC1B,aAAgB,CAAC,IAAK,IAAK,KAC3B,eAAkB,CAAC,GAAI,IAAK,KAC5B,gBAAmB,CAAC,IAAK,IAAK,KAC9B,kBAAqB,CAAC,EAAG,IAAK,KAC9B,gBAAmB,CAAC,GAAI,IAAK,KAC7B,gBAAmB,CAAC,IAAK,GAAI,KAC7B,aAAgB,CAAC,GAAI,GAAI,KACzB,UAAa,CAAC,IAAK,IAAK,KACxB,UAAa,CAAC,IAAK,IAAK,KACxB,SAAY,CAAC,IAAK,IAAK,KACvB,YAAe,CAAC,IAAK,IAAK,KAC1B,KAAQ,CAAC,EAAG,EAAG,KACf,QAAW,CAAC,IAAK,IAAK,KACtB,MAAS,CAAC,IAAK,IAAK,GACpB,UAAa,CAAC,IAAK,IAAK,IACxB,OAAU,CAAC,IAAK,IAAK,GACrB,UAAa,CAAC,IAAK,GAAI,GACvB,OAAU,CAAC,IAAK,IAAK,KACrB,cAAiB,CAAC,IAAK,IAAK,KAC5B,UAAa,CAAC,IAAK,IAAK,KACxB,cAAiB,CAAC,IAAK,IAAK,KAC5B,cAAiB,CAAC,IAAK,IAAK,KAC5B,WAAc,CAAC,IAAK,IAAK,KACzB,UAAa,CAAC,IAAK,IAAK,KACxB,KAAQ,CAAC,IAAK,IAAK,IACnB,KAAQ,CAAC,IAAK,IAAK,KACnB,KAAQ,CAAC,IAAK,IAAK,KACnB,WAAc,CAAC,IAAK,IAAK,KACzB,OAAU,CAAC,IAAK,EAAG,KACnB,cAAiB,CAAC,IAAK,GAAI,KAC3B,IAAO,CAAC,IAAK,EAAG,GAChB,UAAa,CAAC,IAAK,IAAK,KACxB,UAAa,CAAC,GAAI,IAAK,KACvB,YAAe,CAAC,IAAK,GAAI,IACzB,OAAU,CAAC,IAAK,IAAK,KACrB,WAAc,CAAC,IAAK,IAAK,IACzB,SAAY,CAAC,GAAI,IAAK,IACtB,SAAY,CAAC,IAAK,IAAK,KACvB,OAAU,CAAC,IAAK,GAAI,IACpB,OAAU,CAAC,IAAK,IAAK,KACrB,QAAW,CAAC,IAAK,IAAK,KACtB,UAAa,CAAC,IAAK,GAAI,KACvB,UAAa,CAAC,IAAK,IAAK,KACxB,UAAa,CAAC,IAAK,IAAK,KACxB,KAAQ,CAAC,IAAK,IAAK,KACnB,YAAe,CAAC,EAAG,IAAK,KACxB,UAAa,CAAC,GAAI,IAAK,KACvB,IAAO,CAAC,IAAK,IAAK,KAClB,KAAQ,CAAC,EAAG,IAAK,KACjB,QAAW,CAAC,IAAK,IAAK,KACtB,OAAU,CAAC,IAAK,GAAI,IACpB,UAAa,CAAC,GAAI,IAAK,KACvB,OAAU,CAAC,IAAK,IAAK,KACrB,MAAS,CAAC,IAAK,IAAK,KACpB,MAAS,CAAC,IAAK,IAAK,KACpB,WAAc,CAAC,IAAK,IAAK,KACzB,OAAU,CAAC,IAAK,IAAK,GACrB,YAAe,CAAC,IAAK,IAAK,M,gBCtJ3B,MAAM+wD,EAAc,EAAQ,IA+B5B,SAASU,EAAUR,GAClB,MAAMS,EAnBP,WACC,MAAMA,EAAQ,GAERC,EAAS/wD,OAAOoR,KAAK++C,GAE3B,IAAK,IAAIjnC,EAAM6nC,EAAO1tD,OAAQ/D,EAAI,EAAGA,EAAI4pB,EAAK5pB,IAC7CwxD,EAAMC,EAAOzxD,IAAM,CAGlBoxC,UAAW,EACX9/B,OAAQ,MAIV,OAAOkgD,EAKOE,GACRC,EAAQ,CAACZ,GAIf,IAFAS,EAAMT,GAAW3f,SAAW,EAErBugB,EAAM5tD,QAAQ,CACpB,MAAMwjC,EAAUoqB,EAAMz0C,MAChB00C,EAAYlxD,OAAOoR,KAAK++C,EAAYtpB,IAE1C,IAAK,IAAI3d,EAAMgoC,EAAU7tD,OAAQ/D,EAAI,EAAGA,EAAI4pB,EAAK5pB,IAAK,CACrD,MAAM6xD,EAAWD,EAAU5xD,GACrBkR,EAAOsgD,EAAMK,IAEI,IAAnB3gD,EAAKkgC,WACRlgC,EAAKkgC,SAAWogB,EAAMjqB,GAAS6J,SAAW,EAC1ClgC,EAAKI,OAASi2B,EACdoqB,EAAMpqD,QAAQsqD,KAKjB,OAAOL,EAGR,SAASM,EAAKjQ,EAAMkQ,GACnB,OAAO,SAAUhuC,GAChB,OAAOguC,EAAGlQ,EAAK99B,KAIjB,SAASiuC,EAAef,EAASO,GAChC,MAAMtwC,EAAO,CAACswC,EAAMP,GAAS3/C,OAAQ2/C,GACrC,IAAIvkD,EAAKmkD,EAAYW,EAAMP,GAAS3/C,QAAQ2/C,GAExCgB,EAAMT,EAAMP,GAAS3/C,OACzB,KAAOkgD,EAAMS,GAAK3gD,QACjB4P,EAAK3Z,QAAQiqD,EAAMS,GAAK3gD,QACxB5E,EAAKolD,EAAKjB,EAAYW,EAAMS,GAAK3gD,QAAQ2gD,GAAMvlD,GAC/CulD,EAAMT,EAAMS,GAAK3gD,OAIlB,OADA5E,EAAG0kD,WAAalwC,EACTxU,EAGR3M,EAAOD,QAAU,SAAUixD,GAC1B,MAAMS,EAAQD,EAAUR,GAClBK,EAAa,GAEbK,EAAS/wD,OAAOoR,KAAK0/C,GAC3B,IAAK,IAAI5nC,EAAM6nC,EAAO1tD,OAAQ/D,EAAI,EAAGA,EAAI4pB,EAAK5pB,IAAK,CAClD,MAAMixD,EAAUQ,EAAOzxD,GAGH,OAFPwxD,EAAMP,GAEV3/C,SAKT8/C,EAAWH,GAAWe,EAAef,EAASO,IAG/C,OAAOJ,I,6BC7FR,MAAMc,EAAK,EAAQ,IACbC,EAAM,EAAQ,IACdC,EAAU,EAAQ,KAElB,IAACC,GAAOl+C,QAEd,IAAIm+C,EAuBJ,SAASC,EAAehhD,GACvB,OAAc,IAAVA,GAIG,CACNA,QACAihD,UAAU,EACVC,OAAQlhD,GAAS,EACjBmhD,OAAQnhD,GAAS,GAInB,SAAS+7C,EAAcqF,EAAYC,GAClC,GAAmB,IAAfN,EACH,OAAO,EAGR,GAAIF,EAAQ,cACXA,EAAQ,eACRA,EAAQ,mBACR,OAAO,EAGR,GAAIA,EAAQ,aACX,OAAO,EAGR,GAAIO,IAAeC,QAA8BlhD,IAAf4gD,EACjC,OAAO,EAGR,MAAM3kD,EAAM2kD,GAAc,EAE1B,GAAiB,SAAbD,EAAIQ,KACP,OAAOllD,EAGR,GAAyB,UAArBwG,QAAQ2+C,SAAsB,CAGjC,MAAMC,EAAYb,EAAGc,UAAU3jD,MAAM,KACrC,OACCR,OAAOkkD,EAAU,KAAO,IACxBlkD,OAAOkkD,EAAU,KAAO,MAEjBlkD,OAAOkkD,EAAU,KAAO,MAAQ,EAAI,EAGrC,EAGR,GAAI,OAAQV,EACX,MAAI,CAAC,SAAU,WAAY,WAAY,YAAa,iBAAkB,aAAaprC,KAAK7jB,GAAQA,KAAQivD,IAAwB,aAAhBA,EAAIY,QAC5G,EAGDtlD,EAGR,GAAI,qBAAsB0kD,EACzB,MAAO,gCAAgC7iD,KAAK6iD,EAAIa,kBAAoB,EAAI,EAGzE,GAAsB,cAAlBb,EAAIc,UACP,OAAO,EAGR,GAAI,iBAAkBd,EAAK,CAC1B,MAAMtZ,EAAUlpC,UAAUwiD,EAAIe,sBAAwB,IAAI/jD,MAAM,KAAK,GAAI,IAEzE,OAAQgjD,EAAIgB,cACX,IAAK,YACJ,OAAOta,GAAW,EAAI,EAAI,EAC3B,IAAK,iBACJ,OAAO,GAKV,MAAI,iBAAiBvpC,KAAK6iD,EAAIQ,MACtB,EAGJ,8DAA8DrjD,KAAK6iD,EAAIQ,OAIvE,cAAeR,EAHX,EAOD1kD,EAlHJykD,EAAQ,aACXA,EAAQ,cACRA,EAAQ,gBACRA,EAAQ,eACRE,EAAa,GACHF,EAAQ,UAClBA,EAAQ,WACRA,EAAQ,eACRA,EAAQ,mBACRE,EAAa,GAGV,gBAAiBD,IAEnBC,EADuB,SAApBD,EAAIiB,YACM,EACiB,UAApBjB,EAAIiB,YACD,EAE2B,IAA3BjB,EAAIiB,YAAYvvD,OAAe,EAAIL,KAAKiK,IAAIkC,SAASwiD,EAAIiB,YAAa,IAAK,IAwG1FvzD,EAAOD,QAAU,CAChBwtD,cAND,SAAyBxJ,GAExB,OAAOyO,EADOjF,EAAcxJ,EAAQA,GAAUA,EAAOyP,SAMrDxI,OAAQwH,EAAejF,GAAc,EAAM6E,EAAIqB,OAAO,KACtDvI,OAAQsH,EAAejF,GAAc,EAAM6E,EAAIqB,OAAO,O,cCrIvDzzD,EAAOD,QAAU0Q,QAAQ,O,cCAzBzQ,EAAOD,QAAU0Q,QAAQ,Q,6BCEzBzQ,EAAOD,QAAU,CAAC2zD,EAAMC,EAAOv/C,QAAQu/C,QACtC,MAAMpiC,EAASmiC,EAAK5S,WAAW,KAAO,GAAsB,IAAhB4S,EAAK1vD,OAAe,IAAM,KAChEwa,EAAWm1C,EAAKnkD,QAAQ+hB,EAASmiC,GACjCE,EAAqBD,EAAKnkD,QAAQ,MACxC,OAAqB,IAAdgP,KAA4C,IAAxBo1C,GAA6Bp1C,EAAWo1C,K,6BC6BpE5zD,EAAOD,QAAU,CAChBqrD,iBAlCwB,CAACtoC,EAAQwlB,EAAWp3B,KAC5C,IAAI0D,EAAQkO,EAAOtT,QAAQ84B,GAC3B,IAAe,IAAX1zB,EACH,OAAOkO,EAGR,MAAM+wC,EAAkBvrB,EAAUtkC,OAClC,IAAI8vD,EAAW,EACX5kB,EAAc,GAClB,GACCA,GAAepsB,EAAO+lB,OAAOirB,EAAUl/C,EAAQk/C,GAAYxrB,EAAYp3B,EACvE4iD,EAAWl/C,EAAQi/C,EACnBj/C,EAAQkO,EAAOtT,QAAQ84B,EAAWwrB,UACf,IAAXl/C,GAGT,OADAs6B,GAAepsB,EAAO+lB,OAAOirB,GACtB5kB,GAmBPmc,+BAhBsC,CAACvoC,EAAQyO,EAAQwiC,EAASn/C,KAChE,IAAIk/C,EAAW,EACX5kB,EAAc,GAClB,EAAG,CACF,MAAM8kB,EAA8B,OAAtBlxC,EAAOlO,EAAQ,GAC7Bs6B,GAAepsB,EAAO+lB,OAAOirB,GAAWE,EAAQp/C,EAAQ,EAAIA,GAASk/C,GAAYviC,GAAUyiC,EAAQ,OAAS,MAAQD,EACpHD,EAAWl/C,EAAQ,EACnBA,EAAQkO,EAAOtT,QAAQ,KAAMskD,UACV,IAAXl/C,GAGT,OADAs6B,GAAepsB,EAAO+lB,OAAOirB,GACtB5kB,K,6BC/BR,MAAM+kB,EAAiB,4JACjBC,EAAc,iCACdC,EAAe,mCACfC,EAAe,6DAEfC,EAAU,IAAIz9C,IAAI,CACvB,CAAC,IAAK,MACN,CAAC,IAAK,MACN,CAAC,IAAK,MACN,CAAC,IAAK,MACN,CAAC,IAAK,MACN,CAAC,IAAK,MACN,CAAC,IAAK,MACN,CAAC,KAAM,MACP,CAAC,IAAK,KACN,CAAC,IAAK,OAGP,SAASua,EAAS7wB,GACjB,MAAMqnC,EAAa,MAATrnC,EAAE,GACNg0D,EAAmB,MAATh0D,EAAE,GAElB,OAAKqnC,IAAM2sB,GAAwB,IAAbh0D,EAAE0D,QAA2B,MAAT1D,EAAE,IAA2B,IAAbA,EAAE0D,OACpDqJ,OAAOwR,aAAa/O,SAASxP,EAAE+I,MAAM,GAAI,KAG7Cs+B,GAAK2sB,EACDjnD,OAAOypC,cAAchnC,SAASxP,EAAE+I,MAAM,GAAI,GAAI,KAG/CgrD,EAAQvzD,IAAIR,IAAMA,EAG1B,SAASi0D,EAAe/zD,EAAMsrD,GAC7B,MAAMlmC,EAAU,GACV4uC,EAAS1I,EAAW/nD,OAAOuL,MAAM,YACvC,IAAImhB,EAEJ,IAAK,MAAMpF,KAASmpC,EAAQ,CAC3B,MAAMvxC,EAASnU,OAAOuc,GACtB,GAAKvc,OAAOmc,MAAMhI,GAEX,MAAKwN,EAAUpF,EAAMrI,MAAMmxC,IAGjC,MAAM,IAAI1tD,MAAM,0CAA0C4kB,gBAAoB7qB,OAF9EolB,EAAQ7gB,KAAK0rB,EAAQ,GAAG1a,QAAQq+C,EAAc,CAAC/zD,EAAGof,EAAQg1C,IAAch1C,EAAS0R,EAAS1R,GAAUg1C,SAFpG7uC,EAAQ7gB,KAAKke,GAQf,OAAO2C,EAGR,SAAS8uC,EAAWvI,GACnB+H,EAAYvd,UAAY,EAExB,MAAM/wB,EAAU,GAChB,IAAI6K,EAEJ,KAA+C,QAAvCA,EAAUyjC,EAAYx+C,KAAKy2C,KAAkB,CACpD,MAAM3rD,EAAOiwB,EAAQ,GAErB,GAAIA,EAAQ,GAAI,CACf,MAAMzM,EAAOuwC,EAAe/zD,EAAMiwB,EAAQ,IAC1C7K,EAAQ7gB,KAAK,CAACvE,GAAMsF,OAAOke,SAE3B4B,EAAQ7gB,KAAK,CAACvE,IAIhB,OAAOolB,EAGR,SAAS+uC,EAAWjJ,EAAOH,GAC1B,MAAMqJ,EAAU,GAEhB,IAAK,MAAMC,KAAStJ,EACnB,IAAK,MAAMY,KAAS0I,EAAMtJ,OACzBqJ,EAAQzI,EAAM,IAAM0I,EAAMjnB,QAAU,KAAOue,EAAM9iD,MAAM,GAIzD,IAAIm+B,EAAUkkB,EACd,IAAK,MAAOQ,EAAWX,KAAW5qD,OAAO+W,QAAQk9C,GAChD,GAAKxwD,MAAMwN,QAAQ25C,GAAnB,CAIA,KAAMW,KAAa1kB,GAClB,MAAM,IAAI/gC,MAAM,wBAAwBylD,GAGzC1kB,EAAU+jB,EAAOvnD,OAAS,EAAIwjC,EAAQ0kB,MAAcX,GAAU/jB,EAAQ0kB,GAGvE,OAAO1kB,EAGRxnC,EAAOD,QAAU,CAAC2rD,EAAOoJ,KACxB,MAAMvJ,EAAS,GACTiJ,EAAS,GACf,IAAInpC,EAAQ,GA0BZ,GAvBAypC,EAAU/+C,QAAQk+C,EAAgB,CAAC5zD,EAAG00D,EAAiBnnB,EAASue,EAAOK,EAAOiI,KAC7E,GAAIM,EACH1pC,EAAMtmB,KAAKosB,EAAS4jC,SACd,GAAI5I,EAAO,CACjB,MAAMrpC,EAASuI,EAAMjc,KAAK,IAC1Bic,EAAQ,GACRmpC,EAAOzvD,KAAuB,IAAlBwmD,EAAOvnD,OAAe8e,EAAS6xC,EAAWjJ,EAAOH,EAAlBoJ,CAA0B7xC,IACrEyoC,EAAOxmD,KAAK,CAAC6oC,UAAS2d,OAAQmJ,EAAWvI,UACnC,GAAIK,EAAO,CACjB,GAAsB,IAAlBjB,EAAOvnD,OACV,MAAM,IAAIyC,MAAM,gDAGjB+tD,EAAOzvD,KAAK4vD,EAAWjJ,EAAOH,EAAlBoJ,CAA0BtpC,EAAMjc,KAAK,MACjDic,EAAQ,GACRkgC,EAAOpuC,WAEPkO,EAAMtmB,KAAK0vD,KAIbD,EAAOzvD,KAAKsmB,EAAMjc,KAAK,KAEnBm8C,EAAOvnD,OAAS,EAAG,CACtB,MAAMgxD,EAAa,qCAAqCzJ,EAAOvnD,yBAA2C,IAAlBunD,EAAOvnD,OAAe,GAAK,cACnH,MAAM,IAAIyC,MAAMuuD,GAGjB,OAAOR,EAAOplD,KAAK,M,cCjIpBpP,EAAOD,QAAU,SACfw1C,GAEA,IAAIE,EAAY,GAChB,IAAK,MAAOwf,EAAeC,KAAW3f,EACpCE,GAAa,GAAGwf,KAAiBC,MAEnC,OAAOzf,I,m7PCHF,SAAS0f,EACdxmD,GAEA,MAAM5H,EAAsB,GAC5B,IAAK,MAAOwuB,EAAGzyB,KAAM6L,EAAI+I,UACvB3Q,EAAOwuB,GAAKzyB,EAEd,OAAOiE,EAQF,SAASquD,EAA0CzzD,GAGxD,MAAMoF,EAAS,IAAI6P,IACb7E,EAAUpR,OAAOoR,KAAKpQ,GAC5B,IAAK,MAAMH,KAAOuQ,EAChBhL,EAAOiO,IAAIxT,EAAKG,EAAOH,IAEzB,OAAOuF,EAiIF,SAASsuD,EAAgB1mD,EAAkBnN,EAAQN,GACxD,IAAI4C,EAAM6K,EAAI7N,IAAIU,GAKlB,OAJW,MAAPsC,GACF6K,EAAIqG,IAAIxT,EAAMsC,EAAM,IAEtBA,EAAIiB,KAAK7D,GACF4C,E,wHCpJF,MAAMwxD,EAOX15C,YAAY5K,GAAoC,EAAD,6CAC7C1N,KAAKiyD,GAAKvkD,EAEZ8kC,MAAMmQ,GACJ,OAAO3iD,KAAKiyD,GAAGtP,GAEjBuP,aAAavP,GACX,MAAMl/C,EAASzD,KAAKwyC,MAAMmQ,GAC1B,GAAIl/C,EAAO0gD,GACT,OAAO1gD,EAAO7F,MAEd,MAAM,IAAIuF,MAAMM,EAAO48C,MAW7B,SAAS8R,EAAWt0D,GAClB,MAAO,CAACsmD,IAAI,EAAMvmD,MAAOC,GAI3B,SAASu0D,EAAQ/R,GACf,MAAO,CAAC8D,IAAI,EAAO9D,OAKrB,SAASgS,EAASxxD,GAChB,OAAU,OAANA,EACK,OAELC,MAAMwN,QAAQzN,GACT,eAEKA,EAGT,MAAM2e,EAAyB,IAAIwyC,EAAQnxD,GAC/B,iBAANA,EACFuxD,EAAQ,wBAA0BC,EAASxxD,IAE7CsxD,EAAQtxD,IAGJ8e,EAAyB,IAAIqyC,EAAQnxD,GAC/B,iBAANA,EACFuxD,EAAQ,wBAA0BC,EAASxxD,IAE7CsxD,EAAQtxD,IAGJwuC,EAA0B,IAAI2iB,EAAQnxD,GAChC,iBAANA,GAAkBR,KAAKC,MAAMO,KAAOA,EACtCuxD,EAAQ,yBAA2BC,EAASxxD,IAE9CsxD,EAAQtxD,IAGJyxD,EAA2B,IAAIN,EAAQnxD,GACjC,kBAANA,EACFuxD,EAAQ,yBAA2BC,EAASxxD,IAE9CsxD,EAAQtxD,IAKJ0xD,EAAsB,IAAIP,EAAQnxD,GACnC,OAANA,EACKuxD,EAAQ,sBAAwBC,EAASxxD,IAE3CsxD,EAAQtxD,IAcJ8hD,EAA0B,IAAIqP,EAAOG,GAsB3C,SAASK,EACdC,GAEA,OAAO,IAAIT,EAAQnxD,IACjB,IAAK,MAAMhD,KAAK40D,EACd,GAAI5xD,IAAMhD,EACR,OAAOs0D,EAAQt0D,GAGnB,MAAM60D,EACU,IAAdD,EAAG/xD,OAAeqJ,OAAO0oD,EAAG,IAA5B,iBAA4CplD,KAAKxB,UAAU4mD,IAC7D,OAAOL,EAAQ,YAAD,OAAaM,EAAb,iBAA8BL,EAASxxD,OA+BlD,SAAS8xD,EAAWl0D,EAAciP,GACvC,OAAO,IAAIskD,EAAQnxD,IACjB,MAAM+xD,EAASn0D,EAAE+zC,MAAM3xC,GACvB,IAAK+xD,EAAOzO,GACV,OAAOiO,EAAQQ,EAAOvS,KAExB,MAAMxiD,EAAI+0D,EAAOh1D,MACjB,IAAIymC,EACJ,IACEA,EAAI32B,EAAE7P,GACN,MAAO6M,GACP,OAAIA,aAAavH,MACRivD,EAAQ1nD,EAAE0M,SAEVg7C,EAAQroD,OAAOW,IAG1B,OAAOynD,EAAQ9tB,KA+BZ,SAASwuB,EACdC,GAGkE,IAFlEC,EAEiE,uDAF/BC,GAAD,4BACV3lD,KAAKxB,UAAUmnD,IAEtC,OAAO,IAAIhB,EAAQnxD,IACjB,MAAMmyD,EAAS,GACf,IAAK,MAAMC,KAAUH,EAAS,CAC5B,MAAMrvD,EAASwvD,EAAOzgB,MAAM3xC,GAC5B,GAAI4C,EAAO0gD,GACT,OAAOgO,EAAS1uD,EAAO7F,OAEvBo1D,EAAOvxD,KAAKgC,EAAO48C,KAGvB,OAAO+R,EAAQW,EAAQC,MAIpB,SAAS5hD,EAAS3S,GACvB,OAAO,IAAIuzD,EAAQnxD,IACjB,IAAKC,MAAMwN,QAAQzN,GACjB,OAAOuxD,EAAQ,uBAAyBC,EAASxxD,IAEnD,MAAM4C,EAAS3C,MAAMD,EAAEH,QACvB,IAAK,IAAI/D,EAAI,EAAGA,EAAI8G,EAAO/C,OAAQ/D,IAAK,CACtC,MAAMgmD,EAAM9hD,EAAElE,GACRu2D,EAASz0D,EAAE+zC,MAAMmQ,GACvB,IAAKuQ,EAAO/O,GACV,OAAOiO,EAAQ,SAAD,OAAUz1D,EAAV,aAAgBu2D,EAAO7S,MAEvC58C,EAAO9G,GAAKu2D,EAAOt1D,MAErB,OAAOu0D,EAAQ1uD,KAqBnB,MAAM0vD,WAA4BnB,EAEhC15C,YAAY86C,EAAgBH,GAC1BI,MAAMJ,EAAOhB,IADgC,wBAE7CjyD,KAAKozD,OAASA,GAuCX,MAAM/0D,GAAmB,SAC9Bi1D,EACAC,GAEA,MAAMC,EAAc,IAAIhgD,IAClBigD,EAKA,GACAC,EAAY,CAChB,CAACC,YAAaL,EAAgBM,UAAU,GACxC,CAACD,YAAaJ,GAAkB,GAAIK,UAAU,IAEhD,IAAK,MAAM,YAACD,EAAD,SAAcC,KAAaF,EACpC,IAAK,MAAMG,KAAUx2D,OAAOoR,KAAKklD,GAAc,CAC7C,MAAMV,EAASU,EAAYE,GAC3B,GAAIL,EAAY1kD,IAAI+kD,GAClB,MAAM,IAAI1wD,MAAM,kBAAoBkK,KAAKxB,UAAUgoD,IAErDL,EAAYvyD,IAAI4yD,GAChB,MAAMT,EAASH,aAAkBE,GAAkBF,EAAOG,OAASS,EACnEJ,EAAOhyD,KAAK,CAAC2xD,SAAQS,SAAQZ,SAAQW,aAGzC,OAAO,IAAI5B,EAAQnxD,IACjB,GAAiB,iBAANA,GAAkBC,MAAMwN,QAAQzN,IAAW,MAALA,EAC/C,OAAOuxD,EAAQ,wBAA0BC,EAASxxD,IAEpD,MAAM4C,EAAS,GACf,IAAK,MAAM,OAAC2vD,EAAD,OAASS,EAAT,OAAiBZ,EAAjB,SAAyBW,KAAaH,EAAQ,CACvD,MAAM9Q,EAAM9hD,EAAEuyD,GACd,QAAY/kD,IAARs0C,EAAmB,CACrB,GAAIiR,EACF,OAAOxB,EAAQ,gBAAkB/kD,KAAKxB,UAAUunD,IAEhD,SAGJ,MAAMF,EAASD,EAAOzgB,MAAMmQ,GAC5B,IAAKuQ,EAAO/O,GACV,OAAOiO,EAAQ,OAAD,OAAQ/kD,KAAKxB,UAAUunD,GAAvB,aAAmCF,EAAO7S,MAE1D58C,EAAOowD,GAAUX,EAAOt1D,MAE1B,OAAOu0D,EAAQ1uD,MAiBZ,SAASqwD,GACdhB,GAEA,MAAMiB,EAAKjzD,MAAM09C,KAAKsU,GACtB,OAAO,IAAId,EAAQnxD,IACjB,IAAKC,MAAMwN,QAAQzN,GACjB,OAAOuxD,EAAQ,uBAAyBC,EAASxxD,IAEnD,GAAIA,EAAEH,SAAWqzD,EAAGrzD,OAClB,OAAO0xD,EAAQ,4BAAD,OAA6B2B,EAAGrzD,OAAhC,iBAA+CG,EAAEH,SAEjE,MAAM+C,EAAS3C,MAAMizD,EAAGrzD,QACxB,IAAK,IAAI/D,EAAI,EAAGA,EAAI8G,EAAO/C,OAAQ/D,IAAK,CACtC,MAAMgmD,EAAM9hD,EAAElE,GAERu2D,EADSa,EAAGp3D,GACI61C,MAAMmQ,GAC5B,IAAKuQ,EAAO/O,GACV,OAAOiO,EAAQ,SAAD,OAAUz1D,EAAV,aAAgBu2D,EAAO7S,MAEvC58C,EAAO9G,GAAKu2D,EAAOt1D,MAErB,OAAOu0D,EAAQ1uD,KA6BZ,MAAMuwD,GAAe,SAC1BC,GAEmB,IADnBC,EACkB,uDADM10C,EAExB,OAAO,IAAIwyC,EAAQnxD,IACjB,GAAiB,iBAANA,GAAkBC,MAAMwN,QAAQzN,IAAW,MAALA,EAC/C,OAAOuxD,EAAQ,wBAA0BC,EAASxxD,IAEpD,MAAMszD,EAA0B,IAAI7gD,IAC9B7P,EAAsB,GAC5B,IAAK,MAAM2wD,KAAU/2D,OAAOoR,KAAK5N,GAAI,CACnC,MAAMwzD,EAAYH,EAAU1hB,MAAM4hB,GAClC,IAAKC,EAAUlQ,GACb,OAAOiO,EAAQ,OAAD,OAAQ/kD,KAAKxB,UAAUuoD,GAAvB,aAAmCC,EAAUhU,MAE7D,MAAMiU,EAAYH,EAAQ32D,IAAI62D,EAAUz2D,OACxC,GAAiB,MAAb02D,EAAmB,CACrB,MAAM51D,EAAI2O,KAAKxB,UACf,OAAOumD,EACL,2BAAoB1zD,EAAE41D,GAAtB,gBAAwC51D,EAAE01D,GAA1C,qCAC2B11D,EAAE21D,EAAUz2D,SAG3Cu2D,EAAQziD,IAAI2iD,EAAUz2D,MAAOw2D,GAC7B,MAAMG,EAAW1zD,EAAEuzD,GACbI,EAAcP,EAAYzhB,MAAM+hB,GACtC,IAAKC,EAAYrQ,GACf,OAAOiO,EAAQ,SAAD,OAAU/kD,KAAKxB,UAAUuoD,GAAzB,aAAqCI,EAAYnU,MAEjE58C,EAAO4wD,EAAUz2D,OAAS42D,EAAY52D,MAExC,OAAOu0D,EAAQ1uD,MC3VZ,SAASgxD,GAAkBjlD,GAEhC,MAAM,KAACtS,EAAD,MAAOw3D,GAASllD,EAChBmlD,EAAc,IAAIrhD,IAAI9D,EAAQmlD,aAAe,IAAIrhD,KAGvD,IAAkC,IAA9BohD,EAAMxoD,QADQ,MAEhB,MAAM,IAAI/I,MAAJ,wCAA2C0I,IAAU6oD,KAG7D,MAAME,EAAqBF,EALT,KAMZG,EF7DD,SACLxpD,EACAqC,GAEA,MAAMjK,EAAS,IAAI6P,IACnB,IAAK,MAAO2e,EAAGzyB,KAAM6L,EAAI+I,UAAW,CAClC,MAAM0gD,EAAOpnD,EAAEukB,EAAGzyB,GAClB,GAAIiE,EAAOqL,IAAIgmD,GACb,MAAM,IAAI3xD,MAAM,kBAAoB4G,OAAO+qD,IAE7CrxD,EAAOiO,IAAIojD,EAAMt1D,GAEnB,OAAOiE,EEiD2BsxD,CAChCJ,EACCK,IACC,GAAIA,IAAeN,EACjB,MAAM,IAAIvxD,MAAJ,8CACmC0I,IAAU6oD,KAGrD,IAAuC,IAAnCM,EAAW9oD,QAdD,MAeZ,MAAM,IAAI/I,MAAJ,6CACkC0I,IAAUmpD,KAGpD,OAAOA,EAnBO,OAuBlB,SAASC,EAAYrsC,EAAkBssC,IAiCvC,SAASC,EACPnL,EACAkL,IA6BF,SAASE,EAAcrwB,GACrB,MAAO,IAAIA,EAAY,IAAIj5B,KAxFX,MA2FlB,SAASupD,EAAUrL,GAEjB,OAAO0K,EA7FS,KA6FWU,EAAcpL,GAK3C,SAASsL,EAAQ1sC,GAEf,MAAMohC,EAAQphC,EAAQ5c,MApGN,MAqGhB,OAAOg+C,EAAMjkD,MAAM,EAAGikD,EAAMtpD,OAAS,GAoBvC,SAAS60D,EAAQ3sC,GACf,IAAKA,EAAQ4sC,SA1HG,MA2Hd,MAAM,IAAIryD,MAAJ,+CACoC0I,IAAU+c,KAGtD,IAAKA,EAAQ40B,WAAWoX,GAAqB,CAC3C,IAAK,MACHa,EACAC,KACGb,EACH,GAAIjsC,EAAQ40B,WAAWiY,GACrB,MAAM,IAAItyD,MAAJ,mBACQjG,EADR,iBACqBw4D,EADrB,aACmC7pD,IAAU+c,KAIvD,MAAM,IAAIzlB,MAAJ,mBAAsBjG,EAAtB,kBAAoC2O,IAAU+c,KAEtD,OAAOA,EAGT,MAEMnlB,EAAS,CACbwxD,cACAE,mBACAQ,MApDYN,EAAU,IAqDtBA,YACAC,UACA9uD,SA/CF,SAAkBoiB,GAChB,MAAMohC,EAAQsL,EAAQ1sC,GACtB,MAAM,GAAN,OAAU1rB,GAAV,OAAiB2O,IAAUm+C,KA8C3BnJ,OA3CF,SAAgBj4B,GAA+C,2BAA1BohC,EAA0B,iCAA1BA,EAA0B,kBAG7D,OAAOphC,EAAUwsC,EAAcpL,IAyC/B5d,UAtCF,SAAmBxjB,EAAkBqF,GAGnC,OAAOrF,EAAQ40B,WAAWvvB,IAoC1BsnC,UACAtC,OAZgC1zB,EAAOA,EAAUg2B,IAcnD,OAAO52D,IAAW8E,GClRb,SAASmyD,GAAYC,EAAwBvoD,GAClD,MAAO,CAACuoD,EAAYvoD,GAWf,SAASwoD,GACdC,EACAzoD,EACA0oD,GAEA,IAAKl1D,MAAMwN,QAAQhB,IAAuB,IAAfA,EAAI5M,OAC7B,MAAM,IAAIyC,MACR,+DAGJ,MAAM,KAACwW,EAAD,QAAO+7B,GAAWpoC,EAAI,GAC5B,IAAI7J,EAAS6J,EAAI,GAEjB,MAAOqM,KAAMs8C,EAAcvgB,QAASwgB,GAAmBH,EACvD,GAAIp8C,IAASs8C,EACX,MAAM,IAAI9yD,MAAJ,8BAAiC8yD,EAAjC,oBAAyDt8C,IAGjE,GAAgB,MAAZq8C,GAAyC,MAArBA,EAAStgB,GAC/BjyC,EAASuyD,EAAStgB,GAASjyC,QACtB,GAAIiyC,IAAYwgB,EACrB,MAAM,IAAI/yD,MAAJ,UAAawW,EAAb,+CAAwD+7B,IAEhE,OAAOjyC,EAGT,MACM0yD,GAAgB52B,GAAQ,CADTA,GAAS,CAAC5lB,KAAM4lB,EAAUmW,QAASnW,IACXA,IAEtC,SAAS62B,GACdH,EACAD,GAEA,OAAO,IAAIz2B,EAAU1+B,IACnB,MAAMw1D,EAAaF,GAAc3jB,MAAM3xC,GACvC,IAAKw1D,EAAWlS,GACd,MAAO,CAACA,IAAI,EAAO9D,IAAI,gCAAD,OAAkCgW,EAAWhW,MAErE,OAAO,KAAC1mC,EAAD,QAAO+7B,GAAUiN,GAAO0T,EAAWz4D,MAC1C,GAAI+b,IAASs8C,EACX,MAAO,CACL9R,IAAI,EACJ9D,IAAI,kBAAD,OAAoB4V,EAApB,sBAA8Ct8C,EAA9C,MAGP,IAAKtc,OAAOkB,UAAUC,eAAe1B,KAAKk5D,EAAUtgB,GAClD,MAAO,CAACyO,IAAI,EAAO9D,IAAI,OAAD,OAAS1mC,EAAT,YAAiB+7B,EAAjB,cAExB,MAAM4gB,EAAcN,EAAStgB,GAASlD,MAAMmQ,GAC5C,OAAI2T,EAAYnS,GACPmS,EAEA,CAACnS,IAAI,EAAO9D,IAAI,GAAD,OAAK1mC,EAAL,YAAa+7B,EAAb,aAAyB4gB,EAAYjW,QCpB1D,SAAS7iD,GAAOqD,EAAO01D,GAC5B,GAAS,MAAL11D,EACF,MAAM,IAAIsC,MAAsB,MAAhBozD,EAAuBA,EAAexsD,OAAOlJ,IAE7D,OAAOA,EAqBJ,SAASgyD,GAAUhyD,EAAO0d,GAC/B,OAAY,MAAL1d,EAAYA,EAAI0d,E,6rBC+BlB,MAAMi4C,GAA4C/B,GAAkB,CACzEv3D,KAAM,cACNw3D,MAAO,IACPC,aAAa,IAAIrhD,KAAM5B,IAAI,IAAK,iBAErB+kD,GAA4ChC,GAAkB,CACzEv3D,KAAM,cACNw3D,MAAO,IACPC,aAAa,IAAIrhD,KAAM5B,IAAI,IAAK,iBA4B5BglD,GAAc,CAAC/8C,KAAM,mBAAoB+7B,QAAS,SAK3CihB,GAIRh4D,IAAW,CACdi4D,GAAIl5D,OAAO,MACXm5D,IAAKn5D,OAAO,OACZo5D,IAAKp5D,OAAO,SA+DP,MAAMq5D,GAcXz+C,cAAqB,gMACnBtY,KAAKg3D,mBAAqB,EAC1Bh3D,KAAKi3D,uBAAyB,CAC5BC,MAAO,EACP9E,QAAS,4BAEXpyD,KAAKm3D,aAAe,CAClBC,UAAW,GACXC,UAAW,GACXC,kBAAmB,GAErBt3D,KAAKu3D,OAAS,IAAIjkD,IAClBtT,KAAKw3D,OAAS,IAAIlkD,IAClBtT,KAAKy3D,eAAiB,IAAInkD,IAC1BtT,KAAK03D,wBAGPC,wBAAwBC,GAEtB,MAAMtuC,EAAMtpB,KAAKg3D,mBACjB,GAAI1tC,IAAQsuC,EAAZ,CAIA,GAAItuC,EAAMsuC,EACR,MAAM,IAAIz0D,MAAM,oCAElB,GAAImmB,EAAMsuC,EACR,MAAM,IAAIz0D,MACR,uEARFnD,KAAK03D,wBAaTG,oBAEE,GAAI73D,KAAKg3D,oBAAsBxrD,OAAOssD,iBACpC,MAAM,IAAI30D,MAAJ,6CACkCnD,KAAKg3D,mBADvC,YAIRh3D,KAAKg3D,qBACLh3D,KAAK03D,wBAYPK,WAAW35D,GACJ4B,KAAKy3D,eAAe3oD,IAAI1Q,IAC3B4B,KAAKy3D,eAAe/lD,IAAItT,EAAG,CAAC45D,QAAS,GAAIC,SAAU,KAUvDC,aAAa95D,GACX,MAAM+5D,EAAYn4D,KAAKy3D,eAAej6D,IAAIY,GAC1C,GAAiB,MAAb+5D,EAAmB,CACrB,MAAM,QAACH,EAAD,SAAUC,GAAYE,EAEzBn4D,KAAKu3D,OAAOzoD,IAAI1Q,IACE,IAAnB45D,EAAQt3D,QACY,IAApBu3D,EAASv3D,QAETV,KAAKy3D,eAAe3W,OAAO1iD,IAKjCg6D,YACE,MAAMd,EAAoBt3D,KAAKg3D,mBAC/B,GAAIh3D,KAAKm3D,aAAaG,oBAAsBA,EAAmB,CAC7D,MAAMD,EAAYv2D,MAAM09C,KAAKx+C,KAAKw3D,OAAO/oD,QAAQE,OAC3CyoD,EAAYt2D,MAAM09C,KAAKx+C,KAAKu3D,OAAO9oD,QAAQE,OACjD3O,KAAKm3D,aAAe,CAACC,YAAWC,YAAWC,qBAE7C,OAAOt3D,KAAKm3D,aAmBdG,oBACE,OAAOt3D,KAAKg3D,mBAWdqB,QAAQxqD,GACN,MAAM,QAAC+a,GAAW/a,EAClB2oD,GAAYvB,YAAYrsC,GACxB5oB,KAAK+3D,WAAWnvC,GAChB,MAAM0vC,EAAet4D,KAAKu3D,OAAO/5D,IAAIorB,GACrC,GAAoB,MAAhB0vC,EACFt4D,KAAKu3D,OAAO7lD,IAAIkX,EAAS/a,QAEzB,IAAK0qD,IAAU1qD,EAAMyqD,GAAe,CAClC,MAAME,EAAUC,GAAa5qD,GACvB6qD,EAAcD,GAAaH,GACjC,MAAM,IAAIn1D,MAAJ,oCACyBq1D,EADzB,yBACiDE,IAM3D,OAFA14D,KAAK63D,oBACL73D,KAAK03D,wBACE13D,KAeT24D,WAAWz3D,GAMT,OALAs1D,GAAYvB,YAAY/zD,GACxBlB,KAAKu3D,OAAOzW,OAAO5/C,GACnBlB,KAAKk4D,aAAah3D,GAClBlB,KAAK63D,oBACL73D,KAAK03D,wBACE13D,KAST44D,QAAQ13D,GACNs1D,GAAYvB,YAAY/zD,GACxB,MAAMuC,EAASzD,KAAKu3D,OAAOzoD,IAAI5N,GAE/B,OADAlB,KAAK03D,wBACEj0D,EAOToK,KAAK+a,GACH4tC,GAAYvB,YAAYrsC,GACxB,MAAMnlB,EAASzD,KAAKu3D,OAAO/5D,IAAIorB,GAE/B,OADA5oB,KAAK03D,wBACEj0D,EAiBTo1D,MAAMrpD,GACJ,MAAMye,EAAoB,MAAXze,EAAkBA,EAAQye,OAASuoC,GAAYb,MAC9D,GAAc,MAAV1nC,EACF,MAAM,IAAI9qB,MAAJ,0BAA6B4G,OAAOkkB,KAE5C,MAAMxqB,EAASzD,KAAK84D,eAAe94D,KAAKg3D,mBAAoB/oC,GAE5D,OADAjuB,KAAK03D,wBACEj0D,EAGM,gBACbs1D,EACA9qC,GAEA,IAAK,MAAMrF,KAAW5oB,KAAKo4D,YAAYhB,UACrC,GAAIZ,GAAYpqB,UAAUxjB,EAASqF,GAAS,CAC1C,MAAMpgB,EAAOmrD,GAAah5D,KAAKu3D,OAAO/5D,IAAIorB,IAC1C5oB,KAAK23D,wBAAwBoB,GAC7B/4D,KAAK03D,8BACC7pD,EAGV7N,KAAK23D,wBAAwBoB,GAC7B/4D,KAAK03D,wBAkBPuB,QAAQC,GACN1C,GAAYvB,YAAYiE,EAAKC,IAAK,YAClC3C,GAAYvB,YAAYiE,EAAKE,IAAK,YAClC3C,GAAYxB,YAAYiE,EAAKtwC,QAAS,gBAEtC5oB,KAAK+3D,WAAWmB,EAAKC,KACrBn5D,KAAK+3D,WAAWmB,EAAKE,KACrB,MAAMC,EAAer5D,KAAKw3D,OAAOh6D,IAAI07D,EAAKtwC,SAC1C,GAAoB,MAAhBywC,GACF,GACEA,EAAaF,MAAQD,EAAKC,KAC1BE,EAAaD,MAAQF,EAAKE,KAC1BC,EAAazwC,UAAYswC,EAAKtwC,SAC9BywC,EAAaC,cAAgBJ,EAAKI,YAClC,CACA,MAAMC,EAAUC,GAAaN,GACvBR,EAAcc,GAAaH,GACjC,MAAM,IAAIl2D,MAAJ,oCACyBo2D,EADzB,yBACiDb,SAGpD,CACL14D,KAAKw3D,OAAO9lD,IAAIwnD,EAAKtwC,QAASswC,GAC9B,MAAM,QAAClB,GAAWgB,GAAah5D,KAAKy3D,eAAej6D,IAAI07D,EAAKE,OACtD,SAACnB,GAAYe,GAAah5D,KAAKy3D,eAAej6D,IAAI07D,EAAKC,MAC7DnB,EAAQv2D,KAAKy3D,GACbjB,EAASx2D,KAAKy3D,GAKhB,OAHAl5D,KAAKw3D,OAAO9lD,IAAIwnD,EAAKtwC,QAASswC,GAC9Bl5D,KAAK63D,oBACL73D,KAAK03D,wBACE13D,KAWTy5D,WAAW7wC,GACT6tC,GAAYxB,YAAYrsC,GACxB,MAAMswC,EAAOl5D,KAAKw3D,OAAOh6D,IAAIorB,GAC7B,GAAY,MAARswC,EAAc,CAChBl5D,KAAKw3D,OAAO1W,OAAOl4B,GACnB,MAAM,QAACovC,GAAWgB,GAAah5D,KAAKy3D,eAAej6D,IAAI07D,EAAKE,OACtD,SAACnB,GAAYe,GAAah5D,KAAKy3D,eAAej6D,IAAI07D,EAAKC,MAI7D,CAACnB,EAASC,GAAUn5D,QAAS46D,IAC3B,MAAMpoD,EAAQooD,EAAMt2C,UAAW81C,GAASA,EAAKtwC,UAAYA,GACzD,IAAe,IAAXtX,EAAc,CAChB,MAAMqoD,EAAalD,GAAYjwD,SAASoiB,GACxC,MAAM,IAAIzlB,MAAJ,iDACsCw2D,IAG9CD,EAAM7qD,OAAOyC,EAAO,KAEtBtR,KAAKk4D,aAAagB,EAAKC,KACvBn5D,KAAKk4D,aAAagB,EAAKE,KAIzB,OAFAp5D,KAAK63D,oBACL73D,KAAK03D,wBACE13D,KAMT45D,QAAQhxC,GACN6tC,GAAYxB,YAAYrsC,GACxB,MAAMnlB,EAASzD,KAAKw3D,OAAO1oD,IAAI8Z,GAE/B,OADA5oB,KAAK03D,wBACEj0D,EAYTo2D,eAAejxC,GACb6tC,GAAYxB,YAAYrsC,GACxB,MAAMswC,EAAOl5D,KAAKk5D,KAAKtwC,GACvB,IAAInlB,EACJ,GAAY,MAARy1D,EAAc,CAChB,MAAM,IAACC,EAAD,IAAMC,GAAOF,EACnBz1D,GAAUzD,KAAK44D,QAAQO,KAASn5D,KAAK44D,QAAQQ,GAG/C,OADAp5D,KAAK03D,wBACEj0D,EAOTy1D,KAAKtwC,GACH6tC,GAAYxB,YAAYrsC,GACxB,MAAMnlB,EAASzD,KAAKw3D,OAAOh6D,IAAIorB,GAE/B,OADA5oB,KAAK03D,wBACEj0D,EA+BTi2D,MAAMlqD,GACJ,GAAe,MAAXA,EACF,MAAM,IAAIrM,MAAM,wCAElB,MAAM,aAAC22D,GAAgBtqD,EACjBuqD,EAAgBf,GACpBxpD,EAAQuqD,cACRtD,GAAYd,OAERqE,EAAYhB,GAAgBxpD,EAAQwqD,UAAWxD,GAAYb,OAC3DsE,EAAYjB,GAAgBxpD,EAAQyqD,UAAWzD,GAAYb,OAE3DlyD,EAASzD,KAAKk6D,eAClBl6D,KAAKg3D,mBACL8C,EACAC,EACAC,EACAC,GAGF,OADAj6D,KAAK03D,wBACEj0D,EAGM,gBACbs1D,EACAe,EACAC,EACAC,EACAC,GAEA,IAAK,MAAMrxC,KAAW5oB,KAAKo4D,YAAYf,UAAW,CAChD,MAAM6B,EAAOF,GAAah5D,KAAKw3D,OAAOh6D,IAAIorB,KAEvCkxC,IAAsD,IAAtC95D,KAAK65D,eAAeX,EAAKtwC,WAC1C6tC,GAAYrqB,UAAU8sB,EAAKtwC,QAASmxC,IACpCvD,GAAYpqB,UAAU8sB,EAAKC,IAAKa,IAChCxD,GAAYpqB,UAAU8sB,EAAKE,IAAKa,KAEhCj6D,KAAK23D,wBAAwBoB,GAC7B/4D,KAAK03D,8BACCwB,GAGVl5D,KAAK23D,wBAAwBoB,GAC7B/4D,KAAK03D,wBA6CPyC,UAAUtsD,EAAoB2B,GAC5B,IAAKxP,KAAK44D,QAAQ/qD,GAChB,MAAM,IAAI1K,MAAJ,+BAAkCqzD,GAAYhwD,SAASqH,KAE/D,MAAMpK,EAASzD,KAAKo6D,WAAWvsD,EAAM2B,EAASxP,KAAKg3D,oBAEnD,OADAh3D,KAAK03D,wBACEj0D,EAGE,YACToK,EACA2B,EACAupD,GAEA,MAEMsB,EAAY7qD,EAAQ6qD,UACpBC,EAAoD,GAC1D,GAAID,IAAc1D,GAAUC,IAAMyD,IAAc1D,GAAUG,IAAK,CAC7D,MAAM,QAACkB,GAAWgB,GAAah5D,KAAKy3D,eAAej6D,IAAIqQ,IACvDysD,EAAY74D,KAAK,CAACi4D,MAAO1B,EAASqC,UAAW,OAE/C,GAAIA,IAAc1D,GAAUE,KAAOwD,IAAc1D,GAAUG,IAAK,CAC9D,MAAM,SAACmB,GAAYe,GAAah5D,KAAKy3D,eAAej6D,IAAIqQ,IACxDysD,EAAY74D,KAAK,CAACi4D,MAAOzB,EAAUoC,UAAW,QAGhD,IAAK,MAAME,KAAaD,EACtB,IAAK,MAAMpB,KAAQqB,EAAUb,MAAO,CAClC,GAAIW,IAAc1D,GAAUG,KAA+B,OAAxByD,EAAUF,WACvCnB,EAAKC,MAAQD,EAAKE,IACpB,SAGJ,MAAMoB,EACoB,OAAxBD,EAAUF,UAAqBnB,EAAKC,IAAMD,EAAKE,IAC3CqB,EAAez6D,KAAK6N,KAAK2sD,GAtBfp8D,EAwBHo8D,EAxBShE,GAAYpqB,UAAUhuC,EAAGoR,EAAQkrD,cACvChwD,EAwBHwuD,EAAKtwC,QAxBI6tC,GAAYrqB,UAAU1hC,EAAG8E,EAAQmrD,cAyBrC,MAAhBF,IAEAz6D,KAAK23D,wBAAwBoB,GAC7B/4D,KAAK03D,6BACC,CAACwB,OAAMrrD,KAAM4sD,IA7BL/vD,MADAtM,EAkCpB4B,KAAK23D,wBAAwBoB,GAC7B/4D,KAAK03D,wBAYPhzD,OAAOk2D,GACL,KAAMA,aAAgB7D,IACpB,MAAM,IAAI5zD,MAAJ,8BAAiC4G,OAAO6wD,KAEhD,MAAMn3D,EACJ80D,IAAUv4D,KAAKu3D,OAAQqD,EAAKrD,SAC5BgB,IAAUv4D,KAAKw3D,OAAQoD,EAAKpD,QAE9B,OADAx3D,KAAK03D,wBACEj0D,EAST8tB,OACE,MAAM9tB,EAASszD,GAAM8D,MAAM,CAAC76D,OAE5B,OADAA,KAAK03D,wBACEj0D,EAMT8I,SAIE,MAAMuuD,EAAsBh6D,MAAM09C,KAAKx+C,KAAKy3D,eAAehpD,QAAQE,OAC7DosD,EAA2B,IAAIznD,IACrCwnD,EAAoBh8D,QAAQ,CAAC8pB,EAASjsB,KACpCo+D,EAAyBrpD,IAAIkX,EAASjsB,KAExC,MACMq+D,EADcl6D,MAAM09C,KAAKx+C,KAAK05D,MAAM,CAACI,cAAc,KACLzuD,IAClD,IAAuC,IAAtC,IAAC8tD,EAAD,IAAMC,EAAN,QAAWxwC,EAAX,YAAoB0wC,GAAiB,EAGpC,MAAO,CACL2B,SAHejC,GAAa+B,EAAyBv9D,IAAI27D,IAIzD+B,SAHelC,GAAa+B,EAAyBv9D,IAAI47D,IAIzDxwC,QAAS6tC,GAAYnB,QAAQ1sC,GAC7B0wC,iBAKA6B,EADcr6D,MAAM09C,KAAKx+C,KAAK64D,SACgBxtD,IAClD,IAA0C,IAAzC,QAACud,EAAD,YAAUwyC,EAAV,YAAuB9B,GAAiB,EAEvC,MAAO,CAAChoD,MADM0nD,GAAa+B,EAAyBv9D,IAAIorB,IACzCwyC,cAAa9B,iBAG1B+B,EAAU,CACdP,oBAAqBA,EAAoBzvD,IAAKxK,GAC5C21D,GAAYlB,QAAQz0D,IAEtB64D,MAAOsB,EACPnC,MAAOsC,GAEH13D,EAASmyD,GAASc,GAAa2E,GAErC,OADAr7D,KAAK03D,wBACEj0D,EAMM,gBAAC63D,GACd,MACEzC,MAAO0C,EACP7B,MAAO8B,EACPV,oBAAqBW,GACnB3F,GAAWY,GAAa4E,GACtBR,EAAsBW,EAAwBpwD,IAClDmrD,GAAYnB,WAER5xD,EAAS,IAAIszD,GAmBnB,OAlBAwE,EAAUz8D,QAASuD,IACjB,MAAMjE,EAAU,CACdwqB,QAASkyC,EAAoBz4D,EAAEiP,OAC/B8pD,YAAa/4D,EAAE+4D,YACf9B,YAAaj3D,EAAEi3D,aAEjB71D,EAAO40D,QAAQj6D,KAEjBo9D,EAAU18D,QAAQ,IAAiD,IAAhD,QAAC8pB,EAAD,SAAUqyC,EAAV,SAAoBC,EAApB,YAA8B5B,GAAiB,EAChE,MAAMH,EAAM2B,EAAoBG,GAC1B7B,EAAM0B,EAAoBI,GAChCz3D,EAAOw1D,QAAQ,CACbrwC,QAAS6tC,GAAYpB,UAAUzsC,GAC/BuwC,IAAKA,EACLC,IAAKA,EACLE,kBAGG71D,EAyBG,aAACi4D,GACX,MAAMj4D,EAAS,IAAIszD,GACnB,IAAK,MAAM5I,KAASuN,EAAQ,CAC1B,IAAK,MAAM7tD,KAAQsgD,EAAM0K,QACvBp1D,EAAO40D,QAAQxqD,GAEjB,IAAK,MAAMqrD,KAAQ/K,EAAMuL,MAAM,CAACI,cAAc,IAC5Cr2D,EAAOw1D,QAAQC,GAGnB,OAAOz1D,EA4BTk4D,cAAcC,GACZ,MAAMC,EAAQ,IAAIvoD,IACZwoD,EAAe,IAAItoD,IACnBuoD,EAAa,IAAIhF,GACvB,IAAK,MAAM,IAACiF,EAAD,YAAMC,KAAgBL,EAAc,CAC7C,IAAK,MAAMM,KAAQF,EAAK,CACtB,GAAIF,EAAahtD,IAAIotD,GACnB,MAAM,IAAI/4D,MAAJ,kDACuCqzD,GAAYhwD,SACrD01D,KAINL,EAAMnqD,IAAIwqD,EAAMD,EAAYrzC,SAE9BkzC,EAAa76D,IAAIg7D,EAAYrzC,SAC7BmzC,EAAW1D,QAAQ4D,GAErB,IAAK,MAAMpuD,KAAQ7N,KAAK64D,QACjBgD,EAAM/sD,IAAIjB,EAAK+a,UAClBmzC,EAAW1D,QAAQxqD,GAGvB,IAAK,MAAMqrD,KAAQl5D,KAAK05D,MAAM,CAACI,cAAc,IAAQ,CACnD,MAAMX,EAAMH,GAAgB6C,EAAMr+D,IAAI07D,EAAKC,KAAMD,EAAKC,KAChDC,EAAMJ,GAAgB6C,EAAMr+D,IAAI07D,EAAKE,KAAMF,EAAKE,KAChD+C,EAAO,SAAOjD,GAAP,IAAaC,MAAKC,QAC/B2C,EAAW9C,QAAQkD,GAErB,OAAOJ,EAGTK,kBACE,GAAIp8D,KAAKi3D,uBAAuBC,OAASl3D,KAAKg3D,mBAAoB,CAChE,IAAI5E,EAAmB,KACvB,IACEpyD,KAAKq8D,mBACL,MAAO3xD,GACP0nD,EAAU1nD,EAAE0M,QAHd,QAKEpX,KAAKi3D,uBAAyB,CAC5BC,KAAMl3D,KAAKg3D,mBACX5E,YAIN,GAA2C,MAAvCpyD,KAAKi3D,uBAAuB7E,QAC9B,MAAM,IAAIjvD,MAAMnD,KAAKi3D,uBAAuB7E,SAIhDiK,mBAgBE,MAAMC,EAA6B,IAAI9oD,IAEvC,IAAK,MAAOoV,EAAS/a,KAAS7N,KAAKu3D,OAAQ,CACzC,GAAI1pD,EAAK+a,UAAYA,EACnB,MAAM,IAAIzlB,MAAJ,+BACoBqzD,GAAYhwD,SAASoiB,KAGjD,IAAK5oB,KAAKy3D,eAAe3oD,IAAI8Z,GAC3B,MAAM,IAAIzlB,MAAJ,qCAC0BqzD,GAAYhwD,SAASoiB,KAGvD0zC,EAA2Br7D,IAAI2nB,GAGjC,IAAK,MAAMswC,KAAQl5D,KAAKw3D,OAAO9iD,SAAU,CACvC,IAAK1U,KAAKy3D,eAAe3oD,IAAIoqD,EAAKC,KAChC,MAAM,IAAIh2D,MAAJ,6CACkCq2D,GAAaN,KAIvD,GADAoD,EAA2Br7D,IAAIi4D,EAAKC,MAC/Bn5D,KAAKy3D,eAAe3oD,IAAIoqD,EAAKE,KAChC,MAAM,IAAIj2D,MAAJ,6CACkCq2D,GAAaN,KAGvDoD,EAA2Br7D,IAAIi4D,EAAKE,KAYtC,GAD2Bt4D,MAAM09C,KAAKx+C,KAAKy3D,eAAehpD,QAAQ/N,SACvC47D,EAA2B9qD,KACpD,MAAM,IAAIrO,MAAM,qCAgBlB,IAAK,MAAOylB,EAASswC,KAASl5D,KAAKw3D,OAAOpjD,UACxC,GAAI8kD,EAAKtwC,UAAYA,EACnB,MAAM,IAAIzlB,MAAJ,4BACiBq2D,GAAaN,GAD9B,2BACsDtwC,IAgChE,MAAM2zC,EAAiC,IAAI/oD,IACrCgpD,EAAkC,IAAIhpD,IACtCipD,EAAkB37D,MAAM09C,KAAKx+C,KAAKy3D,eAAerjD,WACvD,IAAK,MAAM,KAACpG,EAAD,QAAOoG,EAAP,iBAAgBsoD,EAAhB,KAAkCvZ,IAAS,CACpD,CACEn1C,KAAMuuD,EACNnoD,QAASqoD,EAAgBpxD,IAAI,QAAEnK,GAAG,QAAC82D,IAAN,QAAoB,CAAC92D,EAAG82D,KACrD0E,iBAAmBhyD,GAAMA,EAAE0uD,IAC3BjW,KAAM,WAER,CACEn1C,KAAMwuD,EACNpoD,QAASqoD,EAAgBpxD,IAAI,QAAEnK,GAAG,SAAC+2D,IAAN,QAAqB,CAAC/2D,EAAG+2D,KACtDyE,iBAAmBhyD,GAAMA,EAAEyuD,IAC3BhW,KAAM,aAGR,IAAK,MAAO3hD,EAAMk4D,KAAUtlD,EAC1B,IAAK,MAAM8kD,KAAQQ,EAAO,CAExB,GAAI1rD,EAAKc,IAAIoqD,EAAKtwC,SAChB,MAAM,IAAIzlB,MAAJ,oBAAuBggD,EAAvB,aAAgCqW,GAAaN,KAErDlrD,EAAK/M,IAAIi4D,EAAKtwC,SACd,MAAM8pC,EAAW1yD,KAAKw3D,OAAOh6D,IAAI07D,EAAKtwC,SAEtC,IAAK2vC,IAAUW,EAAMxG,GAAW,CAC9B,GAAgB,MAAZA,EACF,MAAM,IAAIvvD,MAAJ,mBAAsBggD,EAAtB,aAA+BqW,GAAaN,KAC7C,CACL,MAAMyD,EAAE,UAAMnD,GAAaN,GAAnB,gBAAgCM,GAAa9G,IACrD,MAAM,IAAIvvD,MAAJ,cAAiBggD,EAAjB,aAA0BwZ,KAIpC,MAAMC,EAAeF,EAAiBxD,GACtC,GAAI13D,IAASk7D,EAAiBxD,GAC5B,MAAM,IAAI/1D,MACR,cAAOggD,EAAP,aAAgBqW,GAAaN,GAA7B,+CAC2B1C,GAAYhwD,SAASo2D,KAS1D,IAAK,MAAM1D,KAAQl5D,KAAKw3D,OAAO9iD,SAAU,CAMvC,IAAK6nD,EAAYztD,IAAIoqD,EAAKtwC,SACxB,MAAM,IAAIzlB,MAAJ,2BAA8Bq2D,GAAaN,KAEnD,IAAKsD,EAAa1tD,IAAIoqD,EAAKtwC,SACzB,MAAM,IAAIzlB,MAAJ,4BAA+Bq2D,GAAaN,MAKxDxB,wBACM5mD,GAaD,SAAS2nD,GAAa5qD,GAC3B,MAAM+a,EAAU4tC,GAAYhwD,SAASqH,EAAK+a,SACpCi0C,EACgB,MAApBhvD,EAAKyrD,YAAsB,OAASvvD,OAAO8D,EAAKyrD,aAClD,MAAM,aAAN,OAAoB1wC,EAApB,0BAA6C/a,EAAKutD,YAAlD,0BAA+EyB,EAA/E,KAQK,SAASrD,GAAaN,GAC3B,MAAMtwC,EAAU6tC,GAAYjwD,SAAS0yD,EAAKtwC,SACpCuwC,EAAM3C,GAAYhwD,SAAS0yD,EAAKC,KAChCC,EAAM5C,GAAYhwD,SAAS0yD,EAAKE,KACtC,MAAM,aAAN,OAAoBxwC,EAApB,kBAAqCuwC,EAArC,kBAAkDC,EAAlD,0BAAuEF,EAAKI,YAA5E,KAQK,SAASwD,GACd5D,GAOA,MAAO,CACLtwC,QAAS6tC,GAAYjwD,SAAS0yD,EAAKtwC,SACnCuwC,IAAK3C,GAAYhwD,SAAS0yD,EAAKC,KAC/BC,IAAK5C,GAAYhwD,SAAS0yD,EAAKE,KAC/BE,YAAaJ,EAAKI,aAIf,SAASyD,GACd7D,GAWA,MAAO,CAAC8D,aAJavG,GAAYnB,QAAQ4D,EAAKtwC,SAIxBq0C,SAHLzG,GAAYlB,QAAQ4D,EAAKC,KAGV+D,SAFf1G,GAAYlB,QAAQ4D,EAAKE,KAEAE,YADtBJ,EAAKI,aAoBpB,SAAS6D,GACdC,EACAC,GAEA,MAAMC,EAAY,GACZC,EAAY,GACZC,EAAiBJ,EAAW14D,OAAO24D,GAEzC,IAAKG,EAAgB,CACnB,IAAK,MAAMC,KAAaL,EAAWvE,QAAS,CAC1C,MAAM6E,EAAaL,EAAYxvD,KAAK4vD,EAAU70C,SACzC2vC,IAAUkF,EAAWC,IACxBJ,EAAU77D,KAAK,CAACokB,MAAO43C,EAAWE,OAAQD,IAE9C,IAAK,MAAMA,KAAcL,EAAYxE,QAAS,CAC5C,MAAM4E,EAAYL,EAAWvvD,KAAK6vD,EAAW90C,SACxC60C,GACHH,EAAU77D,KAAK,CAACokB,MAAO43C,EAAWE,OAAQD,IAI9C,IAAK,MAAME,KAAaR,EAAW1D,MAAM,CAACI,cAAc,IAAQ,CAC9D,MAAM+D,EAAaR,EAAYnE,KAAK0E,EAAUh1C,SACzC2vC,IAAUqF,EAAWC,IACxBN,EAAU97D,KAAK,CAACokB,MAAO+3C,EAAWD,OAAQE,IAE9C,IAAK,MAAMA,KAAcR,EAAY3D,MAAM,CAACI,cAAc,IAAQ,CAChE,MAAM8D,EAAYR,EAAWlE,KAAK2E,EAAWj1C,SACxCg1C,GACHL,EAAU97D,KAAK,CAACokB,MAAO+3C,EAAWD,OAAQE,KAKhD,MAAO,CACLL,iBACAF,YACAC,aCzuCG,MAAM7C,GAA2BlE,GAAYnB,UAAU,CAC5D,aACA,cAEWsF,GAA2BlE,GAAYpB,UAAU,CAC5D,aACA,cAGWyI,GAA0Bn/D,IAAW,CAChDzB,KAAM,QACN6gE,WAAY,SACZ9vC,OAAQuoC,GAAY3V,OAAO6Z,GAAY,SACvCsD,cAAe,EACf5C,YACE,4FAGS6C,GAAyBt/D,IAAW,CAC/CzB,KAAM,OACN6gE,WAAY,QACZ9vC,OAAQuoC,GAAY3V,OAAO6Z,GAAY,QACvCsD,cAAe,EACf5C,YAAa,kDAGF8C,GAAyBv/D,IAAW,CAC/CzB,KAAM,OACN6gE,WAAY,QACZ9vC,OAAQuoC,GAAY3V,OAAO6Z,GAAY,QACvCsD,cAAe,EACf5C,YAAa,uDAGF+C,GAAyBx/D,IAAW,CAC/CzB,KAAM,OACN6gE,WAAY,QACZ9vC,OAAQuoC,GAAY3V,OAAO6Z,GAAY,QACvCsD,cAAe,EACf5C,YAAa,+CAGFgD,GAAsCz/D,IAAW,CAC5D0/D,YAAa,gBACbC,aAAc,wBACdrwC,OAAQwoC,GAAY5V,OAAO8Z,GAAY,qBACvCqD,cAAe,CAACO,SAAU,EAAI,EAAGC,UAAW,GAC5CpD,YAAa,oDAGFqD,GAAsC9/D,IAAW,CAC5D0/D,YAAa,sBACbC,aAAc,6BACdrwC,OAAQwoC,GAAY5V,OAAO8Z,GAAY,qBACvCqD,cAAe,CAACO,SAAU,EAAGC,UAAW,GACxCpD,YACE,0FAGSsD,GAAgC//D,IAAW,CACtD0/D,YAAa,mBACbC,aAAc,qBACdrwC,OAAQwoC,GAAY5V,OAAO8Z,GAAY,WACvCqD,cAAe,CAACO,SAAU,EAAGC,UAAW,GACxCpD,YAAa,uDAGFuD,GAAiChgE,IAAW,CACvD0/D,YAAa,gBACbC,aAAc,uBACdrwC,OAAQwoC,GAAY5V,OAAO8Z,GAAY,UAAW,SAClDqD,cAAe,CAACO,SAAU,EAAGC,UAAW,GACxCpD,YAAa,gDAGFwD,GAAgCjgE,IAAW,CACtD0/D,YAAa,eACbC,aAAc,sBACdrwC,OAAQwoC,GAAY5V,OAAO8Z,GAAY,UAAW,QAClDqD,cAAe,CAACO,SAAU,EAAI,EAAGC,UAAW,GAC5CpD,YAAa,kDAGFyD,GAAgClgE,IAAW,CACtD0/D,YAAa,eACbC,aAAc,kBACdrwC,OAAQwoC,GAAY5V,OAAO8Z,GAAY,eACvCqD,cAAe,CAACO,SAAU,EAAGC,UAAW,GACxCpD,YAAa,2DAGF0D,GAA0BngE,IAAW,CAChD0/D,YAAa,QACbC,aAAc,cACdrwC,OAAQwoC,GAAY5V,OAAO8Z,GAAY,SACvCqD,cAAe,CAACO,SAAU,EAAGC,UAAW,GACxCpD,YAAa,wDAGF2D,GAAmCpgE,IAAW,CACzD0/D,YAAa,kBACbC,aAAc,wBACdrwC,OAAQwoC,GAAY5V,OAAO8Z,GAAY,aAAc,QACrDqD,cAAe,CAACO,SAAU,GAAOC,UAAW,GAC5CpD,YAAa,6DAGF4D,GAAoCrgE,IAAW,CAC1D0/D,YAAa,mBACbC,aAAc,yBACdrwC,OAAQwoC,GAAY5V,OAAO8Z,GAAY,aAAc,SACrDqD,cAAe,CAACO,SAAU,GAAOC,UAAW,GAC5CpD,YAAa,wDAGF6D,GAAmCtgE,IAAW,CACzD0/D,YAAa,WACbC,aAAc,kBACdrwC,OAAQwoC,GAAY5V,OAAO8Z,GAAY,aAAc,QACrDqD,cAAe,CAACO,SAAU,GAAOC,UAAW,GAC5CpD,YAAa,oDAGF8D,GAAiCvgE,IAAW,CACvDzB,KAAM,YACNw9D,cACAC,WAHuD,GAIvDwE,UAAW,CAACjB,GAAcJ,GAAeG,GAAcE,IACvDiB,UAAW,CACTV,GACAC,GACAC,GACAR,GACAK,GACAK,GACAD,GACAE,GACAC,GACAC,IAEFI,UAAW,CAACnB,MC3IP,SAASoB,GAAaC,EAAmBrxC,GAC9C,OAAOsoC,GAAY3V,OAAOid,GAAc7vC,OAAQsxC,EAAWx1D,OAAOmkB,IAG7D,SAASsxC,GAAYD,EAAmBrxC,GAC7C,OAAOsoC,GAAY3V,OAAOod,GAAahwC,OAAQsxC,EAAWx1D,OAAOmkB,IAG5D,SAASuxC,GAAYF,EAAmBG,GAC7C,OAAOlJ,GAAY3V,OAAOqd,GAAajwC,OAAQsxC,EAAWG,GAGrD,SAASC,GAAYJ,EAAmBK,GAC7C,OAAOpJ,GAAY3V,OACjBsd,GAAalwC,OACbsxC,EACAK,EAAKF,SACL31D,OAAO61D,EAAKC,SClBT,MAAMnF,GAA2BlE,GAAYnB,UAAU,CAC5D,aACA,YAEWsF,GAA2BlE,GAAYpB,UAAU,CAC5D,aACA,YAGWyK,GAA2BnhE,IAAW,CACjDzB,KAAM,SACN6gE,WAAY,UACZ9vC,OAAQuoC,GAAY3V,OAAO6Z,GAAY,UACvCsD,cAAe,EACf5C,YAAa,mCAGF2E,GAA4BphE,IAAW,CAClDzB,KAAM,UACN6gE,WAAY,WACZ9vC,OAAQuoC,GAAY3V,OAAO6Z,GAAY,WACvCsD,cAAe,EACf5C,YAAa,sDAGF4E,GAA6BrhE,IAAW,CACnDzB,KAAM,WACN6gE,WAAY,YACZ9vC,OAAQuoC,GAAY3V,OAAO6Z,GAAY,YACvCsD,cAAe,EACf5C,YAAa,sDAGF6E,GAAmCthE,IAAW,CACzD0/D,YAAa,kBACbC,aAAc,yBACdrwC,OAAQwoC,GAAY5V,OAAO8Z,GAAY,UAAW,WAClDqD,cAAe,CAACO,SAAU,EAAI,EAAGC,UAAW,GAC5CpD,YAAa,qDAGF8E,GAAiCvhE,IAAW,CACvD0/D,YAAa,gBACbC,aAAc,oBACdrwC,OAAQwoC,GAAY5V,OAAO8Z,GAAY,iBACvCqD,cAAe,CAACO,SAAU,EAAGC,UAAW,EAAI,IAC5CpD,YAAa,qDAGF+E,GAA6BxhE,IAAW,CACnD0/D,YAAa,YACbC,aAAc,mBACdrwC,OAAQwoC,GAAY5V,OAAO8Z,GAAY,aACvCqD,cAAe,CAACO,SAAU,EAAGC,UAAW,EAAI,IAC5CpD,YAAa,wDAGFgF,GAA6BzhE,IAAW,CACnD0/D,YAAa,WACbC,aAAc,kBACdrwC,OAAQwoC,GAAY5V,OAAO8Z,GAAY,YACvCqD,cAAe,CAACO,SAAU,EAAGC,UAAW,EAAI,IAC5CpD,YAAa,sDAGFiF,GAA0B1hE,IAAW,CAChD0/D,YAAa,iBACbC,aAAc,sBACdrwC,OAAQwoC,GAAY5V,OAAO8Z,GAAY,SAKvCqD,cAAe,CAACO,SAAU,GAAIC,UAAW,EAAI,IAC7CpD,YAAa,yDAGF8D,GAAiCvgE,IAAW,CACvDzB,KAAM,UACNw9D,WAFuD,GAGvDC,WAHuD,GAIvDwE,UAAW,CAACW,GAAgBC,GAAiBC,IAC7CZ,UAAW,CACTa,GACAC,GACAC,GACAC,GACAC,IAEFhB,UAAW,CAACS,M,aCjFC,SAASQ,GAAOxW,GAC7B,MAAMyW,EAAczW,EACjBh+C,KAAK,IACLE,MAAM,MACNsX,OAAQk9C,GAAgC,IAAvBA,EAAK//D,OAAOC,QAC7B2K,IAAKm1D,GAASA,EAAK9/D,OAAS8/D,EAAKC,WAAW//D,QACzCggE,EAAargE,KAAKiK,IAAIc,MAAM,KAAMm1D,GAElCvW,EAAQ,GACd,IAAK,IAAIrtD,EAAI,EAAGA,EAAImtD,EAAQppD,OAAQ/D,IAAK,CACvC,MAAMgkE,EAAU7W,EAAQntD,GACrBqP,MAAM,MACNX,IAAI,CAACm1D,EAAMn+D,IAAa,IAAN1F,GAAW0F,EAAI,EAAIm+D,EAAKj7B,OAAOm7B,GAAcF,GAC/D10D,KAAK,MACRk+C,EAAMvoD,KAAKk/D,GACPhkE,GAAC,2CACHqtD,EAAMvoD,KAAY9E,EAAlB,uBAAkBA,EAAlB,mBAAkBA,EAAlB,IAGJ,OAAOqtD,EAAMl+C,KAAK,ICVb,MAAM80D,GAAyCrhC,GAAS,CAC7Dg/B,SAAUh/B,EACVi/B,UAAWj/B,IAoBN,SAASo2B,KACd,MAAO,CACLkL,YAAa,IAAIvtD,IACjBwtD,YAAa,IAAIxtD,KAId,SAASie,GAAKT,GACnB,MAAO,CACL+vC,YAAa,IAAIvtD,IAAIwd,EAAE+vC,aACvBC,YAAa,IAAIxtD,IAAIwd,EAAEgwC,cAiBpB,SAASjG,GACd3+B,EACA6kC,GAEA,GAAiB,MAAbA,EAAmB,CAWrBA,EAAY,CAACC,aAVQ,CAACC,EAAWC,KAC/B,MAAM,IAAI/9D,MACR,6DAQuBg+D,aALN,CAACF,EAAWC,KAC/B,MAAM,IAAI/9D,MACR,8DAKN,MAAMi+D,EAAoBzL,MACpB,YAACkL,EAAD,YAAcC,GAAeM,GAC7B,aAACJ,EAAD,aAAeG,GAAgBJ,EACrC,IAAK,MAAMjwC,KAAKoL,EAAI,CAClB,IAAK,MAAOggC,EAAMhxD,KAAQ4lB,EAAE+vC,YAAYzsD,UAAW,CACjD,MAAMitD,EAAWR,EAAYrjE,IAAI0+D,GACjC,GAAgB,MAAZmF,EACFR,EAAYnvD,IAAIwqD,EAAMhxD,QAEtB,IACE21D,EAAYnvD,IAAIwqD,EAAM8E,EAAaK,EAAUn2D,IAC7C,MAAOR,GACP,MAAM,IAAIvH,MAAJ,UAAauH,EAAb,2BAAiC8rD,GAAYhwD,SAAS01D,MAIlE,IAAK,MAAOA,EAAMhxD,KAAQ4lB,EAAEgwC,YAAY1sD,UAAW,CACjD,MAAMitD,EAAWP,EAAYtjE,IAAI0+D,GACjC,GAAgB,MAAZmF,EACFP,EAAYpvD,IAAIwqD,EAAMhxD,QAEtB,IACE41D,EAAYpvD,IAAIwqD,EAAMiF,EAAaE,EAAUn2D,IAC7C,MAAOR,GACP,MAAM,IAAIvH,MAAJ,gBACKuH,EADL,2BACyB+rD,GAAYjwD,SAAS01D,OAM5D,OAAOkF,EAsBT,MAAME,GACG/hC,GAAS,CACdshC,YAAathC,GAAOA,EAAUi3B,GAAYvD,QAC1C6N,YAAavhC,GAAOqhC,GAAkBnK,GAAYxD,UAIhDyD,GAAc,CAAC/8C,KAAM,qBAAsB+7B,QAAS,SAE7Cud,GAA6BmD,GAAiBM,GAAY/8C,KAAM,CAC3E,QAAS4lB,EAAO+hC,IAjBlB,SAA2BF,GACzB,MAAO,CACLP,YAAa9L,EAAmBqM,EAAQP,aACxCC,YAAa/L,EAAmBqM,EAAQN,mBAoBrC,SAASv0D,GAAO60D,GACrB,OAAOxL,GAASc,GA/BlB,SAAyB0K,GACvB,MAAO,CACLP,YAAa9L,EAAiBqM,EAAQP,aACtCC,YAAa/L,EAAiBqM,EAAQN,cA4BXS,CAAgBH,IAGxC,SAASI,GAASp0D,GACvB,OAAO6lD,GAAOf,aAAa9kD,GAqBtB,SAASq0D,GACdC,EACAC,GAEA,MAAMC,EAAkB,GAClBC,EAAkB,GAElBC,EAAgB,IAAItuD,IAAI,IACzBkuD,EAAab,YAAYpyD,UACzBkzD,EAAcd,YAAYpyD,SAE/B,IAAK,MAAMma,KAAWk5C,EAAe,CACnC,MAAMj8C,EAAQ67C,EAAab,YAAYrjE,IAAIorB,GACrC+0C,EAASgE,EAAcd,YAAYrjE,IAAIorB,GACxC2vC,IAAU1yC,EAAO83C,IACpBiE,EAAgBngE,KAAK,CACnBmnB,UACA/C,QACA83C,WAIN,MAAMoE,EAAgB,IAAIvuD,IAAI,IACzBkuD,EAAaZ,YAAYryD,UACzBkzD,EAAcb,YAAYryD,SAE/B,IAAK,MAAMma,KAAWm5C,EAAe,CACnC,MAAMl8C,EAAQ67C,EAAaZ,YAAYtjE,IAAIorB,GACrC+0C,EAASgE,EAAcb,YAAYtjE,IAAIorB,GACxC2vC,IAAU1yC,EAAO83C,IACpBkE,EAAgBpgE,KAAK,CACnBmnB,UACA/C,QACA83C,WAON,MAAO,CACLqE,gBAH2B,IAA3BJ,EAAgBlhE,QAA2C,IAA3BmhE,EAAgBnhE,OAIhDkhE,kBACAC,mBC5LG,SAASI,GAAcC,GAC5B,OAAO1L,GAAY3V,OACjBif,GAAe7xC,OACfi0C,EAAOC,KAAKC,IAAM,MAAQ,OAC1BF,EAAOC,KAAKj0C,ICnChB,MAAMm0C,GAAe,kBAUd,SAASC,GAAeplE,GAC7B,IAAKA,EAAKwiB,MAAM2iD,IACd,MAAM,IAAIl/D,MAAJ,wBAA2BjG,IAEnC,GAAIA,EAAKwD,OAXiB,GAYxB,MAAM,IAAIyC,MAAJ,yBAA4BjG,IAEpC,OAAOA,EAGT,MAAMqlE,GAAiB,iBAQhB,SAASC,GAAOtlE,GAErB,OAAOolE,GADSplE,EAAKuV,QAAQ8vD,GAAgB,MAIxC,MAAMtP,GAAyB1zB,EAAOA,EAAU+iC,ICtChD,SAASG,GAAeP,GAC7B,IAAIhlE,EAAOglE,EAAOQ,MAAQR,EAAOC,KAAKzC,SAEtCxiE,EAAOA,EAAK6I,MAAM,EAAG,IACrB,MACM48D,EAAQ,CACZvH,YAFe,kBAAcj/C,kBAAOjf,GAArB,YAA8BglE,EAAOC,KAAKS,eAGzDh6C,QAASq5C,GAAcC,IAEnBvoD,EAAOuoD,EAAOC,KAAKC,IAAM,MAAQ,OACvC,MAAO,CACLS,WAAYP,GAAe,WAC3BplE,KAAMslE,GAAOtlE,GACbyc,OACAgpD,SCnBG,MAAMxkD,GAAW,CACtB2kD,iBDsBK,SACLC,GAEA,OAAOA,EAAKC,UAAU33D,IAAKtO,GAAM0lE,GAAe1lE,KCxBhD0lE,mBCOW/H,GAA2BlE,GAAYnB,UAAU,CAC5D,aACA,gBAEWsF,GAA2BlE,GAAYpB,UAAU,CAC5D,aACA,gBAGW4N,GAA+BtkE,IAAW,CACrDzB,KAAM,aACN6gE,WAAY,cACZ9vC,OAAQuoC,GAAY3V,OAAO6Z,GAAY,cACvCsD,cAAe,EACf5C,YACE,uGAIG,SAAS8H,GAAsBC,GACpC,OAAOA,EAAM,GAAGh8B,cAAgBg8B,EAAMn+B,UAAU,GAAGp6B,cAGrD,SAASw4D,GAAcD,GACrB,MAAME,EAAeH,GAAsBC,GAC3C,OAAOxkE,IAAW,CAChBzB,KAAK,GAAD,OAAKmmE,EAAL,UACJtF,WAAW,GAAD,OAAKsF,EAAL,YACVp1C,OAAQuoC,GAAY3V,OAAO6Z,GAAY3wD,OAAOo5D,IAC9CnF,cAAe,EACf5C,YACE,YAAKiI,EAAaz4D,cAAlB,kGAOC,MAAM04D,GAA+C3kE,IAAW,CACrE4kE,aAAcH,GAAc,gBAC5BI,WAAYJ,GAAc,cAC1BK,UAAWL,GAAc,eAIdM,GAAwBJ,GAAeC,aACvCI,GAAsBL,GAAeE,WACrCI,GAAqBN,GAAeG,UAepCI,GAA8BllE,IAAW,CACpD0/D,YAAa,aACbC,aAAc,sBACdrwC,OAAQwoC,GAAY5V,OAAO8Z,GAAY,aACvCqD,cAAe,CAACO,SAAU,EAAGC,UAAW,EAAI,IAC5CpD,YAAa,iDAWF0I,GAA+BnlE,IAAW,CACrD0/D,YAAa,aACbC,aAAc,oBACdrwC,OAAQwoC,GAAY5V,OAAO8Z,GAAY,cACvCqD,cAAe,CAACO,SAAU,GAAOC,UAAW,EAAI,IAChDpD,YAAa,+CAUF2I,GAAkCplE,IAAW,CACxD0/D,YAAa,iBACbC,aAAc,uBACdrwC,OAAQwoC,GAAY5V,OAAO8Z,GAAY,iBACvCqD,cAAe,CAACO,SAAU,EAAGC,UAAW,GACxCpD,YAAa,kDAUF4I,GAAuCrlE,IAAW,CAC7D0/D,YAAa,uBACbC,aAAc,6BACdrwC,OAAQwoC,GAAY5V,OAAO8Z,GAAY,sBACvCqD,cAAe,CAACO,SAAU,EAAI,GAAIC,UAAW,GAC7CpD,YAAa,6CAcF6I,GAA8BtlE,IAAW,CACpD0/D,YAAa,YACbC,aAAc,mBACdrwC,OAAQwoC,GAAY5V,OAAO8Z,GAAY,aACvCqD,cAAe,CAACO,SAAU,EAAGC,UAAW,GACxCpD,YAAa,qDAGF8D,GAAiCvgE,IAAW,CACvDzB,KAAM,cACNw9D,WAFuD,GAGvDC,WAHuD,GAIvDwE,UAAW,CACT8D,GACAS,GACAC,GACAC,IAEFxE,UAAW,CACTyE,GACAC,GACAC,GACAE,GACAD,IAEF3E,UAAW,KC7Jb,MAAM6E,GAAgB1N,GAAYnB,UAAU,CAAC,aAAc,WACpD,SAAS8O,KAAgD,IAAD,uBAA7Bna,EAA6B,yBAA7BA,EAA6B,gBAC7D,OAAOwM,GAAY3V,OAAOqjB,MAAkBla,GAGvC,MAAMoa,GAAoB,OACpBC,GAAsB,QACtBC,GAAoB,OACpBC,GAAwB,SACxBC,GAA0B,UAC1BC,GAAwB,SACxBC,GAA4B,WAC5BC,GAAuB,OACvBC,GAAqB,MAErBC,GAcRlmE,IAAW,CACd6C,KAAM0iE,GACNnB,KAAMoB,GAAeC,IACrBU,MAAOX,GAAeE,IACtBU,KAAMZ,GAAeG,IACrBU,OAAQb,GAAeI,IACvBU,QAASd,GAAeK,IACxBU,OAAQf,GAAeM,IACvBU,SAAUhB,GAAeO,IACzBvC,KAAMgC,GAAeO,GAAeC,IACpCvC,IAAK+B,GAAeO,GAAeE,IACnCQ,cAAejB,GAAeK,GAAcD,IAC5Cc,aAAclB,GAAeK,GAAcH,IAC3CiB,YAAanB,GAAeK,GAAcF,MAcrC,SAASiB,GAAa7F,GAE3B,OC7DO,IAAIlsD,IAAI,CACb,UACA,aACA,UACA,sBACA,aACA,gBACA,YACA,cACA,oBACA,cACA,oBACA,cACA,sBACA,qBACA,mBACA,iBACA,SACA,oBACA,wBACA,eDyCO1E,IAAI4wD,GACJlJ,GAAY3V,OAAOgkB,GAAOzC,IAAK1C,GAE/BlJ,GAAY3V,OAAOgkB,GAAO1C,KAAMzC,GAuGpC,SAASnK,GAAQ10D,GACtB,SAAS2kE,IACP,OAAO,IAAIriE,MAAJ,uBAA0BqzD,GAAYhwD,SAAS3F,KAExD,IAAK21D,GAAYpqB,UAAUvrC,EAAGqjE,IAC5B,MAAMsB,IAER,MAAOC,EAAYC,EAAYviB,KAASrhC,GAAQ00C,GAAYlB,QAAQz0D,GACpE,OAAQsiD,GACN,KAAKihB,GAAW,CACd,GAAoB,IAAhBtiD,EAAKphB,OACP,MAAM8kE,IAER,MAAOG,EAAOzoE,GAAQ4kB,EACtB,MAAO,CAACnI,KAAMyqD,GAAWuB,QAAOzoE,QAElC,KAAKmnE,GAAY,CACf,GAAoB,IAAhBviD,EAAKphB,OACP,MAAM8kE,IAER,MAAOG,EAAOzoE,EAAMyiB,GAAUmC,EAE9B,MAAO,CAACnI,KAAM0qD,GAAYtB,KADb,CAACppD,KAAMyqD,GAAWuB,QAAOzoE,QACNyiB,UAElC,KAAK2kD,GAAW,CACd,GAAoB,IAAhBxiD,EAAKphB,OACP,MAAM8kE,IAER,MAAOG,EAAOzoE,EAAMyiB,GAAUmC,EAE9B,MAAO,CAACnI,KAAM2qD,GAAWvB,KADZ,CAACppD,KAAMyqD,GAAWuB,QAAOzoE,QACPyiB,UAEjC,KAAK4kD,GAAa,CAChB,GAAoB,IAAhBziD,EAAKphB,OACP,MAAM8kE,IAER,MAAOG,EAAOzoE,EAAM0oE,EAAY13C,GAAMpM,EAGtC,MAAO,CAACnI,KAAM4qD,GAAaQ,KADd,CAACprD,KAAM2qD,GAAWvB,KADlB,CAACppD,KAAMyqD,GAAWuB,QAAOzoE,QACDyiB,OAAQimD,GACZ13C,MAEnC,KAAKs2C,GAAc,CACjB,GAAI1iD,EAAKphB,OAAS,EAChB,MAAM8kE,IAER,MAAOK,KAAYC,GAAWhkD,EAC9B,OAAQ+jD,GACN,KAAKxB,GAAY,CACf,GAAuB,IAAnByB,EAAQplE,OACV,MAAM8kE,IAER,MAAOG,EAAOzoE,EAAM6oE,EAAa73C,GAAM43C,EAGvC,MAAO,CAACnsD,KAAM6qD,GAAcv2D,OADd,CAAC0L,KAAM0qD,GAAYtB,KADpB,CAACppD,KAAMyqD,GAAWuB,QAAOzoE,QACCyiB,OAAQomD,GACJ73C,MAE7C,KAAKo2C,GAAW,CACd,GAAuB,IAAnBwB,EAAQplE,OACV,MAAM8kE,IAER,MAAOG,EAAOzoE,EAAM0oE,EAAY13C,GAAM43C,EAGtC,MAAO,CAACnsD,KAAM6qD,GAAcv2D,OADf,CAAC0L,KAAM2qD,GAAWvB,KADlB,CAACppD,KAAMyqD,GAAWuB,QAAOzoE,QACDyiB,OAAQimD,GACH13C,MAE5C,KAAKq2C,GAAa,CAChB,GAAuB,IAAnBuB,EAAQplE,OACV,MAAM8kE,IAER,MAAOG,EAAOzoE,EAAM0oE,EAAYI,EAAgB93C,GAAM43C,EAItD,MAAO,CAACnsD,KAAM6qD,GAAcv2D,OADb,CAAC0L,KAAM4qD,GAAaQ,KADtB,CAACprD,KAAM2qD,GAAWvB,KADlB,CAACppD,KAAMyqD,GAAWuB,QAAOzoE,QACDyiB,OAAQimD,GACJ13C,GAAI83C,GACD93C,MAE9C,QACE,MAAMs3C,KAGZ,KAAKf,GAAa,CAChB,GAAoB,IAAhB3iD,EAAKphB,OACP,MAAM8kE,IAER,MAAOt3C,GAAMpM,EACb,MAAO,CAACnI,KAAM8qD,GAAav2C,MAE7B,KAAKw2C,GAAe,CAClB,GAAoB,IAAhB5iD,EAAKphB,OACP,MAAM8kE,IAER,MAAOS,EAASC,GAASpkD,EACzB,GAAgB,SAAZmkD,GAAkC,QAAZA,EACxB,MAAMT,IAER,MAAO,CAAC7rD,KAAM+qD,GAAeuB,UAASC,SAExC,QACE,MAAMV,KAIL,SAASW,GAAMtlE,GACpB,OAAQA,EAAE8Y,MACR,KAAKyqD,GACH,OAAO5N,GAAY3V,OAAOgkB,GAAO9B,KAAMliE,EAAE8kE,MAAO9kE,EAAE3D,MACpD,KAAKmnE,GACH,OAAO7N,GAAY3V,OACjBgkB,GAAOC,MACPjkE,EAAEkiE,KAAK4C,MACP9kE,EAAEkiE,KAAK7lE,KACP2D,EAAE8e,QAEN,KAAK2kD,GACH,OAAO9N,GAAY3V,OACjBgkB,GAAOE,KACPlkE,EAAEkiE,KAAK4C,MACP9kE,EAAEkiE,KAAK7lE,KACP2D,EAAE8e,QAEN,KAAK4kD,GACH,OAAO/N,GAAY3V,OACjBgkB,GAAOG,OACPnkE,EAAEkkE,KAAKhC,KAAK4C,MACZ9kE,EAAEkkE,KAAKhC,KAAK7lE,KACZ2D,EAAEkkE,KAAKplD,OACP9e,EAAEqtB,IAEN,KAAKs2C,GACH,OAAQ3jE,EAAEoN,OAAO0L,MACf,KAAK0qD,GACH,OAAO7N,GAAY3V,OACjBgkB,GAAOQ,aACPxkE,EAAEoN,OAAO80D,KAAK4C,MACd9kE,EAAEoN,OAAO80D,KAAK7lE,KACd2D,EAAEoN,OAAO0R,OACT9e,EAAEqtB,IAEN,KAAKo2C,GACH,OAAO9N,GAAY3V,OACjBgkB,GAAOS,YACPzkE,EAAEoN,OAAO80D,KAAK4C,MACd9kE,EAAEoN,OAAO80D,KAAK7lE,KACd2D,EAAEoN,OAAO0R,OACT9e,EAAEqtB,IAEN,KAAKq2C,GACH,OAAO/N,GAAY3V,OACjBgkB,GAAOO,cACPvkE,EAAEoN,OAAO82D,KAAKhC,KAAK4C,MACnB9kE,EAAEoN,OAAO82D,KAAKhC,KAAK7lE,KACnB2D,EAAEoN,OAAO82D,KAAKplD,OACd9e,EAAEoN,OAAOigB,GACTrtB,EAAEqtB,IAEN,QACE,MAAM,IAAI/qB,MAAJ,mCAAuCtC,EAAEoN,OAAO0L,OAE5D,KAAK+qD,GACH,OAAQ7jE,EAAEolE,SACR,IAAK,MACH,OAAOzP,GAAY3V,OAAOgkB,GAAOzC,IAAKvhE,EAAEqlE,OAC1C,IAAK,OACH,OAAO1P,GAAY3V,OAAOgkB,GAAO1C,KAAMthE,EAAEqlE,OAC3C,QACE,MAAM,IAAI/iE,MAAOtC,EAAEolE,SAEzB,KAAKxB,GACH,OAAOjO,GAAY3V,OAAOgkB,GAAOK,OAAQrkE,EAAEqtB,IAC7C,QACE,MAAM,IAAI/qB,MAAJ,0BAA8BtC,EAAE8Y,QE7U5C,MAAMysD,GAAa5P,GAAYnB,UAAU,CAAC,aAAc,QAKjD,MAEMwP,GAAqDlmE,IAAW,CAC3E6C,KAAM4kE,GACNlB,OARK,WAAsD,IAAD,uBAA7Blb,EAA6B,yBAA7BA,EAA6B,gBAC1D,OAAOwM,GAAY3V,OAAOulB,MAAepc,GAOjCqc,CAJ2B,YAoC9B,SAASF,GAAMtlE,GACpB,OAAQA,EAAE8Y,MACR,IAtCiC,SAuC/B,OAAO68C,GAAY3V,OAAOgkB,GAAOK,OAAQrkE,EAAEq5C,MAC7C,QACE,MAAM,IAAI/2C,MAAJ,0BAA8BtC,EAAE8Y,QCyEvChb,IAAW,CACd,SAAY,WACZ,kBAAqB,oBACrB,UAAa,YACb,UAAa,YACb,QAAW,YAXN,MAgCM2nE,GASR3nE,IAAW,CACd,SAAY,WACZ,KAAQ,OACR,MAAS,QACT,OAAU,SACV,MAAS,QACT,OAAU,SACV,YAAe,cACf,UAAa,cCvJF4nE,GAAe,UACfC,GAAiB,YACjBC,GAAkB,aAClBC,GAAkB,aAClBC,GAAc,SAKdC,GAA6B,6BAEpC1C,GAAgBzN,GAAYpB,UAAU,CAAC,aAAc,WAC3D,SAASwR,KAAmD,IAAD,uBAA7B7c,EAA6B,yBAA7BA,EAA6B,gBACzD,OAAOyM,GAAY5V,OAAOqjB,MAAkBla,GAGvC,MAAM6a,GAYRlmE,IAAW,CACd6C,KAAM0iE,GACN4C,QAASD,GAAkBN,IAC3BQ,SAAUF,GAAkBL,IAC5BQ,WAAYH,GAAkBH,IAC9BO,UAAWJ,GAAkBJ,IAC7BS,OAAQL,GAAkBF,IAC1BQ,eAAgBN,GAAkBF,GAAaS,GAAUC,WACzDC,YAAaT,GAAkBF,GAAaS,GAAUG,OACtDC,aAAcX,GAAkBF,GAAaS,GAAUK,QACvDC,aAAcb,GAAkBF,GAAaS,GAAUO,QACvDC,oBAAqBf,GAAkBD,MAwC5BiB,GAgCRlpE,IAAW,CACdmoE,QAAS,CACPgB,EACAv1B,EACA+mB,KAHO,CAKP1wC,QAASu9C,GAAM,CAACxsD,KAAM4sD,GAAcuB,SAAQv1B,YAC5C4mB,IAAK4O,GAAiBD,GACtB1O,IAAK2O,GAAiBx1B,GACtB+mB,gBAEFyN,SAAU,CACRhC,EACAG,EACA5L,KAHQ,CAKR1wC,QAASu9C,GAAM,CAACxsD,KAAM6sD,GAAgBzB,SACtC5L,IAAK4O,GAAiBhD,GACtB3L,IAAK2O,GAAiB7C,GACtB5L,gBAEFsO,oBAAqB,CACnBI,EACAC,EACA3O,KAHmB,CAKnB1wC,QAASu9C,GAAM,CAACxsD,KAAMitD,GAA4BoB,iBAClD7O,IAAK4O,GAAiBC,GACtB5O,IAAK8O,GAAcD,GACnB3O,gBAEF2N,UAAW,CACTkB,EACAl6D,EACAqrD,KAHS,CAKT1wC,QAASu9C,GAAM,CAACxsD,KAAM8sD,GAAiB0B,UACvChP,IAAK4O,GAAiBI,GACtB/O,IAAK2O,GAAiB95D,GACtBqrD,gBAEF0N,WAAY,CACVoB,EACAC,EACA/O,KAHU,CAKV1wC,QAASu9C,GAAM,CAACxsD,KAAM+sD,GAAiB0B,WAAUC,aACjDlP,IAAK4O,GAAiBK,GACtBhP,IAAK2O,GAAiBM,GACtB/O,gBAEF4N,OAAQ,CACNoB,EACAnG,EACAoG,EACAjP,KAJM,CAMN1wC,QAASu9C,GAAM,CACbxsD,KAAMgtD,GACNxE,OACAmG,eACAC,cAEFpP,IAAK4O,GAAiB5F,GACtB/I,IAAK2O,GAAiBQ,GACtBjP,kBAIJ,SAASkP,GAAa3nE,GACpB,MAAMmpD,EAAQwM,GAAYlB,QAAQz0D,GAClC,MAAO,CAACkJ,OAAOigD,EAAMtpD,WAAYspD,GAEnC,SAASye,GACP5nE,EACA2kE,GAEA,GAAiB,IAAb3kE,EAAEH,OAEJ,MAAM8kE,IAER,MAAOkD,KAAiBC,GAAY9nE,EAC9BH,EAAS8L,SAASk8D,EAAc,IACtC,GAAI/gD,MAAMjnB,GACR,MAAM8kE,IAER,GAAI9kE,EAASioE,EAASjoE,OAEpB,MAAM8kE,IAER,MAAO,CAACxb,MAAO2e,EAAS5iE,MAAM,EAAGrF,GAASohB,KAAM6mD,EAAS5iE,MAAMrF,IAEjE,SAASkoE,GAAkB/nE,EAA2B2kE,GACpD,IAAIh8C,EAAY3oB,EAChB,MAAMgoE,EAAU,GAChB,KAAOr/C,EAAU9oB,OAAS,GAAG,CAC3B,MAAM,MAACspD,EAAD,KAAQloC,GAAQ2mD,GAAaj/C,EAAWg8C,GAC9CqD,EAAQpnE,KAAKuoD,GACbxgC,EAAY1H,EAEd,OAAO+mD,EAGF,SAAStT,GAAQ10D,GACtB,SAAS2kE,IACP,OAAO,IAAIriE,MAAJ,uBAA0BszD,GAAYjwD,SAAS3F,KAExD,IAAK41D,GAAYrqB,UAAUvrC,EAAGqjE,IAC5B,MAAMsB,IAER,MAAOC,EAAYC,EAAYviB,KAASrhC,GAAQ20C,GAAYnB,QAAQz0D,GACpE,OAAQsiD,GACN,KAAKojB,GAAc,CACjB,MAAMvc,EAAQ4e,GAAkB9mD,EAAM0jD,GACtC,GAAqB,IAAjBxb,EAAMtpD,OACR,MAAM8kE,IAER,MAAOsD,EAAaC,GAAgB/e,EAC9B8d,EAAsCC,GACzCvR,GAAYnB,UAAUyT,IAEnBv2B,EAAyCw1B,GAC5CvR,GAAYnB,UAAU0T,IAEzB,MAAQ,CAACpvD,KAAM4sD,GAAcuB,SAAQv1B,WAEvC,KAAKi0B,GAAgB,CACnB,MAAMxc,EAAQ4e,GAAkB9mD,EAAM0jD,GACtC,GAAqB,IAAjBxb,EAAMtpD,OACR,MAAM8kE,IAER,MAAOwD,GAAahf,EACd+a,EAAgCgD,GACnCvR,GAAYnB,UAAU2T,IAEzB,MAAQ,CAACrvD,KAAM6sD,GAAgBzB,QAEjC,KAAK0B,GAAiB,CACpB,MAAMzc,EAAQ4e,GAAkB9mD,EAAM0jD,GACtC,GAAqB,IAAjBxb,EAAMtpD,OACR,MAAM8kE,IAER,MAAOyD,GAAcjf,EACfme,EAAkCJ,GACrCvR,GAAYnB,UAAU4T,IAEzB,MAAQ,CAACtvD,KAAM8sD,GAAiB0B,SAElC,KAAKzB,GAAiB,CACpB,MAAM1c,EAAQ4e,GAAkB9mD,EAAM0jD,GACtC,GAAqB,IAAjBxb,EAAMtpD,OACR,MAAM8kE,IAER,MAAO0D,EAAeC,GAAiBnf,EACjCoe,EAA2CL,GAC9CvR,GAAYnB,UAAU6T,IAEnBb,EAAwCN,GAC3CvR,GAAYnB,UAAU8T,IAEzB,MAAQ,CAACxvD,KAAM+sD,GAAiB0B,WAAUC,YAE5C,KAAK1B,GAAa,CAChB,MAAOyC,KAAoBC,GAASvnD,EAC9BwmD,EAAelB,GAAUgC,GAC/B,GAAoB,MAAhBd,EACF,MAAM9C,IAER,MAAMxb,EAAQ4e,GAAkBS,EAAO7D,GACvC,GAAqB,IAAjBxb,EAAMtpD,OACR,MAAM8kE,IAER,MAAO8D,EAAWC,GAAkBvf,EAC9BmY,EAAoC4F,GACvCvR,GAAYnB,UAAUiU,IAEnBf,EAA0CR,GAC7CvR,GAAYnB,UAAUkU,IAEzB,MAAO,CAAC5vD,KAAMgtD,GAAa2B,eAAcnG,OAAMoG,aAEjD,QACE,MAAM/C,KAIL,SAASW,GAAMtlE,GACpB,OAAQA,EAAE8Y,MACR,KAAK4sD,GACH,OAAO9P,GAAY5V,OACjBgkB,GAAOiC,WACJ0B,GAAaT,GAAiBlnE,EAAEinE,YAChCU,GAAaT,GAAiBlnE,EAAE0xC,WAEvC,KAAKi0B,GACH,OAAO/P,GAAY5V,OACjBgkB,GAAOkC,YACJyB,GAAaT,GAAiBlnE,EAAEkkE,QAEvC,KAAK0B,GACH,OAAOhQ,GAAY5V,OACjBgkB,GAAOoC,aACJuB,GAAaT,GAAiBlnE,EAAEsnE,SAEvC,KAAKzB,GACH,OAAOjQ,GAAY5V,OACjBgkB,GAAOmC,cACJwB,GAAaT,GAAiBlnE,EAAEunE,cAChCI,GAAaT,GAAiBlnE,EAAEwnE,YAEvC,KAAK1B,GACH,OAAOlQ,GAAY5V,OACjBgkB,GAAOqC,OACPrmE,EAAEynE,gBACCE,GAAaT,GAAiBlnE,EAAEshE,UAChCqG,GAAaT,GAAiBlnE,EAAE0nE,aAEvC,KAAK3B,GACH,OAAOnQ,GAAY5V,OACjBgkB,GAAO+C,uBACJY,GAAaT,GAAiBlnE,EAAEmnE,gBAEvC,QACE,MAAM,IAAI7kE,MAAOtC,EAAE8Y,O,kJCxVlB,MAAM6vD,GAMR7qE,IAAW,CACdzB,KAAM,aACN6gE,WAAY,eACZ9vC,OAAQwM,GAASsoC,KACjB/E,cAAe,EACf5C,YAAa,qCAGTqO,GAAgB9qE,IAAW,CAC/BzB,KAAM,QACN6gE,WAAY,SACZ9vC,OAAQwM,GAASqqC,MACjB9G,cAAe,EACf5C,YAAa,gCAGTsO,GAAe/qE,IAAW,CAC9BzB,KAAM,eACN6gE,WAAY,gBACZ9vC,OAAQwM,GAASsqC,KACjB/G,cAAe,EACf5C,YAAa,uCAGTuO,GAAiBhrE,IAAW,CAChCzB,KAAM,sBACN6gE,WAAY,uBACZ9vC,OAAQwM,GAASuqC,OACjBhH,cAAe,EACf5C,YAAa,sCAGTwO,GAAkBjrE,IAAW,CACjCzB,KAAM,UACN6gE,WAAY,WACZ9vC,OAAQwM,GAASwqC,QACjBjH,cAAe,EACf5C,YAAa,kCAGTyO,GAAiBlrE,IAAW,CAChCzB,KAAM,SACN6gE,WAAY,UACZ9vC,OAAQwM,GAASyqC,OACjBlH,cAAe,EACf5C,YACE,yFAGS8C,GAMRv/D,IAAW,CACdzB,KAAM,OACN6gE,WAAY,QACZ9vC,OAAQwM,GAAS0nC,KACjBnE,cAAe,EACf5C,YAAa,+BAGT0O,GAAcnrE,IAAW,CAC7BzB,KAAM,MACN6gE,WAAY,OACZ9vC,OAAQwM,GAAS2nC,IACjBpE,cAAe,EACf5C,YAAa,sCAGT+D,GAAYxgE,IAAW,CAC3B6qE,GACAC,GACAC,GACAC,GACAC,GACAC,GACA3L,GACA4L,KAGIC,GAAkBprE,IAAW,CACjC0/D,YAAa,UACbC,aAAc,iBACdN,cAAe,CAACO,SAAU,GAAOC,UAAW,GAC5CvwC,OAAQ+7C,GAASlD,QACjB1L,YAAakF,GAAF,wSAOP2J,GAAoBtrE,IAAW,CACnC0/D,YAAa,aACbC,aAAc,YACdN,cAAe,CAACO,SAAU,EAAGC,UAAW,EAAI,GAC5CvwC,OAAQ+7C,GAAS/C,UACjB7L,YAAakF,GAAF,8ZAQP4J,GAAmBvrE,IAAW,CAClC0/D,YAAa,SACbC,aAAc,eACdN,cAAe,CAACO,SAAU,GAAOC,UAAW,GAC5CvwC,OAAQ+7C,GAASjD,SACjB3L,YAAakF,GAAF,8KAKPwD,GAAqBnlE,IAAW,CACpC0/D,YAAa,aACbC,aAAc,mBACdN,cAAe,CAACO,SAAU,EAAGC,UAAW,GACxCvwC,OAAQ+7C,GAAShD,WACjB5L,YAAakF,GAAF,skBASP6J,GAAsBxrE,IAAW,CACrC0/D,YAAa,gBACbC,aAAc,cACdN,cAAe,CAACO,SAAU,EAAGC,UAAW,GACxCvwC,OAAQ+7C,GAAS1C,YACjBlM,YAAakF,GAAF,gKAKP8J,GAAyBzrE,IAAW,CACxC0/D,YAAa,gBACbC,aAAc,cACdN,cAAe,CAACO,SAAU,EAAGC,UAAW,GACxCvwC,OAAQ+7C,GAAS7C,eACjB/L,YAAakF,GAAF,gKAKP+J,GAAuB1rE,IAAW,CACtC0/D,YAAa,gBACbC,aAAc,cACdN,cAAe,CAACO,SAAU,EAAGC,UAAW,GACxCvwC,OAAQ+7C,GAASxC,aACjBpM,YAAakF,GAAF,gKAKPgK,GAAuB3rE,IAAW,CACtC0/D,YAAa,gBACbC,aAAc,cACdN,cAAe,CAACO,SAAU,EAAGC,UAAW,GACxCvwC,OAAQ+7C,GAAStC,aACjBtM,YAAakF,GAAF,gKAKPiK,GAA8B5rE,IAAW,CAC7C0/D,YAAa,4BACbC,aAAc,sBACdN,cAAe,CAACO,SAAU,EAAGC,UAAW,GACxCvwC,OAAQ+7C,GAASpC,oBACjBxM,YAAakF,GAAF,8KAKPlB,GAAYzgE,IAAW,CAC3BorE,GACAE,GACAC,GACApG,GACAsG,GACAD,GACAE,GACAC,GACAC,KAGWrL,GAAiCvgE,IAAW,CACvDzB,KAAM,SACNw9D,WAAYjgC,GAASj5B,KACrBm5D,WAAYqP,GAASxoE,KACrB29D,UAAWA,GACXC,UAAWA,GACXC,UAAW,CAACnB,MC1MDxD,GAA2BlE,GAAYnB,UAAU,CAC5D,aACA,aAGWsF,GAA2BlE,GAAYpB,UAAU,CAC5D,aACA,aAGWmV,GAAgC7rE,IAAW,CACtDzB,KAAK,yBACL6gE,WAAW,2BACX9vC,OAAQysC,GACRsD,cAAe,EACf5C,YACE,qHAIS8D,GAAiCvgE,IAAW,CACvDzB,KAAM,WACNw9D,WAFuD,GAGvDC,WAHuD,GAIvDwE,UAAW,CAACqL,IACZpL,UAAW,GACXC,UAAW,CAACmL,MCfP,MAAMC,GAGXnyD,c,iBAAe,G,EAAA,Y,EAAA,M,sFACbtY,KAAK0qE,OAAS,GAGhB7pB,OAAOtyC,GAEL,OADAvO,KAAK0qE,OAAOjpE,KAAK8M,GACVvO,KAGTkrB,OAAOy/C,GACL,IAAK,MAAMp8D,KAAQo8D,EACjB3qE,KAAK0qE,OAAOjpE,KAAK8M,GAEnB,OAAOvO,KAGT0U,SACE,OAAO1U,KAAK0qE,OAAOh2D,SAGrBlO,WAEE,OADcxG,KAAK0qE,OAAOr/D,IAAKxK,GAAMgL,IAAUhL,GAAK,MACvCiL,KAAK,IAGH,kBAAC1D,EAAa6qD,GAC7B,MAAMxvD,EAAS,IAAIgnE,GAcnB,OAIJ,SAA0BriE,GAOxB,GAAmB,KAFnBA,EAAMA,EAAIwiE,aAEFlqE,OACN,MAAO,GAET,GAAI0H,EAAIo1C,WAAW,KAAM,CAGvB,GAAY,OAARp1C,EACF,MAAO,GAGT,OADkBA,EAAI4D,MAAM,MAAMjG,MAAM,GAAI,GAC3BsF,IAAKm1D,GACpBA,EAAKhL,SAAS,KAAOgL,EAAKz6D,MAAM,GAAI,GAAKy6D,GAG7C,OAAOp4D,EAAI4D,MAAM,MAtCf6+D,CAAiBziE,GAAKtJ,QAAQ,CAAC0hE,EAAM7jE,KACnC,IAAIu2D,EACJ,IACEA,EAASD,EAAOzgB,MAAMnlC,KAAKmlC,MAAMguB,IACjC,MAAO91D,GACP,MAAM,IAAIvH,MAAJ,eAAkBxG,EAAI,EAAtB,+BAA8C+N,IAEtD,IAAIwoD,EAAO/O,GAGT,MAAM,IAAIhhD,MAAJ,eAAkBxG,EAAI,EAAtB,aAA4Bu2D,EAAO7S,MAFzC58C,EAAOo9C,OAAOqS,EAAOt1D,SAKlB6F,GC5DJ,SAASqnE,GAAyBliD,GACvC,OAAO4tC,GAAY3V,OAAO6Z,GAAY9xC,GCCjC,SAAS65C,GAAe75C,GAC7B,MAAM+5C,EAAQ,CACZvH,YAAaxyC,EACbA,QAASkiD,GAAyBliD,IAGpC,MAAO,CACLi6C,WAAYP,GAAe,YAC3BplE,KAAMslE,GAAO55C,GACbjP,KAAM,OACNgpD,S,aCeG,SAASoI,GAAarsE,GAC3B,IAAKooC,qBAAUpoC,GACb,MAAM,IAAIyE,MAAJ,wCAA2CzE,IAEnD,OAAOsoC,6BAAkBtoC,GAWpB,MAAMssE,GAAyCzrC,EACpDA,EACAwrC,IC5CWniD,IDwDTwtC,GARI,wBAQ+B,CAAC,QAJX72B,EAAQyrC,MCpDd,CACrBD,gBACAE,mBDkCK,SAA4BriD,GACjC,MAAMqF,EAASrF,EAAQ7iB,MAAM,EAAG,GAC1Bk/B,EAASrc,EAAQ7iB,OAAO,GAC9B,MAAM,GAAN,OAAUkoB,EAAV,cAAsBgX,ICpCtB6lC,8BAGW3sD,GAAW,CACtB2kD,iBFSK,SACLoI,GAEA,OAAOpqE,MAAM09C,KAAK0sB,EAAax2D,UAAUrJ,IAAIo3D,KEX7CA,mBCkEW0I,GAAqCC,GAAS,CACzDluE,KAAMkuE,EACNrN,WAAYqN,EACZn9C,OAAQuoC,GAAYvD,OACpB+K,cAAeoN,EACfhQ,YAAagQ,IAkDFC,GAAqCD,GAAS,CACzD/M,YAAa+M,EACb9M,aAAc8M,EACdpN,cAAe4C,GACf3yC,OAAQwoC,GAAYxD,OACpBmI,YAAagQ,ICjHFE,GAAiD/rC,GAAS,CACrEriC,KAAMqiC,EACNm7B,WAAYlE,GAAYvD,OACxB0H,WAAYlE,GAAYxD,OACxBkM,UAAW5/B,EAAQ4rC,IACnB/L,UAAW7/B,EAAQ8rC,IACnBhM,UAAW9/B,EAAQ4rC,M,aCVrB,MAAMI,GAAc,wBAEpB,SAASC,GAAQ9sE,GACf,OAAQA,EAAEghB,MAAM6rD,IAKlB,SAASE,KACP,MACMxsB,EAAO,ICnBA,SAAyBR,GACtC,GAAsB,oBAAXhkC,OAAwB,CACjC,GAAIA,OAAOixD,QAAUjxD,OAAOixD,OAAOC,gBACjC,OAAOlxD,OAAOixD,OAAOC,gBAAgBltB,GAEvC,GAC6B,iBAApBhkC,OAAOmxD,UAC6B,mBAApCnxD,OAAOmxD,SAASD,gBAEvB,OAAOlxD,OAAOmxD,SAASD,gBAAgBltB,GAIP,CAQlC,MAKMotB,GAH+B,oBAA5BC,QACHA,QACA3+D,OACyB,UAC/B,GAAIsxC,EAAI/9C,OAAS,MAAO,CACtB,MAAMgK,EAAI,IAAIvH,MAId,MAHCuH,EAAQ46B,KAAO,GAChB56B,EAAE0M,QAAF,oCAAyCqnC,EAAI/9C,OAA7C,kBACAgK,EAAExN,KAAO,qBACHwN,EAER,MAAMghC,EAAQmgC,EAAW/tB,YAAYW,EAAI/9C,QAEzC,OADA+9C,EAAI/sC,IAAIg6B,GACD+S,GDlBKktB,CAAgB,IAAIh5D,WAAW,MACrBtH,IAAKjN,GAAM2L,OAAOwR,aAAand,IAAI0N,KAAK,IAChE,OAAOigE,kBAAa9sB,GAAMl5C,MAAM,GAAI,GA0C/B,SAAS8G,KACd,IAAK,IAAIlQ,EAAI,EAAGA,EANI,KAMeA,IAAK,CACtC,MAAM8G,EAAiBgoE,KACvB,GAAID,GAAQ/nE,GAGV,OAAQA,EAKZ,MAAM,IAAIN,MAAJ,8CAhBc,KAgBd,cASD,SAAS6oE,GAAWttE,GACzB,GAAIA,EAAE82D,SAAS,KACb,MAAM,IAAIryD,MAAM,6BAA+BkK,KAAKxB,UAAUnN,IAEhE,GAAiB,KAAbA,EAAEgC,OACJ,MAAM,IAAIyC,MAAM,8BAAgCkK,KAAKxB,UAAUnN,IAEjE,IAAK8sE,GAAQ9sE,GACX,MAAM,IAAIyE,MACR,iBAAmBkK,KAAKxB,UAAUnN,GAAK2O,KAAKxB,UAAU0/D,GAAYn5D,KAAK1T,KAG3E,IAAIgtC,EACJ,IACEA,EAAQugC,kBAAavtE,GACrB,MAAOgM,GACP,MAAM,IAAIvH,MAAM,0BAA4BkK,KAAKxB,UAAUnN,IAE7D,GAAIqtE,kBAAargC,KAAWhtC,EAAI,KAE9B,MAAM,IAAIyE,MAAM,gCAAkCkK,KAAKxB,UAAUnN,IAEnE,OAAOA,EAOF,MAAMu0D,GAAyB1zB,EAAOA,EAAUysC,IExH1CE,GAAmBjZ,GCWnBA,GAA0B1zB,GAAS,CAC9C3W,QAAS4tC,GAAYvD,OACrBmI,YAAa77B,ICLF4sC,GAA2CxtE,IAR7B,CACzBytE,KAAM,OACNC,QAAS,UACTC,aAAc,eACdC,IAAK,QAQMtZ,GAAiC1zB,EAC5CliC,OAAOoR,KAAK09D,KCqBDK,GAAgChW,GAAYnB,UAAU,CACjE,aACA,OACA,aAGK,SAASoX,GAAYxG,EAAuB/oE,GACjD,MAAMgxB,EAAKw+C,KACX,IACEC,GAAmBza,aAAa+T,GAChC,MAAOv7D,GACP,MAAM,IAAIvH,MAAJ,oCAAuC8iE,IAE/C,MAAO,CACL/3C,KACA+3C,UACAr9C,QAAS4tC,GAAY3V,OAAO2rB,GAAiBt+C,GAC7ChxB,KAAMolE,GAAeplE,GACrB0vE,QAAS,IAIN,SAASC,GAAT,GAA0D,IAAvC,KAAC3vE,EAAD,QAAO0rB,GAA+B,EAC9D,MAAO,CACLA,UACAwyC,YAAal+D,EACbo8D,YAAa,MAIV,SAASsC,GACdkR,GAEA,OAAOA,EAAWzhE,IAAK1O,IAAD,CACpBs/D,YAAa4Q,GAAUlwE,GACvBq/D,IAAKr/D,EAAEiwE,QAAQvhE,IAAKnK,GAAMA,EAAE0nB,YAIzB,MAAMqqC,GAA6B1zB,GAAS,CACjDrR,GAAI6+C,GACJ9G,QAAS0G,GACTzvE,KAAM8vE,GACNpkD,QAAS4tC,GAAYvD,OACrB2Z,QAASrtC,EAAQ0tC,MCrCZ,MAAMC,GAAiD3tC,EAAU,CACtE,MACA,QAeW4tC,GAAuC5tC,EAClDA,GA9CK,SAAyBrR,GAC9B,MAAMzqB,EAAS+I,SAAS0hB,EAAI,IAAI1nB,WAChC,GAAIgF,OAAOmc,MAAMlkB,IAAWA,IAAWyqB,EACrC,MAAM,IAAI/qB,MAAJ,qCAAwC+qB,IAEhD,OAAOA,KA6CIk/C,GAA2B7tC,GAAS,CAC/C5lB,KAAM4lB,EAAU,CAAC,QACjB8tC,QAASF,GACTG,aAActC,KAGHuC,GAAqChuC,GAAS,CACzD5lB,KAAM4lB,EAAU,CAAC,aACjB8tC,QAASH,KAIEM,GAAqCjuC,EAAS,CACzD6tC,GACAG,KAGK,SAASE,GACdJ,EACAC,GAEA,OAAOA,EACHF,GAAUlb,aAAa,CACrBv4C,KAAM,MACN0zD,UACAC,iBAEFC,GAAerb,aAAa,CAC1Bv4C,KAAM,WACN0zD,Y,uBC5CD,SAASK,KACd,MAAO,CACLxwE,KA3BwB,QA4BxB+nC,OA3B0B,IA4B1B0oC,SA3B4B,GA+BzB,MAAM1a,GAAoC1zB,EAC/CA,GACE,GACA,CACEquC,aAAcruC,EACdsuC,eAAgBtuC,EAChBuuC,kBAAmBvuC,EACnBwuC,oBAAqBC,MA9B3B,SAAiBhxE,GACf,GACiC,iBAAxBA,EAAE8wE,oBACR9wE,EAAE8wE,kBAAoB,IAAM9wE,EAAE8wE,kBAAoB,GAEnD,MAAM,IAAI3qE,MAAM,0DAElB,MAAO,CACLjG,KAAM87D,GAAgBh8D,EAAE4wE,aAlBA,SAmBxB3oC,OAAQ+zB,GAAgBh8D,EAAE6wE,eAlBA,KAmB1BF,SAAU3U,GAAgBh8D,EAAE8wE,kBAlBA,GAmB5BC,oBAAqB/wE,EAAE+wE,wBCNdE,GAAc,IAGdC,GAAoB,GAGpBC,GAAahpE,KAAO,IAAIoB,IAAI2nE,IAAmB1nE,WAErD,SAASvF,GAAIC,EAAUC,GAC5B,OAAOgE,KAAOjE,GAAGmE,KAAKF,KAAOhE,IAAIqF,WAE5B,SAASwuB,GAAI9zB,EAAUC,GAC5B,OAAOgE,KAAOjE,GAAGU,SAASuD,KAAOhE,IAAIqF,WAEhC,SAASgqB,GAAItvB,EAAUC,GAC5B,OAAOgE,KAAOjE,GAAGiF,MAAMhB,KAAOhE,IAAIqF,WAE7B,SAASm4B,GAAIz9B,EAAUC,GAC5B,OAAOgE,KAAOjE,GAAG+D,OAAOE,KAAOhE,IAAIqF,WAE9B,SAASkB,GAAGxG,EAAUC,GAC3B,OAAOgE,KAAOjE,GAAGwG,GAAGvC,KAAOhE,IAEtB,SAASsG,GAAGvG,EAAUC,GAC3B,OAAOgE,KAAOjE,GAAGuG,GAAGtC,KAAOhE,IAEtB,SAASw/B,GAAIz/B,EAAUC,GAC5B,OAAOgE,KAAOjE,GAAG4G,IAAI3C,KAAOhE,IAEvB,SAASq/B,GAAIt/B,EAAUC,GAC5B,OAAOgE,KAAOjE,GAAG0G,IAAIzC,KAAOhE,IAEvB,SAASkG,GAAGnG,EAAUC,GAC3B,OAAOgE,KAAOjE,GAAGmG,GAAGlC,KAAOhE,IAGtB,SAAS6qE,GAAWttE,GACzB,OAAOyG,KAAOzG,GAAG8H,WAsBZ,SAASg+C,GACd4pB,GAGS,IAFTT,EAEQ,uDAFW,EACnB1oC,EACQ,uDD7EoB,IC8E5B,IACGz5B,OAAO68C,UAAUslB,IAClBA,EAAW,GACXA,EAAWO,GAEX,MAAM,IAAI/qE,MAAJ,gDACqC+qE,GADrC,MAIR,MAAMtnE,EAA0B,MAAbwnE,EAAM,GACzB,IAAIrjE,EAAS,IAAIqjE,GACbxnE,IAEFmE,EAASA,EAAOhF,MAAM,EAAGgF,EAAOrK,SAI9BqK,EAAOrK,OAASwtE,GAAoB,IACtCnjE,EAAS,IACJ,IAAIjK,MAAMotE,GAAoB,EAAInjE,EAAOrK,QAAQ2tE,KAAK,QACtDtjE,IAKP,MAAMujE,EAAgBvjE,EAAOrK,OAASwtE,GAChCK,EAAoBluE,KAAKC,OAAOguE,EAAgB,GAAK,GAC3D,IAAK,IAAI3xE,EAAI,EAAGA,EAAI4xE,EAAmB5xE,IAKrCoO,EAAO8D,OAAOy/D,EAAoB,EAAJ3xE,EAAQ,EAAG,EAAG,KAY9C,OAVIgxE,EAAW,GAEb5iE,EAAO8D,OAAO9D,EAAOrK,OAASwtE,GAAmB,EAAG,KAGtDnjE,EAASA,EAAOhF,MAAM,EAAGgF,EAAOrK,OAASwtE,GAAoBP,GACzD/mE,GAEFmE,EAAO8D,OAAO,EAAG,EAAG,KAEf9D,EAAOe,KAAK,IAAMm5B,EAmBpB,SAASupC,GACdJ,GAES,IADTnpC,EACQ,uDDhJoB,ICiJ5B,OAAOuf,GAAO4pB,EAAOF,GAAmB,IAAIz7D,QAAQ,SAAU,IAAMwyB,EAiB/D,SAASwpC,GAAcL,EAAc39C,GAC1C,IAAK/D,SAAS+D,GACZ,MAAM,IAAIttB,MAAJ,gCAAmCstB,IAE3C,GAAY,IAARA,EAEF,OAAO29C,EAGT,MAAMM,EAAeljE,OAAO4iE,GAAS39C,EACrC,OAAOtrB,KAAO9E,KAAKC,MAAMouE,IAAeloE,WAGnC,SAASmoE,GAAYC,EAAiB7rE,GAC3C,OAAO0rE,GAAcG,EAAU,EAAI7rE,GAO9B,SAAS8rE,GAAYhuE,GAC1B,IAAK6rB,SAAS7rB,IAAMR,KAAKC,MAAMO,KAAOA,EACpC,MAAM,IAAIsC,MAAJ,0BAA6BtC,IAErC,OAAOsE,KAAOgpE,IAAKhoE,MAAMhB,KAAOtE,IAAI2F,WAoB/B,SAASsoE,GACdjuE,GAEQ,IADRkuE,EACO,uDADab,GAEpB,GAAiB,iBAANrtE,EACT,MAAM,IAAIsC,MAAJ,wBAA2BtC,IAEnC,IAAM6rB,SAAS7rB,KAAMA,EAAEJ,OACrB,MAAM,IAAI0C,MAAJ,oCAAuCtC,IAG/C,MAAOyzC,EAAQ,GAAI06B,EAAM,IAAMnuE,EAAEmL,MAAM,KACvC,GAAIgjE,EAAItuE,OAASquE,EACf,MAAM,IAAI5rE,MAAJ,4BACiB6rE,EAAItuE,OADrB,uCAC0DquE,IAGlE,MAAME,EAAgBD,EAAIE,OAAOH,EAAW,KAE5C,OAAO5pE,KAAO,GAAD,OAAImvC,GAAJ,OAAY26B,IAAiBzoE,WAcrC,SAAS2oE,GAAqBzhE,GACnC,OAAO+gE,GAAcN,GAAKzgE,GAWrB,SAAS0hE,GAAaC,EAAkBC,GAC7C,OAAO9jE,OAAO6jE,GAAa7jE,OAAO8jE,GAoB7B,SAASC,GACdC,EACAC,GAEA,GAAI/nE,GAAG8nE,EAAQvB,IACb,MAAM,IAAI9qE,MAAM,mBAGlB,MAAMusE,EAAaD,EAAO5sD,OAAO,CAAC3hB,EAAGC,IAAMD,EAAIC,EAAG,GAClD,IAAKurB,SAASgjD,GACZ,MAAM,IAAIvsE,MAAJ,0CAA6CusE,IAErD,GAAIA,GAAc,EAChB,MAAM,IAAIvsE,MAAJ,6CAAgDusE,IAGxD,IAAIC,EAAiBD,EACjBE,EAAkBJ,EACtB,MAAMK,EAASJ,EAAOpkE,IAAK3M,IACzB,GAAIA,EAAI,EACN,MAAM,IAAIyE,MAAM,mBAAqBzE,GAEvC,GAAU,IAANA,GAA8B,IAAnBixE,EAGb,MAAO,IAET,IAAIv7B,EAAW11C,EAAIixE,EACfv7B,EAAW,IACbA,EAAW,GAEb,MAAM07B,EAAQrB,GAAcmB,EAAiBx7B,GAuB7C,OAFAw7B,EAAkB56C,GAAI46C,EAAiBE,GACvCH,GAAkBjxE,EACXoxE,IAIT,GAAIpoE,GAAGkoE,EAAiB,KAEtB,MAAM,IAAIzsE,MAAM,sCAAwCysE,GAe1D,OAbInoE,GAAGmoE,EAAiB,OAWtBC,EAAOA,EAAOnvE,OAAS,GAAKO,GAAI4uE,EAAOA,EAAOnvE,OAAS,GAAIkvE,IAEtDC,EAMF,SAASzuE,GAAI2uE,GAClB,IAAI5+C,EAAQhsB,KAAO,GACnB,IAAK,MAAMtE,KAAKkvE,EACd5+C,EAAQA,EAAMlwB,IAAIkE,KAAOtE,IAE3B,OAAOswB,EAAM3qB,WAGR,MAAMysD,GAA0B+c,EAAOA,EAAUhE,ICvYzC,SAAS,GAAIt3D,EAAQu7D,GAClC,IAAI7uE,EAAM,EACV,QAAgBiN,IAAZ4hE,EACF,IAAK,IAAIryE,KAAS8W,GACZ9W,GAASA,KACXwD,GAAOxD,OAGN,CACL,IAAI0T,GAAS,EACb,IAAK,IAAI1T,KAAS8W,GACZ9W,GAASqyE,EAAQryE,IAAS0T,EAAOoD,MACnCtT,GAAOxD,GAIb,OAAOwD,ECJF,SAAS8uE,GAAUzwC,GACxB,GAAI2rC,GAAK3rC,EAAG2rC,IACV,MAAM,IAAIjoE,MAAJ,gDAAmDs8B,IAE3D,OAAOA,EAGF,SAASovC,GAAYzwE,GAC1B,OAAO8xE,GAAU9E,GAAchtE,IAW1B,MAAM+xE,GAA0CH,EACrD5E,GACA8E,IAMWE,IAJ2CJ,EACtDA,EACAnB,IAEmEmB,EAAS,CAC5EA,EAAOA,EAAWnB,IAClBmB,EAAOA,GAdF,SAAyBtxE,GAC9B,OAAOwxE,GAAU9E,GAAkB1sE,UAemBsxE,EACtDA,GArBK,SAAoBtxE,GACzB,OAAOwxE,GAAU9E,GAAa1sE,O,6rBCsFzB,MAAM2xE,GAAiDL,GAAS,CACrEM,WAAYN,EAAU,CAAC,aACvBR,OAAQY,GACRG,qBAAsBP,IAGXQ,GAAiDR,EAC5DA,GACE,CACEM,WAAYN,EAAU,CAAC,aACvBR,OAAQW,IAEV,CACEI,qBAAsBP,IAGzBS,GAAD,GAAC,MACIA,GADL,IAEEF,qBACiC,MAA/BE,EAAOF,qBAA+BE,EAAOF,qBAAuB,K,6rBC9DnE,MAAMG,GAAmDV,GAAS,CACvEM,WAAYN,EAAU,CAAC,cACvBR,OAAQY,GACRG,qBAAsBP,IAGXW,GAAmDX,EAC9DA,GACE,CACEM,WAAYN,EAAU,CAAC,cACvBR,OAAQW,IAEV,CACEI,qBAAsBP,IAGzBS,GAAD,GAAC,MACIA,GADL,IAEEF,qBACiC,MAA/BE,EAAOF,qBAA+BE,EAAOF,qBAAuB,KCZnE,MAAMK,GAA6CZ,GAAS,CACjEM,WAAYN,EAAU,CAAC,WACvBR,OAAQY,GACRS,SAAUb,EAAOA,EAAUc,MAGhBC,GAA6Cf,GAAS,CACjEM,WAAYN,EAAU,CAAC,WACvBR,OAAQW,GACRU,SAAUb,EAAOA,EAAUc,MAItB,SAASA,GAAW1yE,GACzB,GAAIA,EAAI,GAAKA,EAAI,EACf,MAAM,IAAI+E,MAAJ,mCAGR,OAAO/E,EC7DF,SAAS4yE,GACdP,EACA3D,GAEA,IAAK,MAAM,GAAC5+C,KAAO4+C,EACjB,GAAI5+C,IAAOuiD,EAAOQ,UAChB,MAAO,CAAC,CAAC/iD,KAAI0jC,OAAQ6e,EAAOjB,SAGhC,MAAM,IAAIrsE,MAAJ,gDAAmDstE,EAAOQ,YAG3D,MAAMC,GAA+ClB,GAAS,CACnEM,WAAYN,EAAU,CAAC,YACvBR,OAAQY,GACRztD,KAAMqtD,EACNiB,UAAWlE,KAGAoE,GAA+CnB,GAAS,CACnEM,WAAYN,EAAU,CAAC,YACvBR,OAAQW,GACRxtD,KAAMqtD,EACNiB,UAAWlE,KCXN,MAAMqE,GAAiDpB,EAAS,CACrEK,GACAK,GACAE,GACAM,KAgBK,MAAMG,GAAqDrB,EAAS,CACzEQ,GACAG,GACAI,GACAI,KCMF,SAASG,GAAgB7yE,GAEvB,GADA4yE,GAAuBnf,aAAazzD,GAChC2sE,GAAK3sE,EAAE+wE,OAAQpE,IACjB,MAAM,IAAIjoE,MAAJ,0BAA6B1E,EAAE+wE,SAEvC,OAAO/wE,EAIF,SAAS8yE,GAA0BrwE,GACxC,MAAMswE,EAAMpG,GAAMlqE,EAAEuwE,SAASpmE,IAAKnK,GAAMA,EAAE0wD,SAC1C,GAAI4f,IAAQtwE,EAAEuvE,OAAOjB,OACnB,MAAM,IAAIrsE,MAAJ,mCACwBjC,EAAEuvE,OAAOjB,OADjC,4BAC2DgC,IAGnE,OAAOtwE,EAGT,SAASuwE,GACPhB,EACAiB,EACAC,GAEA,OAAQlB,EAAOH,YACb,IAAK,YACH,OJjEC,SACLG,EACAiB,EACAC,GAIA,GAAIlB,EAAOF,qBAAuB,EAChC,MAAM,IAAIptE,MAAJ,uDAC4CstE,EAAOF,uBAG3D,IAAK/kE,OAAO68C,UAAUooB,EAAOF,sBAC3B,MAAM,IAAIptE,MAAJ,uDAC4CstE,EAAOF,uBAI3D,MAIMqB,EAJ2BF,EAAcG,0BAC7CF,EACAlB,EAAOF,sBAEgDuB,qBAEnDC,EAA2BH,EAAwBvmE,IAAK5M,GAAMA,EAAEuzE,MAChEC,EAAU7G,GAAcqF,EAAOjB,OAAQuC,GAE7C,OAAOH,EAAwBvmE,IAAI,CAAC,EAAY1O,KAAb,IAAC,SAACwhB,GAAF,QAAoB,CACrD+P,GAAI/P,EAAS+P,GACb0jC,OAAQqgB,EAAQt1E,MIoCPu1E,CAAkBzB,EAAQiB,EAAeC,GAClD,IAAK,SACH,OH1DC,SACLlB,EACAiB,EACAC,GAEA,MAMMC,EAJ2BF,EAAcG,0BAC7CF,EAHe,GAMwCG,qBAQnDK,EAAyBP,EAAwBvmE,IAN3B1O,GACnBA,EAAEy1E,gBAAgBvvD,OACvB,CAACsc,EAAK6yC,IAAS7yC,GAAO,EAAIsxC,EAAOI,UAAYmB,EAC7C,IAOEC,EAAU7G,GAAcqF,EAAOjB,OAAQ2C,GAE7C,OAAOP,EAAwBvmE,IAAI,CAAC,EAAY1O,KAAb,IAAC,SAACwhB,GAAF,QAAoB,CACrD+P,GAAI/P,EAAS+P,GACb0jC,OAAQqgB,EAAQt1E,MG+BP01E,CAAe5B,EAAQiB,EAAeC,GAC/C,IAAK,WACH,OLhDC,SACLlB,EACAiB,EACAC,GAEA,GAAIlB,EAAOF,qBAAuB,EAChC,MAAM,IAAIptE,MAAJ,uDAC4CstE,EAAOF,uBAG3D,IAAK/kE,OAAO68C,UAAUooB,EAAOF,sBAC3B,MAAM,IAAIptE,MAAJ,uDAC4CstE,EAAOF,uBAI3D,MAIMqB,EAJ2BF,EAAcG,0BAC7CF,EACAlB,EAAOF,sBAEgDuB,qBAEnDQ,EAAYlxE,GAChBwwE,EAAwBvmE,IAAKknE,GAAgBA,EAAYP,OAQrDQ,EAAqBpH,GADIA,GAJTA,GACpBwG,EAAwBvmE,IAAKknE,GAAgBA,EAAYE,cAGPhC,EAAOjB,QAGzD,EAAI8C,GAcAI,EAXmBd,EAAwBvmE,IAAKknE,IACpD,MAAMI,EAAevxE,GAAImxE,EAAYH,iBAC/B/uB,EAAS+nB,GAAgBoH,EAAoBG,GAEnD,OAAIvH,GAAK/nB,EAAQkvB,EAAYE,aACpBrH,GAAM/nB,EAAQkvB,EAAYE,aAE1BrH,KAIgC//D,IAAKxK,GAAM2K,OAAO3K,IACvD+xE,EAAexH,GAAcqF,EAAOjB,OAAQkD,GAClD,OAAOd,EAAwBvmE,IAAI,CAAC,EAAY1O,KAAb,IAAC,SAACwhB,GAAF,QAAoB,CACrD+P,GAAI/P,EAAS+P,GACb0jC,OAAQghB,EAAaj2E,MKHZk2E,CAAiBpC,EAAQiB,EAAeC,GACjD,IAAK,UAIH,OAAOX,GAAgBP,EAHJiB,EAChBI,qBACAzmE,IAAKknE,GAAgBA,EAAYp0D,WAGtC,QACE,MAAM,IAAIhb,MAAJ,8BAAkCstE,EAAOH,cAIrD,MAAMwC,GAA6C9C,GAAS,CAC1D9hD,GAAI6+C,GACJnb,OAAQwZ,KAEG2H,GAAyC/C,GAAS,CAC7DS,OAAQY,GACRnjD,GAAI6+C,GACJ0E,SAAUzB,EAAQ8C,MC3GP7f,GAAiC1zB,GAAS,CACrDrR,GAAI8kD,GACJC,YAAa1zC,EAAQwzC,IACrBG,cAAe3zC,I,6rBCoHV,MAAM4zC,GAcX76D,cAAe,gTALkBnR,KAKnB,qCAJmC,MAInC,wCAH0B,GAG1B,4CACZnH,KAAKozE,gBAAkB,IAAI3I,GAC3BzqE,KAAKqzE,UAAY,IAAI//D,IACrBtT,KAAKszE,gBAAkB,IAAI9/D,IAC3BxT,KAAKuzE,wBAA0B,IAAIjgE,IACnCtT,KAAKwzE,UAAY,IAAIlgE,IACrBtT,KAAKyzE,aAAe,IAAIngE,IACxBtT,KAAK0zE,eAAiB,IAAIpgE,IAC1BtT,KAAK2zE,4BAA8B,IAAIrgE,IACvCtT,KAAK4zE,0BAA4B,IAAItgE,IAMvCugE,WACE,OAAO/yE,MAAM09C,KAAK,IAAIhrC,IAAIxT,KAAKwzE,UAAU9+D,WAQ3Co/D,QAAQ5lD,GAEN,OAAOluB,KAAK+zE,gBAAgB7lD,GAG9B6lD,gBAAgB7lD,GACd,MAAMzqB,EAASzD,KAAKwzE,UAAUh2E,IAAI0wB,GAClC,GAAc,MAAVzqB,EACF,MAAM,IAAIN,MAAJ,mCAAsC+qB,IAE9C,OAAOzqB,EAUTuwE,cAAc92E,GAKZ,OAHAolE,GAAeplE,IAGP8C,KAAKszE,gBAAgBxkE,IAAI5R,EAAK0N,eAQxCqpE,iBAAiBrrD,GACf,MAAMsrD,EAAal0E,KAAKuzE,wBAAwB/1E,IAAIorB,GACpD,OAAkB,MAAdsrD,EACK,KAEFl0E,KAAK8zE,QAAQI,GAUtBC,cAAcj3E,GACZ,MAAMg3E,EAAal0E,KAAKqzE,UAAU71E,IAAI8kE,GAAeplE,IACrD,OAAkB,MAAdg3E,EACK,KAEFl0E,KAAK8zE,QAAQI,GAQtBE,WAAWlmD,GACT,MAAMkmD,EAAap0E,KAAKyzE,aAAaj2E,IAAI0wB,GACzC,GAAkB,MAAdkmD,EAAoB,MAAM,IAAIjxE,MAAJ,gCAAmC+qB,IACjE,OAAOkmD,EAMTnB,cACE,OAAOjzE,KAAKyzE,aAAa/+D,SAQ3B2/D,aAAanmD,GACX,MAAMmmD,EAAer0E,KAAK0zE,eAAel2E,IAAI0wB,GAC7C,GAAoB,MAAhBmmD,EAAsB,MAAM,IAAIlxE,MAAJ,kCAAqC+qB,IACrE,OAAOmmD,EAMTC,gBACE,OAAOt0E,KAAK0zE,eAAeh/D,SAQ7B6/D,2BAA2BC,GACzB,MAAMC,EAAiBz0E,KAAK2zE,4BAA4Bn2E,IAAIg3E,GAC5D,GAAsB,MAAlBC,EACF,MAAM,IAAItxE,MAAJ,6CAAgDqxE,IACxD,OAAOx0E,KAAKq0E,aAAaI,GAa3BhS,eAAe9oD,EAAoBzc,GACjC,MAAMihB,EAAWsuD,GAAY9yD,EAAMzc,GAC7Bw3E,EAAS,CACb/6D,KAAM,kBACNwE,YAGF,OADAne,KAAK20E,uBAAuBD,GACrB1b,GAAah5D,KAAKqzE,UAAU71E,IAAI2gB,EAASjhB,OAElD03E,gBAAgB,GAA6B,IAA7B,SAACz2D,GAA2B,EAC1C,GAAIne,KAAKqzE,UAAUvkE,IAAIqP,EAASjhB,MAE9B,MAAM,IAAIiG,MAAJ,8CAAiDgb,EAASjhB,OAElE,GAAI8C,KAAKszE,gBAAgBxkE,IAAIqP,EAASjhB,KAAK0N,eACzC,MAAM,IAAIzH,MAAJ,gFACqEgb,EAASjhB,OAGtF,GAAgC,IAA5BihB,EAASyuD,QAAQlsE,OACnB,MAAM,IAAIyC,MAAJ,uDAGR,GAAInD,KAAKuzE,wBAAwBzkE,IAAIqP,EAASyK,SAE5C,MAAM,IAAIzlB,MAAJ,yDAC8Cgb,EAAS+P,KAK/DluB,KAAKqzE,UAAU3hE,IAAIyM,EAASjhB,KAAMihB,EAAS+P,IAC3CluB,KAAKszE,gBAAgBryE,IAAIkd,EAASjhB,KAAK0N,eAEvC5K,KAAKuzE,wBAAwB7hE,IAAIyM,EAASyK,QAASzK,EAAS+P,IAE5DluB,KAAKwzE,UAAU9hE,IAAIyM,EAAS+P,GAAI,CAC9B2mD,QAASzJ,GACT0J,KAAM1J,GACNjtD,WACA42D,QAAQ,EACRC,kBAAmB,GACnBC,gBAAiB,IAAI3hE,IAErB4hE,kBAAmB,CAAC/2D,EAAS+P,MAkBjCinD,gBAAgB5nE,GACd,MAAM,KAAC/L,EAAD,OAAO6hD,GAAU91C,EACjBmnE,EAAS,CACb/6D,KAAM,mBACNnY,OACA6hD,UAGF,OADArjD,KAAK20E,uBAAuBD,GACrB10E,KAETo1E,iBAAiB,GAAkC,IAAlC,KAAC5zE,EAAD,OAAO6hD,GAA0B,EAChD,MAAMgyB,EAAcr1E,KAAK+zE,gBAAgBvyE,GACnC8zE,EAAgBt1E,KAAK8zE,QAAQzwB,GAC7BkyB,EAAeF,EAAYl3D,SAC3Bq3D,EAAiBF,EAAcn3D,SACrC,GAAI3c,IAAS6hD,EACX,MAAM,IAAIlgD,MAAJ,mCACwBoyE,EAAar4E,KADrC,iBAKR,MAAMu4E,EAAiBF,EAAa3I,QAAQ7mE,QACtC2vE,EAAiB/S,IACrB8S,EAAeh0E,KAAKkhE,GACpB3iE,KAAKuzE,wBAAwB7hE,IAAIixD,EAAM/5C,QAAS2sD,EAAarnD,KAG/DsnD,EAAe5I,QAAQ9tE,QAASoC,GAAMw0E,EAAcx0E,IACpD,MAAMy0E,EAAc,CAClB/sD,QAAS4sD,EAAe5sD,QACxBwyC,YAAY,aAAD,OAAeoa,EAAet4E,KAA9B,iBAA2Cs4E,EAAetnD,GAA1D,MAEbwnD,EAAcC,GACd,MAAMC,EAAe,SAChBL,GADgB,IAEnB3I,QAAS6I,IAEXJ,EAAYl3D,SAAWy3D,EACvBP,EAAYP,KAAO1J,GAAMiK,EAAYP,KAAMQ,EAAcR,MACzDO,EAAYL,kBAAoBK,EAAYL,kBACzCxyE,OAAO8yE,EAAcN,mBACrBrmE,KAAK,CAACzN,EAAGC,IAAMD,EAAE20E,gBAAkB10E,EAAE00E,iBAGxCR,EAAYJ,gBAAkB,IAAI3hE,IAAI,IACjCgiE,EAAcL,gBAAgB7gE,aAC9BihE,EAAYJ,gBAAgB7gE,YAEjCihE,EAAYR,QAAUzJ,GAAMiK,EAAYR,QAASS,EAAcT,SAC/DS,EAAcJ,kBAAkBp2E,QAASovB,IACvCluB,KAAKwzE,UAAU9hE,IAAIwc,EAAImnD,GACvBA,EAAYH,kBAAkBzzE,KAAKysB,KAErCluB,KAAKqzE,UAAUvyB,OAAO00B,EAAet4E,MACrC8C,KAAKszE,gBAAgBxyB,OAAO00B,EAAet4E,KAAK0N,eASlDkrE,eAAe5B,EAAwB6B,GAMrC,OALA/1E,KAAK20E,uBAAuB,CAC1Bh7D,KAAM,kBACNu6D,aACA6B,QAASzT,GAAeyT,KAEnB/1E,KAETg2E,gBAAgB,GAAwC,IAAxC,WAAC9B,EAAD,QAAa6B,GAA0B,EACrD,IAAK/1E,KAAKwzE,UAAU1kE,IAAIolE,GACtB,MAAM,IAAI/wE,MAAJ,iDAAoD+wE,IAE5D,MAAMJ,EAAU9zE,KAAK+zE,gBAAgBG,GAC/B+B,EAAmBnC,EAAQ31D,SAC3B+3D,EAAeD,EAAiB/4E,KACtC,GAAIg5E,IAAiBH,EAInB,MAAM,IAAI5yE,MAAJ,oDAAuD4yE,IAE/D,GAAI/1E,KAAKqzE,UAAUvkE,IAAIinE,GAGrB,MAAM,IAAI5yE,MAAJ,2CAA8C4yE,IAEtD,MAAMI,EAAaJ,EAAQnrE,cAC3B,GACE5K,KAAKszE,gBAAgBxkE,IAAIqnE,IACzBA,IAAeD,EAAatrE,cAE5B,MAAM,IAAIzH,MAAJ,gFACqE4yE,IAG7E,MAAMH,EAAkB,CACtB1nD,GAAIgmD,EACJh3E,KAAM64E,EACN9P,QAASgQ,EAAiBhQ,QAC1Br9C,QAASqtD,EAAiBrtD,QAC1BgkD,QAASqJ,EAAiBrJ,SAI5B5sE,KAAKqzE,UAAUvyB,OAAOm1B,EAAiB/4E,MACvC8C,KAAKqzE,UAAU3hE,IAAIqkE,EAAS7B,GAC5Bl0E,KAAKszE,gBAAgBxyB,OAAOm1B,EAAiB/4E,KAAK0N,eAClD5K,KAAKszE,gBAAgBryE,IAAI80E,EAAQnrE,eACjCkpE,EAAQ31D,SAAWy3D,EAarBQ,SAASlC,EAAwBvR,GAM/B,OALA3iE,KAAK20E,uBAAuB,CAC1Bh7D,KAAM,YACNu6D,aACAvR,UAEK3iE,KAETq2E,UAAU,GAAgC,IAAhC,WAACnC,EAAD,MAAavR,GAAkB,EACvC,IAAK3iE,KAAKwzE,UAAU1kE,IAAIolE,GACtB,MAAM,IAAI/wE,MAAJ,2CAA8C+wE,IAEtD,MAAMJ,EAAU9zE,KAAK+zE,gBAAgBG,GAC/B+B,EAAmBnC,EAAQ31D,SAEjC,IAAsE,IAD9C83D,EAAiBrJ,QACrBvhE,IAAKnK,GAAMA,EAAE0nB,SAAS1c,QAAQy2D,EAAM/5C,SACtD,MAAM,IAAIzlB,MAAJ,gDAEF8yE,EAAiB/4E,KAFf,aAGCs5D,GAAYhwD,SAASm8D,EAAM/5C,WAGpC,GAAI5oB,KAAKuzE,wBAAwBzkE,IAAI6zD,EAAM/5C,SAEzC,MAAM,IAAIzlB,MAAJ,0BACeqzD,GAAYhwD,SAASm8D,EAAM/5C,SAD1C,mBAMR5oB,KAAKuzE,wBAAwB7hE,IAAIixD,EAAM/5C,QAASsrD,GAChD,MAAMuB,EAAiBQ,EAAiBrJ,QAAQ7mE,QAChD0vE,EAAeh0E,KAAKkhE,GACpB,MAAMiT,EAAkB,CACtB1nD,GAAI+nD,EAAiB/nD,GACrBhxB,KAAM+4E,EAAiB/4E,KACvB+oE,QAASgQ,EAAiBhQ,QAC1B2G,QAAS6I,EACT7sD,QAASqtD,EAAiBrtD,SAE5BkrD,EAAQ31D,SAAWy3D,EASrBU,SAASpoD,GACP,IAAKluB,KAAKwzE,UAAU1kE,IAAIof,GACtB,MAAM,IAAI/qB,MAAJ,mBAAsB+qB,EAAtB,eAER,MAAM,OAAC6mD,GAAU/0E,KAAK8zE,QAAQ5lD,GAC9B,OAAI6mD,GAIF/0E,KAAK20E,uBAAuB,CAC1Bh7D,KAAM,oBACNu6D,WAAYhmD,IAJPluB,KAkBXu2E,WAAWroD,GACT,IAAKluB,KAAKwzE,UAAU1kE,IAAIof,GACtB,MAAM,IAAI/qB,MAAJ,mBAAsB+qB,EAAtB,eAER,MAAM,OAAC6mD,GAAU/0E,KAAK8zE,QAAQ5lD,GAC9B,OAAI6mD,GACF/0E,KAAK20E,uBAAuB,CAC1Bh7D,KAAM,oBACNu6D,WAAYhmD,IAEPluB,MAGAA,KAGXw2E,kBAAkB,GAAiC,IAAjC,WAACtC,GAA+B,EAChD,MAAMJ,EAAU9zE,KAAK+zE,gBAAgBG,GAErCJ,EAAQiB,QAAUjB,EAAQiB,OAQ5B0B,gBAAgBpC,GAKd,OAJAr0E,KAAK20E,uBAAuB,CAC1Bh7D,KAAM,mBACN06D,iBAEKr0E,KAET02E,iBAAiB,GAAkC,IAAlC,aAACrC,GAAgC,EAChD,MAAM/d,EAAcqgB,GAAmBnkC,MAAM6hC,GAC7C,IAAK/d,EAAYnS,GACf,MAAM,IAAIhhD,MAAJ,gCAAmCmzD,EAAYjW,MAEvD,IAAK,MAAM,SAACoxB,KAAa4C,EAAapB,YACpC,IAAK,MAAM,GAAC/kD,EAAD,OAAK0jC,KAAW6f,EAAU,CACnC,IAAKzxE,KAAKwzE,UAAU1kE,IAAIof,GACtB,MAAM,IAAI/qB,MAAJ,wCAA2C+qB,IAEnD,GAAIk9C,GAAKxZ,EAAQwZ,IACf,MAAM,IAAIjoE,MAAJ,iCAAoCyuD,IAE5C,MAAM,OAACmjB,GAAU/0E,KAAK8zE,QAAQ5lD,GAC9B,IAAK6mD,EACH,MAAM,IAAI5xE,MAAJ,qDAAwD+qB,IAKpEluB,KAAK0zE,eAAehiE,IAAI2iE,EAAanmD,GAAImmD,GACzC,IAAK,MAAMD,KAAcC,EAAapB,YAAa,CACjDjzE,KAAKyzE,aAAa/hE,IAAI0iE,EAAWlmD,GAAIkmD,GACrCp0E,KAAK2zE,4BAA4BjiE,IAAI0iE,EAAWlmD,GAAImmD,EAAanmD,IACjE,IAAK,MAAM0oD,KAAgBxC,EAAW3C,SACpCzxE,KAAK62E,eAAe,CAClBD,eACApC,aAAcJ,EAAWlmD,GACzB2nD,gBAAiBxB,EAAanB,iBAKE,OAApClzE,KAAK82E,4BACLzC,EAAanB,cAAgBlzE,KAAK82E,8BAElC92E,KAAK82E,2BAA6BzC,EAAanB,eAE7ClzE,KAAK+2E,8BACP/2E,KAAK4zE,0BAA0BliE,IAAI2iE,EAAanmD,IAAI,GAiBxD8oD,cAAczpE,GAMZ,MAAM,KAACixC,EAAD,GAAOkQ,EAAP,OAAWkD,EAAX,KAAmBjvC,GAAQpV,EAQjC,OAPAvN,KAAK20E,uBAAuB,CAC1Bn2B,OACAkQ,KACAkD,SACAjvC,OACAhJ,KAAM,mBAED3Z,KAETi3E,eAAe,GAAoC,IAApC,KAACz4B,EAAD,GAAOkQ,EAAP,OAAWkD,GAAwB,EAChD,IAAK5xD,KAAKwzE,UAAU1kE,IAAI0vC,GACtB,MAAM,IAAIr7C,MAAJ,0BAA6Bq7C,IAErC,IAAKx+C,KAAKwzE,UAAU1kE,IAAI4/C,GACtB,MAAM,IAAIvrD,MAAJ,6BAAgCurD,IAExC,MAAMwoB,EAAcl3E,KAAK+zE,gBAAgBv1B,GACnC24B,EAAYn3E,KAAK+zE,gBAAgBrlB,GACvC,IAAKwoB,EAAYnC,OACf,MAAM,IAAI5xE,MAAJ,0CAA6Cq7C,IAErD,IAAK24B,EAAUpC,OACb,MAAM,IAAI5xE,MAAJ,wCAA2CurD,IAEnD,GAAI0c,GAAKxZ,EAAQwZ,IACf,MAAM,IAAIjoE,MAAJ,iDAAoDyuD,IAE5D,GAAIwZ,GAAKxZ,EAAQslB,EAAYrC,SAC3B,MAAM,IAAI1xE,MAAJ,yBACcq7C,EADd,mDAC6DoT,EAD7D,cACyEslB,EAAYrC,UAK7FqC,EAAYrC,QAAUzJ,GAAM8L,EAAYrC,QAASjjB,GACjDulB,EAAUtC,QAAUzJ,GAAM+L,EAAUtC,QAASjjB,GAG/CwlB,mBAAmBlD,EAAwBmD,GAMzC,OALAr3E,KAAK20E,uBAAuB,CAC1Bh7D,KAAM,uBACN09D,UACAnD,eAEKl0E,KAETs3E,oBAAoB,GAA4C,IAA5C,WAACpD,EAAD,QAAamD,GAA8B,EAE7D,IADoB1K,GAAmBn6B,MAAM6kC,GAC5BlzB,GACf,MAAM,IAAIhhD,MAAJ,2CAA8Ck0E,IAEtD,IAAKr3E,KAAKwzE,UAAU1kE,IAAIolE,GACtB,MAAM,IAAI/wE,MAAJ,qDAC0C+wE,IAGlD,MAAMJ,EAAU9zE,KAAK+zE,gBAAgBG,GAC/B+B,EAAmBnC,EAAQ31D,SACjC,GAAI83D,EAAiBhQ,UAAYoR,EAI/B,MAAM,IAAIl0E,MAAJ,wDAC6Ck0E,IAGrD,MAAMzB,EAAkB,CACtB1nD,GAAIgmD,EACJh3E,KAAM+4E,EAAiB/4E,KACvB+oE,QAASoR,EACTzuD,QAASqtD,EAAiBrtD,QAC1BgkD,QAASqJ,EAAiBrJ,SAI5BkH,EAAQ31D,SAAWy3D,EAcrB2B,iBACErpD,EACAyjC,EACA0b,EACAC,GAQA,OANAttE,KAAK20E,uBAAuB,CAC1Bh7D,KAAM,qBACNuU,KACAyjC,gBACA6lB,SAAU/J,GAAcJ,EAASC,KAE5BttE,KAETy3E,kBAAkB,GAAkD,IAAlD,GAACvpD,EAAD,SAAKspD,EAAL,cAAe7lB,GAAkC,EACjE,IAAK3xD,KAAKwzE,UAAU1kE,IAAIof,GACtB,MAAM,IAAI/qB,MAAJ,mDAAsD+qB,IAE9D,MAAM4lD,EAAU9zE,KAAK+zE,gBAAgB7lD,GAC/BwpD,EAAiBlK,GAAeh7B,MAAMglC,GAC5C,IAAKE,EAAevzB,GAClB,MAAM,IAAIhhD,MAAJ,oDAEFu0E,EAAer3B,MAGrB,GAAsB,OAAlBsR,EAeJmiB,EAAQmB,gBAAgBn0B,OAAOzzC,KAAKxB,UAAU6rE,EAAe95E,YAf7D,CAEE,IADsBotE,GAAiBx4B,MAAMmf,GAC1BxN,GACjB,MAAM,IAAIhhD,MAAJ,oDACyCwuD,IAIjDmiB,EAAQmB,gBAAgBvjE,IACtBrE,KAAKxB,UAAU6rE,EAAe95E,OAC9B+zD,IAWNgmB,4BAME,OALK33E,KAAK+2E,8BACR/2E,KAAK20E,uBAAuB,CAC1Bh7D,KAAM,6BAGH3Z,KAMT43E,6BAME,OALI53E,KAAK+2E,8BACP/2E,KAAK20E,uBAAuB,CAC1Bh7D,KAAM,8BAGH3Z,KAGT63E,gCAAgC/2D,GAC9B9gB,KAAK+2E,8BAA+B,EAGtCe,iCAAiCh3D,GAC/B9gB,KAAK+2E,8BAA+B,EACpC/2E,KAAK4zE,0BAA0Bv/D,QAUjC0jE,yBAAyB7pD,GACvB,IAAKluB,KAAK+2E,6BACR,MAAM,IAAI5zE,MAAM,oCAElB,QAA+CkL,IAA3CrO,KAAK4zE,0BAA0Bp2E,IAAI0wB,GACrC,MAAM,IAAI/qB,MAAM,yCAElB,IAA+C,IAA3CnD,KAAK4zE,0BAA0Bp2E,IAAI0wB,GACrC,MAAM,IAAI/qB,MAAM,sDAMlB,OAJAnD,KAAK20E,uBAAuB,CAC1Bh7D,KAAM,6BACNuU,OAEKluB,KAETg4E,0BAA0B,GAAiC,IAAjC,GAAC9pD,GAA+B,EACxDluB,KAAK4zE,0BAA0BliE,IAAIwc,GAAI,GAMzC+pD,uBACE,OAAOj4E,KAAK4zE,0BAA0BnlE,OAUxCypE,2BAA2BhqD,GACzB,OAAOluB,KAAK4zE,0BAA0Bp2E,IAAI0wB,GAQ5CiqD,WACE,OAAOr3E,MAAM09C,KAAKx+C,KAAKozE,gBAAgB1+D,UAMtB,oBAACtM,GAClB,MAAMgwE,EAAS,IAAIjF,GACnB,IAAK,MAAMzoE,KAAKtC,EACdgwE,EAAOC,cAAc3tE,GAEvB,OAAO0tE,EAOTE,YACE,OAAOt4E,KAAKozE,gBAAgB5sE,WAOlB,aAAC2xE,GACX,MAAMI,EAAU9N,GAAQuB,WAAWmM,EAAUK,IAC7C,OAAOrF,GAAOsF,aAAa33E,MAAM09C,KAAK+5B,EAAQ7jE,WAWhDgkE,4BACE,OAAO14E,KAAK82E,2BAGd6B,eAAejE,GACb,OAAQA,EAAO/6D,MACb,IAAK,kBACH3Z,KAAK40E,gBAAgBF,GACrB,MACF,IAAK,kBACH10E,KAAKg2E,gBAAgBtB,GACrB,MACF,IAAK,YACH10E,KAAKq2E,UAAU3B,GACf,MACF,IAAK,mBACH10E,KAAKo1E,iBAAiBV,GACtB,MACF,IAAK,oBACH10E,KAAKw2E,kBAAkB9B,GACvB,MACF,IAAK,mBACH10E,KAAK02E,iBAAiBhC,GACtB,MACF,IAAK,iBACH10E,KAAKi3E,eAAevC,GACpB,MACF,IAAK,uBACH10E,KAAKs3E,oBAAoB5C,GACzB,MACF,IAAK,qBACH10E,KAAKy3E,kBAAkB/C,GACvB,MACF,IAAK,2BACH10E,KAAK63E,gCAAgCnD,GACrC,MACF,IAAK,4BACH10E,KAAK83E,iCAAiCpD,GACtC,MACF,IAAK,6BACH10E,KAAKg4E,0BAA0BtD,GAC/B,MAEF,QACE,MAAM,IAAIvxE,MAAJ,wBAA4BuxE,EAAO/6D,QAI/C0+D,cAAc3tE,GACZ,MAAM,OAACgqE,EAAD,gBAASkE,GAAmBluE,EAClC,GAAuB,MAAnBkuE,IAA4BlsD,SAASksD,GACvC,MAAM,IAAIz1E,MAAJ,oCAAuCy1E,IAE/C,GAAIA,EAAkB54E,KAAK64E,iBACzB,MAAM,IAAI11E,MAAJ,0CAC+By1E,EAD/B,cACoD54E,KAAK64E,mBAGjE74E,KAAK24E,eAAejE,GACpB10E,KAAK64E,iBAAmBD,EACxB54E,KAAKozE,gBAAgBvyB,OAAOn2C,GAG9BiqE,uBAAuBD,GACrB,MACMoE,EAAc,CAClBF,gBAFsBG,KAGtBrE,SACAh/B,QAAS,IACTsjC,KAAMA,MAERh5E,KAAKq4E,cAAcS,GAKrBjC,eAAeoC,GAKb,MAAMnF,EAAU9zE,KAAK+zE,gBAAgBkF,EAAOrC,aAAa1oD,IACzD4lD,EAAQgB,KAAO1J,GAAM6N,EAAOrC,aAAahlB,OAAQkiB,EAAQgB,MACzDhB,EAAQkB,kBAAkBvzE,KAAKw3E,GAC/BnF,EAAQe,QAAUzJ,GAAM6N,EAAOrC,aAAahlB,OAAQkiB,EAAQe,UAkChE,MAAMqE,GAAiD35C,GAAS,CAC9D5lB,KAAM4lB,EAAU,CAAC,oBACjBphB,SAAUg7D,KAQNC,GAAiD75C,GAAS,CAC9D5lB,KAAM4lB,EAAU,CAAC,oBACjB20C,WAAY8E,GACZjD,QAAS/I,KAQLqM,GAA2B95C,GAAS,CACxC5lB,KAAM4lB,EAAU,CAAC,yBACjB20C,WAAY8E,GACZ3B,QAAS1K,KAQL2M,GAAqC/5C,GAAS,CAClD5lB,KAAM4lB,EAAU,CAAC,cACjB20C,WAAY8E,GACZrW,MAAOsK,KAQHsM,GAAmDh6C,GAAS,CAChE5lB,KAAM4lB,EAAU,CAAC,qBACjB/9B,KAAMw3E,GACN31B,OAAQ21B,KAOJQ,GAAqDj6C,GAAS,CAClE5lB,KAAM4lB,EAAU,CAAC,sBACjB20C,WAAY8E,KAORS,GAAmDl6C,GAAS,CAChE5lB,KAAM4lB,EAAU,CAAC,qBACjB80C,aAAcsC,KAkBV+C,GAAqDn6C,GAAS,CAClE5lB,KAAM4lB,EAAU,CAAC,uBACjBrR,GAAI8qD,GACJxB,SAAUhK,GACV7b,cAAeqZ,KAGX2O,GAA+Cp6C,GAAS,CAC5D5lB,KAAM4lB,EAAU,CAAC,mBACjBif,KAAMw6B,GACNtqB,GAAIsqB,GACJpnB,OAAQwZ,GACRzoD,KAAM4c,EAAS,CAACA,EAAUA,MAiCtBq6C,GAAiCr6C,EAAS,CAC9C25C,GACAE,GACAC,GACAC,GACAC,GACAC,GACAC,GACAE,GACAD,GAnCqEn6C,GACrE,CACE5lB,KAAM4lB,EAAU,CAAC,+BAQoDA,GACvE,CACE5lB,KAAM4lB,EAAU,CAAC,gCASiDA,GAAS,CAC7E5lB,KAAM4lB,EAAU,CAAC,+BACjBrR,GAAI8qD,OAkBAR,GAA2Cj5C,GAAS,CACxDm1C,OAAQkF,GACRhB,gBAAiBr5C,EACjBmW,QAASnW,EAAU,CAAC,MACpBy5C,KAAMA,KAGFD,GAAgB,IAAM1rD,KAAK/D,MC1lCpBuwD,GAETt6C,EAT8CA,GAAS,CACzDriC,KAAM8vE,GACNnK,WAAYmK,GACZrK,MAAOsK,GACPtzD,KAAMgzD,MAiBD,SAASmN,GACd1B,EACA2B,GAEA,MAAMC,EAAkB5B,EAAOnE,iBAAiB8F,EAASpX,MAAM/5C,SAC/D,GAAuB,MAAnBoxD,EAEF,OAAOA,EAAgB77D,SAAS+P,GAElC,MAAMhxB,EAOD,SACL68E,EACAE,GAEA,GAAIA,EAAkBF,EAAS78E,MAC7B,OAAO68E,EAAS78E,KAElB,MAAMg9E,EAA0B5X,GAC9ByX,EAAS78E,KAAO,IAAM68E,EAASlX,YAEjC,GAAIoX,EAAkBC,GACpB,OAAOA,EAET,IAAK,IAAIv9E,EAAI,EAAGA,EAdgB,IAceA,IAAK,CAClD,MAAMw9E,EAA2B7X,GAC/B4X,EAA0B,IAAMv9E,GAElC,GAAIs9E,EAAkBE,GACpB,OAAOA,EAGX,MAAM,IAAIh3E,MAAJ,8CAAiD0I,IAAUkuE,KA5BpDK,CAAoBL,EAAW37E,GAAMg6E,EAAOpE,cAAc51E,IACjE8vB,EAAKkqD,EAAO3V,eAAesX,EAASpgE,KAAMzc,GAEhD,OADAk7E,EAAOhC,SAASloD,EAAI6rD,EAASpX,OACtBz0C,E,YC7DT,MAAMwoC,GAAc,CAAC/8C,KAAM,2BAA4B+7B,QAAS,SAUzD,SAASigB,KACd,MAAO,CAACxH,MAAO,IAAI4I,GAASqK,QAASiZ,MAGhC,SAAS9tE,GAAOukB,GACrB,MAAMwpD,EAAYxpD,EAAEq9B,MAAM5hD,SACpBguE,EAAcF,GAAevpD,EAAEswC,SACrC,OAAOxL,GAASc,GAAa,CAAC4jB,YAAWC,gBAGpC,SAAS/Y,GAASn/D,GACvB,MAAM,UAACi4E,EAAD,YAAYC,GAAezkB,GAAWY,GAAar0D,GAGzD,MAAO,CAAC8rD,MAFM4I,GAAMyK,SAAS8Y,GAEdlZ,QADCiZ,GAAiBE,IAS5B,SAAS1f,GAAM3+B,GAGpB,MAAO,CAACiyB,MAFM4I,GAAM8D,MAAM3+B,EAAG7wB,IAAKylB,GAAMA,EAAEq9B,QAE3BiT,QADCiZ,GAAcn+C,EAAG7wB,IAAKylB,GAAMA,EAAEswC,WAiBzC,SAASoZ,GACdC,EACAC,GAEA,MAAMtZ,EAAUiZ,GAAc,CAACI,EAAGrZ,QAASsZ,GAAY,CACrD1Z,aAAc,CAAC9/D,EAAGC,IAAMA,EACxBggE,aAAc,CAACjgE,EAAGC,IAAMA,IAE1B,MAAO,CAACgtD,MAAOssB,EAAGtsB,MAAOiT,W,kBCpE3B,IAAIuZ,GAASC,GAEb,GAAsB,oBAAXngE,QAA6C,oBAAZ3J,QAAyB,CACnE,IAAM2J,OAAOogE,cAAepgE,OAAOqgE,YACjC,MAAM,IAAI33E,MAAM,iCAElBy3E,GAAUngE,OAAOqgE,YACjBH,GAAUlgE,OAAOogE,iBAKjBD,GAAUG,gBAAuBC,WAAWF,YAG5CH,GAAUM,gBAAuBD,WAAWF,YAI9C,MAAMr+D,GAAqCvb,IAAM,IAAI05E,IAAUn+D,OAAOvb,GCrBhEg6E,GAAYxwE,GAA0B,WAAXA,EAAE46B,MAAkC,MAAb56B,EAAEiV,OAQnDw7D,eAAeC,GACpBC,EACAx9D,EACAo1C,GAEA,MAAMqoB,QAAiBD,EAAQ79E,IAAIqgB,GACnC,OAAOo1C,EAAOf,aAAa7kD,KAAKmlC,MAAM/1B,GAAO6+D,KAsBxCH,eAAeI,GACpBF,EACAx9D,EACAo1C,EACAuoB,GAEA,IACE,MAAMF,QAAiBD,EAAQ79E,IAAIqgB,GACnC,OAAOo1C,EAAOf,aAAa7kD,KAAKmlC,MAAM/1B,GAAO6+D,KAC7C,MAAO5wE,GACP,GAAIwwE,GAASxwE,GAEX,OADA+wE,QAAQrzE,IAAR,kCAAuCyV,EAAvC,kBACO29D,IAEP,MAAM9wE,GCdZ,SAAS9B,GAAK61C,GAAO,IAAIl4B,EAAMk4B,EAAI/9C,OAAQ,OAAS6lB,GAAO,GAAKk4B,EAAIl4B,GAAO,EAI3E,MA2DMm1D,GACJ,IAAI/oE,WAAW,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAEpEgpE,GACJ,IAAIhpE,WAAW,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAE7EipE,GACJ,IAAIjpE,WAAW,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAEhDkpE,GACJ,IAAIlpE,WAAW,CAAC,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAgBxDmpE,GAAgB,IAAIh7E,MAAM,KAChC8H,GAAKkzE,IAOL,MAAMC,GAAgB,IAAIj7E,MAAMk7E,IAChCpzE,GAAKmzE,IAKL,MAAME,GAAgB,IAAIn7E,MAjBJ,KAkBtB8H,GAAKqzE,IAML,MAAMC,GAAgB,IAAIp7E,MAAMq7E,KAChCvzE,GAAKszE,IAGL,MAAME,GAAgB,IAAIt7E,MAhGJ,IAiGtB8H,GAAKwzE,IAGL,MAAMC,GAAgB,IAAIv7E,MA3FJ,IAgGtB,SAASw7E,GAAeC,EAAaC,EAAYC,EAAYC,EAAOC,GAElE38E,KAAKu8E,YAAeA,EACpBv8E,KAAKw8E,WAAeA,EACpBx8E,KAAKy8E,WAAeA,EACpBz8E,KAAK08E,MAAeA,EACpB18E,KAAK28E,WAAeA,EAGpB38E,KAAK48E,UAAeL,GAAeA,EAAY77E,OAIjD,IAAIm8E,GACAC,GACAC,GAGJ,SAASC,GAASC,EAAUC,GAC1Bl9E,KAAKi9E,SAAWA,EAChBj9E,KAAKm9E,SAAW,EAChBn9E,KAAKk9E,UAAYA,EAzBnBt0E,GAAKyzE,IA8BL,MAAMe,GAAUC,GAEPA,EAAO,IAAMpB,GAAWoB,GAAQpB,GAAW,KAAOoB,IAAS,IAQ9DC,GAAY,CAAC5+E,EAAGoyB,KAGpBpyB,EAAE6+E,YAAY7+E,EAAE8+E,WAAmB,IAAN,EAC7B9+E,EAAE6+E,YAAY7+E,EAAE8+E,WAAc1sD,IAAM,EAAK,KAQrC2sD,GAAY,CAAC/+E,EAAGd,EAAO8C,KAEvBhC,EAAEg/E,SAtIc,GAsISh9E,GAC3BhC,EAAEi/E,QAAW//E,GAASc,EAAEg/E,SAAY,MACpCJ,GAAU5+E,EAAGA,EAAEi/E,QACfj/E,EAAEi/E,OAAS//E,GAzIO,GAyIcc,EAAEg/E,SAClCh/E,EAAEg/E,UAAYh9E,EA1II,KA4IlBhC,EAAEi/E,QAAW//E,GAASc,EAAEg/E,SAAY,MACpCh/E,EAAEg/E,UAAYh9E,IAKZk9E,GAAY,CAACl/E,EAAG1B,EAAG6gF,KAEvBJ,GAAU/+E,EAAGm/E,EAAS,EAAJ7gF,GAAiB6gF,EAAS,EAAJ7gF,EAAQ,KAS5C8gF,GAAa,CAACx4C,EAAM/e,KAExB,IAAIwM,EAAM,EACV,GACEA,GAAc,EAAPuS,EACPA,KAAU,EACVvS,IAAQ,UACCxM,EAAM,GACjB,OAAOwM,IAAQ,GAiIXgrD,GAAY,CAACF,EAAMV,EAAUa,KAKjC,MAAMC,EAAY,IAAIn9E,MAAMo9E,IAC5B,IACIj2E,EACA7J,EAFAknC,EAAO,EAOX,IAAKr9B,EAAO,EAAGA,GAtTK,GAsTaA,IAC/Bg2E,EAAUh2E,GAAQq9B,EAAQA,EAAO04C,EAAS/1E,EAAO,IAAO,EAS1D,IAAK7J,EAAI,EAAIA,GAAK++E,EAAU/+E,IAAK,CAC/B,IAAImoB,EAAMs3D,EAAS,EAAJz/E,EAAQ,GACX,IAARmoB,IAEJs3D,EAAS,EAAJz/E,GAAkB0/E,GAAWG,EAAU13D,KAAQA,MAoHlD43D,GAAcz/E,IAElB,IAAIN,EAGJ,IAAKA,EAAI,EAAGA,EAzcQggF,IAycMhgF,IAAOM,EAAE2/E,UAAc,EAAJjgF,GAAkB,EAC/D,IAAKA,EAAI,EAAGA,EAvcQ,GAucMA,IAAOM,EAAE4/E,UAAc,EAAJlgF,GAAkB,EAC/D,IAAKA,EAAI,EAAGA,EArcQ,GAqcMA,IAAOM,EAAE6/E,QAAY,EAAJngF,GAAkB,EAE7DM,EAAE2/E,UAAUG,KAA0B,EACtC9/E,EAAE+/E,QAAU//E,EAAEggF,WAAa,EAC3BhgF,EAAEigF,SAAWjgF,EAAEyuB,QAAU,GAOrByxD,GAAalgF,IAEbA,EAAEg/E,SAAW,EACfJ,GAAU5+E,EAAGA,EAAEi/E,QACNj/E,EAAEg/E,SAAW,IAEtBh/E,EAAE6+E,YAAY7+E,EAAE8+E,WAAa9+E,EAAEi/E,QAEjCj/E,EAAEi/E,OAAS,EACXj/E,EAAEg/E,SAAW,GA8BTmB,GAAU,CAAChB,EAAMz/E,EAAGrB,EAAG80C,KAE3B,MAAMitC,EAAU,EAAJ1gF,EACN2gF,EAAU,EAAJhiF,EACZ,OAAQ8gF,EAAKiB,GAAgBjB,EAAKkB,IAC1BlB,EAAKiB,KAAkBjB,EAAKkB,IAAiBltC,EAAMzzC,IAAMyzC,EAAM90C,IASnEiiF,GAAa,CAACtgF,EAAGm/E,EAAM5rD,KAK3B,MAAMzyB,EAAId,EAAEugF,KAAKhtD,GACjB,IAAI5vB,EAAI4vB,GAAK,EACb,KAAO5vB,GAAK3D,EAAEwgF,WAER78E,EAAI3D,EAAEwgF,UACRL,GAAQhB,EAAMn/E,EAAEugF,KAAK58E,EAAI,GAAI3D,EAAEugF,KAAK58E,GAAI3D,EAAEmzC,QAC1CxvC,KAGEw8E,GAAQhB,EAAMr+E,EAAGd,EAAEugF,KAAK58E,GAAI3D,EAAEmzC,SAGlCnzC,EAAEugF,KAAKhtD,GAAKvzB,EAAEugF,KAAK58E,GACnB4vB,EAAI5vB,EAGJA,IAAM,EAER3D,EAAEugF,KAAKhtD,GAAKzyB,GAUR2/E,GAAiB,CAACzgF,EAAG0gF,EAAOC,KAKhC,IAAIhC,EACAiC,EAEAh6C,EACA2P,EAFAsqC,EAAK,EAIT,GAAmB,IAAf7gF,EAAEigF,SACJ,GACEtB,EAAQ3+E,EAAE6+E,YAAY7+E,EAAE8gF,MAAa,EAALD,IAAW,EAAM7gF,EAAE6+E,YAAY7+E,EAAE8gF,MAAa,EAALD,EAAS,GAClFD,EAAK5gF,EAAE6+E,YAAY7+E,EAAE+gF,MAAQF,GAC7BA,IAEa,IAATlC,EACFO,GAAUl/E,EAAG4gF,EAAIF,IAIjB95C,EAAO42C,GAAaoD,GACpB1B,GAAUl/E,EAAG4mC,EAtkBC,IAskBiB,EAAG85C,GAClCnqC,EAAQymC,GAAYp2C,GACN,IAAV2P,IACFqqC,GAAMlD,GAAY92C,GAClBm4C,GAAU/+E,EAAG4gF,EAAIrqC,IAEnBooC,IACA/3C,EAAO83C,GAAOC,GAGdO,GAAUl/E,EAAG4mC,EAAM+5C,GACnBpqC,EAAQ0mC,GAAYr2C,GACN,IAAV2P,IACFooC,GAAQhB,GAAU/2C,GAClBm4C,GAAU/+E,EAAG2+E,EAAMpoC,WAQhBsqC,EAAK7gF,EAAEigF,UAGlBf,GAAUl/E,EAlkBQ,IAkkBM0gF,IAYpBM,GAAa,CAAChhF,EAAGwjD,KAIrB,MAAM27B,EAAW37B,EAAK+6B,SAChB0C,EAAWz9B,EAAKg7B,UAAUX,YAC1BK,EAAY16B,EAAKg7B,UAAUN,UAC3BF,EAAWx6B,EAAKg7B,UAAUR,MAChC,IAAIt+E,EAAGrB,EAEH8Q,EADAsvE,GAAY,EAUhB,IAHAz+E,EAAEwgF,SAAW,EACbxgF,EAAEkhF,SAhnBkB,IAknBfxhF,EAAI,EAAGA,EAAIs+E,EAAOt+E,IACQ,IAAzBy/E,EAAS,EAAJz/E,IACPM,EAAEugF,OAAOvgF,EAAEwgF,UAAY/B,EAAW/+E,EAClCM,EAAEmzC,MAAMzzC,GAAK,GAGby/E,EAAS,EAAJz/E,EAAQ,GAAa,EAS9B,KAAOM,EAAEwgF,SAAW,GAClBrxE,EAAOnP,EAAEugF,OAAOvgF,EAAEwgF,UAAa/B,EAAW,IAAMA,EAAW,EAC3DU,EAAY,EAAPhwE,GAAqB,EAC1BnP,EAAEmzC,MAAMhkC,GAAQ,EAChBnP,EAAE+/E,UAEE7B,IACFl+E,EAAEggF,YAAciB,EAAa,EAAP9xE,EAAW,IASrC,IALAq0C,EAAKi7B,SAAWA,EAKX/+E,EAAKM,EAAEwgF,UAAY,EAAc9gF,GAAK,EAAGA,IAAO4gF,GAAWtgF,EAAGm/E,EAAMz/E,GAKzEyP,EAAO6uE,EACP,GAGEt+E,EAAIM,EAAEugF,KAAK,GACXvgF,EAAEugF,KAAK,GAAiBvgF,EAAEugF,KAAKvgF,EAAEwgF,YACjCF,GAAWtgF,EAAGm/E,EAAM,GAGpB9gF,EAAI2B,EAAEugF,KAAK,GAEXvgF,EAAEugF,OAAOvgF,EAAEkhF,UAAYxhF,EACvBM,EAAEugF,OAAOvgF,EAAEkhF,UAAY7iF,EAGvB8gF,EAAY,EAAPhwE,GAAqBgwE,EAAS,EAAJz/E,GAAkBy/E,EAAS,EAAJ9gF,GACtD2B,EAAEmzC,MAAMhkC,IAASnP,EAAEmzC,MAAMzzC,IAAMM,EAAEmzC,MAAM90C,GAAK2B,EAAEmzC,MAAMzzC,GAAKM,EAAEmzC,MAAM90C,IAAM,EACvE8gF,EAAS,EAAJz/E,EAAQ,GAAay/E,EAAS,EAAJ9gF,EAAQ,GAAa8Q,EAGpDnP,EAAEugF,KAAK,GAAiBpxE,IACxBmxE,GAAWtgF,EAAGm/E,EAAM,SAEbn/E,EAAEwgF,UAAY,GAEvBxgF,EAAEugF,OAAOvgF,EAAEkhF,UAAYlhF,EAAEugF,KAAK,GApeb,EAACvgF,EAAGwjD,KAIrB,MAAM27B,EAAkB37B,EAAK+6B,SACvBE,EAAkBj7B,EAAKi7B,SACvBwC,EAAkBz9B,EAAKg7B,UAAUX,YACjCK,EAAkB16B,EAAKg7B,UAAUN,UACjC3nC,EAAkBiN,EAAKg7B,UAAUV,WACjCh7E,EAAkB0gD,EAAKg7B,UAAUT,WACjCE,EAAkBz6B,EAAKg7B,UAAUP,WACvC,IAAIn/C,EACAp/B,EAAGrB,EACHkL,EACA43E,EACAnyE,EACAoyE,EAAW,EAEf,IAAK73E,EAAO,EAAGA,GA1NK,GA0NaA,IAC/BvJ,EAAEs/E,SAAS/1E,GAAQ,EAQrB,IAFA41E,EAA0B,EAArBn/E,EAAEugF,KAAKvgF,EAAEkhF,UAAgB,GAAa,EAEtCpiD,EAAI9+B,EAAEkhF,SAAW,EAAGpiD,EAtOL,IAsOoBA,IACtCp/B,EAAIM,EAAEugF,KAAKzhD,GACXv1B,EAAO41E,EAA+B,EAA1BA,EAAS,EAAJz/E,EAAQ,GAAiB,GAAa,EACnD6J,EAAO00E,IACT10E,EAAO00E,EACPmD,KAEFjC,EAAS,EAAJz/E,EAAQ,GAAa6J,EAGtB7J,EAAI++E,IAERz+E,EAAEs/E,SAAS/1E,KACX43E,EAAQ,EACJzhF,GAAKoD,IACPq+E,EAAQ5qC,EAAM72C,EAAIoD,IAEpBkM,EAAImwE,EAAS,EAAJz/E,GACTM,EAAE+/E,SAAW/wE,GAAKzF,EAAO43E,GACrBjD,IACFl+E,EAAEggF,YAAchxE,GAAKiyE,EAAU,EAAJvhF,EAAQ,GAAayhF,KAGpD,GAAiB,IAAbC,EAAJ,CAMA,EAAG,CAED,IADA73E,EAAO00E,EAAa,EACQ,IAArBj+E,EAAEs/E,SAAS/1E,IAAeA,IACjCvJ,EAAEs/E,SAAS/1E,KACXvJ,EAAEs/E,SAAS/1E,EAAO,IAAM,EACxBvJ,EAAEs/E,SAASrB,KAIXmD,GAAY,QACLA,EAAW,GAOpB,IAAK73E,EAAO00E,EAAqB,IAAT10E,EAAYA,IAElC,IADA7J,EAAIM,EAAEs/E,SAAS/1E,GACF,IAAN7J,GACLrB,EAAI2B,EAAEugF,OAAOzhD,GACTzgC,EAAIogF,IACJU,EAAS,EAAJ9gF,EAAQ,KAAekL,IAE9BvJ,EAAE+/E,UAAYx2E,EAAO41E,EAAS,EAAJ9gF,EAAQ,IAAc8gF,EAAS,EAAJ9gF,GACrD8gF,EAAS,EAAJ9gF,EAAQ,GAAakL,GAE5B7J,OAsZJ2hF,CAAWrhF,EAAGwjD,GAGd67B,GAAUF,EAAMV,EAAUz+E,EAAEs/E,WAQxBgC,GAAY,CAACthF,EAAGm/E,EAAMV,KAK1B,IAAI/+E,EAEA6hF,EADAC,GAAW,EAGXC,EAAUtC,EAAK,GAEf71D,EAAQ,EACRo4D,EAAY,EACZC,EAAY,EAQhB,IANgB,IAAZF,IACFC,EAAY,IACZC,EAAY,GAEdxC,EAAsB,GAAhBV,EAAW,GAAS,GAAa,MAElC/+E,EAAI,EAAGA,GAAK++E,EAAU/+E,IACzB6hF,EAASE,EACTA,EAAUtC,EAAe,GAATz/E,EAAI,GAAS,KAEvB4pB,EAAQo4D,GAAaH,IAAWE,IAG3Bn4D,EAAQq4D,EACjB3hF,EAAE6/E,QAAiB,EAAT0B,IAAwBj4D,EAEd,IAAXi4D,GAELA,IAAWC,GAAWxhF,EAAE6/E,QAAiB,EAAT0B,KACpCvhF,EAAE6/E,QAAQ+B,OAEDt4D,GAAS,GAClBtpB,EAAE6/E,QAAQgC,MAGV7hF,EAAE6/E,QAAQiC,MAGZx4D,EAAQ,EACRk4D,EAAUD,EAEM,IAAZE,GACFC,EAAY,IACZC,EAAY,GAEHJ,IAAWE,GACpBC,EAAY,EACZC,EAAY,IAGZD,EAAY,EACZC,EAAY,KAUZI,GAAY,CAAC/hF,EAAGm/E,EAAMV,KAK1B,IAAI/+E,EAEA6hF,EADAC,GAAW,EAGXC,EAAUtC,EAAK,GAEf71D,EAAQ,EACRo4D,EAAY,EACZC,EAAY,EAQhB,IALgB,IAAZF,IACFC,EAAY,IACZC,EAAY,GAGTjiF,EAAI,EAAGA,GAAK++E,EAAU/+E,IAIzB,GAHA6hF,EAASE,EACTA,EAAUtC,EAAe,GAATz/E,EAAI,GAAS,OAEvB4pB,EAAQo4D,GAAaH,IAAWE,GAAtC,CAGO,GAAIn4D,EAAQq4D,EACjB,GAAKzC,GAAUl/E,EAAGuhF,EAAQvhF,EAAE6/E,eAA+B,KAAVv2D,QAE7B,IAAXi4D,GACLA,IAAWC,IACbtC,GAAUl/E,EAAGuhF,EAAQvhF,EAAE6/E,SACvBv2D,KAGF41D,GAAUl/E,EAlxBI,GAkxBQA,EAAE6/E,SACxBd,GAAU/+E,EAAGspB,EAAQ,EAAG,IAEfA,GAAS,IAClB41D,GAAUl/E,EAnxBI,GAmxBUA,EAAE6/E,SAC1Bd,GAAU/+E,EAAGspB,EAAQ,EAAG,KAGxB41D,GAAUl/E,EApxBI,GAoxBYA,EAAE6/E,SAC5Bd,GAAU/+E,EAAGspB,EAAQ,GAAI,IAG3BA,EAAQ,EACRk4D,EAAUD,EACM,IAAZE,GACFC,EAAY,IACZC,EAAY,GAEHJ,IAAWE,GACpBC,EAAY,EACZC,EAAY,IAGZD,EAAY,EACZC,EAAY,KAwHlB,IAAIK,IAAmB,EAKvB,MAuBMC,GAAmB,CAACjiF,EAAG+/C,EAAKmiC,EAAY97D,KAM5C24D,GAAU/+E,EAAG,GAAuBomB,EAAO,EAAI,GAAI,GA3flC,EAACpmB,EAAG+/C,EAAKl4B,EAAKs6D,KAM/BjC,GAAUlgF,GAENmiF,IACFvD,GAAU5+E,EAAG6nB,GACb+2D,GAAU5+E,GAAI6nB,IAKhB7nB,EAAE6+E,YAAY7rE,IAAIhT,EAAE+b,OAAOqmE,SAASriC,EAAKA,EAAMl4B,GAAM7nB,EAAE8+E,SACvD9+E,EAAE8+E,SAAWj3D,GA4ebw6D,CAAWriF,EAAG+/C,EAAKmiC,GAAY,IAoKjC,IAMII,GAAQ,CACXC,SAzMiBviF,IAGXgiF,KA5mBgB,MAErB,IAAItiF,EACA6J,EACAvH,EACA4kC,EACA+3C,EACJ,MAAMW,EAAW,IAAIl9E,MAAMo9E,IAiB3B,IADAx9E,EAAS,EACJ4kC,EAAO,EAAGA,EAAO47C,GAAkB57C,IAEtC,IADA82C,GAAY92C,GAAQ5kC,EACftC,EAAI,EAAGA,EAAK,GAAKs9E,GAAYp2C,GAAQlnC,IACxC89E,GAAax7E,KAAY4kC,EAY7B,IAJA42C,GAAax7E,EAAS,GAAK4kC,EAG3B+3C,EAAO,EACF/3C,EAAO,EAAGA,EAAO,GAAIA,IAExB,IADA+2C,GAAU/2C,GAAQ+3C,EACbj/E,EAAI,EAAGA,EAAK,GAAKu9E,GAAYr2C,GAAQlnC,IACxC69E,GAAWoB,KAAU/3C,EAKzB,IADA+3C,IAAS,EACF/3C,EAvYa,GAuYGA,IAErB,IADA+2C,GAAU/2C,GAAQ+3C,GAAQ,EACrBj/E,EAAI,EAAGA,EAAK,GAAMu9E,GAAYr2C,GAAQ,EAAKlnC,IAC9C69E,GAAW,IAAMoB,KAAU/3C,EAM/B,IAAKr9B,EAAO,EAAGA,GAvYK,GAuYaA,IAC/B+1E,EAAS/1E,GAAQ,EAInB,IADA7J,EAAI,EACGA,GAAK,KACV09E,GAAiB,EAAJ19E,EAAQ,GAAa,EAClCA,IACA4/E,EAAS,KAEX,KAAO5/E,GAAK,KACV09E,GAAiB,EAAJ19E,EAAQ,GAAa,EAClCA,IACA4/E,EAAS,KAEX,KAAO5/E,GAAK,KACV09E,GAAiB,EAAJ19E,EAAQ,GAAa,EAClCA,IACA4/E,EAAS,KAEX,KAAO5/E,GAAK,KACV09E,GAAiB,EAAJ19E,EAAQ,GAAa,EAClCA,IACA4/E,EAAS,KASX,IAHAD,GAAUjC,GAAcqF,IAAanD,GAGhC5/E,EAAI,EAAGA,EAhbQ,GAgbKA,IACvB29E,GAAiB,EAAJ39E,EAAQ,GAAa,EAClC29E,GAAiB,EAAJ39E,GAAkB0/E,GAAW1/E,EAAG,GAI/Cy+E,GAAgB,IAAIP,GAAeR,GAAcJ,GAAa0C,IAzb1CA,IAYA,IA8apBtB,GAAgB,IAAIR,GAAeP,GAAcJ,GAAa,EAvb1C,GASA,IA+apBoB,GAAiB,IAAIT,GAAe,IAAIx7E,MAAM,GAAI86E,GAAc,EArb5C,GAiBF,IAi7BhBwF,GACAV,IAAmB,GAGrBhiF,EAAE2iF,OAAU,IAAIrE,GAASt+E,EAAE2/E,UAAWxB,IACtCn+E,EAAE4iF,OAAU,IAAItE,GAASt+E,EAAE4/E,UAAWxB,IACtCp+E,EAAE6iF,QAAU,IAAIvE,GAASt+E,EAAE6/E,QAASxB,IAEpCr+E,EAAEi/E,OAAS,EACXj/E,EAAEg/E,SAAW,EAGbS,GAAWz/E,IA0LZiiF,iBAPwBA,GAQxBa,gBA1JuB,CAAC9iF,EAAG+/C,EAAKmiC,EAAY97D,KAM3C,IAAI28D,EAAUC,EACVC,EAAc,EAGdjjF,EAAEwP,MAAQ,GA5hCc,IA+hCtBxP,EAAEkjF,KAAKC,YACTnjF,EAAEkjF,KAAKC,UArGY,CAACnjF,IAKxB,IACIN,EADA0jF,EAAa,WAIjB,IAAK1jF,EAAI,EAAGA,GAAK,GAAIA,IAAK0jF,KAAgB,EACxC,GAAkB,EAAbA,GAAoD,IAAhCpjF,EAAE2/E,UAAc,EAAJjgF,GACnC,OAz8BwB,EA88B5B,GAAoC,IAAhCM,EAAE2/E,UAAU,KAA0D,IAAjC3/E,EAAE2/E,UAAU,KAChB,IAAjC3/E,EAAE2/E,UAAU,IACd,OA/8B0B,EAi9B5B,IAAKjgF,EAAI,GAAIA,EAr7BO,IAq7BOA,IACzB,GAAoC,IAAhCM,EAAE2/E,UAAc,EAAJjgF,GACd,OAn9BwB,EA09B5B,OA39B4B,GAmiCL2jF,CAAiBrjF,IAItCghF,GAAWhhF,EAAGA,EAAE2iF,QAIhB3B,GAAWhhF,EAAGA,EAAE4iF,QAUhBK,EApMkB,CAACjjF,IAErB,IAAIijF,EAgBJ,IAbA3B,GAAUthF,EAAGA,EAAE2/E,UAAW3/E,EAAE2iF,OAAOlE,UACnC6C,GAAUthF,EAAGA,EAAE4/E,UAAW5/E,EAAE4iF,OAAOnE,UAGnCuC,GAAWhhF,EAAGA,EAAE6iF,SASXI,EAAcK,GAAcL,GAAe,GACW,IAArDjjF,EAAE6/E,QAAgC,EAAxB1C,GAAS8F,GAAmB,GADOA,KAUnD,OAJAjjF,EAAE+/E,SAAW,GAAKkD,EAAc,GAAK,EAAI,EAAI,EAItCA,GAwKSM,CAAcvjF,GAG5B+iF,EAAY/iF,EAAE+/E,QAAU,EAAI,IAAO,EACnCiD,EAAehjF,EAAEggF,WAAa,EAAI,IAAO,EAMrCgD,GAAeD,IAAYA,EAAWC,IAI1CD,EAAWC,EAAcd,EAAa,EAGnCA,EAAa,GAAKa,IAAuB,IAAThjC,EASnCkiC,GAAiBjiF,EAAG+/C,EAAKmiC,EAAY97D,GAnlCX,IAqlCjBpmB,EAAEwjF,UAAwBR,IAAgBD,GAEnDhE,GAAU/+E,EAAG,GAAuBomB,EAAO,EAAI,GAAI,GACnDq6D,GAAezgF,EAAGo9E,GAAcC,MAGhC0B,GAAU/+E,EAAG,GAAoBomB,EAAO,EAAI,GAAI,GAjM7B,EAACpmB,EAAGyjF,EAAQC,EAAQC,KAIzC,IAAIC,EASJ,IAHA7E,GAAU/+E,EAAGyjF,EAAS,IAAK,GAC3B1E,GAAU/+E,EAAG0jF,EAAS,EAAK,GAC3B3E,GAAU/+E,EAAG2jF,EAAU,EAAI,GACtBC,EAAO,EAAGA,EAAOD,EAASC,IAE7B7E,GAAU/+E,EAAGA,EAAE6/E,QAAyB,EAAjB1C,GAASyG,GAAY,GAAY,GAI1D7B,GAAU/hF,EAAGA,EAAE2/E,UAAW8D,EAAS,GAGnC1B,GAAU/hF,EAAGA,EAAE4/E,UAAW8D,EAAS,IA4KjCG,CAAe7jF,EAAGA,EAAE2iF,OAAOlE,SAAW,EAAGz+E,EAAE4iF,OAAOnE,SAAW,EAAGwE,EAAc,GAC9ExC,GAAezgF,EAAGA,EAAE2/E,UAAW3/E,EAAE4/E,YAMnCH,GAAWz/E,GAEPomB,GACF85D,GAAUlgF,IA8Eb8jF,UApEiB,CAAC9jF,EAAG2+E,EAAMiC,KAO1B5gF,EAAE6+E,YAAY7+E,EAAE8gF,MAAqB,EAAb9gF,EAAEigF,UAAqBtB,IAAS,EAAK,IAC7D3+E,EAAE6+E,YAAY7+E,EAAE8gF,MAAqB,EAAb9gF,EAAEigF,SAAe,GAAY,IAAPtB,EAE9C3+E,EAAE6+E,YAAY7+E,EAAE+gF,MAAQ/gF,EAAEigF,UAAiB,IAALW,EACtC5gF,EAAEigF,WAEW,IAATtB,EAEF3+E,EAAE2/E,UAAe,EAALiB,MAEZ5gF,EAAEyuB,UAEFkwD,IAKA3+E,EAAE2/E,UAA8C,GAAnCnC,GAAaoD,GAvmCR,IAumCyB,MAC3C5gF,EAAE4/E,UAAyB,EAAflB,GAAOC,OA0Bb3+E,EAAEigF,WAAajgF,EAAE+jF,YAAc,GAkBxCC,UAvKkBhkF,IACjB++E,GAAU/+E,EAAGikF,EAAmB,GAChC/E,GAAUl/E,EAl9BQ,IAk9BMo9E,IAjzBT,CAACp9E,IAEG,KAAfA,EAAEg/E,UACJJ,GAAU5+E,EAAGA,EAAEi/E,QACfj/E,EAAEi/E,OAAS,EACXj/E,EAAEg/E,SAAW,GAEJh/E,EAAEg/E,UAAY,IACvBh/E,EAAE6+E,YAAY7+E,EAAE8+E,WAAwB,IAAX9+E,EAAEi/E,OAC/Bj/E,EAAEi/E,SAAW,EACbj/E,EAAEg/E,UAAY,IAwyBhBkF,CAASlkF,KAuNX,IAAImkF,GAzBY,CAACC,EAAOrkC,EAAKl4B,EAAKw8D,KAChC,IAAIC,EAAc,MAARF,EAAiB,EACvBG,EAAOH,IAAU,GAAM,MAAS,EAChC1kF,EAAI,EAER,KAAe,IAARmoB,GAAW,CAIhBnoB,EAAImoB,EAAM,IAAO,IAAOA,EACxBA,GAAOnoB,EAEP,GACE4kF,EAAMA,EAAKvkC,EAAIskC,KAAS,EACxBE,EAAMA,EAAKD,EAAK,UACP5kF,GAEX4kF,GAAM,MACNC,GAAM,MAGR,OAAQD,EAAMC,GAAM,GAAM,GA8B5B,MAeMC,GAAW,IAAIhmC,YAfH,MAChB,IAAIlgD,EAAGmmF,EAAQ,GAEf,IAAK,IAAI/kF,EAAI,EAAGA,EAAI,IAAKA,IAAK,CAC5BpB,EAAIoB,EACJ,IAAK,IAAI6zB,EAAI,EAAGA,EAAI,EAAGA,IACrBj1B,EAAU,EAAJA,EAAU,WAAcA,IAAM,EAAOA,IAAM,EAEnDmmF,EAAM/kF,GAAKpB,EAGb,OAAOmmF,GAIwBC,IAiBjC,IAAIC,GAdU,CAACC,EAAK7kC,EAAKl4B,EAAKw8D,KAC5B,MAAMllF,EAAIqlF,GACJ3yD,EAAMwyD,EAAMx8D,EAElB+8D,IAAQ,EAER,IAAK,IAAI3mF,EAAIomF,EAAKpmF,EAAI4zB,EAAK5zB,IACzB2mF,EAAOA,IAAQ,EAAKzlF,EAAmB,KAAhBylF,EAAM7kC,EAAI9hD,KAGnC,OAAgB,EAAR2mF,GAyBN,GAAW,CACbC,EAAQ,kBACRC,EAAQ,aACRC,EAAQ,GACR,KAAQ,aACR,KAAQ,eACR,KAAQ,aACR,KAAQ,sBACR,KAAQ,eACR,KAAQ,wBAsBNC,GAAY,CAGdC,WAAoB,EACpBC,gBAAoB,EACpB38B,aAAoB,EACpB48B,aAAoB,EACpBC,SAAoB,EACpBC,QAAoB,EACpBC,QAAoB,EAKpBC,KAAoB,EACpBC,aAAoB,EACpBC,YAAoB,EACpBC,SAAoB,EACpBC,gBAAoB,EACpBC,cAAoB,EACpBC,aAAoB,EACpBC,aAAoB,EAIpBC,iBAA0B,EAC1BC,aAA0B,EAC1BC,mBAA0B,EAC1BC,uBAA0B,EAG1BC,WAA0B,EAC1BC,eAA0B,EAC1BC,MAA0B,EAC1BC,QAA0B,EAC1BC,mBAA0B,EAG1BC,SAA0B,EAC1BC,OAA0B,EAE1BC,UAA0B,EAG1BC,WAA0B,GAuB5B,MAAQpE,SAAUqE,GAAY3E,iBAAkB4E,GAAoB/D,gBAAiBgE,GAAmBhD,UAAWiD,GAAa/C,UAAWgD,IAAgB1E,IAQrJ,WACJ2C,GAAU,gBAAEC,GAAe,aAAEC,GAAY,SAAEC,GAAQ,QAAEC,GAAO,KAC5DE,GAAI,aAAEC,GAAY,eAAEG,GAAc,aAAEC,GAAY,YAAEE,GAAW,sBAC7DI,GAAqB,WACrBC,GAAU,eAAEC,GAAc,MAAEC,GAAOC,QAASW,GAAS,mBAAEV,GACvDG,UAAWQ,GAAW,WACtBP,IACE3B,GAgDErjC,GAAM,CAACuhC,EAAMiE,KACjBjE,EAAKtyD,IAAM,GAASu2D,GACbA,GAGHvD,GAAQ50E,IACJ,GAAO,IAAM,EAAM,EAAI,EAAI,GAG/Bo4E,GAAUrnC,IACd,IAAIl4B,EAAMk4B,EAAI/9C,OAAQ,OAAS6lB,GAAO,GAAKk4B,EAAIl4B,GAAO,GAKxD,IAIIw/D,GAJY,CAACrnF,EAAGsG,EAAM6P,KAAW7P,GAAQtG,EAAEsnF,WAAcnxE,GAAQnW,EAAEunF,UAYvE,MAAMC,GAAiBtE,IACrB,MAAMljF,EAAIkjF,EAAKvoC,MAGf,IAAI9yB,EAAM7nB,EAAE8+E,QACRj3D,EAAMq7D,EAAKuE,YACb5/D,EAAMq7D,EAAKuE,WAED,IAAR5/D,IAEJq7D,EAAK3mE,OAAOvJ,IAAIhT,EAAE6+E,YAAYuD,SAASpiF,EAAE0nF,YAAa1nF,EAAE0nF,YAAc7/D,GAAMq7D,EAAKyE,UACjFzE,EAAKyE,UAAY9/D,EACjB7nB,EAAE0nF,aAAe7/D,EACjBq7D,EAAK0E,WAAa//D,EAClBq7D,EAAKuE,WAAa5/D,EAClB7nB,EAAE8+E,SAAWj3D,EACK,IAAd7nB,EAAE8+E,UACJ9+E,EAAE0nF,YAAc,KAKdG,GAAmB,CAAC7nF,EAAGomB,KAC3B0gE,GAAkB9mF,EAAIA,EAAE8nF,aAAe,EAAI9nF,EAAE8nF,aAAe,EAAI9nF,EAAE+nF,SAAW/nF,EAAE8nF,YAAa1hE,GAC5FpmB,EAAE8nF,YAAc9nF,EAAE+nF,SAClBP,GAAcxnF,EAAEkjF,OAIZ8E,GAAW,CAAChoF,EAAGyC,KACnBzC,EAAE6+E,YAAY7+E,EAAE8+E,WAAar8E,GASzBwlF,GAAc,CAACjoF,EAAGyC,KAItBzC,EAAE6+E,YAAY7+E,EAAE8+E,WAAcr8E,IAAM,EAAK,IACzCzC,EAAE6+E,YAAY7+E,EAAE8+E,WAAiB,IAAJr8E,GAWzBylF,GAAW,CAAChF,EAAMnjC,EAAKzzC,EAAOwG,KAElC,IAAI+U,EAAMq7D,EAAKiF,SAGf,OADItgE,EAAM/U,IAAQ+U,EAAM/U,GACZ,IAAR+U,EAAoB,GAExBq7D,EAAKiF,UAAYtgE,EAGjBk4B,EAAI/sC,IAAIkwE,EAAK7mE,MAAM+lE,SAASc,EAAKkF,QAASlF,EAAKkF,QAAUvgE,GAAMvb,GACvC,IAApB42E,EAAKvoC,MAAMrvB,KACb43D,EAAKkB,MAAQD,GAAUjB,EAAKkB,MAAOrkC,EAAKl4B,EAAKvb,GAGlB,IAApB42E,EAAKvoC,MAAMrvB,OAClB43D,EAAKkB,MAAQO,GAAQzB,EAAKkB,MAAOrkC,EAAKl4B,EAAKvb,IAG7C42E,EAAKkF,SAAWvgE,EAChBq7D,EAAKmF,UAAYxgE,EAEVA,IAaHygE,GAAgB,CAACtoF,EAAGuoF,KAExB,IAEIvnE,EACA6G,EAHA2gE,EAAexoF,EAAEyoF,iBACjBC,EAAO1oF,EAAE+nF,SAGTY,EAAW3oF,EAAE4oF,YACbC,EAAa7oF,EAAE6oF,WACnB,MAAMC,EAAS9oF,EAAE+nF,SAAY/nF,EAAE+oF,OAhJX,IAiJhB/oF,EAAE+nF,UAAY/nF,EAAE+oF,OAjJA,KAiJ0B,EAExCC,EAAOhpF,EAAE+b,OAETktE,EAAQjpF,EAAEkpF,OACV5iF,EAAQtG,EAAEsG,KAMV6iF,EAASnpF,EAAE+nF,SA7JC,IA8JlB,IAAIqB,EAAaJ,EAAKN,EAAOC,EAAW,GACpCU,EAAaL,EAAKN,EAAOC,GAQzB3oF,EAAE4oF,aAAe5oF,EAAEspF,aACrBd,IAAiB,GAKfK,EAAa7oF,EAAEupF,YAAaV,EAAa7oF,EAAEupF,WAI/C,GAaE,GAXAvoE,EAAQunE,EAWJS,EAAKhoE,EAAQ2nE,KAAkBU,GAC/BL,EAAKhoE,EAAQ2nE,EAAW,KAAOS,GAC/BJ,EAAKhoE,KAA0BgoE,EAAKN,IACpCM,IAAOhoE,KAAwBgoE,EAAKN,EAAO,GAH/C,CAaAA,GAAQ,EACR1nE,IAMA,UAESgoE,IAAON,KAAUM,IAAOhoE,IAAUgoE,IAAON,KAAUM,IAAOhoE,IAC1DgoE,IAAON,KAAUM,IAAOhoE,IAAUgoE,IAAON,KAAUM,IAAOhoE,IAC1DgoE,IAAON,KAAUM,IAAOhoE,IAAUgoE,IAAON,KAAUM,IAAOhoE,IAC1DgoE,IAAON,KAAUM,IAAOhoE,IAAUgoE,IAAON,KAAUM,IAAOhoE,IAC1D0nE,EAAOS,GAOhB,GAHAthE,EA5NgB,KA4NKshE,EAAST,GAC9BA,EAAOS,EA7NS,IA+NZthE,EAAM8gE,EAAU,CAGlB,GAFA3oF,EAAEwpF,YAAcjB,EAChBI,EAAW9gE,EACPA,GAAOghE,EACT,MAEFO,EAAaJ,EAAKN,EAAOC,EAAW,GACpCU,EAAaL,EAAKN,EAAOC,YAEnBJ,EAAYjiF,EAAKiiF,EAAYU,IAAUH,GAA4B,KAAjBN,GAE5D,OAAIG,GAAY3oF,EAAEupF,UACTZ,EAEF3oF,EAAEupF,WAcLE,GAAezpF,IAEnB,MAAM0pF,EAAU1pF,EAAE+oF,OAClB,IAAIhpF,EAAGL,EAAGrB,EAAGsrF,EAAM/7E,EAInB,EAAG,CAqBD,GApBA+7E,EAAO3pF,EAAE4pF,YAAc5pF,EAAEupF,UAAYvpF,EAAE+nF,SAoBnC/nF,EAAE+nF,UAAY2B,GAAWA,EAtRX,KAsRqC,CAErD1pF,EAAE+b,OAAO/I,IAAIhT,EAAE+b,OAAOqmE,SAASsH,EAASA,EAAUA,GAAU,GAC5D1pF,EAAEwpF,aAAeE,EACjB1pF,EAAE+nF,UAAY2B,EAEd1pF,EAAE8nF,aAAe4B,EASjBhqF,EAAIM,EAAE6pF,UACN9pF,EAAIL,EAEJ,GACErB,EAAI2B,EAAEonB,OAAOrnB,GACbC,EAAEonB,KAAKrnB,GAAM1B,GAAKqrF,EAAUrrF,EAAIqrF,EAAU,UACjChqF,GAEXA,EAAIgqF,EACJ3pF,EAAIL,EAEJ,GACErB,EAAI2B,EAAEsG,OAAOvG,GACbC,EAAEsG,KAAKvG,GAAM1B,GAAKqrF,EAAUrrF,EAAIqrF,EAAU,UAIjChqF,GAEXiqF,GAAQD,EAEV,GAAwB,IAApB1pF,EAAEkjF,KAAKiF,SACT,MAmBF,GAJAzoF,EAAIwoF,GAASloF,EAAEkjF,KAAMljF,EAAE+b,OAAQ/b,EAAE+nF,SAAW/nF,EAAEupF,UAAWI,GACzD3pF,EAAEupF,WAAa7pF,EAGXM,EAAEupF,UAAYvpF,EAAE8pF,QAhVJ,EAyVd,IARAl8E,EAAM5N,EAAE+nF,SAAW/nF,EAAE8pF,OACrB9pF,EAAE+pF,MAAQ/pF,EAAE+b,OAAOnO,GAGnB5N,EAAE+pF,MAAQ1C,GAAKrnF,EAAGA,EAAE+pF,MAAO/pF,EAAE+b,OAAOnO,EAAM,IAInC5N,EAAE8pF,SAEP9pF,EAAE+pF,MAAQ1C,GAAKrnF,EAAGA,EAAE+pF,MAAO/pF,EAAE+b,OAAOnO,EA3VxB,EA2V4C,IAExD5N,EAAEsG,KAAKsH,EAAM5N,EAAEkpF,QAAUlpF,EAAEonB,KAAKpnB,EAAE+pF,OAClC/pF,EAAEonB,KAAKpnB,EAAE+pF,OAASn8E,EAClBA,IACA5N,EAAE8pF,WACE9pF,EAAEupF,UAAYvpF,EAAE8pF,OAjWR,aA0WT9pF,EAAEupF,UAxWS,KAwWwC,IAApBvpF,EAAEkjF,KAAKiF,WAoJ3C6B,GAAe,CAAChqF,EAAGsoD,KAEvB,IAAI2hC,EACAC,EAEJ,OAAS,CAMP,GAAIlqF,EAAEupF,UAvgBY,IAugBe,CAE/B,GADAE,GAAYzpF,GACRA,EAAEupF,UAzgBU,KAygBmBjhC,IAAU28B,GAC3C,OA9fkB,EAggBpB,GAAoB,IAAhBjlF,EAAEupF,UACJ,MA2BJ,GApBAU,EAAY,EACRjqF,EAAEupF,WAvhBU,IAyhBdvpF,EAAE+pF,MAAQ1C,GAAKrnF,EAAGA,EAAE+pF,MAAO/pF,EAAE+b,OAAO/b,EAAE+nF,SAzhBxB,EAyhBiD,IAC/DkC,EAAYjqF,EAAEsG,KAAKtG,EAAE+nF,SAAW/nF,EAAEkpF,QAAUlpF,EAAEonB,KAAKpnB,EAAE+pF,OACrD/pF,EAAEonB,KAAKpnB,EAAE+pF,OAAS/pF,EAAE+nF,UAOJ,IAAdkC,GAA4BjqF,EAAE+nF,SAAWkC,GAAejqF,EAAE+oF,OAhiB5C,MAqiBhB/oF,EAAEmqF,aAAe7B,GAActoF,EAAGiqF,IAGhCjqF,EAAEmqF,cA1iBU,EAsjBd,GAPAD,EAASnD,GAAY/mF,EAAGA,EAAE+nF,SAAW/nF,EAAEwpF,YAAaxpF,EAAEmqF,aA/iBxC,GAijBdnqF,EAAEupF,WAAavpF,EAAEmqF,aAKbnqF,EAAEmqF,cAAgBnqF,EAAEoqF,gBAAuCpqF,EAAEupF,WAtjBnD,EAsjB6E,CACzFvpF,EAAEmqF,eACF,GACEnqF,EAAE+nF,WAEF/nF,EAAE+pF,MAAQ1C,GAAKrnF,EAAGA,EAAE+pF,MAAO/pF,EAAE+b,OAAO/b,EAAE+nF,SA3jB5B,EA2jBqD,IAC/DkC,EAAYjqF,EAAEsG,KAAKtG,EAAE+nF,SAAW/nF,EAAEkpF,QAAUlpF,EAAEonB,KAAKpnB,EAAE+pF,OACrD/pF,EAAEonB,KAAKpnB,EAAE+pF,OAAS/pF,EAAE+nF,eAKQ,KAAnB/nF,EAAEmqF,cACbnqF,EAAE+nF,gBAGF/nF,EAAE+nF,UAAY/nF,EAAEmqF,aAChBnqF,EAAEmqF,aAAe,EACjBnqF,EAAE+pF,MAAQ/pF,EAAE+b,OAAO/b,EAAE+nF,UAErB/nF,EAAE+pF,MAAQ1C,GAAKrnF,EAAGA,EAAE+pF,MAAO/pF,EAAE+b,OAAO/b,EAAE+nF,SAAW,SAanDmC,EAASnD,GAAY/mF,EAAG,EAAGA,EAAE+b,OAAO/b,EAAE+nF,WAEtC/nF,EAAEupF,YACFvpF,EAAE+nF,WAEJ,GAAImC,IAEFrC,GAAiB7nF,GAAG,GACK,IAArBA,EAAEkjF,KAAKuE,WACT,OAllBkB,EAwlBxB,OADAznF,EAAE8pF,OAAW9pF,EAAE+nF,SAAW,EAAqB/nF,EAAE+nF,SAAWsC,EACxD/hC,IAAU88B,IAEZyC,GAAiB7nF,GAAG,GACK,IAArBA,EAAEkjF,KAAKuE,UAzlBW,EACA,GA8lBpBznF,EAAEigF,WAEJ4H,GAAiB7nF,GAAG,GACK,IAArBA,EAAEkjF,KAAKuE,WApmBW,EACA,GAgnBpB6C,GAAe,CAACtqF,EAAGsoD,KAEvB,IAAI2hC,EACAC,EAEAK,EAGJ,OAAS,CAMP,GAAIvqF,EAAEupF,UA3oBY,IA2oBe,CAE/B,GADAE,GAAYzpF,GACRA,EAAEupF,UA7oBU,KA6oBmBjhC,IAAU28B,GAC3C,OAloBkB,EAooBpB,GAAoB,IAAhBjlF,EAAEupF,UAAmB,MA0C3B,GApCAU,EAAY,EACRjqF,EAAEupF,WAzpBU,IA2pBdvpF,EAAE+pF,MAAQ1C,GAAKrnF,EAAGA,EAAE+pF,MAAO/pF,EAAE+b,OAAO/b,EAAE+nF,SA3pBxB,EA2pBiD,IAC/DkC,EAAYjqF,EAAEsG,KAAKtG,EAAE+nF,SAAW/nF,EAAEkpF,QAAUlpF,EAAEonB,KAAKpnB,EAAE+pF,OACrD/pF,EAAEonB,KAAKpnB,EAAE+pF,OAAS/pF,EAAE+nF,UAMtB/nF,EAAE4oF,YAAc5oF,EAAEmqF,aAClBnqF,EAAEwqF,WAAaxqF,EAAEwpF,YACjBxpF,EAAEmqF,aAAeE,EAEC,IAAdJ,GAA0BjqF,EAAE4oF,YAAc5oF,EAAEoqF,gBAC5CpqF,EAAE+nF,SAAWkC,GAAcjqF,EAAE+oF,OAtqBf,MA2qBhB/oF,EAAEmqF,aAAe7B,GAActoF,EAAGiqF,GAG9BjqF,EAAEmqF,cAAgB,IAClBnqF,EAAEwjF,WAAa2C,IAjrBL,IAirBoBnmF,EAAEmqF,cAAgCnqF,EAAE+nF,SAAW/nF,EAAEwpF,YAAc,QAK/FxpF,EAAEmqF,aAAeE,IAMjBrqF,EAAE4oF,aA5rBU,GA4rBoB5oF,EAAEmqF,cAAgBnqF,EAAE4oF,YAAa,CACnE2B,EAAavqF,EAAE+nF,SAAW/nF,EAAEupF,UA7rBd,EAosBdW,EAASnD,GAAY/mF,EAAGA,EAAE+nF,SAAW,EAAI/nF,EAAEwqF,WAAYxqF,EAAE4oF,YApsB3C,GA0sBd5oF,EAAEupF,WAAavpF,EAAE4oF,YAAc,EAC/B5oF,EAAE4oF,aAAe,EACjB,KACQ5oF,EAAE+nF,UAAYwC,IAElBvqF,EAAE+pF,MAAQ1C,GAAKrnF,EAAGA,EAAE+pF,MAAO/pF,EAAE+b,OAAO/b,EAAE+nF,SA/sB5B,EA+sBqD,IAC/DkC,EAAYjqF,EAAEsG,KAAKtG,EAAE+nF,SAAW/nF,EAAEkpF,QAAUlpF,EAAEonB,KAAKpnB,EAAE+pF,OACrD/pF,EAAEonB,KAAKpnB,EAAE+pF,OAAS/pF,EAAE+nF,gBAGK,KAAlB/nF,EAAE4oF,aAKb,GAJA5oF,EAAEyqF,gBAAkB,EACpBzqF,EAAEmqF,aAAeE,EACjBrqF,EAAE+nF,WAEEmC,IAEFrC,GAAiB7nF,GAAG,GACK,IAArBA,EAAEkjF,KAAKuE,WACT,OA/sBgB,OAotBf,GAAIznF,EAAEyqF,iBAgBX,GATAP,EAASnD,GAAY/mF,EAAG,EAAGA,EAAE+b,OAAO/b,EAAE+nF,SAAW,IAE7CmC,GAEFrC,GAAiB7nF,GAAG,GAGtBA,EAAE+nF,WACF/nF,EAAEupF,YACuB,IAArBvpF,EAAEkjF,KAAKuE,UACT,OAruBkB,OA2uBpBznF,EAAEyqF,gBAAkB,EACpBzqF,EAAE+nF,WACF/nF,EAAEupF,YAYN,OARIvpF,EAAEyqF,kBAGJP,EAASnD,GAAY/mF,EAAG,EAAGA,EAAE+b,OAAO/b,EAAE+nF,SAAW,IAEjD/nF,EAAEyqF,gBAAkB,GAEtBzqF,EAAE8pF,OAAS9pF,EAAE+nF,SAAWsC,EAAkBrqF,EAAE+nF,SAAWsC,EACnD/hC,IAAU88B,IAEZyC,GAAiB7nF,GAAG,GACK,IAArBA,EAAEkjF,KAAKuE,UA1vBW,EACA,GA+vBpBznF,EAAEigF,WAEJ4H,GAAiB7nF,GAAG,GACK,IAArBA,EAAEkjF,KAAKuE,WArwBW,EACA,GA66B1B,SAASiD,GAAOC,EAAaC,EAAUC,EAAaC,EAAW53E,GAE7D5R,KAAKqpF,YAAcA,EACnBrpF,KAAKspF,SAAWA,EAChBtpF,KAAKupF,YAAcA,EACnBvpF,KAAKwpF,UAAYA,EACjBxpF,KAAK4R,KAAOA,EAGd,MAAM63E,GAAsB,CAE1B,IAAIL,GAAO,EAAG,EAAG,EAAG,EA5iBC,CAAC1qF,EAAGsoD,KAKzB,IAAI0iC,EAAiB,MAOrB,IALIA,EAAiBhrF,EAAEirF,iBAAmB,IACxCD,EAAiBhrF,EAAEirF,iBAAmB,KAI/B,CAEP,GAAIjrF,EAAEupF,WAAa,EAAG,CAUpB,GADAE,GAAYzpF,GACQ,IAAhBA,EAAEupF,WAAmBjhC,IAAU28B,GACjC,OAtakB,EAyapB,GAAoB,IAAhBjlF,EAAEupF,UACJ,MAOJvpF,EAAE+nF,UAAY/nF,EAAEupF,UAChBvpF,EAAEupF,UAAY,EAGd,MAAM2B,EAAYlrF,EAAE8nF,YAAckD,EAElC,IAAmB,IAAfhrF,EAAE+nF,UAAkB/nF,EAAE+nF,UAAYmD,KAEpClrF,EAAEupF,UAAYvpF,EAAE+nF,SAAWmD,EAC3BlrF,EAAE+nF,SAAWmD,EAEbrD,GAAiB7nF,GAAG,GACK,IAArBA,EAAEkjF,KAAKuE,WACT,OA9bkB,EAuctB,GAAIznF,EAAE+nF,SAAW/nF,EAAE8nF,aAAgB9nF,EAAE+oF,OAndnB,MAqdhBlB,GAAiB7nF,GAAG,GACK,IAArBA,EAAEkjF,KAAKuE,WACT,OA3ckB,EAmdxB,OAFAznF,EAAE8pF,OAAS,EAEPxhC,IAAU88B,IAEZyC,GAAiB7nF,GAAG,GACK,IAArBA,EAAEkjF,KAAKuE,UApdW,EACA,IA0dpBznF,EAAE+nF,SAAW/nF,EAAE8nF,cAEjBD,GAAiB7nF,GAAG,GAChBA,EAAEkjF,KAAKuE,WAheW,KA07BxB,IAAIiD,GAAO,EAAG,EAAG,EAAG,EAAGV,IACvB,IAAIU,GAAO,EAAG,EAAG,GAAI,EAAGV,IACxB,IAAIU,GAAO,EAAG,EAAG,GAAI,GAAIV,IAEzB,IAAIU,GAAO,EAAG,EAAG,GAAI,GAAIJ,IACzB,IAAII,GAAO,EAAG,GAAI,GAAI,GAAIJ,IAC1B,IAAII,GAAO,EAAG,GAAI,IAAK,IAAKJ,IAC5B,IAAII,GAAO,EAAG,GAAI,IAAK,IAAKJ,IAC5B,IAAII,GAAO,GAAI,IAAK,IAAK,KAAMJ,IAC/B,IAAII,GAAO,GAAI,IAAK,IAAK,KAAMJ,KA+BjC,SAASa,KACP7pF,KAAK4hF,KAAO,KACZ5hF,KAAKgkD,OAAS,EACdhkD,KAAKu9E,YAAc,KACnBv9E,KAAK2pF,iBAAmB,EACxB3pF,KAAKomF,YAAc,EACnBpmF,KAAKw9E,QAAU,EACfx9E,KAAKgqB,KAAO,EACZhqB,KAAK8pF,OAAS,KACd9pF,KAAK+pF,QAAU,EACf/pF,KAAKokB,OAASihE,GACdrlF,KAAKgqF,YAAc,EAEnBhqF,KAAKynF,OAAS,EACdznF,KAAKiqF,OAAS,EACdjqF,KAAK4nF,OAAS,EAEd5nF,KAAKya,OAAS,KAQdza,KAAKsoF,YAAc,EAKnBtoF,KAAKgF,KAAO,KAMZhF,KAAK8lB,KAAO,KAEZ9lB,KAAKyoF,MAAQ,EACbzoF,KAAKuoF,UAAY,EACjBvoF,KAAKkqF,UAAY,EACjBlqF,KAAKimF,UAAY,EAEjBjmF,KAAKgmF,WAAa,EAOlBhmF,KAAKwmF,YAAc,EAKnBxmF,KAAK6oF,aAAe,EACpB7oF,KAAKkpF,WAAa,EAClBlpF,KAAKmpF,gBAAkB,EACvBnpF,KAAKymF,SAAW,EAChBzmF,KAAKkoF,YAAc,EACnBloF,KAAKioF,UAAY,EAEjBjoF,KAAKsnF,YAAc,EAKnBtnF,KAAKmnF,iBAAmB,EAMxBnnF,KAAK8oF,eAAiB,EAYtB9oF,KAAKkO,MAAQ,EACblO,KAAKkiF,SAAW,EAEhBliF,KAAKgoF,WAAa,EAGlBhoF,KAAKunF,WAAa,EAYlBvnF,KAAKq+E,UAAa,IAAI8L,YAAYC,MAClCpqF,KAAKs+E,UAAa,IAAI6L,YAAY,KAClCnqF,KAAKu+E,QAAa,IAAI4L,YAAY,IAClCrE,GAAO9lF,KAAKq+E,WACZyH,GAAO9lF,KAAKs+E,WACZwH,GAAO9lF,KAAKu+E,SAEZv+E,KAAKqhF,OAAW,KAChBrhF,KAAKshF,OAAW,KAChBthF,KAAKuhF,QAAW,KAGhBvhF,KAAKg+E,SAAW,IAAImM,YAAYE,IAIhCrqF,KAAKi/E,KAAO,IAAIkL,YAAY,KAC5BrE,GAAO9lF,KAAKi/E,MAEZj/E,KAAKk/E,SAAW,EAChBl/E,KAAK4/E,SAAW,EAKhB5/E,KAAK6xC,MAAQ,IAAIs4C,YAAY,KAC7BrE,GAAO9lF,KAAK6xC,OAIZ7xC,KAAKy/E,MAAQ,EAEbz/E,KAAKyiF,YAAc,EAoBnBziF,KAAK2+E,SAAW,EAEhB3+E,KAAKw/E,MAAQ,EAMbx/E,KAAKy+E,QAAU,EACfz+E,KAAK0+E,WAAa,EAClB1+E,KAAKmtB,QAAU,EACfntB,KAAKwoF,OAAS,EAGdxoF,KAAK29E,OAAS,EAId39E,KAAK09E,SAAW,EAgBlB,MAAM4M,GAAoB1I,IAExB,IAAKA,IAASA,EAAKvoC,MACjB,OAAOgH,GAAIuhC,EAAMyC,IAGnBzC,EAAKmF,SAAWnF,EAAK0E,UAAY,EACjC1E,EAAKC,UAAY+D,GAEjB,MAAMlnF,EAAIkjF,EAAKvoC,MAef,OAdA36C,EAAE8+E,QAAU,EACZ9+E,EAAE0nF,YAAc,EAEZ1nF,EAAEsrB,KAAO,IACXtrB,EAAEsrB,MAAQtrB,EAAEsrB,MAGdtrB,EAAEslD,OAAUtlD,EAAEsrB,KAxrCG,GAKA,IAorCjB43D,EAAKkB,MAAoB,IAAXpkF,EAAEsrB,KACd,EAEA,EACFtrB,EAAEsrF,WAAarG,GACf2B,GAAW5mF,GACJulF,IAIHsG,GAAgB3I,IAEpB,MAAMnvD,EAAM63D,GAAiB1I,GAnPf,IAACljF,EAuPf,OAHI+zB,IAAQwxD,MApPGvlF,EAqPLkjF,EAAKvoC,OAnPbivC,YAAc,EAAI5pF,EAAE+oF,OAGtB3B,GAAOpnF,EAAEonB,MAITpnB,EAAEoqF,eAAiBW,GAAoB/qF,EAAEwP,OAAOo7E,SAChD5qF,EAAEspF,WAAayB,GAAoB/qF,EAAEwP,OAAOm7E,YAC5C3qF,EAAE6oF,WAAakC,GAAoB/qF,EAAEwP,OAAOq7E,YAC5C7qF,EAAEyoF,iBAAmBsC,GAAoB/qF,EAAEwP,OAAOs7E,UAElD9qF,EAAE+nF,SAAW,EACb/nF,EAAE8nF,YAAc,EAChB9nF,EAAEupF,UAAY,EACdvpF,EAAE8pF,OAAS,EACX9pF,EAAEmqF,aAAenqF,EAAE4oF,YAAcyB,EACjCrqF,EAAEyqF,gBAAkB,EACpBzqF,EAAE+pF,MAAQ,GAmOHh2D,GAaH+3D,GAAe,CAAC5I,EAAM1zE,EAAOkW,EAAQqmE,EAAYC,EAAUxI,KAE/D,IAAKN,EACH,OAAOyC,GAET,IAAIr6D,EAAO,EAiBX,GAfI9b,IAAU02E,KACZ12E,EAAQ,GAGNu8E,EAAa,GACfzgE,EAAO,EACPygE,GAAcA,GAGPA,EAAa,KACpBzgE,EAAO,EACPygE,GAAc,IAIZC,EAAW,GAAKA,EAxwCA,GAwwC4BtmE,IAAWihE,IACzDoF,EAAa,GAAKA,EAAa,IAAMv8E,EAAQ,GAAKA,EAAQ,GAC1Dg0E,EAAW,GAAKA,EAAWyD,GAC3B,OAAOtlC,GAAIuhC,EAAMyC,IAIA,IAAfoG,IACFA,EAAa,GAIf,MAAM/rF,EAAI,IAAImrF,GA0Cd,OAxCAjI,EAAKvoC,MAAQ36C,EACbA,EAAEkjF,KAAOA,EAETljF,EAAEsrB,KAAOA,EACTtrB,EAAEorF,OAAS,KACXprF,EAAEurF,OAASQ,EACX/rF,EAAE+oF,OAAS,GAAK/oF,EAAEurF,OAClBvrF,EAAEkpF,OAASlpF,EAAE+oF,OAAS,EAEtB/oF,EAAEwrF,UAAYQ,EAAW,EACzBhsF,EAAE6pF,UAAY,GAAK7pF,EAAEwrF,UACrBxrF,EAAEunF,UAAYvnF,EAAE6pF,UAAY,EAC5B7pF,EAAEsnF,eAAiBtnF,EAAEwrF,UA5wCH,EA4wC6B,GA5wC7B,GA8wClBxrF,EAAE+b,OAAS,IAAI9H,WAAsB,EAAXjU,EAAE+oF,QAC5B/oF,EAAEonB,KAAO,IAAIqkE,YAAYzrF,EAAE6pF,WAC3B7pF,EAAEsG,KAAO,IAAImlF,YAAYzrF,EAAE+oF,QAK3B/oF,EAAE+jF,YAAc,GAAMiI,EAAW,EAEjChsF,EAAEirF,iBAAmC,EAAhBjrF,EAAE+jF,YAIvB/jF,EAAE6+E,YAAc,IAAI5qE,WAAWjU,EAAEirF,kBAIjCjrF,EAAE8gF,MAAQ,EAAI9gF,EAAE+jF,YAGhB/jF,EAAE+gF,MAAQ,EAAU/gF,EAAE+jF,YAEtB/jF,EAAEwP,MAAQA,EACVxP,EAAEwjF,SAAWA,EACbxjF,EAAE0lB,OAASA,EAEJmmE,GAAa3I,IAictB,IAmBI+I,GAAY,CACfC,YAldmB,CAAChJ,EAAM1zE,IAElBs8E,GAAa5I,EAAM1zE,EAAOm3E,GAj0CjB,GAEI,EA+zCmDJ,IAidxEuF,aApBoBA,GAqBpBD,aApBoBA,GAqBpBD,iBApBwBA,GAqBxBO,iBA9iBwB,CAACjJ,EAAM97D,IAEzB87D,GAASA,EAAKvoC,MACK,IAApBuoC,EAAKvoC,MAAMrvB,KAAqBq6D,IACpCzC,EAAKvoC,MAAMywC,OAAShkE,EACbm+D,IAH4BI,GA6iBpCyG,QAjde,CAAClJ,EAAM56B,KAErB,IAAI+jC,EAAK7/E,EAET,IAAK02E,IAASA,EAAKvoC,OACjB2N,EAAQ+8B,IAAW/8B,EAAQ,EAC3B,OAAO46B,EAAOvhC,GAAIuhC,EAAMyC,IAAkBA,GAG5C,MAAM3lF,EAAIkjF,EAAKvoC,MAEf,IAAKuoC,EAAK3mE,SACJ2mE,EAAK7mE,OAA2B,IAAlB6mE,EAAKiF,UAjzCN,MAkzCdnoF,EAAEslD,QAA2BgD,IAAU88B,GAC1C,OAAOzjC,GAAIuhC,EAA0B,IAAnBA,EAAKuE,UAAmB3B,GAAcH,IAG1D3lF,EAAEkjF,KAAOA,EACT,MAAMoJ,EAAYtsF,EAAEsrF,WAIpB,GAHAtrF,EAAEsrF,WAAahjC,EA9zCE,KAi0CbtoD,EAAEslD,OAEJ,GAAe,IAAXtlD,EAAEsrB,KACJ43D,EAAKkB,MAAQ,EACb4D,GAAShoF,EAAG,IACZgoF,GAAShoF,EAAG,KACZgoF,GAAShoF,EAAG,GACPA,EAAEorF,QAaLpD,GAAShoF,GAAIA,EAAEorF,OAAOn/E,KAAO,EAAI,IACpBjM,EAAEorF,OAAOmB,KAAO,EAAI,IACnBvsF,EAAEorF,OAAO70C,MAAY,EAAJ,IACjBv2C,EAAEorF,OAAO5sF,KAAW,EAAJ,IAChBwB,EAAEorF,OAAO7kB,QAAc,GAAJ,IAEjCyhB,GAAShoF,EAAmB,IAAhBA,EAAEorF,OAAOoB,MACrBxE,GAAShoF,EAAIA,EAAEorF,OAAOoB,MAAQ,EAAK,KACnCxE,GAAShoF,EAAIA,EAAEorF,OAAOoB,MAAQ,GAAM,KACpCxE,GAAShoF,EAAIA,EAAEorF,OAAOoB,MAAQ,GAAM,KACpCxE,GAAShoF,EAAe,IAAZA,EAAEwP,MAAc,EACfxP,EAAEwjF,UAAY4C,IAAkBpmF,EAAEwP,MAAQ,EAC1C,EAAI,GACjBw4E,GAAShoF,EAAiB,IAAdA,EAAEorF,OAAOj7B,IACjBnwD,EAAEorF,OAAO70C,OAASv2C,EAAEorF,OAAO70C,MAAMv0C,SACnCgmF,GAAShoF,EAA2B,IAAxBA,EAAEorF,OAAO70C,MAAMv0C,QAC3BgmF,GAAShoF,EAAIA,EAAEorF,OAAO70C,MAAMv0C,QAAU,EAAK,MAEzChC,EAAEorF,OAAOmB,OACXrJ,EAAKkB,MAAQO,GAAQzB,EAAKkB,MAAOpkF,EAAE6+E,YAAa7+E,EAAE8+E,QAAS,IAE7D9+E,EAAEqrF,QAAU,EACZrrF,EAAEslD,OA12CU,KAw0CZ0iC,GAAShoF,EAAG,GACZgoF,GAAShoF,EAAG,GACZgoF,GAAShoF,EAAG,GACZgoF,GAAShoF,EAAG,GACZgoF,GAAShoF,EAAG,GACZgoF,GAAShoF,EAAe,IAAZA,EAAEwP,MAAc,EACfxP,EAAEwjF,UAAY4C,IAAkBpmF,EAAEwP,MAAQ,EAC1C,EAAI,GACjBw4E,GAAShoF,EAp0CD,GAq0CRA,EAAEslD,OA70CS,SA02Cf,CACE,IAAI68B,EAAUwE,IAAe3mF,EAAEurF,OAAS,GAAM,IAAO,EACjDkB,GAAe,EAGjBA,EADEzsF,EAAEwjF,UAAY4C,IAAkBpmF,EAAEwP,MAAQ,EAC9B,EACLxP,EAAEwP,MAAQ,EACL,EACO,IAAZxP,EAAEwP,MACG,EAEA,EAEhB2yE,GAAWsK,GAAe,EACP,IAAfzsF,EAAE+nF,WAAkB5F,GA/3CV,IAg4CdA,GAAU,GAAMA,EAAS,GAEzBniF,EAAEslD,OA33CW,IA43Cb2iC,GAAYjoF,EAAGmiF,GAGI,IAAfniF,EAAE+nF,WACJE,GAAYjoF,EAAGkjF,EAAKkB,QAAU,IAC9B6D,GAAYjoF,EAAgB,MAAbkjF,EAAKkB,QAEtBlB,EAAKkB,MAAQ,EAKjB,GA54CkB,KA44CdpkF,EAAEslD,OACJ,GAAItlD,EAAEorF,OAAO70C,MAAqB,CAGhC,IAFA81C,EAAMrsF,EAAE8+E,QAED9+E,EAAEqrF,SAAmC,MAAxBrrF,EAAEorF,OAAO70C,MAAMv0C,UAC7BhC,EAAE8+E,UAAY9+E,EAAEirF,mBACdjrF,EAAEorF,OAAOmB,MAAQvsF,EAAE8+E,QAAUuN,IAC/BnJ,EAAKkB,MAAQO,GAAQzB,EAAKkB,MAAOpkF,EAAE6+E,YAAa7+E,EAAE8+E,QAAUuN,EAAKA,IAEnE7E,GAActE,GACdmJ,EAAMrsF,EAAE8+E,QACJ9+E,EAAE8+E,UAAY9+E,EAAEirF,oBAItBjD,GAAShoF,EAA+B,IAA5BA,EAAEorF,OAAO70C,MAAMv2C,EAAEqrF,UAC7BrrF,EAAEqrF,UAEArrF,EAAEorF,OAAOmB,MAAQvsF,EAAE8+E,QAAUuN,IAC/BnJ,EAAKkB,MAAQO,GAAQzB,EAAKkB,MAAOpkF,EAAE6+E,YAAa7+E,EAAE8+E,QAAUuN,EAAKA,IAE/DrsF,EAAEqrF,UAAYrrF,EAAEorF,OAAO70C,MAAMv0C,SAC/BhC,EAAEqrF,QAAU,EACZrrF,EAAEslD,OAl6CS,SAs6CbtlD,EAAEslD,OAt6CW,GAy6CjB,GAz6CiB,KAy6CbtlD,EAAEslD,OACJ,GAAItlD,EAAEorF,OAAO5sF,KAAoB,CAC/B6tF,EAAMrsF,EAAE8+E,QAGR,EAAG,CACD,GAAI9+E,EAAE8+E,UAAY9+E,EAAEirF,mBACdjrF,EAAEorF,OAAOmB,MAAQvsF,EAAE8+E,QAAUuN,IAC/BnJ,EAAKkB,MAAQO,GAAQzB,EAAKkB,MAAOpkF,EAAE6+E,YAAa7+E,EAAE8+E,QAAUuN,EAAKA,IAEnE7E,GAActE,GACdmJ,EAAMrsF,EAAE8+E,QACJ9+E,EAAE8+E,UAAY9+E,EAAEirF,kBAAkB,CACpCz+E,EAAM,EACN,MAKFA,EADExM,EAAEqrF,QAAUrrF,EAAEorF,OAAO5sF,KAAKwD,OACkB,IAAxChC,EAAEorF,OAAO5sF,KAAKie,WAAWzc,EAAEqrF,WAE3B,EAERrD,GAAShoF,EAAGwM,SACG,IAARA,GAELxM,EAAEorF,OAAOmB,MAAQvsF,EAAE8+E,QAAUuN,IAC/BnJ,EAAKkB,MAAQO,GAAQzB,EAAKkB,MAAOpkF,EAAE6+E,YAAa7+E,EAAE8+E,QAAUuN,EAAKA,IAEvD,IAAR7/E,IACFxM,EAAEqrF,QAAU,EACZrrF,EAAEslD,OAv8CY,SA28ChBtlD,EAAEslD,OA38Cc,GA88CpB,GA98CoB,KA88ChBtlD,EAAEslD,OACJ,GAAItlD,EAAEorF,OAAO7kB,QAAuB,CAClC8lB,EAAMrsF,EAAE8+E,QAGR,EAAG,CACD,GAAI9+E,EAAE8+E,UAAY9+E,EAAEirF,mBACdjrF,EAAEorF,OAAOmB,MAAQvsF,EAAE8+E,QAAUuN,IAC/BnJ,EAAKkB,MAAQO,GAAQzB,EAAKkB,MAAOpkF,EAAE6+E,YAAa7+E,EAAE8+E,QAAUuN,EAAKA,IAEnE7E,GAActE,GACdmJ,EAAMrsF,EAAE8+E,QACJ9+E,EAAE8+E,UAAY9+E,EAAEirF,kBAAkB,CACpCz+E,EAAM,EACN,MAKFA,EADExM,EAAEqrF,QAAUrrF,EAAEorF,OAAO7kB,QAAQvkE,OACkB,IAA3ChC,EAAEorF,OAAO7kB,QAAQ9pD,WAAWzc,EAAEqrF,WAE9B,EAERrD,GAAShoF,EAAGwM,SACG,IAARA,GAELxM,EAAEorF,OAAOmB,MAAQvsF,EAAE8+E,QAAUuN,IAC/BnJ,EAAKkB,MAAQO,GAAQzB,EAAKkB,MAAOpkF,EAAE6+E,YAAa7+E,EAAE8+E,QAAUuN,EAAKA,IAEvD,IAAR7/E,IACFxM,EAAEslD,OA3+CS,UA++CbtlD,EAAEslD,OA/+CW,IAqgDjB,GArgDiB,MAk/CbtlD,EAAEslD,SACAtlD,EAAEorF,OAAOmB,MACPvsF,EAAE8+E,QAAU,EAAI9+E,EAAEirF,kBACpBzD,GAActE,GAEZljF,EAAE8+E,QAAU,GAAK9+E,EAAEirF,mBACrBjD,GAAShoF,EAAgB,IAAbkjF,EAAKkB,OACjB4D,GAAShoF,EAAIkjF,EAAKkB,OAAS,EAAK,KAChClB,EAAKkB,MAAQ,EACbpkF,EAAEslD,OA1/CS,MA8/CbtlD,EAAEslD,OA9/CW,KAogDC,IAAdtlD,EAAE8+E,SAEJ,GADA0I,GAActE,GACS,IAAnBA,EAAKuE,UAQP,OADAznF,EAAEsrF,YAAc,EACT/F,QAOJ,GAAsB,IAAlBrC,EAAKiF,UAAkBvE,GAAKt7B,IAAUs7B,GAAK0I,IACpDhkC,IAAU88B,GACV,OAAOzjC,GAAIuhC,EAAM4C,IAInB,GA1hDmB,MA0hDf9lF,EAAEslD,QAA6C,IAAlB49B,EAAKiF,SACpC,OAAOxmC,GAAIuhC,EAAM4C,IAKnB,GAAsB,IAAlB5C,EAAKiF,UAAkC,IAAhBnoF,EAAEupF,WAC1BjhC,IAAU28B,IAjiDM,MAiiDQjlF,EAAEslD,OAA0B,CACrD,IAAIonC,EAAU1sF,EAAEwjF,WAAa4C,GA5qBZ,EAACpmF,EAAGsoD,KAEvB,IAAI4hC,EAEJ,OAAS,CAEP,GAAoB,IAAhBlqF,EAAEupF,YACJE,GAAYzpF,GACQ,IAAhBA,EAAEupF,WAAiB,CACrB,GAAIjhC,IAAU28B,GACZ,OA93BgB,EAg4BlB,MAWJ,GANAjlF,EAAEmqF,aAAe,EAGjBD,EAASnD,GAAY/mF,EAAG,EAAGA,EAAE+b,OAAO/b,EAAE+nF,WACtC/nF,EAAEupF,YACFvpF,EAAE+nF,WACEmC,IAEFrC,GAAiB7nF,GAAG,GACK,IAArBA,EAAEkjF,KAAKuE,WACT,OA/4BkB,EAq5BxB,OADAznF,EAAE8pF,OAAS,EACPxhC,IAAU88B,IAEZyC,GAAiB7nF,GAAG,GACK,IAArBA,EAAEkjF,KAAKuE,UAt5BW,EACA,GA25BpBznF,EAAEigF,WAEJ4H,GAAiB7nF,GAAG,GACK,IAArBA,EAAEkjF,KAAKuE,WAj6BW,EACA,GA+hDyBkF,CAAa3sF,EAAGsoD,GAC5DtoD,EAAEwjF,WAAa6C,GA7wBF,EAACrmF,EAAGsoD,KAEtB,IAAI4hC,EACA5jF,EACAoiF,EAAMS,EAEV,MAAMH,EAAOhpF,EAAE+b,OAEf,OAAS,CAKP,GAAI/b,EAAEupF,WA9yBU,IA8yBgB,CAE9B,GADAE,GAAYzpF,GACRA,EAAEupF,WAhzBQ,KAgzBoBjhC,IAAU28B,GAC1C,OApyBkB,EAsyBpB,GAAoB,IAAhBjlF,EAAEupF,UAAmB,MAK3B,GADAvpF,EAAEmqF,aAAe,EACbnqF,EAAEupF,WAzzBU,GAyzBkBvpF,EAAE+nF,SAAW,IAC7CW,EAAO1oF,EAAE+nF,SAAW,EACpBzhF,EAAO0iF,EAAKN,GACRpiF,IAAS0iF,IAAON,IAASpiF,IAAS0iF,IAAON,IAASpiF,IAAS0iF,IAAON,IAAO,CAC3ES,EAASnpF,EAAE+nF,SA5zBC,IA6zBZ,UAESzhF,IAAS0iF,IAAON,IAASpiF,IAAS0iF,IAAON,IACzCpiF,IAAS0iF,IAAON,IAASpiF,IAAS0iF,IAAON,IACzCpiF,IAAS0iF,IAAON,IAASpiF,IAAS0iF,IAAON,IACzCpiF,IAAS0iF,IAAON,IAASpiF,IAAS0iF,IAAON,IACzCA,EAAOS,GAChBnpF,EAAEmqF,aAp0BU,KAo0BoBhB,EAAST,GACrC1oF,EAAEmqF,aAAenqF,EAAEupF,YACrBvpF,EAAEmqF,aAAenqF,EAAEupF,WAyBzB,GAlBIvpF,EAAEmqF,cA90BU,GAk1BdD,EAASnD,GAAY/mF,EAAG,EAAGA,EAAEmqF,aAl1Bf,GAo1BdnqF,EAAEupF,WAAavpF,EAAEmqF,aACjBnqF,EAAE+nF,UAAY/nF,EAAEmqF,aAChBnqF,EAAEmqF,aAAe,IAKjBD,EAASnD,GAAY/mF,EAAG,EAAGA,EAAE+b,OAAO/b,EAAE+nF,WAEtC/nF,EAAEupF,YACFvpF,EAAE+nF,YAEAmC,IAEFrC,GAAiB7nF,GAAG,GACK,IAArBA,EAAEkjF,KAAKuE,WACT,OAt1BkB,EA41BxB,OADAznF,EAAE8pF,OAAS,EACPxhC,IAAU88B,IAEZyC,GAAiB7nF,GAAG,GACK,IAArBA,EAAEkjF,KAAKuE,UA71BW,EACA,GAk2BpBznF,EAAEigF,WAEJ4H,GAAiB7nF,GAAG,GACK,IAArBA,EAAEkjF,KAAKuE,WAx2BW,EACA,GAgiDImF,CAAY5sF,EAAGsoD,GACrCyiC,GAAoB/qF,EAAEwP,OAAO0D,KAAKlT,EAAGsoD,GAKzC,GAriDsB,IAkiDlBokC,GAjiDkB,IAiiDcA,IAClC1sF,EAAEslD,OAviDa,KAEK,IAuiDlBonC,GAriDkB,IAqiDSA,EAK7B,OAJuB,IAAnBxJ,EAAKuE,YACPznF,EAAEsrF,YAAc,GAGX/F,GAST,GApjDsB,IAojDlBmH,IACEpkC,IAAU48B,GACZ8B,GAAYhnF,GAELsoD,IAAU+8B,KAEjBwB,GAAmB7mF,EAAG,EAAG,GAAG,GAIxBsoD,IAAU68B,KAEZiC,GAAOpnF,EAAEonB,MAEW,IAAhBpnB,EAAEupF,YACJvpF,EAAE+nF,SAAW,EACb/nF,EAAE8nF,YAAc,EAChB9nF,EAAE8pF,OAAS,KAIjBtC,GAActE,GACS,IAAnBA,EAAKuE,WAEP,OADAznF,EAAEsrF,YAAc,EACT/F,GAOb,OAAIj9B,IAAU88B,GAAmBG,GAC7BvlF,EAAEsrB,MAAQ,EAAYk6D,IAGX,IAAXxlF,EAAEsrB,MACJ08D,GAAShoF,EAAgB,IAAbkjF,EAAKkB,OACjB4D,GAAShoF,EAAIkjF,EAAKkB,OAAS,EAAK,KAChC4D,GAAShoF,EAAIkjF,EAAKkB,OAAS,GAAM,KACjC4D,GAAShoF,EAAIkjF,EAAKkB,OAAS,GAAM,KACjC4D,GAAShoF,EAAmB,IAAhBkjF,EAAKmF,UACjBL,GAAShoF,EAAIkjF,EAAKmF,UAAY,EAAK,KACnCL,GAAShoF,EAAIkjF,EAAKmF,UAAY,GAAM,KACpCL,GAAShoF,EAAIkjF,EAAKmF,UAAY,GAAM,OAIpCJ,GAAYjoF,EAAGkjF,EAAKkB,QAAU,IAC9B6D,GAAYjoF,EAAgB,MAAbkjF,EAAKkB,QAGtBoD,GAActE,GAIVljF,EAAEsrB,KAAO,IAAKtrB,EAAEsrB,MAAQtrB,EAAEsrB,MAET,IAAdtrB,EAAE8+E,QAAgByG,GAAOC,KAuIjCqH,WAnImB3J,IAElB,IAAKA,IAAsBA,EAAKvoC,MAC9B,OAAOgrC,GAGT,MAAMrgC,EAAS49B,EAAKvoC,MAAM2K,OAC1B,OAjoDiB,KAioDbA,GAhoDc,KAioDhBA,GAhoDe,KAioDfA,GAhoDkB,KAioDlBA,GAhoDe,MAioDfA,GAhoDe,MAioDfA,GAhoDiB,MAioDjBA,EAEO3D,GAAIuhC,EAAMyC,KAGnBzC,EAAKvoC,MAAQ,KAvoDI,MAyoDV2K,EAAwB3D,GAAIuhC,EAAM0C,IAAgBL,KAgH1DuH,qBAxG4B,CAAC5J,EAAM6J,KAElC,IAAIC,EAAaD,EAAW/qF,OAE5B,IAAKkhF,IAAsBA,EAAKvoC,MAC9B,OAAOgrC,GAGT,MAAM3lF,EAAIkjF,EAAKvoC,MACTrvB,EAAOtrB,EAAEsrB,KAEf,GAAa,IAATA,GAAwB,IAATA,GAjqDF,KAiqDgBtrB,EAAEslD,QAA0BtlD,EAAEupF,UAC7D,OAAO5D,GAYT,GARa,IAATr6D,IAEF43D,EAAKkB,MAAQD,GAAUjB,EAAKkB,MAAO2I,EAAYC,EAAY,IAG7DhtF,EAAEsrB,KAAO,EAGL0hE,GAAchtF,EAAE+oF,OAAQ,CACb,IAATz9D,IAEF87D,GAAOpnF,EAAEonB,MACTpnB,EAAE+nF,SAAW,EACb/nF,EAAE8nF,YAAc,EAChB9nF,EAAE8pF,OAAS,GAIb,IAAImD,EAAU,IAAIh5E,WAAWjU,EAAE+oF,QAC/BkE,EAAQj6E,IAAI+5E,EAAW3K,SAAS4K,EAAahtF,EAAE+oF,OAAQiE,GAAa,GACpED,EAAaE,EACbD,EAAahtF,EAAE+oF,OAGjB,MAAMmE,EAAQhK,EAAKiF,SACb3hF,EAAO08E,EAAKkF,QACZ/rE,EAAQ6mE,EAAK7mE,MAKnB,IAJA6mE,EAAKiF,SAAW6E,EAChB9J,EAAKkF,QAAU,EACflF,EAAK7mE,MAAQ0wE,EACbtD,GAAYzpF,GACLA,EAAEupF,WA3sDS,GA2sDiB,CACjC,IAAI37E,EAAM5N,EAAE+nF,SACRroF,EAAIM,EAAEupF,UAAY,EACtB,GAEEvpF,EAAE+pF,MAAQ1C,GAAKrnF,EAAGA,EAAE+pF,MAAO/pF,EAAE+b,OAAOnO,EAhtDtB,EAgtD0C,IAExD5N,EAAEsG,KAAKsH,EAAM5N,EAAEkpF,QAAUlpF,EAAEonB,KAAKpnB,EAAE+pF,OAElC/pF,EAAEonB,KAAKpnB,EAAE+pF,OAASn8E,EAClBA,YACSlO,GACXM,EAAE+nF,SAAWn6E,EACb5N,EAAEupF,UAAYc,EACdZ,GAAYzpF,GAYd,OAVAA,EAAE+nF,UAAY/nF,EAAEupF,UAChBvpF,EAAE8nF,YAAc9nF,EAAE+nF,SAClB/nF,EAAE8pF,OAAS9pF,EAAEupF,UACbvpF,EAAEupF,UAAY,EACdvpF,EAAEmqF,aAAenqF,EAAE4oF,YAAcyB,EACjCrqF,EAAEyqF,gBAAkB,EACpBvH,EAAKkF,QAAU5hF,EACf08E,EAAK7mE,MAAQA,EACb6mE,EAAKiF,SAAW+E,EAChBltF,EAAEsrB,KAAOA,EACFi6D,IAgCR4H,YApBiB,sCAuBlB,MAAMC,GAAO,CAACx+E,EAAKpP,IACVb,OAAOkB,UAAUC,eAAe1B,KAAKwQ,EAAKpP,GAGnD,IA0CI6tF,GA1CS,SAAUz+E,GACrB,MAAM0+E,EAAUlrF,MAAMvC,UAAUwH,MAAMjJ,KAAKwd,UAAW,GACtD,KAAO0xE,EAAQtrF,QAAQ,CACrB,MAAMme,EAASmtE,EAAQxoF,QACvB,GAAKqb,EAAL,CAEA,GAAsB,iBAAXA,EACT,MAAM,IAAIrQ,UAAUqQ,EAAS,sBAG/B,IAAK,MAAMpgB,KAAKogB,EACVitE,GAAKjtE,EAAQpgB,KACf6O,EAAI7O,GAAKogB,EAAOpgB,KAKtB,OAAO6O,GAyBLy+E,GApBiB76B,IAEnB,IAAI3qC,EAAM,EAEV,IAAK,IAAI5pB,EAAI,EAAGC,EAAIs0D,EAAOxwD,OAAQ/D,EAAIC,EAAGD,IACxC4pB,GAAO2qC,EAAOv0D,GAAG+D,OAInB,MAAM+C,EAAS,IAAIkP,WAAW4T,GAE9B,IAAK,IAAI5pB,EAAI,EAAGomF,EAAM,EAAGnmF,EAAIs0D,EAAOxwD,OAAQ/D,EAAIC,EAAGD,IAAK,CACtD,IAAIorB,EAAQmpC,EAAOv0D,GACnB8G,EAAOiO,IAAIqW,EAAOg7D,GAClBA,GAAOh7D,EAAMrnB,OAGf,OAAO+C,GAgBT,IAAIwoF,IAAmB,EAEvB,IAAMliF,OAAOwR,aAAanQ,MAAM,KAAM,IAAIuH,WAAW,IAAO,MAAOu5E,GAAMD,IAAmB,EAM5F,MAAME,GAAW,IAAIx5E,WAAW,KAChC,IAAK,IAAI9P,EAAI,EAAGA,EAAI,IAAKA,IACvBspF,GAAStpF,GAAMA,GAAK,IAAM,EAAIA,GAAK,IAAM,EAAIA,GAAK,IAAM,EAAIA,GAAK,IAAM,EAAIA,GAAK,IAAM,EAAI,EAE5FspF,GAAS,KAAOA,GAAS,KAAO,EA6EhC,IAoEIriC,GA7Icx9C,IAChB,IAAImyC,EAAKzhD,EAAGo5C,EAAIg2C,EAAOzvF,EAAG0vF,EAAU//E,EAAI5L,OAAQ4rF,EAAU,EAG1D,IAAKF,EAAQ,EAAGA,EAAQC,EAASD,IAC/BpvF,EAAIsP,EAAI6O,WAAWixE,GACE,QAAZ,MAAJpvF,IAA2BovF,EAAQ,EAAIC,IAC1Cj2C,EAAK9pC,EAAI6O,WAAWixE,EAAQ,GACN,QAAZ,MAALh2C,KACHp5C,EAAI,OAAYA,EAAI,OAAW,KAAOo5C,EAAK,OAC3Cg2C,MAGJE,GAAWtvF,EAAI,IAAO,EAAIA,EAAI,KAAQ,EAAIA,EAAI,MAAU,EAAI,EAO9D,IAHAyhD,EAAM,IAAI9rC,WAAW25E,GAGhB3vF,EAAI,EAAGyvF,EAAQ,EAAGzvF,EAAI2vF,EAASF,IAClCpvF,EAAIsP,EAAI6O,WAAWixE,GACE,QAAZ,MAAJpvF,IAA2BovF,EAAQ,EAAIC,IAC1Cj2C,EAAK9pC,EAAI6O,WAAWixE,EAAQ,GACN,QAAZ,MAALh2C,KACHp5C,EAAI,OAAYA,EAAI,OAAW,KAAOo5C,EAAK,OAC3Cg2C,MAGApvF,EAAI,IAENyhD,EAAI9hD,KAAOK,EACFA,EAAI,MAEbyhD,EAAI9hD,KAAO,IAAQK,IAAM,EACzByhD,EAAI9hD,KAAO,IAAY,GAAJK,GACVA,EAAI,OAEbyhD,EAAI9hD,KAAO,IAAQK,IAAM,GACzByhD,EAAI9hD,KAAO,IAAQK,IAAM,EAAI,GAC7ByhD,EAAI9hD,KAAO,IAAY,GAAJK,IAGnByhD,EAAI9hD,KAAO,IAAQK,IAAM,GACzByhD,EAAI9hD,KAAO,IAAQK,IAAM,GAAK,GAC9ByhD,EAAI9hD,KAAO,IAAQK,IAAM,EAAI,GAC7ByhD,EAAI9hD,KAAO,IAAY,GAAJK,GAIvB,OAAOyhD,GA2FLqL,GApEa,CAACrL,EAAK34C,KACrB,IAAInJ,EAAG8O,EACP,MAAM8a,EAAMzgB,GAAO24C,EAAI/9C,OAKjB6rF,EAAW,IAAIzrF,MAAY,EAANylB,GAE3B,IAAK9a,EAAM,EAAG9O,EAAI,EAAGA,EAAI4pB,GAAM,CAC7B,IAAIvpB,EAAIyhD,EAAI9hD,KAEZ,GAAIK,EAAI,IAAM,CAAEuvF,EAAS9gF,KAASzO,EAAG,SAErC,IAAIwvF,EAAQL,GAASnvF,GAErB,GAAIwvF,EAAQ,EAAKD,EAAS9gF,KAAS,MAAQ9O,GAAK6vF,EAAQ,MAAxD,CAKA,IAFAxvF,GAAe,IAAVwvF,EAAc,GAAiB,IAAVA,EAAc,GAAO,EAExCA,EAAQ,GAAK7vF,EAAI4pB,GACtBvpB,EAAKA,GAAK,EAAiB,GAAXyhD,EAAI9hD,KACpB6vF,IAIEA,EAAQ,EAAKD,EAAS9gF,KAAS,MAE/BzO,EAAI,MACNuvF,EAAS9gF,KAASzO,GAElBA,GAAK,MACLuvF,EAAS9gF,KAAS,MAAWzO,GAAK,GAAM,KACxCuvF,EAAS9gF,KAAS,MAAc,KAAJzO,IAIhC,MAzDoB,EAACyhD,EAAKl4B,KAI1B,GAAIA,EAAM,OACJk4B,EAAIqiC,UAAYmL,GAClB,OAAOliF,OAAOwR,aAAanQ,MAAM,KAAMqzC,EAAI/9C,SAAW6lB,EAAMk4B,EAAMA,EAAIqiC,SAAS,EAAGv6D,IAItF,IAAI9iB,EAAS,GACb,IAAK,IAAI9G,EAAI,EAAGA,EAAI4pB,EAAK5pB,IACvB8G,GAAUsG,OAAOwR,aAAakjC,EAAI9hD,IAEpC,OAAO8G,GA2CAgpF,CAAcF,EAAU9gF,IA8B7Bq+C,GApBa,CAACrL,EAAK34C,MAErBA,EAAMA,GAAO24C,EAAI/9C,QACP+9C,EAAI/9C,SAAUoF,EAAM24C,EAAI/9C,QAGlC,IAAIqiF,EAAMj9E,EAAM,EAChB,KAAOi9E,GAAO,GAA2B,MAAV,IAAXtkC,EAAIskC,KAAyBA,IAIjD,OAAIA,EAAM,GAIE,IAARA,EAJkBj9E,EAMdi9E,EAAMoJ,GAAS1tC,EAAIskC,IAAQj9E,EAAOi9E,EAAMj9E,GAqDlD,IAAI4mF,GAzBJ,WAEE1sF,KAAK+a,MAAQ,KACb/a,KAAK8mF,QAAU,EAEf9mF,KAAK6mF,SAAW,EAEhB7mF,KAAK+mF,SAAW,EAEhB/mF,KAAKib,OAAS,KACdjb,KAAKqmF,SAAW,EAEhBrmF,KAAKmmF,UAAY,EAEjBnmF,KAAKsmF,UAAY,EAEjBtmF,KAAKsvB,IAAM,GAEXtvB,KAAKq5C,MAAQ,KAEbr5C,KAAK6hF,UAAY,EAEjB7hF,KAAK8iF,MAAQ,GAKf,MAAM,GAAWzlF,OAAOkB,UAAUiI,UAMhCm9E,WAAYgJ,GAAY,aAAE1lC,GAAc48B,aAAc+I,GAAgB9I,SAAU+I,GAChF5I,KAAM6I,GAAQ5I,aAAc6I,GAC5BnI,sBAAuBoI,GACvB/H,mBAAoBgI,GACpB5H,WAAY6H,IACVxJ,GA0FJ,SAASyJ,GAAQ39E,GACfxP,KAAKwP,QAAUu8E,GAAc,CAC3B79E,MAAO8+E,GACP5oE,OAAQ8oE,GACRE,UAAW,MACX3C,WAAY,GACZC,SAAU,EACVxI,SAAU+K,IACTz9E,GAAW,IAEd,IAAI69E,EAAMrtF,KAAKwP,QAEX69E,EAAI1qC,KAAQ0qC,EAAI5C,WAAa,EAC/B4C,EAAI5C,YAAc4C,EAAI5C,WAGf4C,EAAIC,MAASD,EAAI5C,WAAa,GAAO4C,EAAI5C,WAAa,KAC7D4C,EAAI5C,YAAc,IAGpBzqF,KAAKqgD,IAAS,EACdrgD,KAAKsvB,IAAS,GACdtvB,KAAKutF,OAAS,EACdvtF,KAAKkxD,OAAS,GAEdlxD,KAAK4hF,KAAO,IAAI8K,GAChB1sF,KAAK4hF,KAAKuE,UAAY,EAEtB,IAAIniC,EAAS2mC,GAAUH,aACrBxqF,KAAK4hF,KACLyL,EAAIn/E,MACJm/E,EAAIjpE,OACJipE,EAAI5C,WACJ4C,EAAI3C,SACJ2C,EAAInL,UAGN,GAAIl+B,IAAW8oC,GACb,MAAM,IAAI3pF,MAAM,GAAS6gD,IAO3B,GAJIqpC,EAAIxM,QACN8J,GAAUE,iBAAiB7qF,KAAK4hF,KAAMyL,EAAIxM,QAGxCwM,EAAI5B,WAAY,CAClB,IAAIz3B,EAaJ,GATEA,EAF4B,iBAAnBq5B,EAAI5B,WAEN3hC,GAAmBujC,EAAI5B,YACa,yBAAlC,GAAS3uF,KAAKuwF,EAAI5B,YACpB,IAAI94E,WAAW06E,EAAI5B,YAEnB4B,EAAI5B,WAGbznC,EAAS2mC,GAAUa,qBAAqBxrF,KAAK4hF,KAAM5tB,GAE/ChQ,IAAW8oC,GACb,MAAM,IAAI3pF,MAAM,GAAS6gD,IAG3BhkD,KAAKwtF,WAAY,GAgKrB,SAASC,GAAU1yE,EAAOvL,GACxB,MAAMk+E,EAAW,IAAIP,GAAQ39E,GAK7B,GAHAk+E,EAASjsF,KAAKsZ,GAAO,GAGjB2yE,EAASrtC,IAAO,MAAMqtC,EAASp+D,KAAO,GAASo+D,EAASrtC,KAE5D,OAAOqtC,EAASjqF,OA9IlB0pF,GAAQ5uF,UAAUkD,KAAO,SAAUoT,EAAM84E,GACvC,MAAM/L,EAAO5hF,KAAK4hF,KACZwL,EAAYptF,KAAKwP,QAAQ49E,UAC/B,IAAIppC,EAAQ4pC,EAEZ,GAAI5tF,KAAKutF,MAAS,OAAO,EAkBzB,IAhBiCK,EAA7BD,MAAiBA,EAA0BA,GACb,IAAfA,EAAsBd,GAAaF,GAGlC,iBAAT93E,EAET+sE,EAAK7mE,MAAQ+uC,GAAmBj1C,GACC,yBAAxB,GAAS/X,KAAK+X,GACvB+sE,EAAK7mE,MAAQ,IAAIpI,WAAWkC,GAE5B+sE,EAAK7mE,MAAQlG,EAGf+sE,EAAKkF,QAAU,EACflF,EAAKiF,SAAWjF,EAAK7mE,MAAMra,SAUzB,GAPuB,IAAnBkhF,EAAKuE,YACPvE,EAAK3mE,OAAS,IAAItI,WAAWy6E,GAC7BxL,EAAKyE,SAAW,EAChBzE,EAAKuE,UAAYiH,IAIdQ,IAAgB3mC,IAAgB2mC,IAAgBhB,KAAmBhL,EAAKuE,WAAa,EACxFnmF,KAAK6tF,OAAOjM,EAAK3mE,OAAO6lE,SAAS,EAAGc,EAAKyE,WACzCzE,EAAKuE,UAAY,MAFnB,CASA,GAHAniC,EAAS2mC,GAAUG,QAAQlJ,EAAMgM,GAG7B5pC,IAAW+oC,GAOb,OANInL,EAAKyE,SAAW,GAClBrmF,KAAK6tF,OAAOjM,EAAK3mE,OAAO6lE,SAAS,EAAGc,EAAKyE,WAE3CriC,EAAS2mC,GAAUY,WAAWvrF,KAAK4hF,MACnC5hF,KAAK8tF,MAAM9pC,GACXhkD,KAAKutF,OAAQ,EACNvpC,IAAW8oC,GAIpB,GAAuB,IAAnBlL,EAAKuE,WAMT,GAAIyH,EAAc,GAAKhM,EAAKyE,SAAW,EACrCrmF,KAAK6tF,OAAOjM,EAAK3mE,OAAO6lE,SAAS,EAAGc,EAAKyE,WACzCzE,EAAKuE,UAAY,OAInB,GAAsB,IAAlBvE,EAAKiF,SAAgB,WAXvB7mF,KAAK6tF,OAAOjM,EAAK3mE,QAcrB,OAAO,GAWTkyE,GAAQ5uF,UAAUsvF,OAAS,SAAU9lE,GACnC/nB,KAAKkxD,OAAOzvD,KAAKsmB,IAanBolE,GAAQ5uF,UAAUuvF,MAAQ,SAAU9pC,GAE9BA,IAAW8oC,KACb9sF,KAAKyD,OAASsoF,GAAqB/rF,KAAKkxD,SAE1ClxD,KAAKkxD,OAAS,GACdlxD,KAAKqgD,IAAM2D,EACXhkD,KAAKsvB,IAAMtvB,KAAK4hF,KAAKtyD,KA8EvB,IAMIy+D,GAAc,CACjBZ,QAPeA,GAQfrC,QAPiB2C,GAQjBO,WA/BD,SAAoBjzE,EAAOvL,GAGzB,OAFAA,EAAUA,GAAW,IACbmzC,KAAM,EACP8qC,GAAU1yE,EAAOvL,IA6BzB89E,KAjBD,SAAcvyE,EAAOvL,GAGnB,OAFAA,EAAUA,GAAW,IACb89E,MAAO,EACRG,GAAU1yE,EAAOvL,IAezBk0E,UAPiBA,IAoElB,IAAIuK,GAAU,SAAsBrM,EAAM52E,GACxC,IAAIkjF,EACAppE,EACAqpE,EACApD,EACAx6D,EAEA69D,EAEAC,EACAC,EACAC,EAEAC,EACAC,EACAxmF,EACAymF,EACAC,EACAC,EACAC,EACAC,EACAC,EAEAxoE,EACA82D,EACA7+B,EACAwwC,EAGAj0E,EAAOE,EAGX,MAAMo+B,EAAQuoC,EAAKvoC,MAEnB60C,EAAMtM,EAAKkF,QACX/rE,EAAQ6mE,EAAK7mE,MACb+J,EAAOopE,GAAOtM,EAAKiF,SAAW,GAC9BsH,EAAOvM,EAAKyE,SACZprE,EAAS2mE,EAAK3mE,OACd8vE,EAAMoD,GAAQnjF,EAAQ42E,EAAKuE,WAC3B51D,EAAM49D,GAAQvM,EAAKuE,UAAY,KAE/BiI,EAAO/0C,EAAM+0C,KAEbC,EAAQh1C,EAAMg1C,MACdC,EAAQj1C,EAAMi1C,MACdC,EAAQl1C,EAAMk1C,MACdC,EAAWn1C,EAAM5+B,OACjBg0E,EAAOp1C,EAAMo1C,KACbxmF,EAAOoxC,EAAMpxC,KACbymF,EAAQr1C,EAAM41C,QACdN,EAAQt1C,EAAM61C,SACdN,GAAS,GAAKv1C,EAAM81C,SAAW,EAC/BN,GAAS,GAAKx1C,EAAM+1C,UAAY,EAMhCniF,EACA,EAAG,CACGhF,EAAO,KACTwmF,GAAQ1zE,EAAMmzE,MAAUjmF,EACxBA,GAAQ,EACRwmF,GAAQ1zE,EAAMmzE,MAAUjmF,EACxBA,GAAQ,GAGV6mF,EAAOJ,EAAMD,EAAOG,GAEpBS,EACA,OAAS,CAKP,GAJAN,EAAKD,IAAS,GACdL,KAAUM,EACV9mF,GAAQ8mF,EACRA,EAAMD,IAAS,GAAM,IACV,IAAPC,EAIF9zE,EAAOkzE,KAAiB,MAAPW,MAEd,MAAS,GAALC,GAwKJ,IAAkB,IAAR,GAALA,GAAgB,CACxBD,EAAOJ,GAAc,MAAPI,IAA8BL,GAAS,GAAKM,GAAM,IAChE,SAASM,EAEN,GAAS,GAALN,EAAS,CAEhB11C,EAAMv7C,KArSD,GAsSL,MAAMmP,EAGN20E,EAAKtyD,IAAM,8BACX+pB,EAAMv7C,KA3SF,GA4SJ,MAAMmP,EAnLNsZ,EAAa,MAAPuoE,EACNC,GAAM,GACFA,IACE9mF,EAAO8mF,IACTN,GAAQ1zE,EAAMmzE,MAAUjmF,EACxBA,GAAQ,GAEVse,GAAOkoE,GAAS,GAAKM,GAAM,EAC3BN,KAAUM,EACV9mF,GAAQ8mF,GAGN9mF,EAAO,KACTwmF,GAAQ1zE,EAAMmzE,MAAUjmF,EACxBA,GAAQ,EACRwmF,GAAQ1zE,EAAMmzE,MAAUjmF,EACxBA,GAAQ,GAEV6mF,EAAOH,EAAMF,EAAOI,GAEpBS,EACA,OAAS,CAMP,GALAP,EAAKD,IAAS,GACdL,KAAUM,EACV9mF,GAAQ8mF,EACRA,EAAMD,IAAS,GAAM,MAEZ,GAALC,GA+HC,IAAkB,IAAR,GAALA,GAAgB,CACxBD,EAAOH,GAAc,MAAPG,IAA8BL,GAAS,GAAKM,GAAM,IAChE,SAASO,EAGT1N,EAAKtyD,IAAM,wBACX+pB,EAAMv7C,KAzRN,GA0RA,MAAMmP,EAzHN,GAZAowE,EAAc,MAAPyR,EACPC,GAAM,GACF9mF,EAAO8mF,IACTN,GAAQ1zE,EAAMmzE,MAAUjmF,EACxBA,GAAQ,EACJA,EAAO8mF,IACTN,GAAQ1zE,EAAMmzE,MAAUjmF,EACxBA,GAAQ,IAGZo1E,GAAQoR,GAAS,GAAKM,GAAM,EAExB1R,EAAO+Q,EAAM,CACfxM,EAAKtyD,IAAM,gCACX+pB,EAAMv7C,KAnKR,GAoKE,MAAMmP,EAOR,GAJAwhF,KAAUM,EACV9mF,GAAQ8mF,EAERA,EAAKZ,EAAOpD,EACR1N,EAAO0R,EAAI,CAEb,GADAA,EAAK1R,EAAO0R,EACRA,EAAKT,GACHj1C,EAAMk2C,KAAM,CACd3N,EAAKtyD,IAAM,gCACX+pB,EAAMv7C,KAhLZ,GAiLM,MAAMmP,EA2BV,GAFAuxC,EAAO,EACPwwC,EAAcR,EACA,IAAVD,GAEF,GADA/vC,GAAQ6vC,EAAQU,EACZA,EAAKxoE,EAAK,CACZA,GAAOwoE,EACP,GACE9zE,EAAOkzE,KAAUK,EAAShwC,aACjBuwC,GACXvwC,EAAO2vC,EAAO9Q,EACd2R,EAAc/zE,QAGb,GAAIszE,EAAQQ,GAGf,GAFAvwC,GAAQ6vC,EAAQE,EAAQQ,EACxBA,GAAMR,EACFQ,EAAKxoE,EAAK,CACZA,GAAOwoE,EACP,GACE9zE,EAAOkzE,KAAUK,EAAShwC,aACjBuwC,GAEX,GADAvwC,EAAO,EACH+vC,EAAQhoE,EAAK,CACfwoE,EAAKR,EACLhoE,GAAOwoE,EACP,GACE9zE,EAAOkzE,KAAUK,EAAShwC,aACjBuwC,GACXvwC,EAAO2vC,EAAO9Q,EACd2R,EAAc/zE,SAMlB,GADAujC,GAAQ+vC,EAAQQ,EACZA,EAAKxoE,EAAK,CACZA,GAAOwoE,EACP,GACE9zE,EAAOkzE,KAAUK,EAAShwC,aACjBuwC,GACXvwC,EAAO2vC,EAAO9Q,EACd2R,EAAc/zE,EAGlB,KAAOsL,EAAM,GACXtL,EAAOkzE,KAAUa,EAAYxwC,KAC7BvjC,EAAOkzE,KAAUa,EAAYxwC,KAC7BvjC,EAAOkzE,KAAUa,EAAYxwC,KAC7Bj4B,GAAO,EAELA,IACFtL,EAAOkzE,KAAUa,EAAYxwC,KACzBj4B,EAAM,IACRtL,EAAOkzE,KAAUa,EAAYxwC,WAI9B,CACHA,EAAO2vC,EAAO9Q,EACd,GACEpiE,EAAOkzE,KAAUlzE,EAAOujC,KACxBvjC,EAAOkzE,KAAUlzE,EAAOujC,KACxBvjC,EAAOkzE,KAAUlzE,EAAOujC,KACxBj4B,GAAO,QACAA,EAAM,GACXA,IACFtL,EAAOkzE,KAAUlzE,EAAOujC,KACpBj4B,EAAM,IACRtL,EAAOkzE,KAAUlzE,EAAOujC,OAehC,OAkBJ,aAEK0vC,EAAMppE,GAAQqpE,EAAO59D,GAG9BhK,EAAMte,GAAQ,EACdimF,GAAO3nE,EACPte,GAAQse,GAAO,EACfkoE,IAAS,GAAKxmF,GAAQ,EAGtB25E,EAAKkF,QAAUoH,EACftM,EAAKyE,SAAW8H,EAChBvM,EAAKiF,SAAYqH,EAAMppE,EAAYA,EAAOopE,EAAZ,EAAmB,GAAKA,EAAMppE,GAC5D88D,EAAKuE,UAAagI,EAAO59D,EAAaA,EAAM49D,EAAb,IAAqB,KAAOA,EAAO59D,GAClE8oB,EAAMo1C,KAAOA,EACbp1C,EAAMpxC,KAAOA,GAuBf,MASMunF,GAAQ,IAAIrF,YAAY,CAC5B,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACrD,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,IAGzDsF,GAAO,IAAI98E,WAAW,CAC1B,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAGpD+8E,GAAQ,IAAIvF,YAAY,CAC5B,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IACtD,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAClD,KAAM,MAAO,MAAO,MAAO,EAAG,IAG1BwF,GAAO,IAAIh9E,WAAW,CAC1B,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACpC,GAAI,GAAI,GAAI,GAAI,GAAI,KAsStB,IAAIi9E,GAnSkB,CAACj2E,EAAMk2E,EAAMC,EAAYhlC,EAAOq4B,EAAO4M,EAAaC,EAAMziF,KAE9E,MAAMtF,EAAOsF,EAAKtF,KAGlB,IASIgoF,EACA5hB,EACAvhE,EACA2wB,EACAv4B,EAIAqrB,EAjBAhK,EAAM,EACN2pE,EAAM,EACN5lF,EAAM,EAAGxE,EAAM,EACfyK,EAAO,EACP4/E,EAAO,EACPlqE,EAAO,EACPva,EAAO,EACP0kF,EAAO,EACPC,EAAO,EAMP7uF,EAAO,KACP8uF,EAAa,EAGjB,MAAMtoE,EAAQ,IAAImiE,YAAYoG,IACxBC,EAAO,IAAIrG,YAAYoG,IAC7B,IAGIE,EAAWC,EAASC,EAHpB17C,EAAQ,KACR27C,EAAc,EAoClB,IAAKrqE,EAAM,EAAGA,GA7FA,GA6FgBA,IAC5ByB,EAAMzB,GAAO,EAEf,IAAK2pE,EAAM,EAAGA,EAAMplC,EAAOolC,IACzBloE,EAAM6nE,EAAKC,EAAaI,MAK1B,IADA3/E,EAAOtI,EACFnC,EAtGS,GAsGMA,GAAO,GACN,IAAfkiB,EAAMliB,GADkBA,KAM9B,GAHIyK,EAAOzK,IACTyK,EAAOzK,GAEG,IAARA,EAaF,OATAq9E,EAAM4M,KAAiB,SAMvB5M,EAAM4M,KAAiB,SAEvBxiF,EAAKtF,KAAO,EACL,EAET,IAAKqC,EAAM,EAAGA,EAAMxE,GACC,IAAfkiB,EAAM1d,GADaA,KASzB,IANIiG,EAAOjG,IACTiG,EAAOjG,GAIToB,EAAO,EACF6a,EAAM,EAAGA,GApIA,GAoIgBA,IAG5B,GAFA7a,IAAS,EACTA,GAAQsc,EAAMzB,GACV7a,EAAO,EACT,OAAQ,EAGZ,GAAIA,EAAO,IAtIC,IAsIKiO,GAA0B,IAAR7T,GACjC,OAAQ,EAKV,IADA0qF,EAAK,GAAK,EACLjqE,EAAM,EAAGA,EAjJA,GAiJeA,IAC3BiqE,EAAKjqE,EAAM,GAAKiqE,EAAKjqE,GAAOyB,EAAMzB,GAIpC,IAAK2pE,EAAM,EAAGA,EAAMplC,EAAOolC,IACM,IAA3BL,EAAKC,EAAaI,KACpBF,EAAKQ,EAAKX,EAAKC,EAAaI,OAAWA,GAmE3C,GAtNY,IAyLRv2E,GACFnY,EAAOyzC,EAAQ+6C,EACfz/D,EAAM,IA1LG,IA4LA5W,GACTnY,EAAOguF,GACPc,GAAc,IACdr7C,EAAQw6C,GACRmB,GAAe,IACfrgE,EAAM,MAGN/uB,EAAOkuF,GACPz6C,EAAQ06C,GACRp/D,GAAO,GAIT8/D,EAAO,EACPH,EAAM,EACN3pE,EAAMjc,EACNpF,EAAO6qF,EACPI,EAAO5/E,EACP0V,EAAO,EACPnZ,GAAO,EACPsjF,EAAO,GAAK7/E,EACZktB,EAAO2yD,EAAO,EAlNH,IAqNNz2E,GAAiBy2E,EA1NJ,KAMN,IAqNTz2E,GAAkBy2E,EA1NF,IA2NjB,OAAO,EAIT,OAAS,CAEPK,EAAYlqE,EAAMN,EACd+pE,EAAKE,GAAO3/D,GACdmgE,EAAU,EACVC,EAAWX,EAAKE,IAETF,EAAKE,GAAO3/D,GACnBmgE,EAAUz7C,EAAM27C,EAAcZ,EAAKE,IACnCS,EAAWnvF,EAAK8uF,EAAaN,EAAKE,MAGlCQ,EAAU,GACVC,EAAW,GAIbV,EAAO,GAAM1pE,EAAMN,EACnBooD,EAAO,GAAK8hB,EACZ7lF,EAAM+jE,EACN,GACEA,GAAQ4hB,EACR9M,EAAMj+E,GAAQmrF,GAAQpqE,GAAQooD,GAASoiB,GAAa,GAAOC,GAAW,GAAMC,EAAU,QACtE,IAATtiB,GAIT,IADA4hB,EAAO,GAAM1pE,EAAM,EACZ8pE,EAAOJ,GACZA,IAAS,EAWX,GATa,IAATA,GACFI,GAAQJ,EAAO,EACfI,GAAQJ,GAERI,EAAO,EAITH,IACqB,KAAfloE,EAAMzB,GAAY,CACtB,GAAIA,IAAQzgB,EAAO,MACnBygB,EAAMspE,EAAKC,EAAaE,EAAKE,IAI/B,GAAI3pE,EAAMhW,IAAS8/E,EAAO5yD,KAAU3wB,EAAK,CAYvC,IAVa,IAATmZ,IACFA,EAAO1V,GAITrL,GAAQoF,EAGR6lF,EAAO5pE,EAAMN,EACbva,EAAO,GAAKykF,EACLA,EAAOlqE,EAAOngB,IACnB4F,GAAQsc,EAAMmoE,EAAOlqE,KACjBva,GAAQ,KACZykF,IACAzkF,IAAS,EAKX,GADA0kF,GAAQ,GAAKD,EA5RN,IA6RFx2E,GAAiBy2E,EAlSR,KAMN,IA6RLz2E,GAAkBy2E,EAlSN,IAmSb,OAAO,EAITtjF,EAAMujF,EAAO5yD,EAIb0lD,EAAMr2E,GAAQyD,GAAQ,GAAO4/E,GAAQ,GAAOjrF,EAAO6qF,EAAc,GAiBrE,OAVa,IAATM,IAIFlN,EAAMj+E,EAAOmrF,GAAU9pE,EAAMN,GAAS,GAAO,IAAM,GAAK,GAK1D1Y,EAAKtF,KAAOsI,EACL,GA8BT,MAQEuzE,SAAU+M,GAAY9M,QAAS+M,GAAS,QAAE9M,GAC1CC,KAAM8M,GAAQ7M,aAAc8M,GAAc,YAAE7M,GAAaE,eAAgB4M,GAAkB3M,aAAc4M,GAAc,YAAE3M,GAAaC,YAAa2M,GACnJ9L,WAAY+L,IACV1N,GAqDE2N,GAAWxuF,IAEJA,IAAM,GAAM,MACbA,IAAM,EAAK,SACP,MAAJA,IAAe,KACX,IAAJA,IAAa,IAIzB,SAASyuF,KACPtxF,KAAKlC,KAAO,EACZkC,KAAK8kB,MAAO,EACZ9kB,KAAKgqB,KAAO,EACZhqB,KAAKuxF,UAAW,EAChBvxF,KAAKwxF,MAAQ,EACbxxF,KAAKouF,KAAO,EACZpuF,KAAKgE,MAAQ,EACbhE,KAAKmxB,MAAQ,EAEbnxB,KAAK8lB,KAAO,KAGZ9lB,KAAKyxF,MAAQ,EACbzxF,KAAKquF,MAAQ,EACbruF,KAAKsuF,MAAQ,EACbtuF,KAAKuuF,MAAQ,EACbvuF,KAAKya,OAAS,KAGdza,KAAKyuF,KAAO,EACZzuF,KAAKiI,KAAO,EAGZjI,KAAKU,OAAS,EACdV,KAAKsZ,OAAS,EAGdtZ,KAAKi1C,MAAQ,EAGbj1C,KAAKivF,QAAU,KACfjvF,KAAKkvF,SAAW,KAChBlvF,KAAKmvF,QAAU,EACfnvF,KAAKovF,SAAW,EAGhBpvF,KAAK0xF,MAAQ,EACb1xF,KAAK2xF,KAAO,EACZ3xF,KAAK4xF,MAAQ,EACb5xF,KAAK6xF,KAAO,EACZ7xF,KAAKkF,KAAO,KAEZlF,KAAK6vF,KAAO,IAAI1F,YAAY,KAC5BnqF,KAAKgwF,KAAO,IAAI7F,YAAY,KAO5BnqF,KAAK8xF,OAAS,KACd9xF,KAAK+xF,QAAU,KACf/xF,KAAKuvF,KAAO,EACZvvF,KAAKgyF,KAAO,EACZhyF,KAAKiyF,IAAM,EAIb,MAAMC,GAAoBtQ,IAExB,IAAKA,IAASA,EAAKvoC,MAAS,OAAO43C,GACnC,MAAM53C,EAAQuoC,EAAKvoC,MAoBnB,OAnBAuoC,EAAKmF,SAAWnF,EAAK0E,UAAYjtC,EAAMloB,MAAQ,EAC/CywD,EAAKtyD,IAAM,GACP+pB,EAAMrvB,OACR43D,EAAKkB,MAAqB,EAAbzpC,EAAMrvB,MAErBqvB,EAAMv7C,KA3HQ,EA4Hdu7C,EAAMv0B,KAAO,EACbu0B,EAAMk4C,SAAW,EACjBl4C,EAAM+0C,KAAO,MACb/0C,EAAMvzB,KAAO,KACbuzB,EAAMo1C,KAAO,EACbp1C,EAAMpxC,KAAO,EAEboxC,EAAM41C,QAAU51C,EAAMy4C,OAAS,IAAIK,WA9Ff,KA+FpB94C,EAAM61C,SAAW71C,EAAM04C,QAAU,IAAII,WA9FhB,KAgGrB94C,EAAMk2C,KAAO,EACbl2C,EAAM24C,MAAQ,EAEPjB,IAIHqB,GAAgBxQ,IAEpB,IAAKA,IAASA,EAAKvoC,MAAS,OAAO43C,GACnC,MAAM53C,EAAQuoC,EAAKvoC,MAInB,OAHAA,EAAMg1C,MAAQ,EACdh1C,EAAMi1C,MAAQ,EACdj1C,EAAMk1C,MAAQ,EACP2D,GAAiBtQ,IAKpByQ,GAAgB,CAACzQ,EAAM6I,KAC3B,IAAIzgE,EAGJ,IAAK43D,IAASA,EAAKvoC,MAAS,OAAO43C,GACnC,MAAM53C,EAAQuoC,EAAKvoC,MAenB,OAZIoxC,EAAa,GACfzgE,EAAO,EACPygE,GAAcA,IAGdzgE,EAA2B,GAAnBygE,GAAc,GAClBA,EAAa,KACfA,GAAc,KAKdA,IAAeA,EAAa,GAAKA,EAAa,IACzCwG,IAEY,OAAjB53C,EAAM5+B,QAAmB4+B,EAAMo4C,QAAUhH,IAC3CpxC,EAAM5+B,OAAS,MAIjB4+B,EAAMrvB,KAAOA,EACbqvB,EAAMo4C,MAAQhH,EACP2H,GAAaxQ,KAIhB0Q,GAAe,CAAC1Q,EAAM6I,KAE1B,IAAK7I,EAAQ,OAAOqP,GAGpB,MAAM53C,EAAQ,IAAIi4C,GAIlB1P,EAAKvoC,MAAQA,EACbA,EAAM5+B,OAAS,KACf,MAAMgY,EAAM4/D,GAAczQ,EAAM6I,GAIhC,OAHIh4D,IAAQs+D,KACVnP,EAAKvoC,MAAQ,MAER5mB,GAoBT,IAEI8/D,GAAQC,GAFRC,IAAS,EAKb,MAAMC,GAAer5C,IAGnB,GAAIo5C,GAAQ,CACVF,GAAS,IAAIJ,WAAW,KACxBK,GAAU,IAAIL,WAAW,IAGzB,IAAIjC,EAAM,EACV,KAAOA,EAAM,KAAO72C,EAAMw2C,KAAKK,KAAS,EACxC,KAAOA,EAAM,KAAO72C,EAAMw2C,KAAKK,KAAS,EACxC,KAAOA,EAAM,KAAO72C,EAAMw2C,KAAKK,KAAS,EACxC,KAAOA,EAAM,KAAO72C,EAAMw2C,KAAKK,KAAS,EAMxC,IAJAN,GAlQW,EAkQOv2C,EAAMw2C,KAAM,EAAG,IAAK0C,GAAU,EAAGl5C,EAAM22C,KAAM,CAAE/nF,KAAM,IAGvEioF,EAAM,EACCA,EAAM,IAAM72C,EAAMw2C,KAAKK,KAAS,EAEvCN,GAvQY,EAuQMv2C,EAAMw2C,KAAM,EAAG,GAAM2C,GAAS,EAAGn5C,EAAM22C,KAAM,CAAE/nF,KAAM,IAGvEwqF,IAAS,EAGXp5C,EAAM41C,QAAUsD,GAChBl5C,EAAM81C,QAAU,EAChB91C,EAAM61C,SAAWsD,GACjBn5C,EAAM+1C,SAAW,GAkBbuD,GAAe,CAAC/Q,EAAMzoB,EAAK5oC,EAAKgB,KAEpC,IAAI8rD,EACJ,MAAMhkC,EAAQuoC,EAAKvoC,MAqCnB,OAlCqB,OAAjBA,EAAM5+B,SACR4+B,EAAMg1C,MAAQ,GAAKh1C,EAAMo4C,MACzBp4C,EAAMk1C,MAAQ,EACdl1C,EAAMi1C,MAAQ,EAEdj1C,EAAM5+B,OAAS,IAAI9H,WAAW0mC,EAAMg1C,QAIlC98D,GAAQ8nB,EAAMg1C,OAChBh1C,EAAM5+B,OAAO/I,IAAIynD,EAAI2nB,SAASvwD,EAAM8oB,EAAMg1C,MAAO99D,GAAM,GACvD8oB,EAAMk1C,MAAQ,EACdl1C,EAAMi1C,MAAQj1C,EAAMg1C,QAGpBhR,EAAOhkC,EAAMg1C,MAAQh1C,EAAMk1C,MACvBlR,EAAO9rD,IACT8rD,EAAO9rD,GAGT8nB,EAAM5+B,OAAO/I,IAAIynD,EAAI2nB,SAASvwD,EAAMgB,EAAMhB,EAAMgB,EAAO8rD,GAAOhkC,EAAMk1C,QACpEh9D,GAAQ8rD,IAGNhkC,EAAM5+B,OAAO/I,IAAIynD,EAAI2nB,SAASvwD,EAAMgB,EAAMhB,GAAM,GAChD8oB,EAAMk1C,MAAQh9D,EACd8nB,EAAMi1C,MAAQj1C,EAAMg1C,QAGpBh1C,EAAMk1C,OAASlR,EACXhkC,EAAMk1C,QAAUl1C,EAAMg1C,QAASh1C,EAAMk1C,MAAQ,GAC7Cl1C,EAAMi1C,MAAQj1C,EAAMg1C,QAASh1C,EAAMi1C,OAASjR,KAG7C,GA8oCT,IAqBIuV,GAAY,CACfR,aAtBoBA,GAuBpBC,cAtBqBA,GAuBrBH,iBAtBwBA,GAuBxBW,YAnxCoBjR,GAEZ0Q,GAAa1Q,EAvKF,IAy7CnB0Q,aAtBoBA,GAuBpBQ,QArqCe,CAAClR,EAAM56B,KAErB,IAAI3N,EACAt+B,EAAOE,EACP/V,EACA6tF,EACAlB,EAAMnmF,EACN+iF,EACAxmF,EACAimF,EAAKC,EACL58D,EACAitB,EACAwwC,EAEAyB,EAAWC,EAASC,EAEpBqC,EAAWC,EAASC,EACpB3sE,EACAkM,EALAq8D,EAAO,EAMX,MAAMqE,EAAO,IAAIxgF,WAAW,GAC5B,IAAIpF,EAEAnP,EAEJ,MAAMg1F,EACJ,IAAIzgF,WAAW,CAAE,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,KAGjF,IAAKivE,IAASA,EAAKvoC,QAAUuoC,EAAK3mE,SAC5B2mE,EAAK7mE,OAA2B,IAAlB6mE,EAAKiF,SACvB,OAAOoK,GAGT53C,EAAQuoC,EAAKvoC,MApVO,KAqVhBA,EAAMv7C,OAAmBu7C,EAAMv7C,KApVf,IAwVpBi1F,EAAMnR,EAAKyE,SACXprE,EAAS2mE,EAAK3mE,OACdvP,EAAOk2E,EAAKuE,UACZjhF,EAAO08E,EAAKkF,QACZ/rE,EAAQ6mE,EAAK7mE,MACb82E,EAAOjQ,EAAKiF,SACZ4H,EAAOp1C,EAAMo1C,KACbxmF,EAAOoxC,EAAMpxC,KAGbimF,EAAM2D,EACN1D,EAAOziF,EACP+mB,EAAMs+D,GAENsC,EACA,OACE,OAAQh6C,EAAMv7C,MACZ,KArXU,EAsXR,GAAmB,IAAfu7C,EAAMrvB,KAAY,CACpBqvB,EAAMv7C,KA3WM,GA4WZ,MAGF,KAAOmK,EAAO,IAAI,CAChB,GAAa,IAAT4pF,EAAc,MAAMwB,EACxBxB,IACApD,GAAQ1zE,EAAM7V,MAAW+C,EACzBA,GAAQ,EAGV,GAAkB,EAAboxC,EAAMrvB,MAAsB,QAATykE,EAAiB,CACvCp1C,EAAMr1C,MAAQ,EAEdmvF,EAAK,GAAY,IAAP1E,EACV0E,EAAK,GAAM1E,IAAS,EAAK,IACzBp1C,EAAMr1C,MAAQq/E,GAAQhqC,EAAMr1C,MAAOmvF,EAAM,EAAG,GAI5C1E,EAAO,EACPxmF,EAAO,EAEPoxC,EAAMv7C,KA7YC,EA8YP,MAMF,GAJAu7C,EAAMm4C,MAAQ,EACVn4C,EAAMvzB,OACRuzB,EAAMvzB,KAAK49B,MAAO,KAED,EAAbrK,EAAMrvB,UACA,IAAPykE,IAA2B,IAAMA,GAAQ,IAAM,GAAI,CACtD7M,EAAKtyD,IAAM,yBACX+pB,EAAMv7C,KA3XC,GA4XP,MAEF,IAAY,GAAP2wF,KAA4B2C,GAAc,CAC7CxP,EAAKtyD,IAAM,6BACX+pB,EAAMv7C,KAhYC,GAiYP,MAOF,GAJA2wF,KAAU,EACVxmF,GAAQ,EAERse,EAAiC,GAAnB,GAAPkoE,GACa,IAAhBp1C,EAAMo4C,MACRp4C,EAAMo4C,MAAQlrE,OAEX,GAAIA,EAAM8yB,EAAMo4C,MAAO,CAC1B7P,EAAKtyD,IAAM,sBACX+pB,EAAMv7C,KA7YC,GA8YP,MAKFu7C,EAAM+0C,KAAO,GAAK/0C,EAAMo4C,MAIxB7P,EAAKkB,MAAQzpC,EAAMr1C,MAAQ,EAC3Bq1C,EAAMv7C,KAAc,IAAP2wF,EA5aH,GAEI,GA4adA,EAAO,EACPxmF,EAAO,EAEP,MACF,KA1bW,EA4bT,KAAOA,EAAO,IAAI,CAChB,GAAa,IAAT4pF,EAAc,MAAMwB,EACxBxB,IACApD,GAAQ1zE,EAAM7V,MAAW+C,EACzBA,GAAQ,EAIV,GADAoxC,EAAMm4C,MAAQ/C,GACK,IAAdp1C,EAAMm4C,SAAkBJ,GAAc,CACzCxP,EAAKtyD,IAAM,6BACX+pB,EAAMv7C,KA1aC,GA2aP,MAEF,GAAkB,MAAdu7C,EAAMm4C,MAAgB,CACxB5P,EAAKtyD,IAAM,2BACX+pB,EAAMv7C,KA/aC,GAgbP,MAEEu7C,EAAMvzB,OACRuzB,EAAMvzB,KAAKnb,KAAS8jF,GAAQ,EAAK,GAEjB,IAAdp1C,EAAMm4C,QAER2B,EAAK,GAAY,IAAP1E,EACV0E,EAAK,GAAM1E,IAAS,EAAK,IACzBp1C,EAAMr1C,MAAQq/E,GAAQhqC,EAAMr1C,MAAOmvF,EAAM,EAAG,IAI9C1E,EAAO,EACPxmF,EAAO,EAEPoxC,EAAMv7C,KA3dE,EA6dV,KA7dU,EA+dR,KAAOmK,EAAO,IAAI,CAChB,GAAa,IAAT4pF,EAAc,MAAMwB,EACxBxB,IACApD,GAAQ1zE,EAAM7V,MAAW+C,EACzBA,GAAQ,EAGNoxC,EAAMvzB,OACRuzB,EAAMvzB,KAAKolE,KAAOuD,GAEF,IAAdp1C,EAAMm4C,QAER2B,EAAK,GAAY,IAAP1E,EACV0E,EAAK,GAAM1E,IAAS,EAAK,IACzB0E,EAAK,GAAM1E,IAAS,GAAM,IAC1B0E,EAAK,GAAM1E,IAAS,GAAM,IAC1Bp1C,EAAMr1C,MAAQq/E,GAAQhqC,EAAMr1C,MAAOmvF,EAAM,EAAG,IAI9C1E,EAAO,EACPxmF,EAAO,EAEPoxC,EAAMv7C,KArfA,EAufR,KAvfQ,EAyfN,KAAOmK,EAAO,IAAI,CAChB,GAAa,IAAT4pF,EAAc,MAAMwB,EACxBxB,IACApD,GAAQ1zE,EAAM7V,MAAW+C,EACzBA,GAAQ,EAGNoxC,EAAMvzB,OACRuzB,EAAMvzB,KAAKwtE,OAAiB,IAAP7E,EACrBp1C,EAAMvzB,KAAK+oC,GAAM4/B,GAAQ,GAET,IAAdp1C,EAAMm4C,QAER2B,EAAK,GAAY,IAAP1E,EACV0E,EAAK,GAAM1E,IAAS,EAAK,IACzBp1C,EAAMr1C,MAAQq/E,GAAQhqC,EAAMr1C,MAAOmvF,EAAM,EAAG,IAI9C1E,EAAO,EACPxmF,EAAO,EAEPoxC,EAAMv7C,KA9gBG,EAghBX,KAhhBW,EAihBT,GAAkB,KAAdu7C,EAAMm4C,MAAgB,CAExB,KAAOvpF,EAAO,IAAI,CAChB,GAAa,IAAT4pF,EAAc,MAAMwB,EACxBxB,IACApD,GAAQ1zE,EAAM7V,MAAW+C,EACzBA,GAAQ,EAGVoxC,EAAM34C,OAAS+tF,EACXp1C,EAAMvzB,OACRuzB,EAAMvzB,KAAKytE,UAAY9E,GAEP,IAAdp1C,EAAMm4C,QAER2B,EAAK,GAAY,IAAP1E,EACV0E,EAAK,GAAM1E,IAAS,EAAK,IACzBp1C,EAAMr1C,MAAQq/E,GAAQhqC,EAAMr1C,MAAOmvF,EAAM,EAAG,IAI9C1E,EAAO,EACPxmF,EAAO,OAGAoxC,EAAMvzB,OACbuzB,EAAMvzB,KAAKmvB,MAAQ,MAErBoE,EAAMv7C,KA5iBG,EA8iBX,KA9iBW,EA+iBT,GAAkB,KAAdu7C,EAAMm4C,QACRjgE,EAAO8nB,EAAM34C,OACT6wB,EAAOsgE,IAAQtgE,EAAOsgE,GACtBtgE,IACE8nB,EAAMvzB,OACRS,EAAM8yB,EAAMvzB,KAAKytE,UAAYl6C,EAAM34C,OAC9B24C,EAAMvzB,KAAKmvB,QAEdoE,EAAMvzB,KAAKmvB,MAAQ,IAAItiC,WAAW0mC,EAAMvzB,KAAKytE,YAE/Cl6C,EAAMvzB,KAAKmvB,MAAMvjC,IACfqJ,EAAM+lE,SACJ57E,EAGAA,EAAOqsB,GAGThL,IAMc,IAAd8yB,EAAMm4C,QACRn4C,EAAMr1C,MAAQq/E,GAAQhqC,EAAMr1C,MAAO+W,EAAOwW,EAAMrsB,IAElD2sF,GAAQtgE,EACRrsB,GAAQqsB,EACR8nB,EAAM34C,QAAU6wB,GAEd8nB,EAAM34C,QAAU,MAAM2yF,EAE5Bh6C,EAAM34C,OAAS,EACf24C,EAAMv7C,KAhlBE,EAklBV,KAllBU,EAmlBR,GAAkB,KAAdu7C,EAAMm4C,MAAgB,CACxB,GAAa,IAATK,EAAc,MAAMwB,EACxB9hE,EAAO,EACP,GAEEhL,EAAMxL,EAAM7V,EAAOqsB,KAEf8nB,EAAMvzB,MAAQS,GACb8yB,EAAM34C,OAAS,QAClB24C,EAAMvzB,KAAK5oB,MAAQ6M,OAAOwR,aAAagL,UAElCA,GAAOgL,EAAOsgE,GAOvB,GALkB,IAAdx4C,EAAMm4C,QACRn4C,EAAMr1C,MAAQq/E,GAAQhqC,EAAMr1C,MAAO+W,EAAOwW,EAAMrsB,IAElD2sF,GAAQtgE,EACRrsB,GAAQqsB,EACJhL,EAAO,MAAM8sE,OAEVh6C,EAAMvzB,OACbuzB,EAAMvzB,KAAK5oB,KAAO,MAEpBm8C,EAAM34C,OAAS,EACf24C,EAAMv7C,KA1mBK,EA4mBb,KA5mBa,EA6mBX,GAAkB,KAAdu7C,EAAMm4C,MAAgB,CACxB,GAAa,IAATK,EAAc,MAAMwB,EACxB9hE,EAAO,EACP,GACEhL,EAAMxL,EAAM7V,EAAOqsB,KAEf8nB,EAAMvzB,MAAQS,GACb8yB,EAAM34C,OAAS,QAClB24C,EAAMvzB,KAAKm/C,SAAWl7D,OAAOwR,aAAagL,UAErCA,GAAOgL,EAAOsgE,GAMvB,GALkB,IAAdx4C,EAAMm4C,QACRn4C,EAAMr1C,MAAQq/E,GAAQhqC,EAAMr1C,MAAO+W,EAAOwW,EAAMrsB,IAElD2sF,GAAQtgE,EACRrsB,GAAQqsB,EACJhL,EAAO,MAAM8sE,OAEVh6C,EAAMvzB,OACbuzB,EAAMvzB,KAAKm/C,QAAU,MAEvB5rB,EAAMv7C,KAjoBE,EAmoBV,KAnoBU,EAooBR,GAAkB,IAAdu7C,EAAMm4C,MAAgB,CAExB,KAAOvpF,EAAO,IAAI,CAChB,GAAa,IAAT4pF,EAAc,MAAMwB,EACxBxB,IACApD,GAAQ1zE,EAAM7V,MAAW+C,EACzBA,GAAQ,EAGV,GAAIwmF,KAAwB,MAAdp1C,EAAMr1C,OAAiB,CACnC49E,EAAKtyD,IAAM,sBACX+pB,EAAMv7C,KA1nBD,GA2nBL,MAGF2wF,EAAO,EACPxmF,EAAO,EAGLoxC,EAAMvzB,OACRuzB,EAAMvzB,KAAKmlE,KAAS5xC,EAAMm4C,OAAS,EAAK,EACxCn4C,EAAMvzB,KAAK49B,MAAO,GAEpBk+B,EAAKkB,MAAQzpC,EAAMr1C,MAAQ,EAC3Bq1C,EAAMv7C,KAzpBQ,GA0pBd,MACF,KA7pBY,GA+pBV,KAAOmK,EAAO,IAAI,CAChB,GAAa,IAAT4pF,EAAc,MAAMwB,EACxBxB,IACApD,GAAQ1zE,EAAM7V,MAAW+C,EACzBA,GAAQ,EAGV25E,EAAKkB,MAAQzpC,EAAMr1C,MAAQqtF,GAAQ5C,GAEnCA,EAAO,EACPxmF,EAAO,EAEPoxC,EAAMv7C,KA1qBE,GA4qBV,KA5qBU,GA6qBR,GAAuB,IAAnBu7C,EAAMk4C,SASR,OAPA3P,EAAKyE,SAAW0M,EAChBnR,EAAKuE,UAAYz6E,EACjBk2E,EAAKkF,QAAU5hF,EACf08E,EAAKiF,SAAWgL,EAChBx4C,EAAMo1C,KAAOA,EACbp1C,EAAMpxC,KAAOA,EAENk8E,GAETvC,EAAKkB,MAAQzpC,EAAMr1C,MAAQ,EAC3Bq1C,EAAMv7C,KAxrBQ,GA0rBhB,KA1rBgB,GA2rBd,GAAIkpD,IAAU8pC,IAAa9pC,IAAUg9B,GAAW,MAAMqP,EAExD,KA5rBgB,GA6rBd,GAAIh6C,EAAMv0B,KAAM,CAEd2pE,KAAiB,EAAPxmF,EACVA,GAAe,EAAPA,EAERoxC,EAAMv7C,KAprBC,GAqrBP,MAGF,KAAOmK,EAAO,GAAG,CACf,GAAa,IAAT4pF,EAAc,MAAMwB,EACxBxB,IACApD,GAAQ1zE,EAAM7V,MAAW+C,EACzBA,GAAQ,EASV,OANAoxC,EAAMv0B,KAAe,EAAP2pE,EAEdA,KAAU,EACVxmF,GAAQ,EAGQ,EAAPwmF,GACP,KAAK,EAGHp1C,EAAMv7C,KAttBI,GAutBV,MACF,KAAK,EAKH,GAJA40F,GAAYr5C,GAGZA,EAAMv7C,KAttBM,GAutBRkpD,IAAUg9B,GAAS,CAErByK,KAAU,EACVxmF,GAAQ,EAER,MAAMorF,EAER,MACF,KAAK,EAGHh6C,EAAMv7C,KAruBG,GAsuBT,MACF,KAAK,EACH8jF,EAAKtyD,IAAM,qBACX+pB,EAAMv7C,KA5tBD,GA+tBT2wF,KAAU,EACVxmF,GAAQ,EAER,MACF,KAnvBgB,GAyvBd,IAJAwmF,KAAiB,EAAPxmF,EACVA,GAAe,EAAPA,EAGDA,EAAO,IAAI,CAChB,GAAa,IAAT4pF,EAAc,MAAMwB,EACxBxB,IACApD,GAAQ1zE,EAAM7V,MAAW+C,EACzBA,GAAQ,EAGV,IAAY,MAAPwmF,KAAqBA,IAAS,GAAM,OAAS,CAChD7M,EAAKtyD,IAAM,+BACX+pB,EAAMv7C,KAlvBC,GAmvBP,MAUF,GARAu7C,EAAM34C,OAAgB,MAAP+tF,EAIfA,EAAO,EACPxmF,EAAO,EAEPoxC,EAAMv7C,KA3wBO,GA4wBTkpD,IAAUg9B,GAAW,MAAMqP,EAEjC,KA9wBe,GA+wBbh6C,EAAMv7C,KA9wBM,GAgxBd,KAhxBc,GAkxBZ,GADAyzB,EAAO8nB,EAAM34C,OACT6wB,EAAM,CAGR,GAFIA,EAAOsgE,IAAQtgE,EAAOsgE,GACtBtgE,EAAO7lB,IAAQ6lB,EAAO7lB,GACb,IAAT6lB,EAAc,MAAM8hE,EAExBp4E,EAAOvJ,IAAIqJ,EAAM+lE,SAAS57E,EAAMA,EAAOqsB,GAAOwhE,GAE9ClB,GAAQtgE,EACRrsB,GAAQqsB,EACR7lB,GAAQ6lB,EACRwhE,GAAOxhE,EACP8nB,EAAM34C,QAAU6wB,EAChB,MAGF8nB,EAAMv7C,KAryBQ,GAsyBd,MACF,KAlyBe,GAoyBb,KAAOmK,EAAO,IAAI,CAChB,GAAa,IAAT4pF,EAAc,MAAMwB,EACxBxB,IACApD,GAAQ1zE,EAAM7V,MAAW+C,EACzBA,GAAQ,EAmBV,GAhBAoxC,EAAMs4C,KAAkC,KAAnB,GAAPlD,GAEdA,KAAU,EACVxmF,GAAQ,EAERoxC,EAAMu4C,MAAmC,GAAnB,GAAPnD,GAEfA,KAAU,EACVxmF,GAAQ,EAERoxC,EAAMq4C,MAAmC,GAAnB,GAAPjD,GAEfA,KAAU,EACVxmF,GAAQ,EAGJoxC,EAAMs4C,KAAO,KAAOt4C,EAAMu4C,MAAQ,GAAI,CACxChQ,EAAKtyD,IAAM,sCACX+pB,EAAMv7C,KAhzBC,GAizBP,MAIFu7C,EAAMw4C,KAAO,EACbx4C,EAAMv7C,KAl0BS,GAo0BjB,KAp0BiB,GAq0Bf,KAAOu7C,EAAMw4C,KAAOx4C,EAAMq4C,OAAO,CAE/B,KAAOzpF,EAAO,GAAG,CACf,GAAa,IAAT4pF,EAAc,MAAMwB,EACxBxB,IACApD,GAAQ1zE,EAAM7V,MAAW+C,EACzBA,GAAQ,EAGVoxC,EAAMw2C,KAAKuD,EAAM/5C,EAAMw4C,SAAmB,EAAPpD,EAEnCA,KAAU,EACVxmF,GAAQ,EAGV,KAAOoxC,EAAMw4C,KAAO,IAClBx4C,EAAMw2C,KAAKuD,EAAM/5C,EAAMw4C,SAAW,EAapC,GAPAx4C,EAAM41C,QAAU51C,EAAMy4C,OACtBz4C,EAAM81C,QAAU,EAEhB5hF,EAAO,CAAEtF,KAAMoxC,EAAM81C,SACrB18D,EAAMm9D,GAl4BE,EAk4BgBv2C,EAAMw2C,KAAM,EAAG,GAAIx2C,EAAM41C,QAAS,EAAG51C,EAAM22C,KAAMziF,GACzE8rC,EAAM81C,QAAU5hF,EAAKtF,KAEjBwqB,EAAK,CACPmvD,EAAKtyD,IAAM,2BACX+pB,EAAMv7C,KAx1BC,GAy1BP,MAGFu7C,EAAMw4C,KAAO,EACbx4C,EAAMv7C,KAx2BU,GA02BlB,KA12BkB,GA22BhB,KAAOu7C,EAAMw4C,KAAOx4C,EAAMs4C,KAAOt4C,EAAMu4C,OAAO,CAC5C,KACE9C,EAAOz1C,EAAM41C,QAAQR,GAAS,GAAKp1C,EAAM81C,SAAW,GACpDsB,EAAY3B,IAAS,GACrB4B,EAAW5B,IAAS,GAAM,IAC1B6B,EAAkB,MAAP7B,IAEP,GAAe7mF,IANZ,CAQP,GAAa,IAAT4pF,EAAc,MAAMwB,EACxBxB,IACApD,GAAQ1zE,EAAM7V,MAAW+C,EACzBA,GAAQ,EAGV,GAAI0oF,EAAW,GAEblC,KAAUgC,EACVxoF,GAAQwoF,EAERp3C,EAAMw2C,KAAKx2C,EAAMw4C,QAAUlB,MAExB,CACH,GAAiB,KAAbA,EAAiB,CAGnB,IADAvyF,EAAIqyF,EAAY,EACTxoF,EAAO7J,GAAG,CACf,GAAa,IAATyzF,EAAc,MAAMwB,EACxBxB,IACApD,GAAQ1zE,EAAM7V,MAAW+C,EACzBA,GAAQ,EAOV,GAHAwmF,KAAUgC,EACVxoF,GAAQwoF,EAEW,IAAfp3C,EAAMw4C,KAAY,CACpBjQ,EAAKtyD,IAAM,4BACX+pB,EAAMv7C,KAv4BL,GAw4BD,MAEFyoB,EAAM8yB,EAAMw2C,KAAKx2C,EAAMw4C,KAAO,GAC9BtgE,EAAO,GAAY,EAAPk9D,GAEZA,KAAU,EACVxmF,GAAQ,OAGL,GAAiB,KAAb0oF,EAAiB,CAGxB,IADAvyF,EAAIqyF,EAAY,EACTxoF,EAAO7J,GAAG,CACf,GAAa,IAATyzF,EAAc,MAAMwB,EACxBxB,IACApD,GAAQ1zE,EAAM7V,MAAW+C,EACzBA,GAAQ,EAIVwmF,KAAUgC,EACVxoF,GAAQwoF,EAERlqE,EAAM,EACNgL,EAAO,GAAY,EAAPk9D,GAEZA,KAAU,EACVxmF,GAAQ,MAGL,CAGH,IADA7J,EAAIqyF,EAAY,EACTxoF,EAAO7J,GAAG,CACf,GAAa,IAATyzF,EAAc,MAAMwB,EACxBxB,IACApD,GAAQ1zE,EAAM7V,MAAW+C,EACzBA,GAAQ,EAIVwmF,KAAUgC,EACVxoF,GAAQwoF,EAERlqE,EAAM,EACNgL,EAAO,IAAa,IAAPk9D,GAEbA,KAAU,EACVxmF,GAAQ,EAGV,GAAIoxC,EAAMw4C,KAAOtgE,EAAO8nB,EAAMs4C,KAAOt4C,EAAMu4C,MAAO,CAChDhQ,EAAKtyD,IAAM,4BACX+pB,EAAMv7C,KA77BH,GA87BH,MAEF,KAAOyzB,KACL8nB,EAAMw2C,KAAKx2C,EAAMw4C,QAAUtrE,GAMjC,GAv8BS,KAu8BL8yB,EAAMv7C,KAAkB,MAG5B,GAAwB,IAApBu7C,EAAMw2C,KAAK,KAAY,CACzBjO,EAAKtyD,IAAM,uCACX+pB,EAAMv7C,KA58BC,GA68BP,MAeF,GATAu7C,EAAM81C,QAAU,EAEhB5hF,EAAO,CAAEtF,KAAMoxC,EAAM81C,SACrB18D,EAAMm9D,GApgCC,EAogCgBv2C,EAAMw2C,KAAM,EAAGx2C,EAAMs4C,KAAMt4C,EAAM41C,QAAS,EAAG51C,EAAM22C,KAAMziF,GAGhF8rC,EAAM81C,QAAU5hF,EAAKtF,KAGjBwqB,EAAK,CACPmvD,EAAKtyD,IAAM,8BACX+pB,EAAMv7C,KA99BC,GA+9BP,MAcF,GAXAu7C,EAAM+1C,SAAW,EAGjB/1C,EAAM61C,SAAW71C,EAAM04C,QACvBxkF,EAAO,CAAEtF,KAAMoxC,EAAM+1C,UACrB38D,EAAMm9D,GAphCE,EAohCgBv2C,EAAMw2C,KAAMx2C,EAAMs4C,KAAMt4C,EAAMu4C,MAAOv4C,EAAM61C,SAAU,EAAG71C,EAAM22C,KAAMziF,GAG5F8rC,EAAM+1C,SAAW7hF,EAAKtF,KAGlBwqB,EAAK,CACPmvD,EAAKtyD,IAAM,wBACX+pB,EAAMv7C,KA/+BC,GAg/BP,MAIF,GADAu7C,EAAMv7C,KA7/BU,GA8/BZkpD,IAAUg9B,GAAW,MAAMqP,EAEjC,KAhgCkB,GAigChBh6C,EAAMv7C,KAhgCS,GAkgCjB,KAlgCiB,GAmgCf,GAAI+zF,GAAQ,GAAKnmF,GAAQ,IAAK,CAE5Bk2E,EAAKyE,SAAW0M,EAChBnR,EAAKuE,UAAYz6E,EACjBk2E,EAAKkF,QAAU5hF,EACf08E,EAAKiF,SAAWgL,EAChBx4C,EAAMo1C,KAAOA,EACbp1C,EAAMpxC,KAAOA,EAEbgmF,GAAQrM,EAAMuM,GAEd4E,EAAMnR,EAAKyE,SACXprE,EAAS2mE,EAAK3mE,OACdvP,EAAOk2E,EAAKuE,UACZjhF,EAAO08E,EAAKkF,QACZ/rE,EAAQ6mE,EAAK7mE,MACb82E,EAAOjQ,EAAKiF,SACZ4H,EAAOp1C,EAAMo1C,KACbxmF,EAAOoxC,EAAMpxC,KA9hCD,KAiiCRoxC,EAAMv7C,OACRu7C,EAAM24C,MAAQ,GAEhB,MAGF,IADA34C,EAAM24C,KAAO,EAEXlD,EAAOz1C,EAAM41C,QAAQR,GAAS,GAAKp1C,EAAM81C,SAAW,GACpDsB,EAAY3B,IAAS,GACrB4B,EAAW5B,IAAS,GAAM,IAC1B6B,EAAkB,MAAP7B,IAEP2B,GAAaxoF,IANV,CAQP,GAAa,IAAT4pF,EAAc,MAAMwB,EACxBxB,IACApD,GAAQ1zE,EAAM7V,MAAW+C,EACzBA,GAAQ,EAGV,GAAIyoF,GAAgC,IAAV,IAAVA,GAAuB,CAIrC,IAHAsC,EAAYvC,EACZwC,EAAUvC,EACVwC,EAAWvC,EAET7B,EAAOz1C,EAAM41C,QAAQiE,IACXzE,GAAS,GAAMuE,EAAYC,GAAY,IAAoCD,IACrFvC,EAAY3B,IAAS,GACrB4B,EAAW5B,IAAS,GAAM,IAC1B6B,EAAkB,MAAP7B,IAENkE,EAAYvC,GAAcxoF,IAPxB,CASP,GAAa,IAAT4pF,EAAc,MAAMwB,EACxBxB,IACApD,GAAQ1zE,EAAM7V,MAAW+C,EACzBA,GAAQ,EAIVwmF,KAAUuE,EACV/qF,GAAQ+qF,EAER35C,EAAM24C,MAAQgB,EAQhB,GALAvE,KAAUgC,EACVxoF,GAAQwoF,EAERp3C,EAAM24C,MAAQvB,EACdp3C,EAAM34C,OAASiwF,EACC,IAAZD,EAAe,CAIjBr3C,EAAMv7C,KA1kCO,GA2kCb,MAEF,GAAc,GAAV4yF,EAAc,CAEhBr3C,EAAM24C,MAAQ,EACd34C,EAAMv7C,KA9lCM,GA+lCZ,MAEF,GAAc,GAAV4yF,EAAc,CAChB9O,EAAKtyD,IAAM,8BACX+pB,EAAMv7C,KAjlCC,GAklCP,MAEFu7C,EAAMpE,MAAkB,GAAVy7C,EACdr3C,EAAMv7C,KA7lCY,GA+lCpB,KA/lCoB,GAgmClB,GAAIu7C,EAAMpE,MAAO,CAGf,IADA72C,EAAIi7C,EAAMpE,MACHhtC,EAAO7J,GAAG,CACf,GAAa,IAATyzF,EAAc,MAAMwB,EACxBxB,IACApD,GAAQ1zE,EAAM7V,MAAW+C,EACzBA,GAAQ,EAGVoxC,EAAM34C,QAAU+tF,GAAS,GAAKp1C,EAAMpE,OAAS,EAE7Cw5C,KAAUp1C,EAAMpE,MAChBhtC,GAAQoxC,EAAMpE,MAEdoE,EAAM24C,MAAQ34C,EAAMpE,MAGtBoE,EAAM44C,IAAM54C,EAAM34C,OAClB24C,EAAMv7C,KAlnCU,GAonClB,KApnCkB,GAqnChB,KACEgxF,EAAOz1C,EAAM61C,SAAST,GAAS,GAAKp1C,EAAM+1C,UAAY,GACtDqB,EAAY3B,IAAS,GACrB4B,EAAW5B,IAAS,GAAM,IAC1B6B,EAAkB,MAAP7B,IAEP,GAAe7mF,IANZ,CAQP,GAAa,IAAT4pF,EAAc,MAAMwB,EACxBxB,IACApD,GAAQ1zE,EAAM7V,MAAW+C,EACzBA,GAAQ,EAGV,GAAyB,IAAV,IAAVyoF,GAAuB,CAI1B,IAHAsC,EAAYvC,EACZwC,EAAUvC,EACVwC,EAAWvC,EAET7B,EAAOz1C,EAAM61C,SAASgE,IACZzE,GAAS,GAAMuE,EAAYC,GAAY,IAAoCD,IACrFvC,EAAY3B,IAAS,GACrB4B,EAAW5B,IAAS,GAAM,IAC1B6B,EAAkB,MAAP7B,IAENkE,EAAYvC,GAAcxoF,IAPxB,CASP,GAAa,IAAT4pF,EAAc,MAAMwB,EACxBxB,IACApD,GAAQ1zE,EAAM7V,MAAW+C,EACzBA,GAAQ,EAIVwmF,KAAUuE,EACV/qF,GAAQ+qF,EAER35C,EAAM24C,MAAQgB,EAOhB,GAJAvE,KAAUgC,EACVxoF,GAAQwoF,EAERp3C,EAAM24C,MAAQvB,EACA,GAAVC,EAAc,CAChB9O,EAAKtyD,IAAM,wBACX+pB,EAAMv7C,KA5pCC,GA6pCP,MAEFu7C,EAAM//B,OAASq3E,EACft3C,EAAMpE,MAAoB,GAAZ,EACdoE,EAAMv7C,KAvqCa,GAyqCrB,KAzqCqB,GA0qCnB,GAAIu7C,EAAMpE,MAAO,CAGf,IADA72C,EAAIi7C,EAAMpE,MACHhtC,EAAO7J,GAAG,CACf,GAAa,IAATyzF,EAAc,MAAMwB,EACxBxB,IACApD,GAAQ1zE,EAAM7V,MAAW+C,EACzBA,GAAQ,EAGVoxC,EAAM//B,QAAUm1E,GAAS,GAAKp1C,EAAMpE,OAAS,EAE7Cw5C,KAAUp1C,EAAMpE,MAChBhtC,GAAQoxC,EAAMpE,MAEdoE,EAAM24C,MAAQ34C,EAAMpE,MAGtB,GAAIoE,EAAM//B,OAAS+/B,EAAM+0C,KAAM,CAC7BxM,EAAKtyD,IAAM,gCACX+pB,EAAMv7C,KAxrCC,GAyrCP,MAIFu7C,EAAMv7C,KAlsCW,GAosCnB,KApsCmB,GAqsCjB,GAAa,IAAT4N,EAAc,MAAM2nF,EAExB,GADA9hE,EAAO48D,EAAOziF,EACV2tC,EAAM//B,OAASiY,EAAM,CAEvB,GADAA,EAAO8nB,EAAM//B,OAASiY,EAClBA,EAAO8nB,EAAMi1C,OACXj1C,EAAMk2C,KAAM,CACd3N,EAAKtyD,IAAM,gCACX+pB,EAAMv7C,KAvsCH,GAwsCH,MAkBAyzB,EAAO8nB,EAAMk1C,OACfh9D,GAAQ8nB,EAAMk1C,MACd/vC,EAAOnF,EAAMg1C,MAAQ98D,GAGrBitB,EAAOnF,EAAMk1C,MAAQh9D,EAEnBA,EAAO8nB,EAAM34C,SAAU6wB,EAAO8nB,EAAM34C,QACxCsuF,EAAc31C,EAAM5+B,YAGpBu0E,EAAc/zE,EACdujC,EAAOu0C,EAAM15C,EAAM//B,OACnBiY,EAAO8nB,EAAM34C,OAEX6wB,EAAO7lB,IAAQ6lB,EAAO7lB,GAC1BA,GAAQ6lB,EACR8nB,EAAM34C,QAAU6wB,EAChB,GACEtW,EAAO83E,KAAS/D,EAAYxwC,aACnBjtB,GACU,IAAjB8nB,EAAM34C,SAAgB24C,EAAMv7C,KAxvCjB,IAyvCf,MACF,KArvCiB,GAsvCf,GAAa,IAAT4N,EAAc,MAAM2nF,EACxBp4E,EAAO83E,KAAS15C,EAAM34C,OACtBgL,IACA2tC,EAAMv7C,KA9vCS,GA+vCf,MACF,KA1vCW,GA2vCT,GAAIu7C,EAAMrvB,KAAM,CAEd,KAAO/hB,EAAO,IAAI,CAChB,GAAa,IAAT4pF,EAAc,MAAMwB,EACxBxB,IAEApD,GAAQ1zE,EAAM7V,MAAW+C,EACzBA,GAAQ,EAcV,GAXAkmF,GAAQziF,EACRk2E,EAAK0E,WAAa6H,EAClB90C,EAAMloB,OAASg9D,EACXA,IACFvM,EAAKkB,MAAQzpC,EAAMr1C,MAEdq1C,EAAMm4C,MAAQnO,GAAQhqC,EAAMr1C,MAAOiX,EAAQkzE,EAAM4E,EAAM5E,GAAQtL,GAAUxpC,EAAMr1C,MAAOiX,EAAQkzE,EAAM4E,EAAM5E,IAGjHA,EAAOziF,GAEF2tC,EAAMm4C,MAAQ/C,EAAO4C,GAAQ5C,MAAWp1C,EAAMr1C,MAAO,CACxD49E,EAAKtyD,IAAM,uBACX+pB,EAAMv7C,KA/wCD,GAgxCL,MAGF2wF,EAAO,EACPxmF,EAAO,EAIToxC,EAAMv7C,KA1xCI,GA4xCZ,KA5xCY,GA6xCV,GAAIu7C,EAAMrvB,MAAQqvB,EAAMm4C,MAAO,CAE7B,KAAOvpF,EAAO,IAAI,CAChB,GAAa,IAAT4pF,EAAc,MAAMwB,EACxBxB,IACApD,GAAQ1zE,EAAM7V,MAAW+C,EACzBA,GAAQ,EAGV,GAAIwmF,KAAwB,WAAdp1C,EAAMloB,OAAqB,CACvCywD,EAAKtyD,IAAM,yBACX+pB,EAAMv7C,KAtyCD,GAuyCL,MAGF2wF,EAAO,EACPxmF,EAAO,EAIToxC,EAAMv7C,KAhzCE,GAkzCV,KAlzCU,GAmzCR20B,EAAMu+D,GACN,MAAMqC,EACR,KApzCW,GAqzCT5gE,EAAMy+D,GACN,MAAMmC,EACR,KAtzCS,GAuzCP,OAAO9O,GACT,KAvzCU,GAyzCV,QACE,OAAO0M,GAyCb,OA3BArP,EAAKyE,SAAW0M,EAChBnR,EAAKuE,UAAYz6E,EACjBk2E,EAAKkF,QAAU5hF,EACf08E,EAAKiF,SAAWgL,EAChBx4C,EAAMo1C,KAAOA,EACbp1C,EAAMpxC,KAAOA,GAGToxC,EAAMg1C,OAAUF,IAASvM,EAAKuE,WAAa9sC,EAAMv7C,KAl1CtC,KAm1CMu7C,EAAMv7C,KAt1CZ,IAs1C4BkpD,IAAU6pC,MAC/C8B,GAAa/Q,EAAMA,EAAK3mE,OAAQ2mE,EAAKyE,SAAU8H,EAAOvM,EAAKuE,WAEjE+H,GAAOtM,EAAKiF,SACZsH,GAAQvM,EAAKuE,UACbvE,EAAKmF,UAAYmH,EACjBtM,EAAK0E,WAAa6H,EAClB90C,EAAMloB,OAASg9D,EACX90C,EAAMrvB,MAAQmkE,IAChBvM,EAAKkB,MAAQzpC,EAAMr1C,MAChBq1C,EAAMm4C,MAAQnO,GAAQhqC,EAAMr1C,MAAOiX,EAAQkzE,EAAMvM,EAAKyE,SAAW8H,GAAQtL,GAAUxpC,EAAMr1C,MAAOiX,EAAQkzE,EAAMvM,EAAKyE,SAAW8H,IAEnIvM,EAAKC,UAAYxoC,EAAMpxC,MAAQoxC,EAAMv0B,KAAO,GAAK,IAj3C7B,KAk3CDu0B,EAAMv7C,KAAkB,IAAM,IA12C3B,KA22CHu7C,EAAMv7C,MAh3CN,KAg3CuBu7C,EAAMv7C,KAAiB,IAAM,IACzD,IAARowF,GAAsB,IAATC,GAAennC,IAAU6pC,KAAep+D,IAAQs+D,KACjEt+D,EAAM0+D,IAED1+D,GAkGR+gE,WA9FmB5R,IAElB,IAAKA,IAASA,EAAKvoC,MACjB,OAAO43C,GAGT,IAAI53C,EAAQuoC,EAAKvoC,MAKjB,OAJIA,EAAM5+B,SACR4+B,EAAM5+B,OAAS,MAEjBmnE,EAAKvoC,MAAQ,KACN03C,IAoFR0C,iBAhFwB,CAAC7R,EAAM97D,KAG9B,IAAK87D,IAASA,EAAKvoC,MAAS,OAAO43C,GACnC,MAAM53C,EAAQuoC,EAAKvoC,MACnB,OAAyB,IAAP,EAAbA,EAAMrvB,MAA0BinE,IAGrC53C,EAAMvzB,KAAOA,EACbA,EAAK49B,MAAO,EACLqtC,KAuER2C,qBAnE4B,CAAC9R,EAAM6J,KAClC,MAAMC,EAAaD,EAAW/qF,OAE9B,IAAI24C,EACAs6C,EACAlhE,EAGJ,OAAKmvD,GAAyBA,EAAKvoC,OACnCA,EAAQuoC,EAAKvoC,MAEM,IAAfA,EAAMrvB,MAp6CI,KAo6CUqvB,EAAMv7C,KACrBmzF,GAr6CK,KAy6CV53C,EAAMv7C,OACR61F,EAAS,EAETA,EAAS9Q,GAAU8Q,EAAQlI,EAAYC,EAAY,GAC/CiI,IAAWt6C,EAAMr1C,OACZktF,IAKXz+D,EAAMkgE,GAAa/Q,EAAM6J,EAAYC,EAAYA,GAC7Cj5D,GACF4mB,EAAMv7C,KAj6CK,GAk6CJymF,KAETlrC,EAAMk4C,SAAW,EAEVR,MAzB4DE,IA4DpE2C,YAtBiB,sCAgFlB,IAAIC,GApCJ,WAEE7zF,KAAK2K,KAAa,EAElB3K,KAAKkrF,KAAa,EAElBlrF,KAAKszF,OAAa,EAElBtzF,KAAK6uD,GAAa,EAElB7uD,KAAKi1C,MAAa,KAElBj1C,KAAKuzF,UAAa,EAWlBvzF,KAAK9C,KAAa,GAIlB8C,KAAKilE,QAAa,GAIlBjlE,KAAKirF,KAAa,EAElBjrF,KAAK0jD,MAAa,GAKpB,MAAMowC,GAAaz2F,OAAOkB,UAAUiI,UAMlCm9E,WAAYoQ,GAAcjQ,SAAUkQ,GACpC/P,KAAMgQ,GAAQ/P,aAAcgQ,GAAgB/P,YAAagQ,GAAe9P,eAAgB+P,GAAkB9P,aAAc+P,GAAgB9P,YAAa+P,IACnJ5Q,GAkFJ,SAAS6Q,GAAQ/kF,GACfxP,KAAKwP,QAAUu8E,GAAc,CAC3BqB,UAAW,MACX3C,WAAY,GACZ/7B,GAAI,IACHl/C,GAAW,IAEd,MAAM69E,EAAMrtF,KAAKwP,QAIb69E,EAAI1qC,KAAQ0qC,EAAI5C,YAAc,GAAO4C,EAAI5C,WAAa,KACxD4C,EAAI5C,YAAc4C,EAAI5C,WACC,IAAnB4C,EAAI5C,aAAoB4C,EAAI5C,YAAc,OAI3C4C,EAAI5C,YAAc,GAAO4C,EAAI5C,WAAa,KACzCj7E,GAAWA,EAAQi7E,aACvB4C,EAAI5C,YAAc,IAKf4C,EAAI5C,WAAa,IAAQ4C,EAAI5C,WAAa,IAGf,IAAR,GAAjB4C,EAAI5C,cACP4C,EAAI5C,YAAc,IAItBzqF,KAAKqgD,IAAS,EACdrgD,KAAKsvB,IAAS,GACdtvB,KAAKutF,OAAS,EACdvtF,KAAKkxD,OAAS,GAEdlxD,KAAK4hF,KAAS,IAAI8K,GAClB1sF,KAAK4hF,KAAKuE,UAAY,EAEtB,IAAIniC,EAAU4uC,GAAUN,aACtBtyF,KAAK4hF,KACLyL,EAAI5C,YAGN,GAAIzmC,IAAWiwC,GACb,MAAM,IAAI9wF,MAAM,GAAS6gD,IAQ3B,GALAhkD,KAAK6gF,OAAS,IAAIgT,GAElBjB,GAAUa,iBAAiBzzF,KAAK4hF,KAAM5hF,KAAK6gF,QAGvCwM,EAAI5B,aAEwB,iBAAnB4B,EAAI5B,WACb4B,EAAI5B,WAAa3hC,GAAmBujC,EAAI5B,YACK,yBAApCqI,GAAWh3F,KAAKuwF,EAAI5B,cAC7B4B,EAAI5B,WAAa,IAAI94E,WAAW06E,EAAI5B,aAElC4B,EAAI1qC,MACNqB,EAAS4uC,GAAUc,qBAAqB1zF,KAAK4hF,KAAMyL,EAAI5B,YACnDznC,IAAWiwC,KACb,MAAM,IAAI9wF,MAAM,GAAS6gD,IAqNjC,SAASwwC,GAAUz5E,EAAOvL,GACxB,MAAMilF,EAAW,IAAIF,GAAQ/kF,GAK7B,GAHAilF,EAAShzF,KAAKsZ,GAGV05E,EAASp0C,IAAK,MAAMo0C,EAASnlE,KAAO,GAASmlE,EAASp0C,KAE1D,OAAOo0C,EAAShxF,OA9LlB8wF,GAAQh2F,UAAUkD,KAAO,SAAUoT,EAAM84E,GACvC,MAAM/L,EAAO5hF,KAAK4hF,KACZwL,EAAYptF,KAAKwP,QAAQ49E,UACzB3B,EAAazrF,KAAKwP,QAAQi8E,WAChC,IAAIznC,EAAQ4pC,EAAa8G,EAEzB,GAAI10F,KAAKutF,MAAO,OAAO,EAevB,IAbiCK,EAA7BD,MAAiBA,EAA0BA,GACb,IAAfA,EAAsBqG,GAAaD,GAGxB,yBAA1BD,GAAWh3F,KAAK+X,GAClB+sE,EAAK7mE,MAAQ,IAAIpI,WAAWkC,GAE5B+sE,EAAK7mE,MAAQlG,EAGf+sE,EAAKkF,QAAU,EACflF,EAAKiF,SAAWjF,EAAK7mE,MAAMra,SAElB,CAqBP,IApBuB,IAAnBkhF,EAAKuE,YACPvE,EAAK3mE,OAAS,IAAItI,WAAWy6E,GAC7BxL,EAAKyE,SAAW,EAChBzE,EAAKuE,UAAYiH,GAGnBppC,EAAS4uC,GAAUE,QAAQlR,EAAMgM,GAE7B5pC,IAAWmwC,IAAiB1I,IAC9BznC,EAAS4uC,GAAUc,qBAAqB9R,EAAM6J,GAE1CznC,IAAWiwC,GACbjwC,EAAS4uC,GAAUE,QAAQlR,EAAMgM,GACxB5pC,IAAWqwC,KAEpBrwC,EAASmwC,KAKNvS,EAAKiF,SAAW,GAChB7iC,IAAWkwC,IACXtS,EAAKvoC,MAAMrvB,KAAO,GACK,IAAvBnV,EAAK+sE,EAAKkF,UAEf8L,GAAUR,aAAaxQ,GACvB59B,EAAS4uC,GAAUE,QAAQlR,EAAMgM,GAGnC,OAAQ5pC,GACN,KAAKowC,GACL,KAAKC,GACL,KAAKF,GACL,KAAKG,GAGH,OAFAt0F,KAAK8tF,MAAM9pC,GACXhkD,KAAKutF,OAAQ,GACN,EAOX,GAFAmH,EAAiB9S,EAAKuE,UAElBvE,EAAKyE,WACgB,IAAnBzE,EAAKuE,WAAmBniC,IAAWkwC,IAErC,GAAwB,WAApBl0F,KAAKwP,QAAQk/C,GAAiB,CAEhC,IAAIimC,EAAgB7qC,GAAmB83B,EAAK3mE,OAAQ2mE,EAAKyE,UAErDrgE,EAAO47D,EAAKyE,SAAWsO,EACvBC,EAAU9qC,GAAmB83B,EAAK3mE,OAAQ05E,GAG9C/S,EAAKyE,SAAWrgE,EAChB47D,EAAKuE,UAAYiH,EAAYpnE,EACzBA,GAAM47D,EAAK3mE,OAAOvJ,IAAIkwE,EAAK3mE,OAAO6lE,SAAS6T,EAAeA,EAAgB3uE,GAAO,GAErFhmB,KAAK6tF,OAAO+G,QAGZ50F,KAAK6tF,OAAOjM,EAAK3mE,OAAOva,SAAWkhF,EAAKyE,SAAWzE,EAAK3mE,OAAS2mE,EAAK3mE,OAAO6lE,SAAS,EAAGc,EAAKyE,WAMpG,GAAIriC,IAAWiwC,IAA6B,IAAnBS,EAAzB,CAGA,GAAI1wC,IAAWkwC,GAIb,OAHAlwC,EAAS4uC,GAAUY,WAAWxzF,KAAK4hF,MACnC5hF,KAAK8tF,MAAM9pC,GACXhkD,KAAKutF,OAAQ,GACN,EAGT,GAAsB,IAAlB3L,EAAKiF,SAAgB,OAG3B,OAAO,GAYT0N,GAAQh2F,UAAUsvF,OAAS,SAAU9lE,GACnC/nB,KAAKkxD,OAAOzvD,KAAKsmB,IAanBwsE,GAAQh2F,UAAUuvF,MAAQ,SAAU9pC,GAE9BA,IAAWiwC,KACW,WAApBj0F,KAAKwP,QAAQk/C,GACf1uD,KAAKyD,OAASzD,KAAKkxD,OAAOplD,KAAK,IAE/B9L,KAAKyD,OAASsoF,GAAqB/rF,KAAKkxD,SAG5ClxD,KAAKkxD,OAAS,GACdlxD,KAAKqgD,IAAM2D,EACXhkD,KAAKsvB,IAAMtvB,KAAK4hF,KAAKtyD,KAgFvB,IAMIulE,GAAc,CACjBN,QAPeA,GAQfzB,QAPiB0B,GAQjBM,WA1BD,SAAoB/5E,EAAOvL,GAGzB,OAFAA,EAAUA,GAAW,IACbmzC,KAAM,EACP6xC,GAAUz5E,EAAOvL,IAwBzBulF,OAPYP,GAQZ9Q,UAPiBA,IAUlB,MAAQyJ,QAAS6H,GAAWlK,QAASmK,GAAWjH,WAAYkH,GAAc5H,KAAM6H,IAAWpH,IAEnFwG,QAASa,GAAWtC,QAASuC,GAAWP,WAAYQ,GAAcP,OAAQQ,IAAaV,GAI/F,IAKIW,GAAcH,G,yHChhNX,MAAMI,GAGXn9E,YAAYo9E,GAA2B,+BACrC11F,KAAK21F,aAAeD,EAGb,UAACx3F,GACR,MAAM2W,QAAa7U,KAAK21F,aAAan4F,IAAIU,GACzC,OAAO40F,GAAQj+E,EAAM,CAAC65C,GAAI,gB,uBCRvB,MAAMknC,GAGXt9E,YAAY9W,G,iBAAe,G,EAAA,W,EAAA,M,sFACzBxB,KAAK61F,MAAQr0F,EAON,UAACs0F,GACR,MAAMj4E,EAAO,IAAIk4E,IAAID,EAAU91F,KAAK61F,OAAOjxC,KAC3C,IAAK/mC,EAAK2/B,WAAWx9C,KAAK61F,OACxB,MAAM,IAAI1yF,MAAJ,yCAC8B0a,EAD9B,gCAC0D7d,KAAK61F,MAD/D,sCAGR,MAAMpyF,QAAe6L,KAAMuO,GAC3B,IAAKpa,EAAO0gD,GAAI,CACd,MAAMxpC,EAAQ,IAAIxX,MAAJ,yBACM2yF,EADN,aACmBryF,EAAOugD,OAD1B,YACoCvgD,EAAOygD,aAGzD,MADAvpC,EAAMgF,OAASlc,EAAOugD,OAChBrpC,EAGR,OAAO,IAAIhI,iBAAiBlP,EAAOw5C,gBCtBvC,MAAM+4C,GAAQ,eAEP,SAAShqB,GAAWttE,GAEzB,MAAMmxE,GADNnxE,EAAIA,EAAEkM,eACWoB,MAAM,KACvB,GAAsB,IAAlB6jE,EAAOnvE,OACT,MAAM,IAAIyC,MAAJ,6DAAgEzE,EAAhE,MAER,IAAKmxE,EAAO,GAAGnwD,MAAMs2E,IACnB,MAAM,IAAI7yF,MAAJ,mCAAsC0sE,EAAO,GAA7C,MAER,IAAKA,EAAO,GAAGnwD,MAAMs2E,IACnB,MAAM,IAAI7yF,MAAJ,kCAAqC0sE,EAAO,GAA5C,MAER,OAAOnxE,EAGF,SAASu3F,GAAe/nE,GAC7B,OAAOA,EAAGliB,MAAM,KAAK,GAGhB,SAASkqF,GAAchoE,GAC5B,OAAOA,EAAGliB,MAAM,KAAK,GAGhB,MAAMinD,GAA6B+c,EAAOA,EAAUhE,IChCpD,SAASmqB,GACdjoE,GAQA,OAAOvvB,IAAW,CAChBzB,KAAM,eACN6gE,WAAY,gBACZ9vC,OAAQuoC,GAAYnB,UAAU,CAC5B4gC,GAAe/nE,GACfgoE,GAAchoE,GACd,iBAEF8vC,cAAe,EACf5C,YAAa,wCAIV,SAASg7B,GACdloE,GAQA,OAAOvvB,IAAW,CAChBzB,KAAM,cACN6gE,WAAY,cACZ9vC,OAAQuoC,GAAYnB,UAAU,CAC5B4gC,GAAe/nE,GACfgoE,GAAchoE,GACd,gBAEF8vC,cAAe,EACf5C,YAAa,uCAIjB,SAASi7B,GAAuBnoE,GAC9B,OAAOvvB,IAAW,CAChB0/D,YAAa,kBACbC,aAAc,yBACdN,cAAe,CAACO,SAAU,GAAOC,UAAW,GAC5CvwC,OAAQwoC,GAAYpB,UAAU,CAC5B4gC,GAAe/nE,GACfgoE,GAAchoE,GACd,oBAEFktC,YAAa,iEAIV,SAAS8D,GAAYhxC,GAC1B,OAAOvvB,IAAW,CAChBzB,KAAMg5F,GAAchoE,GACpBwsC,WAAYlE,GAAYnB,UAAU,CAAC4gC,GAAe/nE,GAAKgoE,GAAchoE,KACrEysC,WAAYlE,GAAYpB,UAAU,CAAC4gC,GAAe/nE,GAAKgoE,GAAchoE,KACrEixC,UAAW,CAACi3B,GAAoBloE,GAAKioE,GAAqBjoE,IAC1DkxC,UAAW,CAACi3B,GAAuBnoE,IACnCmxC,UAAW,CAAC+2B,GAAoBloE,M,yHCzC7B,MAEDooE,GAAY,CAChBC,MAAO,aACPC,UAAW,QACXC,YAAa,mBACbC,WAAY,0BAURC,GAA+Cp3D,GACnD,CACEq3D,SAAUr3D,GAEZ,CACEs3D,eAAgBt3D,EAChBu3D,qBAAsBv3D,IAgCnB,MAAMw3D,GAMXz+E,YAAY9I,GAKV,GADG,kHACEA,EAAQ6rE,UAAY7rE,EAAQwnF,OAC/B,MAAM,IAAI7zF,MACR,gFAEJnD,KAAKkuB,GAAK1e,EAAQynF,SAClBj3F,KAAKq7E,QAAU7rE,EAAQ6rE,QACvBr7E,KAAKk3F,uBAAyB,CAC5BC,gBAAiB,IAAMC,gBAAS,kBAAmB5nF,EAAQynF,UAC3DI,eAAgB,IAAMD,gBAAS,SAAU5nF,EAAQynF,WAEnDj3F,KAAKg3F,OAASxnF,EAAQwnF,OAGT,gBACbj2D,GAEA,GAAI/gC,KAAKg3F,OAAQ,OAAOh3F,KAAKg3F,OAC7B,MAAMn5E,EAAOu5E,gBAASr2D,EAAIo2D,kBAAmB,eAC7C,IAAKn3F,KAAKq7E,QACR,KAAM,6DACR,OAAOE,GACLv7E,KAAKq7E,QACLx9D,EACA84E,GACA,QAIY,iBACd51D,EACAu2D,GAKA,MAAMN,QAAeh3F,KAAKu3F,UAAUx2D,GACpC,GAAIi2D,EACF,OAAQM,GACN,IAAK,QACL,IAAK,YACH,MAAO,CAACjc,QAAS,IAAIua,GAAeoB,EAAOJ,UAAW/4E,KAAM,IAC9D,IAAK,cACH,OAAOm5E,EAAOH,eACV,CACExb,QAAS,IAAIua,GAAeoB,EAAOH,gBACnCh5E,KAAM,SAERxP,EACN,IAAK,aACH,OAAO2oF,EAAOF,qBACV,CACEzb,QAAS,IAAIua,GAAeoB,EAAOF,sBACnCj5E,KAAM,SAERxP,EAGV,IAAKrO,KAAKq7E,QACR,KAAM,6DACR,MAAO,CACLA,QAASr7E,KAAKq7E,QACdx9D,KAAMu5E,gBAASr2D,EAAIo2D,kBAAmBb,GAAUgB,KAInC,oBACf,MAAM7zF,QAAezD,KAAKw3F,WACxBx3F,KAAKk3F,uBACL,eAEI9pF,EAAO3J,QACH83E,GACJ93E,EAAO43E,QACP53E,EAAOoa,KACPytD,GACA,IAAM,MAER,KACJ,OAAOl+D,GAAcqqF,GAAmBz3F,KAAKkuB,IAGrC,WACRwpE,EACAC,IAKS,YACT52D,EACA62D,GAEA,MAAMn0F,QAAezD,KAAKw3F,WAAWz2D,EAAK,SACpC82D,QAAkB73F,KAAKw3F,WAAWz2D,EAAK,aAC7C,IAAKt9B,IAAWo0F,EACd,KAAM,yDACR,MAWMpd,EAAKqd,SAXa1c,GACtB33E,EAAO43E,QACP53E,EAAOoa,KACLk6E,GACF9xD,MAAM,IACCm1C,GACL,IAAIqa,GAAWoC,EAAUxc,SACzBwc,EAAUh6E,KACRk6E,KAIAC,E7BhKH,SAA+BhpB,GACpC,MAAM5N,EAAUiZ,MACV,UAAClb,EAAD,UAAYC,GAAa4P,EAC/B,IAAK,MAAM,OAAC/gD,EAAD,cAAS+vC,KAAkBmB,EACpCiC,EAAQP,YAAYnvD,IAAIuc,EAAQ+vC,GAElC,IAAK,MAAM,OAAC/vC,EAAD,cAAS+vC,KAAkBoB,EACpCgC,EAAQN,YAAYpvD,IAAIuc,EAAQ+vC,GAElC,OAAOoD,E6BuJsB62B,OAA4Bj4F,KAAKk/D,eAC5D,MAAO,CACL/Q,MAAOssB,EAAGtsB,MACViT,QAAS82B,GAAa,CAACzd,EAAGrZ,QAAS42B,KAIhB,wBACrBN,GAEA,MAAO,CAACS,eAAgB,QAGV,iBACdp3D,GAEA,MAAMt9B,QAAezD,KAAKw3F,WAAWz2D,EAAK,cAC1C,OAAOt9B,QACG83E,GACJ93E,EAAO43E,QACP53E,EAAOoa,KACPg8D,GACA,IAAM,IAER,IC/MD,SAASue,GACd/0C,EACAkX,GAEA,OAAQA,EAAU5gD,MAChB,IAAK,iBACH,OAAO0pC,EACT,IAAK,UACH,OAAOkX,EAAUrB,KAAKC,IACxB,IAAK,WACH,OAAOoB,EAAUrB,KAAKE,IACxB,QACE,MAAM,IAAIj2D,MAAOo3D,EAAU5gD,OAqB1B,SAAS0+E,GACdlqC,EACAmqC,EACAC,GAEA,MAAM90F,EAAS,IAAI6P,IACbklF,EAA4C,IAAIllF,IACtD,IAAK,MAAMzF,KAAQsgD,EAAM0K,QACvBp1D,EAAOiO,IAAI7D,EAAK+a,QAAS,IACzB4vE,EAAe9mF,IAAI7D,EAAK+a,QAAS,GAGnC,SAAS6vE,EAAkBp1C,EAAsBq1C,GAC3B1/B,GAAav1D,EAAOjG,IAAI6lD,IACqB5hD,KAC/Di3F,GAEF,MAAM75E,EAASu5E,GAAgB/0C,EAAQq1C,EAAWn+B,WAC5Co+B,EAAiB3/B,GAAaw/B,EAAeh7F,IAAIqhB,IACvD25E,EAAe9mF,IAAImN,EAAQ85E,EAAiBD,EAAWE,QAIzD,IAAK,MAAM/qF,KAAQsgD,EAAM0K,QACvB4/B,EAAkB5qF,EAAK+a,QAAS,CAC9B2xC,UAAW,CAAC5gD,KAAM,kBAClBi/E,OAAQL,IAKZ,IAAK,MAAMr/B,KAAQ/K,EAAMuL,MAAM,CAACI,cAAc,IAAS,CACrD,MAAM,SAACyE,EAAD,UAAWC,GAAa85B,EAAWp/B,IACnC,IAACC,EAAD,IAAMC,GAAOF,EACnBu/B,EAAkBr/B,EAAK,CACrBmB,UAAW,CAAC5gD,KAAM,UAAWu/C,QAC7B0/B,OAAQr6B,IAEVk6B,EAAkBt/B,EAAK,CACrBoB,UAAW,CAAC5gD,KAAM,WAAYu/C,QAC9B0/B,OAAQp6B,IAKZ,IAAK,MAAOnb,EAAQw1C,KAAgBp1F,EAAO2Q,UACzC,IAAK,MAAMskF,KAAcG,EAAa,CACpC,MAAMh6E,EAASu5E,GAAgB/0C,EAAQq1C,EAAWn+B,WAC5Cu+B,EAAgB9/B,GAAaw/B,EAAeh7F,IAAIqhB,IAChDk6E,EACJL,EAAWE,OAASE,EAErBJ,EAAiBE,OAASG,EAI/B,OAAOt1F,EAGT,SAASu1F,GACPC,GAEA,O3DvBK,SACL5tF,EACAo0B,GAEA,MAAMh8B,EAAS,IAAI6P,IACnB,IAAK,MAAO2e,EAAGzyB,KAAM6L,EAAI+I,UACvB3Q,EAAOiO,IAAIugB,EAAGwN,EAAExN,EAAGzyB,IAErB,OAAOiE,E2DeAsxD,CAAkBkkC,EAAK,CAAC51C,EAAQw1C,KACrC,MAAMK,EAAc,IAAI5lF,IACxB,IAAK,MAAMolF,KAAcG,EAAa,CACpC,MAAMh6E,EAASu5E,GAAgB/0C,EAAQq1C,EAAWn+B,WAClD2+B,EAAYxnF,IACVmN,EACA65E,EAAWE,OAAS5/B,GAAgBkgC,EAAY17F,IAAIqhB,GAAS,IAGjE,OAAOq6E,IAgCJ,SAASC,GACdN,GAGA,OAhCF,SACE7pE,GAEA,MAAMooC,EAAYt2D,MAAM09C,KAAKxvB,EAAMvgB,QAC7B2qF,EAA4C,IAAI9lF,IAItD,OAHA8jD,EAAUt4D,QAAQ,CAAC+O,EAAMyD,KACvB8nF,EAAe1nF,IAAI7D,EAAMyD,KAEpB,CACL8lD,YACApoC,MAAOooC,EAAU/rD,IAAK+tD,IACpB,MAAMigC,EAAiBrgC,GAAahqC,EAAMxxB,IAAI47D,IACxC31D,EAAS,CACb61F,SAAU,IAAIp8C,YAAYm8C,EAAe7nF,MACzConF,OAAQ,IAAIW,aAAaF,EAAe7nF,OAE1C,IAAI7U,EAAI,EACR,IAAK,MAAOw8D,EAAKy/B,KAAWS,EAAejlF,UAAW,CACpD,MAAM6mD,EAAWjC,GAAaogC,EAAe57F,IAAI27D,IACjD11D,EAAO61F,SAAS38F,GAAKs+D,EACrBx3D,EAAOm1F,OAAOj8F,GAAKi8F,EACnBj8F,IAEF,OAAO8G,KASJ+1F,CADOR,GAA6BH,IAStC,SAASj+D,GACdohC,EACAy9B,GAEA,MAAMC,EAAuC,GACvCC,EAAuC,GAC7CF,EAAS36F,QAAQ,CAAC+O,EAAMlR,KACtB+8F,EAAW7rF,GAAQlR,IAErBq/D,EAAI5E,UAAUt4D,QAAQ,CAAC+O,EAAMlR,KAC3Bg9F,EAAW9rF,GAAQlR,IAErB,MAAMi9F,EAAW,GACjB,IAAK,MAAM/rF,KAAQ4rF,EAAU,CAC3B,MAAOH,SAAUO,EAAX,OAAyBjB,GAAU58B,EAAIhtC,MAAM2qE,EAAW9rF,IACxDisF,EAAeD,EAAaxuF,IAC/B0uF,GAAaL,EAAW19B,EAAI5E,UAAU2iC,KAEzCH,EAASn4F,KAAK,CAAC63F,SAAUQ,EAAclB,WAEzC,MAAO,CACLxhC,UAAWqiC,EACXzqE,MAAO4qE,GAQJ,SAASI,GACdh+B,GAEA,MAAO,CACL5E,UAAW4E,EAAI5E,UACfpoC,MAAOgtC,EAAIhtC,MAAM3jB,IAAI,IAAyB,IAAxB,SAACiuF,EAAD,OAAWV,GAAY,EAC3C,GAAIU,EAAS54F,SAAWk4F,EAAOl4F,OAC7B,MAAM,IAAIyC,MAAJ,UAAam2F,EAAS54F,OAAtB,gBAAoCk4F,EAAOl4F,SAEnD,MAAM0T,EAAUtT,MAAMw4F,EAAS54F,QAC5B2tE,KAAK,MACLhjE,IAAI,CAACyV,EAAGnkB,KAAJ,CAAY28F,SAAUA,EAAS38F,GAAIi8F,OAAQA,EAAOj8F,MAEzD,OADAyX,EAAQzF,KAAK,CAACzN,EAAGC,IAAMD,EAAEo4F,SAAWn4F,EAAEm4F,UAC/B,CACLA,SAAU,IAAIp8C,YAAY9oC,EAAQ/I,IAAKxK,GAAMA,EAAEy4F,WAC/CV,OAAQ,IAAIW,aAAanlF,EAAQ/I,IAAKxK,GAAMA,EAAE+3F,aAM/C,SAASqB,GACdj+B,GAEA,OAAOg+B,GAAmBp/D,GAAQohC,EAAKA,EAAI5E,UAAUrxD,QAAQ4I,SAGxD,SAASurF,GACd9iC,EACA+iC,GAEA,MAAM12F,EAAS,IAAI6P,IAKnB,OAJA8jD,EAAUt4D,QAAQ,CAAC+O,EAAMlR,KACvB,MAAMy9F,EAAcD,EAAGx9F,GACvB8G,EAAOiO,IAAI7D,EAAMusF,KAEZ32F,EClOF,SAAS42F,GAAoBj8F,GAClC,GAAIupB,MAAMvpB,KAAOsuB,SAAStuB,IAAMA,IAAMiC,KAAKC,MAAMlC,IAAMA,GAAK,EAC1D,MAAM,IAAI+E,MAAM,uCAAyC/E,GAE3D,OAAO,IAAIm7F,aAAan7F,GAAGiwE,KAAK,EAAIjwE,GAS/B,SAASk8F,GAAaC,EAAmBC,GAC9C,GAAmB,IAAfD,EAAI75F,QAAgB65F,EAAI75F,SAAW85F,EAAI95F,OACzC,MAAM,IAAIyC,MAAM,iBAElB,IAAIs3F,GAAYtzF,IAOhB,OAJAozF,EAAIz7F,QAAQ,CAAC+B,EAAGlE,KACd,MAAMsjC,EAAQ5/B,KAAKgD,IAAIxC,EAAI25F,EAAI79F,IAC/B89F,EAAWp6F,KAAKyF,IAAIm6B,EAAOw6D,KAEtBA,EC+CF,SAASC,GACdC,GAEA,MAAMv8F,EAAIu8F,EAAOj6F,OAyBjB,OAxBAi6F,EAAO77F,QAAQ,CAAC87F,EAAKj+F,KACnB,GAAIi+F,EAAIl6F,SAAWtC,EACjB,MAAM,IAAI+E,MAAJ,uCAC4B/E,EAD5B,qBAC0CzB,EAD1C,gBACmDi+F,EAAIl6F,WAIjEi6F,EAAO77F,QAAQ,CAAC87F,EAAKj+F,KACnBi+F,EAAI97F,QAAQ,CAAClB,EAAOyE,KAClB,GAAIslB,MAAM/pB,KAAW8uB,SAAS9uB,IAAUA,EAAQ,EAC9C,MAAM,IAAIuF,MAAJ,+CACoCxG,EADpC,aAC0C0F,EAD1C,gBACmDzE,QAK/D+8F,EAAO77F,QAAQ,CAAC87F,EAAKj+F,KACnB,MAAMk+F,EAASD,EAAI/3E,OAAO,CAAC3hB,EAAGC,IAAMD,EAAIC,EAAG,GAC3C,GAAId,KAAKgD,IAAIw3F,EAAS,GAAK,KACzB,MAAM,IAAI13F,MAAJ,6CACkCxG,EADlC,oBAC+Ck+F,MAIlDF,EAAOtvF,IAAI,CAACyV,EAAGze,KACpB,MAAMy4F,EAASH,EACZtvF,IAAI,CAACuvF,EAAKj+F,IAAM,CAACA,EAAGi+F,EAAIv4F,KACxBihB,OAAO,QAAExC,EAAGriB,GAAL,SAAYA,EAAI,IAC1B,MAAO,CACL66F,SAAU,IAAIp8C,YAAY49C,EAAOzvF,IAAI,QAAE1O,EAAGmkB,GAAL,SAAYnkB,KACjDi8F,OAAQ,IAAIW,aAAauB,EAAOzvF,IAAI,QAAEyV,EAAGriB,GAAL,SAAYA,QAKtD,SAASs8F,GACP/rE,EACAgsE,EACAC,EACAlgF,EACAE,GAEA+T,EAAMlwB,QAAQ,CAAC,EAAoBs6D,KAAS,IAA7B,SAACkgC,EAAD,OAAWV,GAAiB,EACzC,MAAMsC,EAAW5B,EAAS54F,OAC1B,IAAI05F,EAAca,EAAQD,EAAK5hC,GAC/B,IAAK,IAAIz8D,EAAI,EAAGA,EAAIu+F,EAAUv+F,IAAK,CACjC,MAAMw8D,EAAMmgC,EAAS38F,GACrBy9F,IAAgB,EAAIa,GAASlgF,EAAMo+C,GAAOy/B,EAAOj8F,GAEnDse,EAAOm+C,GAAOghC,IAIX,SAASe,GACdnsE,EACAgsE,EACAC,EACAd,GAEA,MAAM12F,EAAS,IAAI81F,aAAaY,EAAGz5F,QAEnC,OADAq6F,GAA4B/rE,EAAOgsE,EAAMC,EAAOd,EAAI12F,GAC7CA,EAwDF,SAAS23F,GACdniB,EACAzpE,GAEA,MAAM6rF,EAzDR,UACEpiB,EACAzpE,GAUA,MAAM,MAACwf,EAAD,IAAQurE,EAAR,KAAaS,EAAb,MAAmBC,GAAShiB,EAClC,IAAIkhB,EAAK,IAAIZ,aAAagB,GACtBe,EAAU,IAAI/B,aAAaY,EAAGz5F,QAE9B66F,EAAc,EAClB,OAAa,CACX,GAAIA,GAAe/rF,EAAQgsF,cAAe,CACpChsF,EAAQisF,SACVhgB,QAAQrzE,IAAR,WAAgBmzF,EAAhB,yBAIFR,GAA4B/rE,EAAOgsE,EAAMC,EAAOd,EAAImB,GAEpD,MAAO,CAACnB,KAAIuB,iBADapB,GAAaH,EAAImB,IAG5CC,IACAR,GAA4B/rE,EAAOgsE,EAAMC,EAAOd,EAAImB,GAMpD,MAAMI,EAAmBpB,GAAaH,EAAImB,GAI1C,GAHI9rF,EAAQisF,SACVhgB,QAAQrzE,IAAR,WAAgBmzF,EAAhB,qBAAwCG,IAEtCA,EAAmBlsF,EAAQmsF,qBAI7B,OAHInsF,EAAQisF,SACVhgB,QAAQrzE,IAAR,WAAgBmzF,EAAhB,gBAEK,CAACpB,KAAIuB,qBAEbJ,EAASnB,GAAM,CAACA,EAAImB,SAKvB,MAAM,IAAIn4F,MAAM,gBAOJy4F,CAAoC3iB,EAAQ,CACtDwiB,QAASjsF,EAAQisF,QACjBE,qBAAsBnsF,EAAQmsF,qBAC9BH,cAAehsF,EAAQgsF,gBAEzB,OAAO,IAAIjoF,QAAQ,CAAC6G,EAASyhF,KAC3B,MAAM,aAACC,GAAgBtsF,EACjBusF,EAAO,KACX,MAAM/wF,EAAQqiB,KAAK/D,MACnB,EAAG,CACD,MAAM7lB,EAAS43F,EAAIn2F,OACnB,GAAIzB,EAAOigD,KAAM,CACf,GAAoB,MAAhBjgD,EAAO7F,MAET,MAAM,IAAIuF,MAAM4G,OAAOtG,EAAO7F,QAGhC,YADAwc,EAAQ3W,EAAO7F,cAGVyvB,KAAK/D,MAAQte,EAAQ8wF,GAC9B/yE,WAAWgzE,EAAM,IAEnBA,M,iJCxNJ,MAAMC,GAA6Bt+F,OAAO,SAI1C,MAAMu+F,GAOJ3jF,YAAYvb,GAAsB,wDAChCiD,KAAKk8F,cAAgBn/F,EACrBiD,KAAKsU,MAAQ,CAAC1W,MAAOo+F,GAAoB3wF,IAAK,IAAIiI,KAMpDrS,IAAIgxB,EAAM/mB,GACR,MAAM8+C,EAAQhqD,KAAKk8F,cAAc5mC,QAAQrjC,GACzC,IAAI3d,EAAQtU,KAAKsU,MACjB,IAAK,MAAMrQ,KAAQ+lD,EACZ11C,EAAMjJ,IAAIyD,IAAI7K,IACjBqQ,EAAMjJ,IAAIqG,IAAIzN,EAAM,CAACoH,IAAK,IAAIiI,IAAO1V,MAAOo+F,KAE9C1nF,EAAQ0kD,GAAa1kD,EAAMjJ,IAAI7N,IAAIyG,IAErC,GAAIqQ,EAAM1W,QAAUo+F,GAClB,MAAM,IAAI74F,MAAJ,sCAC2BnD,KAAKk8F,cAAc11F,SAASyrB,KAI/D,OADA3d,EAAM1W,MAAQsN,EACPlL,KAeTxC,IAAIy0B,GACF,MAAM+3B,EAAQhqD,KAAKk8F,cAAc5mC,QAAQrjC,GACnCxuB,EAAc,GACpB,IAAI6Q,EAAkBtU,KAAKsU,MAK3B,IAAK,MAAMrQ,KAAQ+lD,EAAO,CACxB,GAAI11C,EAAM1W,QAAUo+F,GAAoB,CACtC,MAAMp+F,EAAY0W,EAAM1W,MACxB6F,EAAOhC,KAAK7D,GAEd,MAAMu+F,EAAW7nF,EAAMjJ,IAAI7N,IAAIyG,GAC/B,GAAgB,MAAZk4F,EACF,OAAO14F,EAEP6Q,EAAQ6nF,EAGZ,GAAI7nF,EAAM1W,QAAUo+F,GAAoB,CACtC,MAAMp+F,EAAY0W,EAAM1W,MACxB6F,EAAOhC,KAAK7D,GAEd,OAAO6F,EAOT24F,QAAQnqE,GACN,MAAMpU,EAAO7d,KAAKxC,IAAIy0B,GACtB,OAAOpU,EAAKA,EAAKnd,OAAS,IAIvB,MAAM27F,WAAoBJ,GAC/B3jF,cACE+6C,MAAMmD,KAIH,MAAM8lC,WAAoBL,GAC/B3jF,cACE+6C,MAAMoD,KCnFH,SAAS8lC,GAAoBn7B,GAClC,MAAMo7B,EAAiC,IAAIH,GAC3C,IAAK,MAAOpuE,EAAQ2qE,KAAWx3B,EAAQP,YAAYzsD,UACjDooF,EAASv7F,IAAIgtB,EAAQ2qE,GAEvB,OAAO,SAAoB13F,GAEzB,OADwBs7F,EAASh/F,IAAI0D,GACd2hB,OAAO,CAAC3hB,EAAGC,IAAMD,EAAIC,EAAG,ICzBnD,MAAMgd,GAAYtd,GAAMA,EAQT,SAASokB,GACtBzkB,GAEM,IAAD,uBADFi8F,EACE,iCADFA,EACE,kBACL,MAAMC,EAA4C,IAArBD,EAAU/7F,OAAe,CAACyd,IAAYs+E,EAEnE,SAASE,EAAcz7F,EAAMC,GAC3B,IAAK,MAAMkjB,KAASq4E,EAAQ,CAC1B,MAAME,EAAOv4E,EAAMnjB,GACb27F,EAAOx4E,EAAMljB,GACnB,GAAIy7F,EAAOC,EAAM,OAAO,EACxB,GAAID,EAAOC,EAAM,OAAQ,EAE3B,OAAO,EAGT,MAAO,IAAIr8F,GAAKmO,KAAKguF,GC5BvB,IAAIG,GAAK,IAAIzvE,KACT6gB,GAAK,IAAI7gB,KCEb,SAAS0vE,GAAWpgG,GAClB,ODDa,SAASqgG,EAAYC,EAAQC,EAASl1E,EAAOm7C,GAE1D,SAASg6B,EAASC,GAChB,OAAOH,EAAOG,EAA4B,IAArB9iF,UAAU5Z,OAAe,IAAI2sB,KAAO,IAAIA,MAAM+vE,IAAQA,EA8D7E,OA3DAD,EAAS78F,MAAQ,SAAS88F,GACxB,OAAOH,EAAOG,EAAO,IAAI/vE,MAAM+vE,IAAQA,GAGzCD,EAASn8F,KAAO,SAASo8F,GACvB,OAAOH,EAAOG,EAAO,IAAI/vE,KAAK+vE,EAAO,IAAKF,EAAQE,EAAM,GAAIH,EAAOG,GAAOA,GAG5ED,EAAShhE,MAAQ,SAASihE,GACxB,IAAIC,EAAKF,EAASC,GACdE,EAAKH,EAASn8F,KAAKo8F,GACvB,OAAOA,EAAOC,EAAKC,EAAKF,EAAOC,EAAKC,GAGtCH,EAAS7jF,OAAS,SAAS8jF,EAAMt1E,GAC/B,OAAOo1E,EAAQE,EAAO,IAAI/vE,MAAM+vE,GAAe,MAARt1E,EAAe,EAAIznB,KAAKC,MAAMwnB,IAAQs1E,GAG/ED,EAASpwF,MAAQ,SAAS/B,EAAO6c,EAAMC,GACrC,IAAgBqB,EAAZpc,EAAQ,GAGZ,GAFA/B,EAAQmyF,EAASn8F,KAAKgK,GACtB8c,EAAe,MAARA,EAAe,EAAIznB,KAAKC,MAAMwnB,KAC/B9c,EAAQ6c,GAAWC,EAAO,GAAI,OAAO/a,EAC3C,GAAGA,EAAMtL,KAAK0nB,EAAW,IAAIkE,MAAMriB,IAASkyF,EAAQlyF,EAAO8c,GAAOm1E,EAAOjyF,SAClEme,EAAWne,GAASA,EAAQ6c,GACnC,OAAO9a,GAGTowF,EAAS75E,OAAS,SAASnX,GACzB,OAAO6wF,GAAY,SAASI,GAC1B,GAAIA,GAAQA,EAAM,KAAOH,EAAOG,IAAQjxF,EAAKixF,IAAOA,EAAKG,QAAQH,EAAO,MACvE,SAASA,EAAMt1E,GAChB,GAAIs1E,GAAQA,EACV,GAAIt1E,EAAO,EAAG,OAASA,GAAQ,GAC7B,KAAOo1E,EAAQE,GAAO,IAAKjxF,EAAKixF,UAC3B,OAASt1E,GAAQ,GACtB,KAAOo1E,EAAQE,EAAM,IAAMjxF,EAAKixF,UAMpCp1E,IACFm1E,EAASn1E,MAAQ,SAAShd,EAAOulB,GAG/B,OAFAusE,GAAGS,SAASvyF,GAAQkjC,GAAGqvD,SAAShtE,GAChC0sE,EAAOH,IAAKG,EAAO/uD,IACZ7tC,KAAKC,MAAM0nB,EAAM80E,GAAI5uD,MAG9BivD,EAASz5E,MAAQ,SAASoE,GAExB,OADAA,EAAOznB,KAAKC,MAAMwnB,GACV4E,SAAS5E,IAAWA,EAAO,EAC3BA,EAAO,EACTq1E,EAAS75E,OAAO6/C,EACZ,SAASlmE,GAAK,OAAOkmE,EAAMlmE,GAAK6qB,GAAS,GACzC,SAAS7qB,GAAK,OAAOkgG,EAASn1E,MAAM,EAAG/qB,GAAK6qB,GAAS,IAH3Cq1E,EADoB,OAQrCA,EChEA,EAAS,SAASC,GACvBA,EAAKI,WAAWJ,EAAKK,cAAgBL,EAAKM,YAAc,EAAI/gG,GAAK,GACjEygG,EAAKO,YAAY,EAAG,EAAG,EAAG,MACzB,SAASP,EAAMt1E,GAChBs1E,EAAKI,WAAWJ,EAAKK,aAAsB,EAAP31E,MACnC,SAAS9c,EAAOulB,GACjB,OAAQA,EAAMvlB,GCNU4yF,UDUrB,IAAIC,GAAYd,GAAW,GACvBe,GAAYf,GAAW,GACvBgB,GAAahB,GAAW,GACxBiB,GAAejB,GAAW,GAC1BkB,GAAclB,GAAW,GACzBmB,GAAYnB,GAAW,GACvBoB,GAAcpB,GAAW,GAEZc,GAAU9wF,MACV+wF,GAAU/wF,MACTgxF,GAAWhxF,MACTixF,GAAajxF,MACdkxF,GAAYlxF,MACdmxF,GAAUnxF,MACRoxF,GAAYpxF,MEG/B,SAASqxF,GACdC,GAEA,IAAIC,EAAc,KAClB,IAAK,MAAM,YAACC,EAAD,UAAcC,KAAcH,EAAW,CAChD,GAAI12E,MAAM42E,IAAgB52E,MAAM62E,GAC9B,MAAM,IAAIr7F,MAAJ,2BAA8Bo7F,EAA9B,aAA8CC,EAA9C,MAER,GAAmB,MAAfF,GAAuBC,IAAgBD,EACzC,MAAM,IAAIn7F,MAAJ,iCACsBm7F,EADtB,wCACiEC,IAGzE,GAAIC,GAAaD,EACf,MAAM,IAAIp7F,MAAJ,uDAC4Co7F,EAD5C,aAC4DC,EAD5D,MAIRF,EAAcE,EAGhB,OAAOH,EAAUhzF,IAAI,QAAC,YAACkzF,EAAD,UAAcC,GAAf,QAA+B,CAClDD,cACAC,eAIG,MAAMC,GAAqDl/D,EAChEA,EACEA,GAAS,CACPg/D,YAAah/D,EACbi/D,UAAWj/D,KAGd/+B,GAAQ49F,GAAiB59F,IA0BrB,SAASk+F,GAAevwC,GAC7B,MAIMwwC,EAAc15E,GAJNnkB,MAAM09C,KAAK2P,EAAM0K,SAC0Bv1C,OACtDziB,GAAuB,MAAjBA,EAAEy4D,aAE+Bz4D,GAAMA,EAAEy4D,aAE5CslC,EAAc35E,GADNnkB,MAAM09C,KAAK2P,EAAMuL,MAAM,CAACI,cAAc,KACjBj5D,GAAMA,EAAEy4D,aACrC+kC,EAAYQ,GAAe1wC,GACjC,IAAI2wC,EAAY,EACZC,EAAY,EAChB,OAAOV,EAAUhzF,IAAK8xF,IACpB,MAAMtkC,EAAQ,GACRa,EAAQ,GACd,KACEolC,EAAYH,EAAYj+F,QACxBi+F,EAAYG,GAAWxlC,YAAc6jC,EAASqB,WAE9C3lC,EAAMp3D,KAAKk9F,EAAYG,MAEzB,KACEC,EAAYH,EAAYl+F,QACxBk+F,EAAYG,GAAWzlC,YAAc6jC,EAASqB,WAE9C9kC,EAAMj4D,KAAKm9F,EAAYG,MAEzB,MAAO,CAAC5B,WAAUtkC,QAAOa,WAatB,SAASmlC,GAAe1wC,GAC7B,MAAM6wC,EAAiBl+F,MAAM09C,KAAK2P,EAAM0K,SACrCxtD,IAAKxK,GAAMA,EAAEy4D,aACbh2C,OAAQziB,GAAW,MAALA,GAEdwK,IAAKxK,GAAMm4D,GAAan4D,IACrBo+F,EAAiBn+F,MAAM09C,KAAK2P,EAAMuL,MAAM,CAACI,cAAc,KAASzuD,IACnExK,GAAMA,EAAEy4D,aAEX,GAA8B,IAA1B0lC,EAAet+F,QAA0C,IAA1Bu+F,EAAev+F,OAChD,MAAO,GAET,MAAMw+F,EAAgBF,EAAex8F,OAAOy8F,GAG5C,OAeK,SACLE,EACAC,GAEA,IAAK1yE,SAASyyE,KAAazyE,SAAS0yE,GAClC,MAAM,IAAIj8F,MAAM,4BAElB,GAAuB,iBAAZg8F,GAAyC,iBAAVC,EACxC,MAAM,IAAIj8F,MAAM,gCAElB,GAAIg8F,EAAUC,EACZ,MAAM,IAAIj8F,MAAM,6BAMlBg8F,EAAUE,GAAQ/+F,MAAM6+F,GACxBC,EAAQC,GAAQr+F,KAAKo+F,EAAQ,GAC7B,MAAME,EAAaD,GAAQtyF,MAAMoyF,EAASC,GAC1CE,EAAW79F,KAAK29F,GAChB,MAAMf,EAAY,GAClB,IAAK,IAAI1hG,EAAI,EAAGA,EAAI2iG,EAAW5+F,OAAS,EAAG/D,IACzC0hG,EAAU58F,KAAK,CACb88F,aAAce,EAAW3iG,GACzB6hG,WAAYc,EAAW3iG,EAAI,KAG/B,OAAOyhG,GAAiBC,GA3CjBkB,CCjJM,SAAa7qF,EAAQu7D,GAClC,IAAI3lE,EACJ,QAAgB+D,IAAZ4hE,EACF,IAAK,MAAMryE,KAAS8W,EACL,MAAT9W,IACI0M,EAAM1M,QAAkByQ,IAAR/D,GAAqB1M,GAASA,KACpD0M,EAAM1M,OAGL,CACL,IAAI0T,GAAS,EACb,IAAK,IAAI1T,KAAS8W,EACiC,OAA5C9W,EAAQqyE,EAAQryE,IAAS0T,EAAOoD,MAC7BpK,EAAM1M,QAAkByQ,IAAR/D,GAAqB1M,GAASA,KACpD0M,EAAM1M,GAIZ,OAAO0M,ED6HOA,CAAI40F,GE/IL,SAAaxqF,EAAQu7D,GAClC,IAAInqE,EACJ,QAAgBuI,IAAZ4hE,EACF,IAAK,MAAMryE,KAAS8W,EACL,MAAT9W,IACIkI,EAAMlI,QAAkByQ,IAARvI,GAAqBlI,GAASA,KACpDkI,EAAMlI,OAGL,CACL,IAAI0T,GAAS,EACb,IAAK,IAAI1T,KAAS8W,EACiC,OAA5C9W,EAAQqyE,EAAQryE,IAAS0T,EAAOoD,MAC7B5O,EAAMlI,QAAkByQ,IAARvI,GAAqBlI,GAASA,KACpDkI,EAAMlI,GAIZ,OAAOkI,EF8HKA,CAAIo5F,I,wBGjGX,MAAMM,GAA6DjgE,EACxEA,GAAS,CACPkgE,kBAAmBvzB,GACnBwzB,WAAYngE,EACVA,GAAS,CACPogE,gBAAiBzzB,GACjB0zB,YAAargE,EACXA,GAAS,CAAC+5B,YAAa/5B,EAAUsgE,gBAAiBtgE,WA8DrD,MAAMugE,GAMXxnF,YACEynF,EACAC,G,iBACC,G,EAAA,Y,EAAA,M,sFAzDE,SACLD,GAEAA,EAAqBjhG,QAAQ,CAACmhG,EAAI3uF,KAChC,GACEyuF,EAAqB38E,UAClBviB,GAAMA,EAAE4+F,oBAAsBQ,EAAGR,qBAC9BnuF,EAEN,KAAK,0EAAL,OAAgF2uF,EAAGR,kBAAnF,KACFQ,EAAGP,WAAW5gG,QAAQ,CAACohG,EAAI5uF,KACzB,GACE2uF,EAAGP,WAAWt8E,UACXviB,GAAMA,EAAE8+F,kBAAoBO,EAAGP,mBAC5BruF,EAEN,KAAK,yEAAL,OAA+E4uF,EAAGP,gBAAlF,oCAA6HM,EAAGR,kBAAhI,MACFS,EAAGN,YAAY9gG,QAAQ,CAACqhG,EAAY7uF,KAClC,GACEA,EAAQ,GACR6uF,EAAW7mC,YAAc4mC,EAAGN,YAAYtuF,EAAQ,GAAGgoD,YAEnD,KAAK,oEAAL,OAA0E2mC,EAAGR,kBAA7E,iBAAuGS,EAAGP,gBAA1G,KACF,GAAIQ,EAAWN,gBAAkB,GAAK,EAAIM,EAAWN,gBACnD,KAAK,oFAAL,OAA0FM,EAAWN,gBAArG,YAkCNO,CAA6BL,GAC7B//F,KAAKqgG,OAASrgG,KAAKsgG,kBAAkBP,GACrC//F,KAAKugG,eAAevgG,KAAKqgG,OAAQL,GAGnCM,kBAAkBP,GAChB,MAAMzuF,EAAQ,IAAIgC,IAClB,IAAK,MAAMktF,KAAuBT,EAAsB,CACtD,MAAMU,EAAkB,IAAIntF,IAC5B,IAAK,MAAMotF,KAAwBF,EAAoBd,WACrDe,EAAgB/uF,IACdgvF,EAAqBf,gBACrBe,GAGJpvF,EAAMI,IAAI8uF,EAAoBf,kBAAmBgB,GAEnD,OAAOnvF,EAOTivF,eAAejvF,EAAc0uF,GAC3B,IAAK,MAAMS,KAAmBnvF,EAAMoD,SAClC,IAAK,MAAMisF,KAAcX,EAAa,CACpC,MAAM5+F,EAAMpB,KAAK4gG,uBACfD,EACA7/F,MAAM09C,KAAKiiD,EAAgB/rF,WAE7B,GAAItT,GAAOA,EAAM,EACf,KAAK,2CAAL,OAAiDu/F,EAAjD,wCAA2Fv/F,EAA3F,OAWRy/F,yBACE,OAAO//F,MAAM09C,KAAKx+C,KAAKqgG,OAAOjsF,WAAW/I,IACvC,IAA2C,IAAzCo0F,EAAmBgB,GAAqB,EACxC,MAAO,CACLhB,oBACAC,WAAY5+F,MAAM09C,KAAKiiD,EAAgB/rF,aAU/CosF,iCACEH,EACAlB,GAEA,MAAMgB,EAAkBzgG,KAAKqgG,OAAO7iG,IAAIiiG,GACxC,OAAKgB,EACE3/F,MAAM09C,KAAKiiD,EAAgB/rF,UAC/B4O,OAAO,QAAC,YAACs8E,GAAF,SACN5/F,KAAK+gG,oBAAoBJ,EAAYf,KAEtCv0F,IAAI,QAAC,gBAACs0F,GAAF,SAAuBA,IALD,GAY/BqB,mBACEL,EACAlB,EACAE,GAEA,MAAMc,EAAkBzgG,KAAKqgG,OAAO7iG,IAAIiiG,GACxC,IAAKgB,EACH,KAAK,4CAAL,OAAkDhB,EAAlD,KAEF,MAAMiB,EAAuBD,EAAgBjjG,IAAImiG,GACjD,IAAKe,EACH,KAAK,6CAAL,OAAmDjB,EAAnD,iBAA6EE,EAA7E,KAEF,OAAO3/F,KAAK+gG,oBACVJ,EACAD,EAAqBd,aAIzBmB,oBACEJ,EACAf,GAEA,GAAIA,EAAYl/F,QAAUigG,EAAaf,EAAY,GAAGtmC,YACpD,OAAO,KACT,MAAM2nC,EAAqBnhF,KACzB8/E,EACCO,GAAeA,EAAW7mC,aAAeqnC,GAE5C,OAAOM,EAAqBA,EAAmBpB,gBAAkB,KAOnEqB,sBACEP,EACAlB,GAEA,MAAMgB,EAAkBzgG,KAAKqgG,OAAO7iG,IAAIiiG,GACxC,OAAKgB,EACEzgG,KAAK4gG,uBACVD,EACA7/F,MAAM09C,KAAKiiD,EAAgB/rF,WAHA,KAO/BksF,uBACED,EACAQ,GAEA,MAAMC,EAAmBD,EACtB91F,IAAI,QAAC,YAACu0F,GAAF,SAAmB5/F,KAAK+gG,oBAAoBJ,EAAYf,KAC5Dt8E,OAAQu8E,GAAwC,OAApBA,GAC/B,OAAgC,IAA5BuB,EAAiB1gG,OAAqB,KACnC0gG,EAAiBv+E,OAAO,CAAC3hB,EAAGC,IAAOA,EAAID,EAAIC,EAAID,EAAI,ICjPvD,MAAM+xD,GAA+B1zB,GAAS,CACnD3W,QAAS4tC,GAAYvD,OACrBmI,YAAa77B,EACb8hE,KAAM9hE,ICOK+hE,GAAwD7sC,GACnE,CACEv3D,KAAM,oBACNw3D,MAAO,KACPC,aAAa,IAAIrhD,KAAM5B,IAAI,IAAK,eAAeA,IAAI,IAAK,iBAIrD,SAAS6vF,GACdC,EACAnnC,GAEA,OAAOinC,GAAkBjsC,UAAU,CACjCgF,KACG5D,GAAYnB,QAAQksC,KAIpB,SAASC,GACdvoC,GAEA,OAAOqoC,GACLroC,EAAKtwC,QACLswC,EAAKtrB,SAAW,IAAqB,KCrClC,MAAM8zD,GAAmClrC,GAAYnB,UAAU,CACpE,aACA,OACA,WAeWssC,GAA+B,MAC1C,MACM1zE,EAASuoC,GAAY3V,OAAO6gD,GAAoB,QAStD,OAAOrkG,OAAOuB,OAAO,CAACqvB,SAAQk4C,MARhB,IAAMl4C,EAQiBsnC,QAPpB3sC,IACf,GAAIA,IAAYqF,EACd,MAAM,IAAI9qB,MAAJ,yBAA4BylB,KAKQ/a,KADjC,MAAQ+a,QAASqF,EAAQmtC,YATV,KASuBimC,KAAM,OAVf,GAiB/BO,GAAyD,MACpE,MAAM3zE,EAASuoC,GAAY3V,OAAO6gD,GAAoB,qBAChDG,EAAerrC,GAAYlB,QAAQrnC,GAAQvtB,OACjD,SAASylE,EAAMjK,GACb,OAAO1F,GAAY3V,OAAO5yB,EAAQlkB,OAAOmyD,EAAKykC,aA2BhD,OAAOtjG,OAAOuB,OAAO,CAACqvB,SAAQk4C,QAAO5Q,QAzBrC,SAAiB2G,GACf,IAAK1F,GAAYpqB,UAAU8vB,EAAMjuC,GAC/B,MAAM,IAAI9qB,MACR,oCAAsCqzD,GAAYhwD,SAAS01D,IAG/D,MAAMlS,EAAQwM,GAAYlB,QAAQ4G,GAAMn2D,MAAM87F,GAC9C,GAAqB,IAAjB73C,EAAMtpD,OACR,MAAM,IAAIyC,MAAJ,uBAA0B0I,IAAUm+C,KAE5C,MAAM22C,GAAc32C,EAAM,GAC1B,GAAIjgD,OAAO42F,KAAgB32C,EAAM,GAC/B,MAAM,IAAI7mD,MAAJ,oCAAuC6mD,EAAM,KAErD,MAAO,CACL22C,eAU0C9yF,KAP9C,SAAcquD,GACZ,MAAO,CACLtzC,QAASu9C,EAAMjK,GACfd,YAAY,8BAAD,OAAgCc,EAAKykC,WAArC,kBACXU,KAAM,OA5B0D,GAsCzDS,GAAmD,MAC9D,MAAM7zE,EAASuoC,GAAY3V,OAAO6gD,GAAoB,cAChDK,EAAoBvrC,GAAYlB,QAAQrnC,GAAQvtB,OACtD,SAASylE,EAAMjK,GACb,OAAO1F,GAAY3V,OAAO5yB,EAAQlkB,OAAOmyD,EAAKykC,YAAazkC,EAAKyJ,OAuBlE,OAAOtoE,OAAOuB,OAAO,CAACqvB,SAAQk4C,QAAO5Q,QArBrC,SAAiB2G,GACf,IAAK1F,GAAYpqB,UAAU8vB,EAAMjuC,GAC/B,MAAM,IAAI9qB,MACR,8BAAgCqzD,GAAYhwD,SAAS01D,IAGzD,MAAMlS,EAAQwM,GAAYlB,QAAQ4G,GAAMn2D,MAAMg8F,GACxCpB,GAAc32C,EAAM,GAE1B,MAAO,CACL2b,MAFYq8B,GAAeh4C,EAAM,IAGjC22C,eAU0C9yF,KAP9C,SAAcquD,GACZ,MAAO,CACLtzC,QAASu9C,EAAMjK,GACfd,YAAY,yBAAD,OAA2Bc,EAAKyJ,MAAhC,qBAAkDzJ,EAAKykC,WAAvD,kBACXU,KAAM,OAxBoD,GCvChE,SAASY,GAAT,GAK0C,IALf,WACzBtnC,EADyB,UAEzBunC,EAFyB,QAGzB5sC,EAHyB,UAIzBD,GACuC,EACvC,MAAMpnC,EAASszE,GAAkB5mC,EAAY,KACvCknC,EAAeP,GAAkBhsC,QAAQrnC,GAAQvtB,OAgBvD,OAAOrD,OAAOuB,OAAO,CAACqvB,SAAQk4C,MAff9iB,GACbi+C,GAAkBzgD,OAAO5yB,KAAWqnC,EAAQjS,IAcTkS,QAbpB2G,GACf7G,EAAUisC,GAAkBhsC,QAAQ4G,GAAMn2D,MAAM87F,IAYJM,WAX3B,CAAC9+C,EAAQ++C,KAC1B,MAAMpH,EAAO2G,GAAW1zE,OAClBo0E,EAAgB7rC,GAAYnB,UAAUC,EAAQjS,IACpD,MAAO,CACLz6B,QAAS6tC,GAAY5V,OAAO8Z,KAAerF,EAAQjS,IACnDzV,UAAU,EACVurB,IAAK+oC,EAAYlH,EAAOqH,EACxBjpC,IAAK8oC,EAAYG,EAAgBrH,EACjCoH,4BAMC,MAAME,GAAmC7rC,GAAYpB,UAAU,CACpE,aACA,OACA,WAGWktC,GAA4CN,GAAe,CACtEtnC,WAAYlE,GAAY5V,OAAOyhD,GAAoB,aACnDJ,WAAW,EACX5sC,QAAUz0D,GAAM21D,GAAYlB,QAAQz0D,GACpCw0D,UAAYx0D,GAAM21D,GAAYnB,UAAUx0D,KAG7B2hG,GAA2CP,GAAe,CACrEtnC,WAAYlE,GAAY5V,OAAOyhD,GAAoB,aACnDJ,WAAW,EACX5sC,QAAUz0D,GAAM21D,GAAYlB,QAAQz0D,GACpCw0D,UAAYx0D,GAAM21D,GAAYnB,UAAUx0D,KAY7B4hG,GAAoD,MAC/D,MAAM9nC,EAAalE,GAAY5V,OAAOyhD,GAAoB,UACpDr0E,EAASszE,GAAkB5mC,EAAY,KACvCknC,EAAeP,GAAkBhsC,QAAQrnC,GAAQvtB,OAgBvD,OAAOrD,OAAOuB,OAAO,CAACqvB,SAAQk4C,MAfhB,QAAC,WAACw6B,EAAD,MAAah7B,GAAd,SACZ27B,GAAkBzgD,OAAO5yB,EAAQlkB,OAAO42F,GAAah7B,IAclBpQ,QAbpB2G,IACf,MAAMlS,EAAQs3C,GAAkBhsC,QAAQ4G,GAAMn2D,MAAM87F,GAGpD,MAAO,CAAClB,YAFY32C,EAAM,GAEN2b,MADNq8B,GAAeh4C,EAAM,MAUSm4C,WAP3B,CAAC,EAAqBC,KAAtB,IAAC,MAACz8B,EAAD,WAAQg7B,GAAT,QAAiD,CAClE/3E,QAAS6tC,GAAY5V,OAAO8Z,EAAY5wD,OAAO42F,GAAah7B,GAC5D/3B,UAAU,EACVurB,IAAK2oC,GAAY37B,MAAM,CAACR,QAAOg7B,eAC/BvnC,IAAKwoC,GAAkBz7B,MAAM,CAACw6B,eAC9ByB,6BAjB6D,GA2B3DM,GAAoBjsC,GAAY5V,OACpCyhD,GACA,iBAQWK,GAAmD,MAC9D,MAAM10E,EAASszE,GAAkBmB,GAAmB,KAC9Cb,EAAeP,GAAkBhsC,QAAQrnC,GAAQvtB,OA+BvD,MAAO,CAACutB,SAAQk4C,MA9BF,QAAC,UAACy8B,EAAD,UAAYC,EAAZ,MAAuBl9B,GAAxB,SACZ27B,GAAkBzgD,OAChB5yB,EACAlkB,OAAO84F,GACP94F,OAAO64F,GACPj9B,IAyBmBpQ,QAvBN3sC,IACf,MAAMohC,EAAQs3C,GAAkBhsC,QAAQ1sC,GAAS7iB,MAAM87F,GAIvD,MAAO,CAACgB,WAHW74C,EAAM,GAGN44C,WAFA54C,EAAM,GAEK2b,MADhBq8B,GAAeh4C,EAAM,MAmBLm4C,WAhBb,CAAC,EAA+BC,KAA2B,IAA1D,UAACQ,EAAD,UAAYC,EAAZ,MAAuBl9B,GAAkC,EAC3E,MAAMm9B,EAAY,CAACnC,WAAYiC,EAAWj9B,SACpCo9B,EAAY,CAACpC,WAAYkC,EAAWl9B,SAC1C,MAAO,CACL/8C,QAAS6tC,GAAY5V,OACnB6hD,GACA34F,OAAO84F,GACP94F,OAAO64F,GACPj9B,GAEF/3B,UAAU,EACVurB,IAAK2oC,GAAY37B,MAAM48B,GACvB3pC,IAAK0oC,GAAY37B,MAAM28B,GACvBV,4BA9B0D,GA0CnDY,GAAoD,MAC/D,MAAM/0E,EAASszE,GAAkBmB,GAAmB,KAC9Cb,EAAeP,GAAkBhsC,QAAQrnC,GAAQvtB,OA+BvD,MAAO,CAACutB,SAAQk4C,MA9BF,QAAC,UAACy8B,EAAD,UAAYC,EAAZ,MAAuBl9B,GAAxB,SACZ27B,GAAkBzgD,OAChB5yB,EACAlkB,OAAO84F,GACP94F,OAAO64F,GACPj9B,IAyBmBpQ,QAvBN3sC,IACf,MAAMohC,EAAQs3C,GAAkBhsC,QAAQ1sC,GAAS7iB,MAAM87F,GAIvD,MAAO,CAACgB,WAHW74C,EAAM,GAGN44C,WAFA54C,EAAM,GAEK2b,MADhBq8B,GAAeh4C,EAAM,MAmBLm4C,WAhBb,CAAC,EAA+BC,KAA2B,IAA1D,UAACQ,EAAD,UAAYC,EAAZ,MAAuBl9B,GAAkC,EAC3E,MAAMm9B,EAAY,CAACnC,WAAYiC,EAAWj9B,SACpCo9B,EAAY,CAACpC,WAAYkC,EAAWl9B,SAC1C,MAAO,CACL/8C,QAAS6tC,GAAY5V,OACnB6hD,GACA34F,OAAO84F,GACP94F,OAAO64F,GACPj9B,GAEF/3B,UAAU,EACVurB,IAAK2oC,GAAY37B,MAAM28B,GACvB1pC,IAAK0oC,GAAY37B,MAAM48B,GACvBX,4BA9B2D,GA0CpDa,GAAoE,MAC/E,MAAMtoC,EAAalE,GAAY5V,OAAOyhD,GAAoB,eACpDr0E,EAASszE,GAAkB5mC,EAAY,KACvCknC,EAAeP,GAAkBhsC,QAAQrnC,GAAQvtB,OA8BvD,OAAOrD,OAAOuB,OAAO,CAACqvB,SAAQk4C,MA7BhB,QAAC,WAACw6B,EAAD,kBAAalB,EAAb,gBAAgCE,GAAjC,SACZ2B,GAAkBzgD,OAChB5yB,EACAlkB,OAAO42F,GACPlB,EACAE,IAwBiCpqC,QAtBpB2G,IACf,MAAMlS,EAAQs3C,GAAkBhsC,QAAQ4G,GAAMn2D,MAAM87F,GAIpD,MAAO,CAAClB,YAHY32C,EAAM,GAGNy1C,kBAFMuC,GAAeh4C,EAAM,IAER21C,gBADfqC,GAAeh4C,EAAM,MAkBDm4C,WAf3B,CAAC,EAElBC,KAFiB,IACjB,WAACzB,EAAD,kBAAalB,EAAb,gBAAgCE,GADf,QAGb,CACJ/2E,QAAS6tC,GAAY5V,OACnB8Z,EACA5wD,OAAO42F,GACPlB,EACAE,GAEF/xD,UAAU,EACVurB,IAAK2oC,GAAY37B,MAAM,CAACR,MAAO85B,EAAmBkB,eAClDvnC,IAAK0oC,GAAY37B,MAAM,CAACR,MAAOg6B,EAAiBgB,eAChDyB,6BA/B6E,G,yHC9G1E,MAAMc,GAA2C3jE,GAAS,CAC/D3W,QAAS4tC,GAAYvD,OACrBmI,YAAa77B,EACbrR,GAAI6+C,KA4BOo2B,GAAyC5jE,GAAS,CAC7D07D,MAAO17D,EACP6jE,KAAM7jE,EACN8jE,aAAc9jE,EACd+jE,cAAe/jE,IAaXgkE,GAAiDhkE,GAAS,CAC9D3W,QAAS6tC,GAAYxD,OACrBrlB,SAAUrO,EACV45B,IAAK55B,EACL65B,IAAK75B,EACL6iE,sBAAuB7iE,IAiBlB,MAAMikE,GAaXlrF,YACEugD,EACAa,EACA+pC,EACAzD,EACA0D,EACAC,EAGAC,EAEAC,EACAC,GACC,2XACD9jG,KAAKu3D,OAASsB,EACd74D,KAAKw3D,OAASkC,EACd15D,KAAK+jG,aAAeplG,IAAWqhG,GAC/BhgG,KAAKgkG,gBAAkBN,EACvB1jG,KAAKikG,cAAgBtlG,IAAW8kG,GAChCzjG,KAAKkkG,YAAcvlG,IAAWglG,GAC9B3jG,KAAKmkG,iCAAmCxlG,IACtCklG,GAEF7jG,KAAKokG,4BAA8BR,EAEnC5jG,KAAKqkG,WAAa,IAAI/wF,IACpB,IAAIgxF,GAAWzrC,EAAOmnC,EAAayD,IAAep4F,IAAI,CAACnK,EAAGvE,IAAM,CAACuE,EAAGvE,KAEtEqD,KAAKukG,WAAa,IAAIjxF,IACpB,IACKomD,EAAMjrD,UACN+1F,GACDxE,EACAyD,EACAG,EACAU,GAAWzrC,EAAOmnC,EAAayD,GAC/BK,IAEFz4F,IAAI,CAACnK,EAAGvE,IAAM,CAACuE,EAAGvE,KAEtBqD,KAAKykG,6BAA+BX,EAG5B,WAACpjF,GACT,MAAM,cACJgkF,EADI,aAEJjB,EAFI,WAGJE,EAHI,UAIJtF,EAJI,qBAKJ0B,GACEr/E,GACE,MAACu6E,EAAD,KAAQmI,EAAR,aAAcC,EAAd,cAA4BC,GAAiBK,EAC7CpsC,EAAS,IAAIjkD,IACbkkD,EAAS,IAAIlkD,IAEbqxF,EAAsB,IAAIrxF,IAC9BmwF,EAAap4F,IAAK5M,GAAM,CAACA,EAAEmqB,QAASnqB,EAAEyvB,MAElC02E,EAAoB,IAAIpxF,IAAIiwF,EAAap4F,IAAK5M,GAAMA,EAAEmqB,UAItDi8E,EAAiB,IAAIvxF,IAIrBwxF,EAAmC,MACvC,MAAMC,EAASlkG,GAAMA,GAAK,GAAKA,GAAK,EACpC,KACGkkG,EAAM3B,IACN2B,EAAM1B,IACN0B,EAAMzB,IACNyB,EAAM9J,IAEP,MAAM,IAAI93F,MACR,mCACE,CAACigG,EAAMC,EAAcC,EAAerI,GAAOnvF,KAAK,SAGtD,MAAMrI,EAAS,GAAKw3F,EAAQmI,EAAOC,EAAeC,GAClD,GAAI7/F,EAAS,EACX,MAAM,IAAIN,MAAM,sCAAwC,EAAIM,IAE9D,OAAOA,GAjBgC,GAoBzC,GAAyB,IAArB46F,EAAU39F,OACZ,MAAM,IAAIyC,MAAM,8BAElB,MAAM68F,EAAc3B,EAAUhzF,IAAKxK,GAAMA,EAAE09F,aACrCmF,EAAiBrF,EAAUA,EAAU39F,OAAS,GAAG89F,UACjDnmC,EAAWxqD,IACf,GAAI0pD,EAAOzoD,IAAIjB,EAAK+a,SAClB,MAAM,IAAIzlB,MAAM,kBAAoB0K,EAAK+a,SAE3C2uC,EAAO7lD,IAAI7D,EAAK+a,QAAS/a,IAErBorD,EAAWC,IACf,MAAM8rC,EAAMvD,GAAgCvoC,GAC5C,GAAI1B,EAAO1oD,IAAIk2F,GACb,MAAM,IAAI7hG,MAAM,kBAAoB6hG,GAEtCxtC,EAAO9lD,IAAIszF,EAAK9rC,GAChB+rC,EAA4B/rC,IAExB+rC,EAA+B/rC,IACnC,MAAMgsC,EAAKhsC,EAAKkpC,sBAChB,GAAI8C,EAAK,GAAKA,EAAK,EAAG,CACpB,MAAMF,EAAMvD,GAAgCvoC,GACtCh8D,EAAOokG,GAAkB96F,SAASw+F,GACxC,MAAM,IAAI7hG,MAAJ,6CAAgDjG,EAAhD,aAAyDgoG,IAEjEL,EAAenzF,IAAIwnD,EAAKC,KAAM0rC,EAAernG,IAAI07D,EAAKC,MAAQ,GAAK+rC,IAG/DpB,EAA8B,IAAIhE,GACtCC,EACAC,GAIImF,EAAM5I,GAAoBmI,EAActjC,SAC9C,IAAK,MAAMvzD,KAAQ62F,EAAcv2C,MAAM0K,QAAS,CAC9C,GAAI+rC,EAAkB91F,IAAIjB,EAAK+a,SAI7B,SAEF,MAAMgwE,EAASuM,EAAIt3F,EAAK+a,SACxB,GAAIgwE,EAAS,IAAMptF,OAAOkhB,SAASksE,GAAS,CAC1C,MAAM17F,EAAOs5D,GAAYhwD,SAASqH,EAAK+a,SACvC,MAAM,IAAIzlB,MAAJ,8BAAiCjG,EAAjC,aAA0C07F,IAElD,GAAIpiC,GAAYpqB,UAAUv+B,EAAK+a,QAAS84E,IACtC,MAAM,IAAIv+F,MACR,6CACEqzD,GAAYhwD,SAASqH,EAAK+a,UAGhCyvC,EAAQ,CACNzvC,QAAS/a,EAAK+a,QACdwyC,YAAavtD,EAAKutD,YAClBimC,KAAMzI,IAKV,IAAIwM,EAAiB,KACrB,IAAK,MAAMzE,KAAcX,EAAa,CACpC,IAAK,MAAMztB,KAAekxB,EAAc,CACtC,MAAMX,EAAY,CAChBn9B,MAAO4M,EAAYrkD,GACnByyE,cAGF,GADAsE,EAA4BxC,GAAaN,WAAWW,EAAWM,IACzC,MAAlBgC,EAAwB,CAC1B,MAAMC,EAAiB,CACrBzC,UAAWjC,EACXkC,UAAWuC,EACXz/B,MAAO4M,EAAYrkD,IAErB+2E,EACEtC,GAAqBR,WAAWkD,EAAgBhC,IAElD4B,EACEjC,GAAsBb,WAAWkD,EAAgB/B,QAE9C,CAIL,MAAM+B,EAAiB,CACrBzC,UAAWjC,EACXkC,UAAWlC,EACXh7B,MAAO4M,EAAYrkD,IAEfgrC,EAAO8pC,GAAsBb,WACjCkD,EACA/B,GAEF2B,EAA4B/rC,IAGhCksC,EAAiBzE,EAEnB,GAAsB,MAAlByE,EAEF,MAAM,IAAIjiG,MAAJ,6CAIR,IAAK,MAAMovE,KAAekxB,EAAc,CACtC,MAAM4B,EAAiB,CACrBzC,UAAWwC,EACXvC,UAAWuC,EACXz/B,MAAO4M,EAAYrkD,IAEfgrC,EAAOypC,GAAqBR,WAChCkD,EACAhC,GAEF4B,EAA4B/rC,GAG9B,MAAM0qC,EAA8B,IAAItwF,IAExC,CACE,IAAIgyF,EAAkB,EACtB,MAAMC,EAAiD,IAAIjyF,IAC3D,IAAK,MAAM,QAACsV,EAAD,KAAUy4E,KAAS9pC,EAAO7iD,SAC/B2sF,EAAO,IACTiE,GAAmBjE,EACnBkE,EAAoB7zF,IAAIkX,EAASy4E,IAGrC,KAAMiE,EAAkB,GACtB,MAAM,IAAIniG,MAAM,gDAElB,IAAK,MAAOylB,EAASgwE,KAAW2M,EAC9B3B,EAA4BlyF,IAAIkX,EAASgwE,EAAS0M,GAQtD,MAAME,EAAmB,CACvB58E,EACA68E,KAEA,MAAM9/B,EAAQg/B,EAAoBnnG,IAAIorB,GACtC,GAAa,MAAT+8C,EACF,OAAO/8C,EAET,MAAM88E,EAAgBp+E,KAAY04E,EAAayF,GAEzCE,EAAmB3F,EADD0F,EAAgB,GAExC,OAAO5D,GAAY37B,MAAM,CACvBR,QACAg7B,WAAYgF,KAaVC,EAA2B,YAC/B,MAAMC,EbnZL,SAA6BzkC,GAClC,MAAM0kC,EAAiC,IAAIxJ,GAC3C,IAAK,MAAOruE,EAAQ2qE,KAAWx3B,EAAQN,YAAY1sD,UACjD0xF,EAAS7kG,IAAIgtB,EAAQ2qE,GAEvB,OAAO,SAAmBhwE,GAExB,OADgBk9E,EAAStoG,IAAIorB,GACd/F,OACb,CAAC3hB,EAAeC,KAAhB,CACEo9D,SAAUr9D,EAAEq9D,SAAWp9D,EAAEo9D,SACzBC,UAAWt9D,EAAEs9D,UAAYr9D,EAAEq9D,YAE7B,CAACD,SAAU,EAAGC,UAAW,KauYbunC,CAAoBrB,EAActjC,SAC9C,IAAK,MAAMlI,KAAS,YAClB,IAAK,MAAMA,KAAQwrC,EAAcv2C,MAAMuL,MAAM,CAACI,cAAc,IAAS,CACnE,MAAM8+B,EAASiN,EAAI3sC,EAAKtwC,cAClB,CACJA,QAASswC,EAAKtwC,QACdglB,UAAU,EACVurB,IAAKD,EAAKC,IACVC,IAAKF,EAAKE,IACVyD,UAAW3D,EAAKI,YAChBs/B,OAAQA,EAAOr6B,eAEX,CACJ31C,QAASswC,EAAKtwC,QACdglB,UAAU,EACVurB,IAAKD,EAAKE,IACVA,IAAKF,EAAKC,IACV0D,UAAW3D,EAAKI,YAChBs/B,OAAQA,EAAOp6B,YAjBD,GAqBdtF,EAAK0/B,OAAS,UACV1/B,IAKN8sC,EAGF,IAAI1yF,IACR,IAAK,MAAM2yF,KAAaL,IAA4B,CAClD,MAAMzsC,EAAMqsC,EAAiBS,EAAU9sC,IAAK8sC,EAAUppC,WACtD,IAAIqpC,EAAQF,EAASxoG,IAAI27D,GACZ,MAAT+sC,IACFA,EAAQ,CAAC1N,eAAgB,EAAGvgC,SAAU,IACtC+tC,EAASt0F,IAAIynD,EAAK+sC,IAEpBA,EAAM1N,gBAAkByN,EAAUrN,OAClCsN,EAAMjuC,SAASx2D,KAAKwkG,GAEtB,IAAK,MAAO9sC,GAAK,eAACq/B,EAAD,SAAiBvgC,MAAc+tC,EAAU,CACxD,MAAMG,EAAa3vC,GAAYpqB,UAAU+sB,EAAK2oC,GAAY7zE,QACtD62E,EACA,EAAI7J,EACR,IAAK,MAAMmL,KAAWnuC,EAAU,CAC9B,MAAMitC,EAAMkB,EAAQxN,OAASJ,EAAkB2N,EAC/CltC,EAAQ,CACNrwC,QAASw9E,EAAQx9E,QACjBglB,SAAUw4D,EAAQx4D,SAClBurB,IAAKqsC,EAAiBY,EAAQjtC,IAAKitC,EAAQvpC,WAC3CzD,IAAKosC,EAAiBY,EAAQhtC,IAAKgtC,EAAQvpC,WAC3CulC,sBAAuB8C,KAe7B,MAAMrB,EAAmC,IAVzC,kBACStsC,EAAO7iD,SACd,IAAK,MAAM2xF,KAAeC,GACxBtG,EACAyD,SAEMzqC,GAAautC,GAAgBF,IAIMG,IAAuBn7F,IACjEwC,GACQ,EAAImrD,GAAgB6rC,EAAernG,IAAIqQ,EAAK+a,SAAU,IAIjE,OAAO,IAAI46E,GACTjsC,EACAC,EACAisC,EACAzD,EACA0D,EACAC,EACAC,EACAC,EACAC,GAIJ9D,cACE,OAAOhgG,KAAK+jG,aAGd1F,YACE,MAAMoI,EAAKzmG,KAAK+jG,aACV1F,EAAY,GAClB,IAAK,IAAI1hG,EAAI,EAAGA,EAAI8pG,EAAG/lG,OAAQ/D,IAAK,CAClC,MAAM4hG,EAAckI,EAAG9pG,GACjB6hG,EAAY7hG,EAAI,EAAI8pG,EAAG/lG,OAAS+lG,EAAG9pG,EAAI,GAAKqD,KAAKgkG,gBACvD3F,EAAU58F,KAAK,CAAC88F,cAAaC,cAE/B,OAAOJ,GAAiBC,GAG1BoF,eACE,OAAOzjG,KAAKikG,cAGdN,aACE,OAAO3jG,KAAKkkG,YAOdpF,UAAUl2E,GACR,OAAOowC,GAAgBh5D,KAAKqkG,WAAW7mG,IAAIorB,GAAU,MAS7C,mBACD07E,GAAWtkG,KAAKu3D,OAAQv3D,KAAK+jG,aAAc/jG,KAAKikG,eAGzDp2F,KAAK+a,GAEH,OADA4tC,GAAYvB,YAAYrsC,GACjB5oB,KAAKu3D,OAAO/5D,IAAIorB,IAAY29E,GAAgB39E,GAS/C,OAACpZ,GACL,MAAMye,EAASze,EAAUA,EAAQye,OAASuoC,GAAYb,MACtD,IAAK,MAAO/sC,EAAS89E,KAAe1mG,KAAKu3D,OACnCf,GAAYpqB,UAAUxjB,EAASqF,WAC3By4E,GAGV,IAAK,MAAM99E,KAAW09E,GACpBtmG,KAAK+jG,aACL/jG,KAAKikG,eAEDztC,GAAYpqB,UAAUxjB,EAASqF,WAC3B+qC,GAAautC,GAAgB39E,KASzCm2E,UAAUn2E,GACR,OAAOowC,GAAgBh5D,KAAKukG,WAAW/mG,IAAIorB,GAAU,MAS7C,mBACD5oB,KAAKw3D,OAAO/oD,aACZ+1F,GACLxkG,KAAK+jG,aACL/jG,KAAKikG,cACLjkG,KAAKokG,4BACLpkG,KAAKo3D,YACLp3D,KAAKykG,8BAITvrC,KAAKtwC,GAEH,OADA04E,GAAkBrsC,YAAYrsC,GAE5B5oB,KAAKw3D,OAAOh6D,IAAIorB,IAChB+9E,GACE/9E,EACA5oB,KAAKkkG,YACLlkG,KAAKqkG,WACLrkG,KAAKokG,4BACLpkG,KAAKmkG,iCACLnkG,KAAKykG,8BAUL,eACGzkG,KAAKw3D,OAAO9iD,SACnB,IAAK,MAAMwnD,KAAQsoC,GACjBxkG,KAAK+jG,aACL/jG,KAAKikG,cACLjkG,KAAKokG,4BACLpkG,KAAKo3D,YACLp3D,KAAKykG,oCAECzrC,GACJ2tC,GACEzqC,EACAl8D,KAAKkkG,YACLlkG,KAAKqkG,WACLrkG,KAAKokG,4BACLpkG,KAAKmkG,iCACLnkG,KAAKykG,+BAMD,aAAC4B,GACX,IAAK,MAAMntC,KAAQl5D,KAAK05D,QAClBR,EAAKE,MAAQitC,UAGXntC,GAIV0tC,gBAEE,MAAM/tC,EAAQ/3D,MAAM09C,KAAKx+C,KAAK64D,SAGxBguC,EAAgB,IAAIvzF,IAC1B,IAAK,MAAM,QAACsV,KAAYiwC,EACtBguC,EAAcn1F,IAAIkX,EAAS,GAE7B,IAAK,MAAMswC,KAAQl5D,KAAK05D,QAAS,CAC/B,MAAMx4D,EAAIg4D,EAAKC,IACf0tC,EAAcn1F,IACZxQ,EACA83D,GAAa6tC,EAAcrpG,IAAI0D,IAAMg4D,EAAKkpC,uBAG9C,IAAK,MAAOv0F,EAAMi5F,KAAYD,EAAe,CAC3C,MAAME,EAAcD,EAAU,EAC9B,GAAIzmG,KAAKgD,IAAI0jG,GAAe,KAAM,CAChC,MAAM7pG,EAAOs5D,GAAYhwD,SAASqH,GAClC,MAAM,IAAI1K,MAAJ,iCACsBjG,EADtB,+BACiD4pG,KAK3D,MAAM5N,EAA+C,IAAI5lF,IACzD,IAAK,MAAM4lD,KAAQl5D,KAAK05D,QACtB3E,EAAkBmkC,EAAahgC,EAAKE,IAAKF,GAG3C,MAAMlqC,EAAQ6pC,EAAMxtD,IAAI,IAAgB,IAAf,QAACud,GAAa,EACrC,MAAMovC,EAAUgB,GAAgBkgC,EAAY17F,IAAIorB,GAAU,IACpDsyE,EAAWljC,EAAQt3D,OACnB44F,EAAW,IAAIp8C,YAAYg+C,GAC3BtC,EAAS,IAAIW,aAAa2B,GAahC,OAZAljC,EAAQl5D,QAAQ,CAAC4L,EAAG/N,KAKlB,MAAMs+D,EAAWj7D,KAAK8+F,UAAUp0F,EAAEyuD,KAClC,GAAgB,MAAZ8B,EACF,MAAM,IAAI93D,MAAMuH,EAAEyuD,KAEpBmgC,EAAS38F,GAAKs+D,EACd29B,EAAOj8F,GAAK+N,EAAE03F,wBAET,CAAC9I,WAAUV,YAGpB,MAAO,CAACxhC,UAAWyB,EAAMxtD,IAAKxK,GAAMA,EAAE+nB,SAAUoG,SAGlDziB,SACE,MAAMyuD,EAAel6D,MAAM09C,KAAKx+C,KAAKw3D,OAAO9iD,UAAUrJ,IAAKX,IAAD,CACxDke,QAASle,EAAEke,QACXglB,SAAUljC,EAAEkjC,SACZurB,IAAKH,GAAah5D,KAAK8+F,UAAUp0F,EAAEyuD,MACnCC,IAAKJ,GAAah5D,KAAK8+F,UAAUp0F,EAAE0uD,MACnCgpC,sBAAuB13F,EAAE03F,yBAErB4E,EAAelmG,MAAM09C,KACzBx+C,KAAKokG,6BACL/4F,IAAI,QAAE6wD,EAAMgpC,GAAR,QAAgB,CAAClsC,GAAah5D,KAAK8+F,UAAU5iC,IAAQgpC,KAC3D,MAAO,CACLrsC,MAAO,IAAI74D,KAAKu3D,OAAO7iD,UACvBsmD,eACAyoC,aAAczjG,KAAKikG,cACnBjE,YAAahgG,KAAK+jG,aAClBL,eAAgB1jG,KAAKgkG,gBACrBL,WAAY3jG,KAAKkkG,YACjBL,iCAAkC7jG,KAAKmkG,iCACvC6C,eACAjH,qBAAsB//F,KAAKykG,6BAA6B5D,0BAI7C,gBAACx+F,GACd,MAAM,MACJw2D,EADI,aAEJmC,EAFI,aAGJyoC,EAHI,YAIJzD,EAJI,eAKJ0D,EALI,WAMJC,EANI,iCAOJE,EAPI,aAQJmD,EARI,qBASJjH,GACE19F,EACE+0D,EAAY,IACbyB,EAAMxtD,IAAKjN,GAAMA,EAAEwqB,YACnB09E,GAAyBtG,EAAayD,IAErC/pC,EAAQsB,EAAa3vD,IAAKX,IAAD,CAC7Bke,QAASle,EAAEke,QACXglB,SAAUljC,EAAEkjC,SACZurB,IAAK/B,EAAU1sD,EAAEyuD,KACjBC,IAAKhC,EAAU1sD,EAAE0uD,KACjBgpC,sBAAuB13F,EAAE03F,yBAErBwB,EAA8B,IAAItwF,IACtC0zF,EAAa37F,IAAI,QAAE1O,EAAGuoG,GAAL,QAAa,CAAC9tC,EAAUz6D,GAAIuoG,MAEzCpB,EAA8B,IAAIhE,GACtCC,EACAC,GAGF,OAAO,IAAIwD,GACT,IAAIlwF,IAAIulD,EAAMxtD,IAAKjN,GAAM,CAACA,EAAEwqB,QAASxqB,KACrC,IAAIkV,IAAIomD,EAAMruD,IAAKX,GAAM,CAAC+2F,GAAgC/2F,GAAIA,KAC9D+4F,EACAzD,EACA0D,EACAC,EACAC,EACAC,EACAC,IASN,SAAUQ,GACRzrC,EACAmnC,EACAyD,SAEO5qC,EAAMpqD,aACN63F,GAAyBtG,EAAayD,GAO/C,SAAU6C,GACRtG,EACAyD,SAEM9B,GAAW1zE,OACjB,IAAK,MAAM0yE,KAAcX,EAAa,OAC9B4B,GAAkBz7B,MAAM,CAACw6B,eAC/B,IAAK,MAAM,GAACzyE,KAAOu1E,QACX3B,GAAY37B,MAAM,CAACR,MAAOz3C,EAAIyyE,gBAK1C,SAAS4F,GAAgB39E,GAGvB,OAAI4tC,GAAYpqB,UAAUxjB,EAASk5E,GAAY7zE,QACtC6zE,GAAYj0F,KAAKi0F,GAAYvsC,QAAQ3sC,IAE1C4tC,GAAYpqB,UAAUxjB,EAASg5E,GAAkB3zE,QAC5C2zE,GAAkB/zF,KAAK+zF,GAAkBrsC,QAAQ3sC,IAEtD4tC,GAAYpqB,UAAUxjB,EAAS+4E,GAAW1zE,QACrC0zE,GAAW9zF,OAEb,KAGT,SAAU22F,GACRxE,EACAyD,EACAG,EACAxsC,EACA0sC,GAEA,IAAIjB,EAAY,KAChB,IAAK,MAAMlC,KAAcX,EAAa,CACpC,IAAK,MAAM,GAAC9xE,KAAOu1E,EAAc,OACzBhB,GAAat8B,MAAM,CAACR,MAAOz3C,EAAIyyE,eACrC,IAAK,MAAMhB,KAAmBmE,EAA4BhD,iCACxDH,EACAzyE,SAEM+0E,GAA0B98B,MAAM,CACpCw6B,aACAlB,kBAAmBvxE,EACnByxE,oBAGJ,GAAiB,MAAbkD,EAAmB,CACrB,MAAMwC,EAAiB,CAACzC,UAAWjC,EAAYkC,YAAWl9B,MAAOz3C,SAC3Dy0E,GAAqBx8B,MAAMk/B,SAC3BrC,GAAsB78B,MAAMk/B,OAC7B,CACL,MAAMA,EAAiB,CACrBzC,UAAWjC,EACXkC,UAAWlC,EACXh7B,MAAOz3C,SAEH80E,GAAsB78B,MAAMk/B,IAGtCxC,EAAYlC,EAEd,GAAiB,MAAbkC,EAEF,MAAM,IAAI1/F,MAAJ,6CAER,IAAK,MAAM,GAAC+qB,KAAOu1E,EAAc,CAC/B,MAAM4B,EAAiB,CAACzC,UAAWC,EAAWA,YAAWl9B,MAAOz3C,SAC1Dy0E,GAAqBx8B,MAAMk/B,GAEnC,IAAK,MAAMnpC,KAAQ0nC,EAA4Bn1F,aACvC+zF,GAAer8B,MAAMjK,GAE7B,IAAK,MAAMA,KAAQ9E,EACb8E,IAASylC,GAAW1zE,eAGlBs0E,GAAgBp8B,MAAMjK,IAIhC,SAASyqC,GACP/9E,EACA+6E,EACA7E,EACA8E,EACAC,EACAC,GAEA,GAAIxC,GAAkBl1D,UAAUxjB,EAAS25E,GAAgBt0E,QAAS,CAChE,MAAMo4E,EAAc9D,GAAgBhtC,QAAQ3sC,GAEtCwxE,EAAcyJ,EADN7qC,GAAa8lC,EAAUthG,IAAI6oG,KAEzC,OAAO9D,GAAgBJ,WAAWkE,EAAajM,GAEjD,GAAIkH,GAAkBl1D,UAAUxjB,EAAS45E,GAAev0E,QAAS,CAC/D,MAAMo4E,EAAc7D,GAAejtC,QAAQ3sC,GACrCwxE,EAAcphC,GAClB4qC,EAA4BpmG,IAAI6oG,IAElC,OAAO7D,GAAeL,WAAWkE,EAAajM,GAEhD,GAAIkH,GAAkBl1D,UAAUxjB,EAAS65E,GAAax0E,QAAS,CAC7D,MAAM0jC,EAAgB8wC,GAAaltC,QAAQ3sC,GACrCq+E,EACJnD,EAA4B5C,sBAC1BvvC,EAAcgvC,WACdhvC,EAAcgU,QACX,EACP,OAAO88B,GAAaN,WAClBM,GAAaltC,QAAQ3sC,GACrB+6E,EAAWP,KAAO6D,EAA4BtD,EAAWP,MAG7D,GAAI9B,GAAkBl1D,UAAUxjB,EAAS+5E,GAAqB10E,QAC5D,OAAO00E,GAAqBR,WAC1BQ,GAAqBptC,QAAQ3sC,GAC7B+6E,EAAWN,cAGf,GAAI/B,GAAkBl1D,UAAUxjB,EAASo6E,GAAsB/0E,QAC7D,OAAO+0E,GAAsBb,WAC3Ba,GAAsBztC,QAAQ3sC,GAC9B+6E,EAAWL,eAGf,GAAIhC,GAAkBl1D,UAAUxjB,EAASq6E,GAA0Bh1E,QAAS,CAC1E,MAAMi5E,EAA6BjE,GAA0B1tC,QAC3D3sC,GAEIi3E,EACJiE,EAA4B9C,mBAC1BkG,EAA2BvG,WAC3BuG,EAA2BzH,kBAC3ByH,EAA2BvH,kBACxB,EACP,OAAwB,IAApBE,EAA8B,KAC3BoD,GAA0Bd,WAC/Bc,GAA0B1tC,QAAQ3sC,GAClC+6E,EAAWP,KAAOvD,GAGtB,OAAO,KAGF,MAAMsH,GAA+C5nE,GAAS,CACnEs5B,MAAOt5B,EAAQ6nE,IACfpsC,aAAcz7B,EAAQgkE,IACtBE,aAAclkE,EAAQ2jE,IACtBlD,YAAazgE,EAAQA,GACrBmkE,eAAgBnkE,EAChBokE,WAAYR,GACZU,iCAAkCtkE,EAAQA,GAC1CynE,aAAcznE,EAAQA,GAAQ,CAACA,EAAUA,KACzCwgE,qBAAsBP,KAG4BjgE,EAClD4nE,GACA3D,GAAmBhiC,U,6rBC16Bd,MAAM6lC,GAKX/uF,YACEgvF,EACA73B,GACC,iDACDzvE,KAAKunG,KAAOD,EACZtnG,KAAKwnG,QAAU/3B,EAGjBg4B,MAAMvrC,GACJ,MAAM5qD,EAAQ0nD,GAAah5D,KAAKunG,KAAKzI,UAAU5iC,IAC/C,OAAOl8D,KAAKwnG,QAAQl2F,GAGtBo2F,UAAUxuC,GAER,OAD0Bl5D,KAAKynG,MAAMvuC,EAAKC,KACzBD,EAAKkpC,sBAGxBv0F,KAAKquD,GACH,MAAMruD,EAAO7N,KAAKunG,KAAK15F,KAAKquD,GAC5B,GAAY,MAARruD,EACJ,OAAO,SAAIA,GAAX,IAAiBmkE,KAAMhyE,KAAKynG,MAAMvrC,KAG9B,SACJ,IAAK,MAAMruD,KAAQ7N,KAAKunG,KAAK1uC,cACrB,SAAIhrD,GAAV,IAAgBmkE,KAAMhyE,KAAKynG,MAAM55F,EAAK+a,WAIpC,SACJ,IAAK,MAAMswC,KAAQl5D,KAAKunG,KAAK7tC,cACrB,SAAIR,GAAV,IAAgByuC,SAAU3nG,KAAK0nG,UAAUxuC,KAIhC,gBACX,IAAK,MAAM,QAACtwC,EAAD,YAAUwyC,EAAV,GAAuBltC,KAAOluB,KAAKunG,KAAK9D,eAAgB,CACjE,MAAMmE,EAAS5nG,KAAKunG,KAAKvH,cAAc30F,IAAKs1F,IAAD,CACzCh7B,MAAOz3C,EACPyyE,gBAEF,IAAIruB,EAAY,EAChB,MAAMF,EAAkBw1B,EAAOv8F,IAAKX,IAClC,MAAMinD,EAAgB8wC,GAAat8B,MAAMz7D,GACnCm9F,EAAmB7uC,GAAah5D,KAAKunG,KAAKruC,KAAKvH,IAC/CqgB,EAAOhyE,KAAK0nG,UAAUG,GAE5B,OADAv1B,GAAaN,EACNA,SAEH,CAACppD,UAASwyC,cAAagX,kBAAiBJ,KAAMM,EAAWpkD,OAInEmwE,YACE,OAAOr+F,KAAKunG,KAAKlJ,YAGP,aAACniC,GACX,IAAK,MAAMhD,KAAQl5D,KAAKunG,KAAKrO,YAAYh9B,SACjC,SAAIhD,GAAV,IAAgByuC,SAAU3nG,KAAK0nG,UAAUxuC,KAI7C3sD,SAEE,MAAO,CACLu7F,IAFc9nG,KAAKunG,KAAKh7F,SAGxBkjE,OAAQzvE,KAAKwnG,SAIF,gBAACnlG,GACd,OAAO,IAAIglG,GAAU7D,GAAmBhiC,SAASn/D,EAAEylG,KAAMzlG,EAAEotE,SAIxD,MAAM03B,GAAsC5nE,GAAS,CAC1DuoE,IAAKC,GACLt4B,OAAQlwC,EAAQA,KAGL0zB,GAA8B1zB,EACzC4nE,GACAE,GAAU7lC,U,iJC7EL,MAAMwmC,GAA+CzoE,EAC1DA,GAAS,CACPkkE,aAAclkE,EACZA,GAAS,CACPw1C,OAAQx1C,EACRphB,SAAUg7D,GACVnH,KAAMzyC,EACN6yC,gBAAiB7yC,EAAQA,GACzBkzC,YAAarH,GACb68B,uBAAwB1oE,EAAQ6rC,OAGpCizB,UAAWI,KAEZrxF,GAAS86F,GAAc1mC,SAASp0D,IAW5B,MAAM86F,GAMX5vF,YACEmrF,EACApF,GACC,0HACDr+F,KAAKikG,cAAgBR,EACrBzjG,KAAKmoG,WAAa9J,EAClBr+F,KAAKooG,YAAc,GACnBpoG,KAAKqoG,aAAe,GACpB5E,EAAa3kG,QAASyzE,IACpB,IAAK,IAAI51E,EAAI,EAAGA,EAAIqD,KAAKmoG,WAAWznG,OAAQ/D,IAC1CqD,KAAKooG,YAAYzrG,GACf41E,EAAYH,gBAAgBz1E,IAAMqD,KAAKooG,YAAYzrG,IAAM,GAC3DqD,KAAKqoG,aAAa1rG,GAAKsE,GACrBsxE,EAAY01B,uBAAuBtrG,GACnCqD,KAAKqoG,aAAa1rG,IAAMsxE,MAMO,wCACrC6F,EACAuqB,GAEA,IAAIiK,EAAkB,EACtB,OAAOjK,EAAUhzF,IAAK8xF,IACpB,IAAI/uB,EAAQhD,GACZ,KACE0I,EAAQkB,kBAAkBt0E,OAAS,GAAK4nG,GACxCnL,EAASoB,YACPzqB,EAAQkB,kBAAkBszB,GAAiBzyB,iBAC7C/B,EAAQkB,kBAAkBszB,GAAiBzyB,iBACzCsnB,EAASqB,WAEXpwB,EAAQhD,GACNgD,EACA0F,EAAQkB,kBAAkBszB,GAAiB1xB,aAAahlB,QAE1D02C,IAEF,OAAOl6B,IAIXm6B,6BACE,GAAyC,IAArCvoG,KAAK8xE,qBAAqBpxE,OAC5B,MAAM,IAAIyC,MAAJ,wDA4CR,GAzCAnD,KAAK8xE,qBAAqBhzE,QAASL,IAUjC,GATAA,EAAE2zE,gBAAgBtzE,QAAS9B,IACzB,GAAiB,iBAANA,EACT,MAAM,IAAImG,MAAJ,gCAER,GAAInG,EAAI,EACN,MAAM,IAAImG,MAAJ,oCAIY,iBAAX1E,EAAEuzE,KACX,MAAM,IAAI7uE,MAAJ,gCAGR,GAAI1E,EAAE2zE,gBAAgB1xE,SAAWV,KAAKq+F,YAAY39F,OAChD,MAAM,IAAIyC,MAAJ,iDAGR,GAAI1E,EAAEwpG,uBAAuBvnG,SAAWV,KAAKq+F,YAAY39F,OACvD,MAAM,IAAIyC,MAAJ,kDAGR,GAAI/B,GAAI3C,EAAE2zE,mBAAqB3zE,EAAEuzE,KAC/B,MAAM,IAAI7uE,MAAJ,wEAKR,IAAKioE,GAAKA,GAAM3sE,EAAEwpG,wBAAyBxpG,EAAEg0E,aAC3C,MAAM,IAAItvE,MAAJ,2EAKR1E,EAAEwpG,uBAAuBnpG,QAAS2gC,IAChC,GAAIA,EAAI2rC,GACN,MAAM,IAAIjoE,MAAJ,4CAKR/B,GAAIpB,KAAKwoG,wBAA0B,EACrC,MAAM,IAAIrlG,MACR,6HAINslG,cACElK,EACAC,GAEA,OAAO,IAAIkK,GAAwB1oG,KAAMu+F,EAAaC,GAGxD3sB,0BACEF,EACApB,GAEA,MAAMo4B,EAA2B3oG,KAAKmoG,WAAW7kF,OAC9C65E,GAAaA,EAASqB,WAAa7sB,GAGtC,OAAKpB,GAIFo4B,GACDA,EAAyBjoG,QAAU6vE,EAE5B,IAAIm4B,GAAwB1oG,MAAOmH,IAAUwqE,GAE/C,IAAI+2B,GACT1oG,KACA2oG,EACEA,EAAyBjoG,OAAS6vE,GAClCguB,YACF5sB,GAbO,IAAI+2B,GAAwB1oG,MAAOmH,IAAUwqE,GAiBxD0sB,YACE,OAAOr+F,KAAKmoG,WAGd1E,eACE,OAAOzjG,KAAKikG,cAGdnyB,qBACE,OAAO9xE,KAAKikG,cAAc3gF,OAAQivD,GAAgBA,EAAYwC,QAIhEyzB,uBACE,OAAOxoG,KAAKooG,YAGdQ,wBACE,OAAO5oG,KAAKqoG,aAGd97F,SACE,MAAO,CACLk3F,aAAczjG,KAAKikG,cACnB5F,UAAWr+F,KAAKmoG,YAIL,gBAAC/6F,GACd,OAAO,IAAI86F,GAAc96F,EAAKq2F,aAAcr2F,EAAKixF,WAGtB,8BAC3BwK,EACAzwB,GAEA,MAAMimB,EAAY1/F,IAAWkqG,EAAUxK,aAEjCyK,EAAoB,IAAIx1F,IAC9B,IAAK,MAAMi/D,KAAes2B,EAAUpF,eAClCqF,EAAkBp3F,IAAI6gE,EAAYrkD,GAAIqkD,GAGxC,MAAMkxB,EAAe9kG,IACnBy5E,EAAOvE,WAAWxoE,IAAKyoE,IACrB,MAAMi1B,EAAmBD,EAAkBtrG,IAAIs2E,EAAQ31D,SAAS+P,IAChE,IAAK66E,EACH,MAAM,IAAI5lG,MAAJ,wCAC6B2wE,EAAQ31D,SAASjhB,KAD9C,aACuD42E,EAAQ31D,SAAS+P,GADxE,+DAIR,MAAM+5E,EAAyBjoG,KAAKgpG,iCAClCl1B,EACAuqB,GAEF,MAAO,CACLtpB,OAAQjB,EAAQiB,OAChB52D,SAAU21D,EAAQ31D,SAClB6zD,KAAM+2B,EAAiB/2B,KACvBI,gBAAiB22B,EAAiB32B,gBAClCK,YAAaqB,EAAQgB,KACrBmzB,6BAIN,OAAO,IAAIC,GAAczE,EAAcpF,IAUpC,MAAMqK,GAMXpwF,YACEo5D,EACA6sB,EACAC,GACC,0HACD,MAAMyK,EAAoBv3B,EAAc2sB,YACxC,IAAI6K,EAAsBD,EAAkB7lF,UACzC+5E,GAAaoB,GAAepB,EAASoB,cAEX,IAAzB2K,IACFA,EAAsBD,EAAkBvoG,QAE1C,MAAMyoG,EACJ9hF,KACE4hF,EACC9L,GAAaA,EAASqB,WAAaA,GAClC,EAENx+F,KAAKmoG,WAAaxpG,IAChBy/F,GACE6K,EAAkBljG,MAAMmjG,EAAqBC,KAGjDnpG,KAAKikG,cAAgBtlG,IACnB+yE,EAAc+xB,eAAep4F,IAAKknE,IAChC,MAAMH,EAAkBG,EAAYH,gBAAgBrsE,MAClDmjG,EACAC,GAEIlB,EAAyB11B,EAAY01B,uBAAuBliG,MAChEmjG,EACAC,GAEF,MAAO,CACLp0B,OAAQxC,EAAYwC,OACpB52D,SAAUo0D,EAAYp0D,SACtB6zD,KAAMI,EAAgBvvD,OAAO,CAAC3hB,EAAGC,IAAMD,EAAIC,EAAG,GAC9CixE,kBACAK,YAAaw1B,EAAuBplF,OAClC,CAAC3hB,EAAGC,IAAMiqE,GAAMlqE,EAAGC,GAAKiqE,IACxBA,IAEF68B,6BAINjoG,KAAKooG,YAAc12B,EAChB82B,uBACAziG,MAAMmjG,EAAqBC,GAC9BnpG,KAAKqoG,aAAe32B,EACjBk3B,wBACA7iG,MAAMmjG,EAAqBC,GAGhC9K,YACE,OAAOr+F,KAAKmoG,WAGd1E,eACE,OAAOzjG,KAAKikG,cAGdnyB,qBACE,OAAO9xE,KAAKikG,cAAc3gF,OAAQivD,GAAgBA,EAAYwC,QAIhEyzB,uBACE,OAAOxoG,KAAKooG,YAGdQ,wBACE,OAAO5oG,KAAKqoG,cC/VT,SAASe,GACdC,EACA33B,EACAC,GAEA,MAAMsB,EAAco2B,EAASh+F,IAAK5M,GjCgB7B,SACLgyE,EACAiB,EACAC,GAEA,MAAM23B,EAAkBh4B,GAAgBb,GAExC,OADAiB,EAAc62B,6BACPh3B,GAA0B,CAC/Bd,SACAgB,SAAUA,GAAS63B,EAAiB53B,EAAeC,GACnDzjD,GAAIw+C,OiCzBJ68B,CAAkB9qG,EAAGizE,EAAeC,IAOtC,MALqB,CACnBzjD,GAAI8qD,KACJ/F,cACAC,cAAevB,GCWZ,SAAS63B,GACd/4B,EACAo4B,EACAzwB,EACAqxB,EACAC,GAUA,OAkBK,SACLC,EACAjxB,EACA+wB,EACAG,EACAF,GAGA,MAAMG,EAAoBF,EAAcrmF,OACrCziB,GAAMA,EAAE29F,WAAaiL,GAElBK,EAAyBD,EAAkBvmF,OAC9C3mB,GAAMA,EAAE6hG,UAAY9lB,GAEjBqxB,EAAWD,EAAuB/jG,MACtC+jG,EAAuBppG,OAASkpG,EAChCE,EAAuBppG,QAEzB,OAAIgpG,IAA0CK,EAASrpG,OAC9C09F,GACLyL,EAAkB9jG,MAAM8jG,EAAkBnpG,OAAS,IAEhD09F,GAAiB2L,GA/CMC,CADRnB,EAAUxK,YAG9BrlC,GAAgBof,EAAOM,6BAA8BvxE,KACrDsiG,EACAh5B,EAAOm5B,6BACPF,GAE2Br+F,IAAK8xF,IAIhC,MAAMzrB,EAAgBw2B,GAAc+B,uBAClCpB,EACAzwB,GAEI/D,EAAe+0B,GACnB34B,EAAOy5B,mBACPx4B,EACAyrB,EAASqB,WAGX,OADApmB,EAAO3B,gBAAgBpC,GAChBA,I,wBC7CJ,SAAS81B,GAAWjpG,EAAWC,GACpC,OAAOipG,KAAOlpG,EAAEi3E,WAAYh3E,EAAEg3E,WAAY,QCjBrC,MAAM7D,GAAgB,CAC3Bk1B,sBACAJ,uBACAiB,oBC+BK,SACLjyB,EACAywB,GAEA,MAAMyB,EAAgBlyB,EAAOvE,WACvB02B,EAAe,IAAIj3F,IACnB+qF,EAAYwK,EAAUxK,YACtBmM,EAAmC,IAArBnM,EAAU39F,OAC9B,IAAK,MAAM,QACTkoB,EADS,YAETwyC,EAFS,gBAGTgX,KACGy2B,EAAUpF,eACb,GAAI+G,EACFD,EAAa74F,IAAIkX,EAAS,CAACopD,KAAM,GAAI5W,oBAChC,IAAwB,OAApBgX,EACT,MAAM,IAAIjvE,MAAJ,mBACQqzD,GAAYhwD,SAASoiB,GAD7B,iCAIN2hF,EAAa74F,IAAIkX,EAAS,CAACopD,KAAMI,EAAiBhX,gBAGtD,OAGK,SACLkvC,EACAC,EACAlM,GAEA,MAAMoM,EAAoC,IAAIj3F,IACxCk3F,EAAsC,IAAIl3F,IAE1CqgE,EAAW,GACX82B,EAAmB,GAEzB,IAAK,MAAM72B,KAAWw2B,EAAe,CACnCI,EAAiBzpG,IAAI6yE,EAAQ31D,SAASyK,SACtC,IAAK,MAAM+5C,KAASmR,EAAQ31D,SAASyuD,QACnC69B,EAAexpG,IAAI0hE,EAAM/5C,SAE3B,MAAMgiF,EAAOL,EAAa/sG,IAAIs2E,EAAQ31D,SAASyK,SAC/C,GAAY,MAARgiF,EACF,MAAM,IAAIznG,MAAJ,+CACoC2wE,EAAQ31D,SAASjhB,OAG7D,MAAM,KAAC80E,GAAQ44B,EACTC,EAAc,CAAC/2B,UAAS9B,OAAMM,UAAWlxE,GAAI4wE,IACnD6B,EAASpyE,KAAKopG,GAGhB,IAAK,MAAOjiF,EAASgiF,KAASL,EAAan2F,UAAW,CACpD,GAAIs2F,EAAiB57F,IAAI8Z,GAEvB,SAEF,MAAM,KAACopD,EAAD,YAAO5W,GAAewvC,EAC5B,GAAIH,EAAe37F,IAAI8Z,GACrB,MAAM,IAAIzlB,MAAJ,iCACsBqzD,GAAYhwD,SACpCoiB,GAFE,iBAGMwyC,EAHN,8BAMRuvC,EAAiBlpG,KAAK,CACpBkhE,MAAO,CAAC/5C,UAASwyC,eACjB4W,OACAM,UAAWlxE,GAAI4wE,KAGnB,MAAO,CAAC6B,WAAU82B,mBAAkBtM,aAjD7ByM,CAAqBR,EAAeC,EAAclM,K,6rBCzCpD,MAAM0M,GAIXzyF,YAAY0+E,GAA8B,qDACxCh3F,KAAKgrG,SAAWhU,EAAO3b,QACvBr7E,KAAKirG,QAAUjU,EAAOkU,SAClB/3B,GAAOsF,aAAaue,EAAOkU,UAC3B,IAAI/3B,GAGA,aACR,OAAOnzE,KAAKirG,QAMdE,iBAAiBC,GACf,OAAOjB,GAAWnqG,KAAKirG,QAASG,GAOlCC,kBAAkBD,GAChB,OAAOjB,GAAWiB,EAAcprG,KAAKirG,SAmB1B,gBAEX,MAAMK,QAA0BtrG,KAAKurG,eACrC,GAAID,EAAkB3wF,MACpB,OAAO2wF,QAEHtrG,KAAKgrG,SAASzjD,MAAMvnD,KAAKirG,SAI/B,MAAMO,QAA2BxrG,KAAKurG,eACtC,OAAIC,EAAmB7wF,MACd6wF,EAGsC,IAA3CA,EAAmBC,aAAa/qG,OAC3B,SACF8qG,GADL,IAEE7wF,MAAO,+CAIJ6wF,EAcS,qBAChB,IAAIJ,EACJ,IACEA,QAAqBprG,KAAKgrG,SAASU,OACnC,MAAOhhG,GACP,MAAO,CACLiQ,MAAOjQ,EAAE0M,QACTu0F,cAAe,GACfF,aAAc,IAIlB,MAAMA,EAAezrG,KAAKmrG,iBAAiBC,GACrCO,EAAgB3rG,KAAKqrG,kBAAkBD,GAE7C,IAAKO,EAAcjrG,OACjB,MAAO,CAACia,MAAO,KAAMgxF,cAAe,GAAIF,gBAG1C,IAEE,IAAK,MAAMG,KAASH,EAClBL,EAAaz2B,uBAAuBi3B,EAAMl3B,QAI5C,OADA10E,KAAKirG,QAAUG,EACR,CACLzwF,MAAO,KACPgxF,gBACAF,gBAEF,MAAO/gG,GAGP,OADA1K,KAAKirG,cAAgBjrG,KAAKgrG,SAASU,OAC5B,CACL/wF,MAAM,kCAAD,OAAoCjQ,EAAE0M,QAAtC,gCACLu0F,gBACAF,kBCnHD,SAASI,GAAehrG,GAC7B,MAAMgvE,EAAShvE,EAAEmL,MAAM,KACvB,GAAsB,IAAlB6jE,EAAOnvE,OACT,MAAM,IAAIyC,MAAJ,+BAAkCtC,IAE1C,OAjBK,SAAoB8kE,EAAezoE,GACxC,MAAM4uG,EAAa,IAAIt5F,OAAJ,WAJa,gBAIb,MACbu5F,EAAY,IAAIv5F,OAAJ,WAJa,kBAIb,MAClB,IAAKmzD,EAAMjmD,MAAMosF,GACf,MAAM,IAAI3oG,MAAJ,oCAAuCkK,KAAKxB,UAAU85D,KAE9D,IAAKzoE,EAAKwiB,MAAMqsF,GACd,MAAM,IAAI5oG,MAAJ,mCAAsCkK,KAAKxB,UAAU3O,KAE7D,MAAO,CAACyoE,QAAOzoE,QAQR8uG,CAAWn8B,EAAO,GAAIA,EAAO,I,yHCE/B,MAAMo8B,GAGX3zF,YAAY/K,GAAa,6EACvBvN,KAAKksG,OAAS3+F,EAAK4+F,SACnBnsG,KAAKosG,QAAUP,GAAet+F,EAAKw1D,MACnC/iE,KAAKqsG,QAAU9+F,EAAK++F,OAOtBC,mBACE,MAAM,MAAC5mC,EAAD,KAAQzoE,GAAQ8C,KAAKosG,QAC3B,MAAM,GAAN,OAAUH,GAAcO,SAAxB,kBAA0C7mC,EAA1C,YAAmDzoE,GAG3C,aACR,MAAMsS,EAAU,CACd4U,OAAQ,OACRw9B,QAAS,CACP6qD,cAAc,UAAD,OAAYzsG,KAAKksG,SAEhCtsD,KAAMvyC,KAAKxB,UAAU,CACnB6gG,MAhDc,2NAiDdC,UAAW,CACThnC,MAAO3lE,KAAKosG,QAAQzmC,MACpB5C,KAAM/iE,KAAKosG,QAAQlvG,KACnB0vG,WAAW,GAAD,OAAK5sG,KAAKqsG,QAAV,yBAKV5oG,QAAe6L,KAAM,GAAD,OAAI28F,GAAcO,SAAlB,YAAsCh9F,IAE1D,KAACqF,SAAcpR,EAAO2J,OACtBy/F,EAAUh4F,EAAKi4F,WAAWzuG,OAAO0uG,IAEjCC,QAAsB19F,KAAM,GAAD,OAC5BtP,KAAKusG,mBADuB,sBACSM,GACxC,CACEzoF,OAAQ,MACRw9B,QAAS,CACP6qD,cAAc,UAAD,OAAYzsG,KAAKksG,WAI9Be,QAAyBD,EAAc5/F,OAEvC8/F,EAAYjhC,kBAAaghC,EAAiB16D,SAEhD,OAAO4gC,GAAO3gC,MAAM06D,GAGX,YAAC90B,EAAgBhhE,GAC1B,MAAM+1F,EAAa/0B,EAAOE,YAGpB80B,QAA2B99F,KAAM,GAAD,OACjCtP,KAAKusG,mBAD4B,0BACQvsG,KAAKqsG,SACjD,CACEjoF,OAAQ,MACRw9B,QAAS,CACP6qD,cAAc,UAAD,OAAYzsG,KAAKksG,WAM9BmB,SADyBD,EAAmBhgG,QACd/O,OAAOivG,IAGrCC,QAA+Bj+F,KAAM,GAAD,OACrCtP,KAAKusG,mBADgC,cAExC,CACEnoF,OAAQ,OACRw9B,QAAS,CACP6qD,cAAc,UAAD,OAAYzsG,KAAKksG,SAEhCtsD,KAAMvyC,KAAKxB,UAAU,CACnBgyE,KAAM,CACJ,CACEtrC,QAAS46D,EACTxzF,KAAM,OACNkE,KAAM,mBACN/f,KAAM,WAGV0vG,UAAWH,MAKXI,QAA4CF,EAAuBngG,OAGnEsgG,QAA2Bp+F,KAAM,GAAD,OACjCtP,KAAKusG,mBAD4B,gBAEpC,CACEnoF,OAAQ,OACRw9B,QAAS,CACP6qD,cAAc,UAAD,OAAYzsG,KAAKksG,SAEhCtsD,KAAMvyC,KAAKxB,UAAU,CACnBuL,QAAQ,gBAAD,OAAkBA,EAAO,YAAQA,GAAY,IACpDymE,KAAM4vB,EAAqBH,IAC3BK,QAAS,CAACN,GACVvlC,OAAQ,CACN5qE,KAAM,UACN0wG,MAAO,wCAKTC,QAAwBH,EAAmBtgG,aAG3CkC,KAAM,GAAD,OAAItP,KAAKusG,mBAAT,2BAA8CvsG,KAAKqsG,SAAW,CACvEjoF,OAAQ,QACRw9B,QAAS,CACP6qD,cAAc,UAAD,OAAYzsG,KAAKksG,SAEhCtsD,KAAMvyC,KAAKxB,UAAU,CACnByhG,IAAKO,EAAgBP,SCvItB,SAASQ,GAAMC,GACpB,MAAMz0C,EAA2B00C,GAAoBD,GACrD,OAAO,IAAI1gF,KAAKisC,GAAa20C,cAMxB,SAASC,GAAQC,GACtB,GAA4B,iBAAjBA,EACT,MAAM,IAAI3/F,UACR,4DACezE,OAAOokG,KAG1B,MAAMj7C,EAAS7lC,KAAKmlB,MAAM27D,GAC1B,GAAI3iG,OAAOmc,MAAMurC,GACf,MAAM,IAAIk7C,WACR,2FACerkG,OAAOokG,KAG1B,OAAOj7C,EASF,SAAS86C,GAAoB10C,GAClC,MAAM+0C,EAAW7iG,OAAO8tD,GACxB,GACEA,UAEC9tD,OAAO68C,UAAUgmD,GAElB,MAAM,IAAI7/F,UACR,wFACezE,OAAOuvD,KAG1B,OAAO,IAAIjsC,KAAKghF,GAAU/iG,U,GDhCf2gG,G,WACe,0BCwC4B1sE,EACtDA,EACAyuE,IAFK,MAIMM,GAA6C/uE,EACxDA,GAXK,SAA8B4uE,GAGnC,OADAD,GAAQC,GACDA,K,6rBC6BF,MAAMI,GAAyChvE,GAAS,CAC7DivE,UAAWF,GACX1V,OAAQr5D,IAQH,MAAMkvE,GAAqDlvE,GAChE,CACEriC,KAAM8vE,GACN0hC,QAASnvE,EAAQgvE,KAEnB,CACErgF,GAAI6+C,GACJ4hC,+BAAgCpvE,EAChCqvE,+BAAgCrvE,EAAOA,GAb3C,SAA0B1+B,GACxB,GAAIA,EAAI,EAAG,MAAM,IAAIsC,MAAJ,6CAAgDtC,IACjE,OAAOA,OAgBIoyD,GAAuC1zB,EAClDkvE,ICrDK,SAASI,GACdp0B,EACA4uB,GAEA,MAAMyF,EA2HD,SACLr0B,GAEA,MAAM0qB,EAAM5I,GAAoB9hB,EAAGrZ,SAEnC,OADkBs9B,GAAejkB,EAAGtsB,OACnB9iD,IAAI,IAAwB,IAAvB,SAAC8xF,EAAD,MAAWtkC,GAAW,EACtCk2C,EAAY,EAChB,IAAK,MAAM,QAACnmF,KAAYiwC,EACtBk2C,GAAa5J,EAAIv8E,GAEnB,MAAO,CAACu0E,WAAU4R,eArIEC,CAAsBv0B,GAC5C,OAAO4uB,EAASh+F,IAAKolE,IACnB,MAAMQ,EAAYwJ,EAAGtsB,MAAMtgD,KAAK4iE,EAAO7nD,SACvC,GAAiB,MAAbqoD,EACF,MAAM,IAAI9tE,MAAJ,wCAC6BqzD,GAAYhwD,SAASiqE,EAAO7nD,WAGjE,MAAO,CACLqoD,YACAg+B,eAAgBC,GAAgBJ,EAAer+B,EAAOi+B,YAKrD,SAASQ,GACdJ,EACAJ,GAEA,IAAIS,EAAY,EACZvW,EAAS,EAEb,OAAOkW,EAAczjG,IAAI,IAA4B,IAA3B,SAAC8xF,EAAD,UAAW4R,GAAe,EAClD,KACEI,EAAYT,EAAQhuG,QACpBguG,EAAQS,GAAW5Q,aAAepB,EAASoB,aAE3C3F,EAAS8V,EAAQS,GAAWvW,OAC5BuW,IAEF,MAAO,CACLhS,WACAvrC,OAAQm9C,EAAYnW,KAyBnB,MAAMwW,GAAkC54C,GAAYnB,UAAU,CACnE,aACA,OACA,UAGK,SAASg6C,GACdp+B,EACAksB,GAEA,OAAO3mC,GAAY3V,OACjBuuD,GACArlG,OAAOozF,EAASoB,gBACb/nC,GAAYlB,QAAQ2b,EAAUroD,UAI9B,SAAS0mF,GAAUr+B,EAAsBksB,GAC9C,MAAO,CACLv0E,QAASymF,GAAiBp+B,EAAWksB,GACrC7jC,YAAa6jC,EAASoB,YACtBnjC,YAAY,qBAAD,OAAuB6V,EAAU7V,YAAjC,qBAAyD+hC,EAASoB,cAI1E,MAAMgR,GAAkC94C,GAAYpB,UAAU,CACnE,aACA,OACA,UAGWm6C,GAAgCnyG,OAAOuB,OAAO,CACzD2/D,SAAU,EAMVC,UAAW,IAGN,SAASixC,GACdx+B,EACAksB,GAEA,OAAO1mC,GAAY5V,OACjB0uD,GACAxlG,OAAOozF,EAASoB,gBACb/nC,GAAYlB,QAAQ2b,EAAUroD,UAI9B,SAAS8mF,GAAUz+B,EAAsBksB,GAC9C,MAAO,CACLhkC,IAAKk2C,GAAiBp+B,EAAWksB,GACjC/jC,IAAK6X,EAAUroD,QACfA,QAAS6mF,GAAiBx+B,EAAWksB,GACrC7jC,YAAa6jC,EAASoB,aCpKnB,MAAMoR,GAAiDpwE,EAAU,CACtE,WA4BK,SAASqwE,GACdn1B,EACAjL,GAaA,GA6GK,SACLqgC,GAEA,IAAK,IAAIlzG,EAAI,EAAGA,EAAIkzG,EAAUnvG,OAAQ/D,IACpC,IAAK,IAAI0F,EAAI1F,EAAG0F,EAAIwtG,EAAUnvG,OAAQ2B,IACpC,GAAI1F,IAAM0F,EAAV,CAKA,GAAIm0D,GAAYpqB,UAAUyjE,EAAUlzG,GAAIkzG,EAAUxtG,IAChD,OAAO,EAET,GAAIm0D,GAAYpqB,UAAUyjE,EAAUxtG,GAAIwtG,EAAUlzG,IAChD,OAAO,EAIb,OAAO,EA/HHmzG,CAAmBtgC,EAAOp7D,QAAQ/I,IAAKxK,GAAMA,EAAEotB,SACjD,MAAM,IAAI9qB,MAAJ,mCAER,GAA8B,WAA1BqsE,EAAOugC,eACT,MAAM,IAAI5sG,MAAJ,oCAIR,OA6EK,SACLs3E,EACAu1B,GAEA,MAAMC,EAAa51B,GAAaI,EAAGrZ,SACnC,IAAK,MAAM,QAACx4C,EAAD,OAAUgwE,KAAWoX,EAAa,CAC3C,MAAME,EAAiBl3C,GACrByhB,EAAGrZ,QAAQP,YAAYrjE,IAAIorB,GAC3B,GAEFqnF,EAAWpvC,YAAYnvD,IAAIkX,EAASsnF,EAAiBtX,GAGvD,MAAO,CAACzqC,MAAOssB,EAAGtsB,MAAM58B,OAAQ6vC,QAAS6uC,GA1FlCE,CAAe11B,EAejB,SACLA,EACAjL,GAEA,MAAM4gC,EAAY7T,GAAoB9hB,EAAGrZ,SACnC97C,EAAYo5E,GAAejkB,EAAGtsB,OAC9BkiD,EAAyD7gC,EAAOp7D,QAAQ/I,IAC3EiJ,GAWE,SAA8BoM,GAKnC,MAAM,UAAC0vF,EAAD,UAAY9qF,EAAZ,MAAuBhR,GAASoM,GAChC,QAACguF,EAAD,OAAUzgF,GAAU3Z,EAG1B,IAgFF,SAAuBy7D,GACrB,IAAIjrD,GAAQ3d,IACZ,IAAK,MAAMtG,KAAKkvE,EAAI,CAClB,GAAIlvE,EAAIikB,EACN,OAAO,EAETA,EAAOjkB,EAET,OAAO,EAxFFyvG,CAAc5B,EAAQrjG,IAAKxK,GAAMA,EAAE09F,cACtC,MAAM,IAAIp7F,MAAJ,qBACUqzD,GAAYhwD,SAASynB,GAD/B,8BAKR,MAAM3L,EAAU,GAChB,IAAK,MAAM,SAAC66E,EAAD,MAAWtkC,KAAUvzC,EAAW,CACzC,MAAMirF,EAAcC,GAAwB9B,EAASvR,EAASoB,aAExDkS,EADY53C,EAAMxtD,IAAKjN,GAAMA,EAAEwqB,SACDtF,OAAQpiB,GAC1Cs1D,GAAYpqB,UAAUlrC,EAAG+sB,IAMrByiF,EAAaC,GAJIF,EAAkBplG,IAAKnK,IAAD,CAC3C0nB,QAAS1nB,EACT03F,OAAQwX,EAAUlvG,MAEwCqvG,GAE5D,GAAmB,IAAfG,EAGF,IAAK,MAAM9nF,KAAW6nF,EACpBnuF,EAAQ7gB,KAAK,CAACmnB,UAASgwE,OAAQ8X,IAIrC,OAAOpuF,EA/CMsuF,CAAqB,CAACR,YAAW9qF,YAAWhR,WAEzD,MAAO,GAAG9R,UAAU6tG,GAzBAQ,CAAoBp2B,EAAIjL,IAyIvC,SAASghC,GACd9B,EACA7xC,GAEA,MAAMi0C,EAAgBhxF,KACpB4uF,EACCqC,GAAWA,EAAOxS,aAAe1hC,GAEpC,OAAOi0C,EAAgBA,EAAcP,YAAcppG,IAQ9C,SAASwpG,GACdK,EACAT,GAEA,MAAMU,EAAc7vG,GAAI4vG,EAAME,GAAOA,EAAGtY,QACxC,OAAIqY,GAAeV,EACV,EAEAA,EAAcU,E,6rBCrKlB91B,eAAeg2B,GACpBrJ,GAEqB,IADrBt4F,EACoB,uDADgB,GAEpC,MAAM4hG,EAAkC,CACtC5V,cAxDkC,IAyDlCG,qBAxDyC,KAyDzCG,aAxDkC,GAyDlCL,SAxD2B,GA0D7BjsF,EAAO,SAAO4hG,GAAmB5hG,GACjC,MAAM6hG,EAAOvJ,EAAIlB,gBACX3tB,EAAyB,CAC7BjqD,MAAOqiF,EAAKriF,MACZurE,IAAKF,GAAoBgX,EAAKj6C,UAAU12D,QACxCs6F,KAAMX,GAAoBgX,EAAKj6C,UAAU12D,QACzCu6F,MAAO,GAEHqW,QAA2BlW,GAA2BniB,EAAQzpE,GAC9D2qF,EAAKD,GACTmX,EAAKj6C,UACLk6C,EAAmBnX,IAGfoX,EAAgBnwG,GACpBN,MAAM09C,KAAKspD,EAAIjvC,MAAM,CAAC5qC,OAAQ2zE,GAAkB3zE,UAAU5iB,IAAKjN,GAC7D46D,GAAamhC,EAAG38F,IAAIY,EAAEwqB,YAG1B,IAAI08E,EAAkB,EACtB,IAAK,MAAOjE,KAAMzI,KAAWkP,EAAIjvC,QAC/BysC,GAAmB1M,EAErB,MAAMnpB,EAAS4hC,EAAKj6C,UAAU/rD,IAC5B,CAACyV,EAAGnkB,IAAO20G,EAAmBnX,GAAGx9F,GAAK40G,EAAiBjM,GAEzD,OAAO,IAAI+B,GAAUS,EAAKr4B,GCA5B,MAAM+hC,GAAmBjyE,EAAOA,EAAWnhC,IACzC,GAAIA,EAAI,GAAKA,EAAI,EACf,MAAM,IAAI+E,MAAJ,qBAAwB/E,EAAxB,2BAER,OAAOA,IAGIqzG,GAAyElyE,EACpFA,GACE,CACEmyE,oBAAqB1kC,GACrB0yB,WAAYngE,EACVA,GACE,CACEoyE,kBAAmB3kC,GACnB4yB,YAAargE,EACXA,GAAS,CACPqyE,UAAWtD,GACXuD,kBAAmBL,OAIzB,CACE7R,gBAAiBzzB,OAKzB,CAACuzB,kBAAmBvzB,MCzFjBiP,eAAe22B,GAAS/2F,GAC7B,IAAI2pF,EAAgBlqB,GAClB3f,GAAM9/C,EAAMg3F,cACZh3F,EAAMi3F,iBAIR,MAAMC,EAAsBl3F,EAAMm3F,aAAa7mG,IAAKpO,GLyE/C,SACLk1G,EACA/5B,GAEA,MAAMg6B,EAAQD,EAAIjkF,GAClB,GAAa,MAATkkF,EAAe,CACjB,MAAMp4B,EAAkB5B,EAAOjE,cAAcg+B,EAAIj1G,MACjD,GAAuB,MAAnB88E,EAAyB,CAG3B,MAAM9rD,EAAK8rD,EAAgB77D,SAAS+P,GACpC,OAAO,SAAIikF,GAAX,IAAgBjkF,OACX,CAEL,MAAMA,EAAKkqD,EAAO3V,eAAe,UAAW0vC,EAAIj1G,MAC5Ci1G,EAAIxD,gCACNv2B,EAAO9B,SAASpoD,GAElB,MAAM0qE,EAASuZ,EAAIvD,+BACnB,OAAc,MAAVhW,GAAmBuZ,EAAIzD,QAAQhuG,OAY5B,SAAIyxG,GAAX,IAAgBjkF,OAXP,SACFikF,GADL,IAEEjkF,KACAwgF,QAAS,CACP,CACE,UAAaZ,GAAMzgF,KAAK/D,OACxBsvE,cAOL,CAEL,MAAMz6E,EAAWi6D,EAAOtE,QAAQs+B,GAAOj0F,SACvC,GAAIA,EAASjhB,OAASi1G,EAAIj1G,KACxB,MAAM,IAAIiG,MACR,oDAA6CgvG,EAAIj1G,KAAjD,mCACsBihB,EAASjhB,KAD/B,oHAKJ,OAAOi1G,GKlHPr4B,CAAqB78E,EAAG8d,EAAMq9D,SAE1BtL,EAAa/xD,EAAMq9D,OAAOvE,WAAWxoE,IAAKnK,GAAMA,EAAEid,UAClDk0F,EAAkB3N,EAAcv2C,MAAMwN,cAC1C22C,GAAqBxlC,IAEvB43B,EAAgB,CACdv2C,MAAOkkD,EACPjxC,QAASsjC,EAActjC,SAErBrmD,EAAMw3F,gBACR7N,EAAgBkL,GAAYlL,EAAe3pF,EAAMw3F,gBASnD7N,EAAgB7pC,GAAM,CAAC6pC,EJoClB,SACL8N,GAEA,MAAMrkD,EAAQ,IAAI4I,GACZqK,EAAUqxC,KAChB,IAAK,MAAM,UAACxhC,EAAD,eAAYg+B,KAAmBuD,EAAY,CACpDrkD,EAAMkK,QAAQ4Y,GACd,IAAK,MAAM,SAACksB,EAAD,OAAWvrC,KAAWq9C,EAChB,IAAXr9C,IAGJzD,EAAMkK,QAAQi3C,GAAUr+B,EAAWksB,IACnChvC,EAAM8K,QAAQy2C,GAAUz+B,EAAWksB,IACnC/7B,EAAQP,YAAYnvD,IAAI29F,GAAiBp+B,EAAWksB,GAAWvrC,IAInE,OADAwP,EAAQN,YAAYpvD,IAAI69F,GAAmBC,IACpC,CAACrhD,QAAOiT,WIxDIsxC,CACjB7D,GAAoBnK,EAJIuN,EAAoB5mG,IAAKpO,GLwG9C,SACL+5F,EACA5e,GAEA,MAAM,GAAClqD,GAAM8oE,EACb,GAAU,MAAN9oE,EACF,MAAM,IAAI/qB,MAAJ,mGASR,MAAO,CAACylB,QALQwvD,EAAOtE,QAAQ5lD,GAAI/P,SAASyK,QAK3B8lF,QAJD1X,EAAO0X,QAAQrjG,IAAI,QAAC,UAACmjG,EAAD,OAAY5V,GAAb,QAA0B,CAC3DA,SACA2F,YAAa2P,GAAQM,OKpHrBmE,CAAc11G,EAAG8d,EAAMq9D,aAOzB,MAAMw6B,GDzBN5b,EC0BEj8E,EAAMglF,qBDzBR3nB,EC0BEr9D,EAAMq9D,ODxBD4e,EAAO3rF,IAAI,IAA2D,IAAD,MAAzD,kBAACo0F,EAAD,oBAAoBiS,EAApB,WAAyChS,GAAgB,EAC1E,MAAMxxE,EAAKuxE,EACPrnB,EAAOtE,QAAQ2rB,GAAmBthF,SAAS+P,GADnB,UAExBkqD,EAAOjE,cAAcu9B,UAFG,aAExB,EAA2CvzF,SAAS+P,GACxD,IAAKA,EAAI,MAAM,IAAI/qB,MAAJ,UAAauuG,EAAb,qBAEf,MAAO,CACLjS,kBAAmBvxE,EACnBwjF,oBAHWt5B,EAAOtE,QAAQ5lD,GAAI/P,SAASjhB,KAIvCwiG,WAAYA,EAAWr0F,IACrB,IAAwD,IAAD,MAAtD,gBAACs0F,EAAD,kBAAkBgS,EAAlB,YAAqC/R,GAAiB,EACrD,MAAM1xE,EAAKyxE,EACPvnB,EAAOtE,QAAQ6rB,GAAiBxhF,SAAS+P,GADnB,UAEtBkqD,EAAOjE,cAAcw9B,UAFC,aAEtB,EAAyCxzF,SAAS+P,GACtD,IAAKA,EAAI,MAAM,IAAI/qB,MAAJ,UAAawuG,EAAb,qBAEf,MAAO,CACLhS,gBAAiBzxE,EACjByjF,kBAHWv5B,EAAOtE,QAAQ5lD,GAAI/P,SAASjhB,KAIvC0iG,qBAvBL,IACL5I,EACA5e,EC6BA,MAAMywB,QFhDD,SACLnE,EACAtsB,GAIqB,IAHrB2nB,EAGoB,uDAH0B,GAC9C8S,EAEoB,uDAFkD,GACtEC,EACoB,uCACpB,MAAMC,EAAkD,CACtD9X,MAjBkB,GAkBlBmI,KAjBiB,GAkBjBC,aAjB0B,GAkB1BC,cAjB2B,IAoBvBK,EAAwC,SACzCoP,GACAF,GAECpP,EAAerrB,EAAOvE,WAAWxoE,IAAI,QAAC,SAAC8S,GAAF,QAAiB,CAC1Di9C,YAAaj9C,EAASjhB,KACtB0rB,QAASzK,EAASyK,QAClBsF,GAAI/P,EAAS+P,MAETmwE,EAAYQ,GAAe6F,EAAcv2C,OACzC25C,EAAMtE,GAAmBwP,IAAI,CACjCtO,gBACAjB,eACAE,aACAtF,YACA0B,yBAEF,OAAOoR,GAA2BrJ,EAAKgL,GEiBfG,CACtBvO,EACA3pF,EAAMq9D,ODFH,SACL4e,GAEA,OAAOA,EAAO3rF,IAAI,IAAsC,IAArC,kBAACo0F,EAAD,WAAoBC,GAAgB,EACrD,IAAKD,EACH,MAAM,IAAIt8F,MAAM,yDAClB,MAAO,CACLs8F,oBACAC,WAAYA,EAAWr0F,IAAI,IAAqC,IAApC,gBAACs0F,EAAD,YAAkBC,GAAiB,EAC7D,IAAKD,EACH,MAAM,IAAIx8F,MACR,yDAEJ,MAAO,CACLw8F,kBACAC,YAAaA,EAAYv0F,IAAI,QAAC,UAACumG,EAAD,kBAAYC,GAAb,QAAqC,CAChEv4C,YAAa40C,GAAQ0D,GACrB/R,gBAAiBgS,WCdzBhR,CAAuB+R,IAEzB,MAAO,CACL/J,YACAn3B,cAAew2B,GAAc+B,uBAC3BpB,EACA9tF,EAAMq9D,QAERA,OAAQr9D,EAAMq9D,OACd85B,aAAcD,EACdlS,qBAAsB6S,G,+HCjGZzlG,EAAQ,IA6Ef,MAAM+lG,GAGX56F,cAAe,0DACbtY,KAAKmzG,aAAe,IAAI3/F,IACxBxT,KAAKozG,SAAW,GAElBpoG,MAAMqoG,GACJ,GAAIrzG,KAAKmzG,aAAarkG,IAAIukG,GACxB,MAAM,IAAIlwG,MAAJ,eAAkBkwG,EAAlB,oBAIR,OAFArzG,KAAKmzG,aAAalyG,IAAIoyG,GACtBrzG,KAAKozG,SAAS3xG,KAAK,CAAC4xG,SAAQ15F,KAAM,UAC3B3Z,KAETszG,OAAOD,GACL,IAAKrzG,KAAKmzG,aAAarkG,IAAIukG,GACzB,MAAM,IAAIlwG,MAAJ,eAAkBkwG,EAAlB,gBAIR,OAFArzG,KAAKmzG,aAAaryD,OAAOuyD,GACzBrzG,KAAKozG,SAAS3xG,KAAK,CAAC4xG,SAAQ15F,KAAM,WAC3B3Z,KAEToU,UACE,OAAOpU,KAAKozG,SAASrtG,QAEvBwtG,cACE,OAAOzyG,MAAM09C,KAAKx+C,KAAKmzG,eCjGpB,MAAMK,GAGXl7F,YAAYm7F,G,iBAA0C,G,EAAA,U,EAAA,M,sFACpDzzG,KAAKyzG,KAAOA,EAGdtb,eAAe5oF,GACb,IAAK,MAAMmkG,KAAO1zG,KAAKyzG,KAAM,CAC3B,MAAMv3C,EAAOw3C,EAAIvb,eAAe5oF,GAChC,GAAI2sD,EAAM,OAAOA,ICgBhBif,eAAehtB,GACpBpzC,EAGA44F,GAEuB,IADvBC,EACsB,uDADO,IAAIV,GAGjC,MAAMW,EAAM,GACZ,IAAK,MAAM,SAAC5c,EAAD,OAAW6c,EAAX,iBAAmBC,KAAqBh5F,EAAMi5F,QAAS,CAChE,MAAMC,EAAI,iCAA6Bhd,GACvC2c,EAAa5oG,MAAMipG,GACnB,MAAMC,QAAWJ,EAAOK,kBAAkBJ,EAAkBH,GAC5DC,EAAIpyG,KAAKyyG,GACTN,EAAaN,OAAOW,GAEtBJ,EAAIpyG,KAAK2yG,GAAoCr5F,EAAMq9D,SACnD,MAAM87B,EAAK,IAAIV,GAA2BK,GAEpC9B,EAAe,GACrB,IAAK,MAAM,SAAC9a,EAAD,OAAW6c,EAAX,iBAAmBC,KAAqBh5F,EAAMi5F,QACvD,IAAKL,GAASA,EAAM5vF,SAASkzE,GAAW,CACtC,MAAMgd,EAAI,+BAA2Bhd,GACrC2c,EAAa5oG,MAAMipG,GACnBlC,EAAatwG,KAAK,CAChBw1F,SAAUA,EACVyN,oBAAqBoP,EAAO3lD,MAAM4lD,EAAkBG,EAAIN,KAE1D,MAAM9mC,QAAmBgnC,EAAOhnC,WAC9BinC,EACAH,GAEF,IAAK,MAAMS,KAAoBvnC,EAC7BgN,GAAqB/+D,EAAMq9D,OAAQi8B,GAErCT,EAAaN,OAAOW,GAGxB,MAAO,CACLlC,eACA35B,OAAQr9D,EAAMq9D,QAWX,SAASg8B,GACdh8B,GAEA,MAAMk8B,EAAoB,IAAIhhG,IAC5B8kE,EACGvE,WACAxoE,IAAKnK,GAAM,CAACA,EAAEid,SAASjhB,KAAK0N,cAAe1J,EAAEid,SAASyK,WAM3D,MAAO,CAACuvE,eAJR,SAAwBoc,GACtB,MAAMC,EAAUD,EAAkB9hG,QAAQ,IAAK,IAAI7H,cACnD,OAAO0pG,EAAkB92G,IAAIg3G,KClFjC,MAAMC,GAA2C,CAC/C,I,MAAOziE,gBAGF,SAAS0iE,GACdC,GAEA,MAAMC,EAAcH,GAAoBE,GACxC,IAAKC,EACH,MAAM,IAAIzxG,MACR,uFAEJ,OAAOyxG,EAGF,MAAM3hD,GAAqC1zB,EAChDA,EAAU,CAAC,QACVo1E,IAAD,CACEz3G,KAAMy3G,EACNE,SAAUH,GAAyBC,MCC1B1hD,GAAgC1zB,GAC3C,GACA,CACE2qE,mBAAoB3qE,EAA0B6xC,IAC9Cw4B,6BAA8BrqE,EAC9Bu1E,iBAAkB1kC,GAClB2kC,gBAAiB3kC,GACjB4kC,cAAe5kC,GACf6kC,sBAAuB11E,EACvB21E,aAAcloC,GACdmoC,qBAAsB51E,EACtBq1E,YAAaQ,KCjBVj6B,eAAe/M,GAAMrzD,GAS1B,MAAO,CAACu5D,cAPck1B,GD2BjB,SAA8B3oG,GACnC,MAAMqpG,EAAqBlxC,GAAgBn4D,EAAEqpG,mBAAoB,IAC3DmL,EAAgBC,GAAmB,GACnCR,EAAmB97C,GAAgBn4D,EAAEi0G,iBAAkBO,GACvDL,EAAgBh8C,GAAgBn4D,EAAEm0G,cAAeK,GACjDN,EAAkB/7C,GAAgBn4D,EAAEk0G,gBAAiBM,GAErDE,EAA+B,GAQrC,GAPInqC,GAAK0pC,EAAkB1pC,KACzBmqC,EAA6B9zG,KAAK,CAChC+tE,OAAQslC,EACRxkC,WAAY,YACZC,qBAAsB,IAGtBnF,GAAK4pC,EAAe5pC,IAAS,CAC/B,MAAM,sBAAC6pC,GAAyBp0G,EAChC,GAA6B,MAAzBo0G,EACF,MAAM,IAAI9xG,MAAJ,wDAERoyG,EAA6B9zG,KAAK,CAChC+tE,OAAQwlC,EACR1kC,WAAY,SACZO,SAAUC,GAAWmkC,KAGrB7pC,GAAK2pC,EAAiB3pC,KACxBmqC,EAA6B9zG,KAAK,CAChC+tE,OAAQulC,EACRzkC,WAAY,WACZC,qBAAsB,IAG1B,MAAMq5B,EAA+B5wC,GACnCn4D,EAAE+oG,6BACFziG,KAEF,MAAO,CACL+iG,mBAAoBA,EAAmB1nG,OAAO+yG,GAC9C3L,gCCnEyB4L,CAAqBz6F,EAAM06F,aAGpD16F,EAAM8tF,UACN9tF,EAAMq9D,QACL/qD,KAAK/D,MACNvO,EAAM2uF,wCAAyC,GAE1BtxB,OAAQr9D,EAAMq9D,QCrBhC+C,eAAeu6B,GACpBze,EACA5b,GAEA,MAAMs6B,EAAU,CACd,oBAAqBC,GACrB,uBAAwBC,GACxB,qBAAsBC,GACtB,yBAA0BC,GAC1B,sBAAuBC,IAEzB,GAAIL,EAAQ1e,EAASzwF,YAAa,OAAOmvG,EAAQ1e,EAASzwF,YAC1D,G1CGmC,a0CH/ByvF,GAAegB,GACjB,aAAa,IAAIF,GAAe,CAACE,WAAU5b,YAAUnc,cACvD,KAAM,oBAAsB7xD,KAAKxB,UAAUorF,GCuB7C,MAAMgf,GAA6C12E,GAAS,CAC1DivE,UAAWF,GACX9+B,OAAQjwC,IAGG22E,GAA6C32E,GAAS,CACjEwwE,eAAgBJ,GAChBqE,QAASz0E,GAAOA,EAAQ02E,IAAkBE,MAG5C,SAASC,GAAiB33G,GACxB,MAAO,CAAC8xG,YAAa9xG,EAAE+wE,OAAQ+uB,YAAa2P,GAAQzvG,EAAE+vG,YCpDjD,MAAM0H,GAAyClmC,GAAS,CAC7DqmC,eAAgBrmC,EAAQinB,MCkBX,SAASgD,GAAUp8E,GAGhC,GAmBF,SAAoBA,GAClB,GAAoB,iBAATA,EAGT,MAAM,IAAIrP,UAAU,mCAAqCzE,OAAO8T,IAzBlEy4F,CAAWz4F,GAES,IAAhBA,EAAKnd,OAAc,MAAO,IAE9B,MAAM61G,EAAa14F,EAAK1C,WAAW,KAAOq7F,GACpCC,EACJ54F,EAAK1C,WAAW0C,EAAKnd,OAAS,KAAO81G,GAQvC,OAHoB,KAFpB34F,EAkCF,SACEA,EACA64F,EACAC,EACAC,GAUA,IAkBItxE,EAlBAvS,EAAM,GACN8jF,EAAoB,EAepBC,GAAa,EACbC,EAAO,EA4BX,IAAK,IAAIp6G,EAAI,EAAGA,GAAKkhB,EAAKnd,SAAU/D,EAAG,CACrC,GAAIA,EAAIkhB,EAAKnd,OAAQ4kC,EAAOznB,EAAK1C,WAAWxe,OAWvC,IAAIi6G,EAAiBtxE,GAAa,OAAOvS,EACzCuS,EAAOkxE,GAEZ,GAAII,EAAgBtxE,GAAO,CACzB,GAAIwxE,IAAcn6G,EAAI,GAAc,IAATo6G,QAEpB,GAAID,IAAcn6G,EAAI,GAAc,IAATo6G,EAAY,CAC5C,GACEhkF,EAAIryB,OAAS,GACS,IAAtBm2G,GAzGe,KA0Gf9jF,EAAI5X,WAAW4X,EAAIryB,OAAS,IA1Gb,KA2GfqyB,EAAI5X,WAAW4X,EAAIryB,OAAS,GAC5B,CACA,GAAIqyB,EAAIryB,OAAS,EAAG,CAClB,MAAMs2G,EAAiBjkF,EAAInL,YAAY+uF,GAMvC,GAAIK,IAAmBjkF,EAAIryB,OAAS,EAAG,EACb,IAApBs2G,GAGFjkF,EAAM,GACN8jF,EAAoB,IAsBpB9jF,EAAMA,EAAIhtB,MAAM,EAAGixG,GACnBH,EAAoB9jF,EAAIryB,OAAS,EAAIqyB,EAAInL,YAAY+uF,IAIvDG,EAAYn6G,EACZo6G,EAAO,EAGP,SAQA,MAAM,IAAI5zG,MACR,mCACEkK,KAAKxB,UAAU,CAACgS,OAAM64F,iBAAgBC,eAGvC,GAAmB,IAAf5jF,EAAIryB,QAA+B,IAAfqyB,EAAIryB,OAAc,CAG/CqyB,EAAM,GACN8jF,EAAoB,EAGpBC,EAAYn6G,EACZo6G,EAAO,EAGP,UAGAL,IAaE3jF,EAAIryB,OAAS,EAAGqyB,GAAG,UAAO4jF,EAAP,MAMlB5jF,EAAM,KACX8jF,EAAoB,QA+BlB9jF,EAAIryB,OAAS,EAAGqyB,GAAO4jF,EAAY94F,EAAK9X,MAAM+wG,EAAY,EAAGn6G,GAM5Do2B,EAAMlV,EAAK9X,MAAM+wG,EAAY,EAAGn6G,GACrCk6G,EAAoBl6G,EAAIm6G,EAAY,EAItCA,EAAYn6G,EACZo6G,EAAO,OAlPY,KAqPVzxE,IAA+B,IAAVyxE,IAC5BA,EAQFA,GAAQ,EAkBZ,OAAOhkF,EAzRAkkF,CAAgBp5F,GAAO04F,EAAY,IAAKW,KAEtCx2G,QAAiB61G,IAAY14F,EAAO,KACzCA,EAAKnd,OAAS,GAAK+1G,IAAmB54F,GAAQ,KAE9C04F,EAAmB,IAAM14F,EACtBA,EAGT,MACM24F,GAA6B,GAUnC,SAASU,GAAqB5xE,GAC5B,OAAOA,IAASkxE,GCpDX,MAAMW,GAEX7+F,YAAY9W,G,iBAAe,G,EAAA,W,EAAA,M,sFACzBxB,KAAK61F,MAAQoE,GAAUz4F,GAMhB,UAACs0F,GACR,MAAMj4E,EAAOo8E,GAAU7C,gBAASp3F,KAAK61F,MAAOC,IAC5C,IACGj4E,EAAK2/B,WAAWx9C,KAAK61F,SACrBh4E,EAAK2/B,WAAW,OAAS+4D,sBAAW14F,IAAwB,MAAf7d,KAAK61F,OAEnD,MAAM,IAAI1yF,MAAJ,yCAC8B0a,EAD9B,gCAC0D7d,KAAK61F,QAEvE,MAAMpyF,QAAe6L,KAAMuO,GAC3B,IAAKpa,EAAO0gD,GAAI,CACd,MAAMxpC,EAAQ,IAAIxX,MAAJ,yBACM2yF,EADN,aACmBryF,EAAOugD,OAD1B,YACoCvgD,EAAOygD,aAGzD,MADAvpC,EAAMgF,OAASlc,EAAOugD,OAChBrpC,EAGR,OAAO,IAAIhI,iBAAiBlP,EAAOw5C,gB,yHCqBhC,MAAMm6D,GAA0B51G,GACrC,IAAI61G,GAAa,IAAIzhB,GAAep0F,IACzB81G,GAAyB91G,GACpC,IAAI61G,GAAa,IAAIF,GAAc31G,IAE/B+1G,GAA4C,CAChD,SACA,qBAEIC,GAAgD,CACpD,SACA,gBAEIC,GAAsC,CAAC,SAAU,sBACjDC,GAAqC,CAAC,SAAU,cAChDC,GAAwC,CAC5C,SACA,wBAEIC,GAAqD,CACzD,SACA,6BAEIC,GAAmD,CAAC,mBACpDC,GAAsC,CAAC,OAAQ,eAC/CC,GAAyC,CAAC,SAAU,aACpDC,GAA6C,CAAC,SAAU,iBACxDC,GAA2C,CAAC,SAAU,UACtDC,GAAsC,CAAC,SAStC,MAAMb,GAIX/+F,YAAY+iE,GAAuB,yDACjCr7E,KAAKgrG,SAAW3vB,EAChBr7E,KAAKm4G,YAAc,IAAI1iB,GAAWz1F,KAAKgrG,UAGrB,uBAClB,KAAM,sBAGe,0BACrB,MACE+G,EACA35B,EACA45B,EACAE,EACAK,EACAxS,SACQxsF,QAAQoQ,IAAI,CACpB3jB,KAAKo4G,mBACLp4G,KAAKq4G,aACLr4G,KAAKs4G,sBACLt4G,KAAKu4G,mBACLv4G,KAAKw4G,oBACLx4G,KAAKy4G,6BAEP,MAAO,CACL1G,eACA35B,SACA45B,kBACAE,eACAK,gBACAxS,wBAIgB,uBAClB,MACE8I,EACAzwB,EACAq9B,EACAiD,SACQnlG,QAAQoQ,IAAI,CACpB3jB,KAAK24G,gBACL34G,KAAKq4G,aACLr4G,KAAK44G,kBACL54G,KAAK64G,wBAEP,MAAO,CACLhQ,YACAzwB,SACAq9B,cACAiD,mBAImB,0BACrB,MAAO7P,EAAWzwB,SAAgB7kE,QAAQoQ,IAAI,CAC5C3jB,KAAK24G,gBACL34G,KAAKq4G,eAEP,MAAO,CACLxP,YACAzwB,UAI4B,iCAAC6e,GAC/B,MAAM6hB,EAAa1hB,gBACjBp3F,KAAK+4G,2BAA2B9hB,MAC7BihB,IAOL,OAAOpgB,SALiB1c,GACtBp7E,KAAKm4G,YACLW,EACE/gB,IAKa,sBACjB,MAAMihB,EAAgB5hB,mBAAY2gB,IAClC,aAAa38B,GACXp7E,KAAKm4G,YACLa,EA7FqB,GA8FrBC,IACAhzE,MAAM,IACNm1C,GAASp7E,KAAKgrG,SAAUgO,EAjGF,QAiG+BC,KAIlC,0BACrB,MAAMp7F,EAAOu5E,mBAAY4gB,IACzB,OAAO58B,GACLp7E,KAAKm4G,YACLt6F,EAxGqB,GAyGrBmqF,IACA/hE,MAAM,IACNm1C,GAASp7E,KAAKgrG,SAAUntF,EA5GF,QA4GsBmqF,KAIhC,mBACd,MAAMkR,EAAa9hB,mBAAY0gB,IAC/B,OrD7HG38B,eACLE,EACAx9D,EACA29D,GAEA,IACE,OAAO/+D,SAAa4+D,EAAQ79E,IAAIqgB,IAChC,MAAOnT,GACP,GAAIwwE,GAASxwE,GACX,OAAO8wE,IAEP,MAAM9wE;wEqDkHDyuG,CAAoBn5G,KAAKgrG,SAAUkO,EAAY,KACpD,IAAI/lC,IAASmF,aACb52B,KAAMj+C,GAAW0vE,GAAO3gC,MAAM/uC,IAGb,wBACnB,MAAM21G,EAAkBhiB,mBAAYsgB,IACpC,OAAOt8B,GAASp7E,KAAKgrG,SAAUoO,EAAiBC,IAGzB,4BACvB,MAAMC,EAAsBliB,mBAAYugB,IACxC,OAAOp8B,GACLv7E,KAAKgrG,SACLsO,EACAC,GACA7rC,IAMuB,8BACzB,MAAM8rC,EAAoBpiB,mBAAYygB,IACtC,OAAOz8B,GAASp7E,KAAKgrG,SAAUwO,EAAmBC,IAGtB,iCAC5B,MAAM57F,EAAOu5E,mBAAYwgB,IACzB,OAAOr8B,GACLv7E,KAAKgrG,SACLntF,EACA4zF,GACA,IAAM,IAIY,yBACpB,MACMiI,SADuB15G,KAAK25G,yBACCtD,eACnC,aAAa9iG,QAAQoQ,IACnB+1F,EAAYruG,IAAI8vE,UACd,MAAMy+B,EAAY55G,KAAK65G,sBAAsB5B,GAAkB/6G,GACzD47G,EAAa1hB,gBAASwiB,KAAc1B,IAY1C,OAAOpgB,SAXiB1c,GACtBp7E,KAAKm4G,YACLW,EA/JiB,GAgKf/gB,GACF9xD,MAAM,IACNm1C,GACEp7E,KAAKgrG,SACL8N,EArKgB,QAsKd/gB,QAQa,4BACvB,MAAM+hB,EAAc1iB,mBAAYogB,IAChC,OAAOj8B,GACLv7E,KAAKgrG,SACL8O,EACAC,GACAtH,IAIkB,yBACpB,MAAMuH,EAAmB5iB,mBAAYmgB,IACrC,OAAOh8B,GACLv7E,KAAKgrG,SACLgP,EACAC,GACA,IAAM,IAIa,0BACrB,MAAMC,EAAa9iB,mBAAYqgB,IACzB90D,QAAY44B,GAChBv7E,KAAKgrG,SACLkP,EACAC,GACA,IAAM,MAER,OAAOx3D,QJ/NJw4B,eACL6b,EACA3b,GAcA,MAAO,CAACjnE,cAZcb,QAAQoQ,IAC5BtmB,OAAOoR,KAAKuoF,EAAOgd,SAAS3oG,IAAI8vE,UAC9B,MAAMjtD,EAAKksF,GAAmBl8G,GACxBghE,QAAoBw2C,GAAqBxnF,EAAImtD,GACnD,GAAU,MAANntD,EACF,MAAM,IAAI/qB,MAAJ,sCAAyC+qB,IAIjD,MAAO,CAACD,OAFOixC,EAAYxE,WAEXg0C,QADA1X,EAAOgd,QAAQ9lF,GAAI7iB,IAAI+qG,QAI1BrG,eAAgB/Y,EAAO+Y,gBI+MnBsK,CAAqB13D,EAAK3iD,KAAKgrG,UAAY,KAGhE6O,sBACE90E,EACAkyD,GAEA,MAAMqjB,EAAUrjB,EAASjrF,MAAM,KAC/B,GAAuB,IAAnBsuG,EAAQ55G,OACV,MAAM,IAAIyC,MAAJ,2BAA8B8zF,IAEtC,MAAOsjB,EAAa13C,GAAcy3C,EAC5BE,EAAiB,IAAIz1E,EAAYw1E,EAAa13C,GACpD,OAAOu0B,mBAAYojB,GAGrBzB,2BAA2B9hB,GACzB,OAAOj3F,KAAK65G,sBAAsB5B,GAAkBhhB,ICxQxD,MAAMwjB,GAAM,CACVA,IAAK,CACHtsD,MAAOusD,EACP5I,WACA1jC,MAAOusC,GAET1rF,SAAU,CACR2rF,gBAEFC,KAAM,CACJjyF,UACA2zB,UAAW,CACTu+D,cACAC,sBAEF5sD,QACAu2C,gBACAtjC,UACAynC,YACAX,kBAEF9vB,OAAQ,CACNA,SACAj6D,WACAiwD,QACA7pC,MAAOy2E,EACPC,UACA5/B,WAEF24B,QAAS,CACPkH,kBhDwKG,MAKL5iG,YAAY9I,GAQV,GAHG,qGACHxP,KAAKm7G,eAAiB3rG,EAAQk1F,eAAiB0W,KAC/Cp7G,KAAKq7G,mBAAqB7rG,EAAQ8rG,mBAAqB,GACnD9rG,EAAQ0vD,YAAal/D,KAAKu7G,aAAe/rG,EAAQ0vD,gBAChD,KAAI1vD,EAAQynF,SAEZ,MAAM,IAAI9zF,MAAM,mDADnBnD,KAAKu7G,aAAe9jB,GAAmBjoF,EAAQynF,WAIlC,oBACf,OAAOj3F,KAAKu7G,aAGJ,WACR7jB,EACAC,IAGS,YACTD,EACAE,GAEA,OAAO53F,KAAKm7G,eAGS,wBACrBzjB,GAEA,MAAO,CAACS,eAAgB,QAGV,iBACdT,GAEA,OAAO13F,KAAKq7G,qBgDnNZG,OAAQ,CACNt8C,YAAa02C,EACbl8C,MAAO+hD,EACP5iD,MAAO6iD,GAETC,SAAU,CACRz8C,YAAa82C,EACbzxE,MAAOq3E,GAETC,UAAW,CACTjzF,QAASkzF,EACT58C,YAAa22C,GAEfkG,QAAS,CACP78C,YAAa42C,EACbvxE,MAAOy3E,GAETC,YAAa,CACX/8C,YAAa62C,GAEfzqC,qBACAuO,2BACAqiC,0BAIYv9G,cAAW87G,O","file":"api.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 68);\n","module.exports = function deepFreeze (o) {\n  Object.freeze(o);\n\n  Object.getOwnPropertyNames(o).forEach(function (prop) {\n    if (o.hasOwnProperty(prop)\n    && o[prop] !== null\n    && (typeof o[prop] === \"object\" || typeof o[prop] === \"function\")\n    && !Object.isFrozen(o[prop])) {\n      deepFreeze(o[prop]);\n    }\n  });\n  \n  return o;\n};\n","var bigInt = (function (undefined) {\r\n    \"use strict\";\r\n\r\n    var BASE = 1e7,\r\n        LOG_BASE = 7,\r\n        MAX_INT = 9007199254740992,\r\n        MAX_INT_ARR = smallToArray(MAX_INT),\r\n        DEFAULT_ALPHABET = \"0123456789abcdefghijklmnopqrstuvwxyz\";\r\n\r\n    var supportsNativeBigInt = typeof BigInt === \"function\";\r\n\r\n    function Integer(v, radix, alphabet, caseSensitive) {\r\n        if (typeof v === \"undefined\") return Integer[0];\r\n        if (typeof radix !== \"undefined\") return +radix === 10 && !alphabet ? parseValue(v) : parseBase(v, radix, alphabet, caseSensitive);\r\n        return parseValue(v);\r\n    }\r\n\r\n    function BigInteger(value, sign) {\r\n        this.value = value;\r\n        this.sign = sign;\r\n        this.isSmall = false;\r\n    }\r\n    BigInteger.prototype = Object.create(Integer.prototype);\r\n\r\n    function SmallInteger(value) {\r\n        this.value = value;\r\n        this.sign = value < 0;\r\n        this.isSmall = true;\r\n    }\r\n    SmallInteger.prototype = Object.create(Integer.prototype);\r\n\r\n    function NativeBigInt(value) {\r\n        this.value = value;\r\n    }\r\n    NativeBigInt.prototype = Object.create(Integer.prototype);\r\n\r\n    function isPrecise(n) {\r\n        return -MAX_INT < n && n < MAX_INT;\r\n    }\r\n\r\n    function smallToArray(n) { // For performance reasons doesn't reference BASE, need to change this function if BASE changes\r\n        if (n < 1e7)\r\n            return [n];\r\n        if (n < 1e14)\r\n            return [n % 1e7, Math.floor(n / 1e7)];\r\n        return [n % 1e7, Math.floor(n / 1e7) % 1e7, Math.floor(n / 1e14)];\r\n    }\r\n\r\n    function arrayToSmall(arr) { // If BASE changes this function may need to change\r\n        trim(arr);\r\n        var length = arr.length;\r\n        if (length < 4 && compareAbs(arr, MAX_INT_ARR) < 0) {\r\n            switch (length) {\r\n                case 0: return 0;\r\n                case 1: return arr[0];\r\n                case 2: return arr[0] + arr[1] * BASE;\r\n                default: return arr[0] + (arr[1] + arr[2] * BASE) * BASE;\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function trim(v) {\r\n        var i = v.length;\r\n        while (v[--i] === 0);\r\n        v.length = i + 1;\r\n    }\r\n\r\n    function createArray(length) { // function shamelessly stolen from Yaffle's library https://github.com/Yaffle/BigInteger\r\n        var x = new Array(length);\r\n        var i = -1;\r\n        while (++i < length) {\r\n            x[i] = 0;\r\n        }\r\n        return x;\r\n    }\r\n\r\n    function truncate(n) {\r\n        if (n > 0) return Math.floor(n);\r\n        return Math.ceil(n);\r\n    }\r\n\r\n    function add(a, b) { // assumes a and b are arrays with a.length >= b.length\r\n        var l_a = a.length,\r\n            l_b = b.length,\r\n            r = new Array(l_a),\r\n            carry = 0,\r\n            base = BASE,\r\n            sum, i;\r\n        for (i = 0; i < l_b; i++) {\r\n            sum = a[i] + b[i] + carry;\r\n            carry = sum >= base ? 1 : 0;\r\n            r[i] = sum - carry * base;\r\n        }\r\n        while (i < l_a) {\r\n            sum = a[i] + carry;\r\n            carry = sum === base ? 1 : 0;\r\n            r[i++] = sum - carry * base;\r\n        }\r\n        if (carry > 0) r.push(carry);\r\n        return r;\r\n    }\r\n\r\n    function addAny(a, b) {\r\n        if (a.length >= b.length) return add(a, b);\r\n        return add(b, a);\r\n    }\r\n\r\n    function addSmall(a, carry) { // assumes a is array, carry is number with 0 <= carry < MAX_INT\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            base = BASE,\r\n            sum, i;\r\n        for (i = 0; i < l; i++) {\r\n            sum = a[i] - base + carry;\r\n            carry = Math.floor(sum / base);\r\n            r[i] = sum - carry * base;\r\n            carry += 1;\r\n        }\r\n        while (carry > 0) {\r\n            r[i++] = carry % base;\r\n            carry = Math.floor(carry / base);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    BigInteger.prototype.add = function (v) {\r\n        var n = parseValue(v);\r\n        if (this.sign !== n.sign) {\r\n            return this.subtract(n.negate());\r\n        }\r\n        var a = this.value, b = n.value;\r\n        if (n.isSmall) {\r\n            return new BigInteger(addSmall(a, Math.abs(b)), this.sign);\r\n        }\r\n        return new BigInteger(addAny(a, b), this.sign);\r\n    };\r\n    BigInteger.prototype.plus = BigInteger.prototype.add;\r\n\r\n    SmallInteger.prototype.add = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value;\r\n        if (a < 0 !== n.sign) {\r\n            return this.subtract(n.negate());\r\n        }\r\n        var b = n.value;\r\n        if (n.isSmall) {\r\n            if (isPrecise(a + b)) return new SmallInteger(a + b);\r\n            b = smallToArray(Math.abs(b));\r\n        }\r\n        return new BigInteger(addSmall(b, Math.abs(a)), a < 0);\r\n    };\r\n    SmallInteger.prototype.plus = SmallInteger.prototype.add;\r\n\r\n    NativeBigInt.prototype.add = function (v) {\r\n        return new NativeBigInt(this.value + parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.plus = NativeBigInt.prototype.add;\r\n\r\n    function subtract(a, b) { // assumes a and b are arrays with a >= b\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            r = new Array(a_l),\r\n            borrow = 0,\r\n            base = BASE,\r\n            i, difference;\r\n        for (i = 0; i < b_l; i++) {\r\n            difference = a[i] - borrow - b[i];\r\n            if (difference < 0) {\r\n                difference += base;\r\n                borrow = 1;\r\n            } else borrow = 0;\r\n            r[i] = difference;\r\n        }\r\n        for (i = b_l; i < a_l; i++) {\r\n            difference = a[i] - borrow;\r\n            if (difference < 0) difference += base;\r\n            else {\r\n                r[i++] = difference;\r\n                break;\r\n            }\r\n            r[i] = difference;\r\n        }\r\n        for (; i < a_l; i++) {\r\n            r[i] = a[i];\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    function subtractAny(a, b, sign) {\r\n        var value;\r\n        if (compareAbs(a, b) >= 0) {\r\n            value = subtract(a, b);\r\n        } else {\r\n            value = subtract(b, a);\r\n            sign = !sign;\r\n        }\r\n        value = arrayToSmall(value);\r\n        if (typeof value === \"number\") {\r\n            if (sign) value = -value;\r\n            return new SmallInteger(value);\r\n        }\r\n        return new BigInteger(value, sign);\r\n    }\r\n\r\n    function subtractSmall(a, b, sign) { // assumes a is array, b is number with 0 <= b < MAX_INT\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            carry = -b,\r\n            base = BASE,\r\n            i, difference;\r\n        for (i = 0; i < l; i++) {\r\n            difference = a[i] + carry;\r\n            carry = Math.floor(difference / base);\r\n            difference %= base;\r\n            r[i] = difference < 0 ? difference + base : difference;\r\n        }\r\n        r = arrayToSmall(r);\r\n        if (typeof r === \"number\") {\r\n            if (sign) r = -r;\r\n            return new SmallInteger(r);\r\n        } return new BigInteger(r, sign);\r\n    }\r\n\r\n    BigInteger.prototype.subtract = function (v) {\r\n        var n = parseValue(v);\r\n        if (this.sign !== n.sign) {\r\n            return this.add(n.negate());\r\n        }\r\n        var a = this.value, b = n.value;\r\n        if (n.isSmall)\r\n            return subtractSmall(a, Math.abs(b), this.sign);\r\n        return subtractAny(a, b, this.sign);\r\n    };\r\n    BigInteger.prototype.minus = BigInteger.prototype.subtract;\r\n\r\n    SmallInteger.prototype.subtract = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value;\r\n        if (a < 0 !== n.sign) {\r\n            return this.add(n.negate());\r\n        }\r\n        var b = n.value;\r\n        if (n.isSmall) {\r\n            return new SmallInteger(a - b);\r\n        }\r\n        return subtractSmall(b, Math.abs(a), a >= 0);\r\n    };\r\n    SmallInteger.prototype.minus = SmallInteger.prototype.subtract;\r\n\r\n    NativeBigInt.prototype.subtract = function (v) {\r\n        return new NativeBigInt(this.value - parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.minus = NativeBigInt.prototype.subtract;\r\n\r\n    BigInteger.prototype.negate = function () {\r\n        return new BigInteger(this.value, !this.sign);\r\n    };\r\n    SmallInteger.prototype.negate = function () {\r\n        var sign = this.sign;\r\n        var small = new SmallInteger(-this.value);\r\n        small.sign = !sign;\r\n        return small;\r\n    };\r\n    NativeBigInt.prototype.negate = function () {\r\n        return new NativeBigInt(-this.value);\r\n    }\r\n\r\n    BigInteger.prototype.abs = function () {\r\n        return new BigInteger(this.value, false);\r\n    };\r\n    SmallInteger.prototype.abs = function () {\r\n        return new SmallInteger(Math.abs(this.value));\r\n    };\r\n    NativeBigInt.prototype.abs = function () {\r\n        return new NativeBigInt(this.value >= 0 ? this.value : -this.value);\r\n    }\r\n\r\n\r\n    function multiplyLong(a, b) {\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            l = a_l + b_l,\r\n            r = createArray(l),\r\n            base = BASE,\r\n            product, carry, i, a_i, b_j;\r\n        for (i = 0; i < a_l; ++i) {\r\n            a_i = a[i];\r\n            for (var j = 0; j < b_l; ++j) {\r\n                b_j = b[j];\r\n                product = a_i * b_j + r[i + j];\r\n                carry = Math.floor(product / base);\r\n                r[i + j] = product - carry * base;\r\n                r[i + j + 1] += carry;\r\n            }\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    function multiplySmall(a, b) { // assumes a is array, b is number with |b| < BASE\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            base = BASE,\r\n            carry = 0,\r\n            product, i;\r\n        for (i = 0; i < l; i++) {\r\n            product = a[i] * b + carry;\r\n            carry = Math.floor(product / base);\r\n            r[i] = product - carry * base;\r\n        }\r\n        while (carry > 0) {\r\n            r[i++] = carry % base;\r\n            carry = Math.floor(carry / base);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    function shiftLeft(x, n) {\r\n        var r = [];\r\n        while (n-- > 0) r.push(0);\r\n        return r.concat(x);\r\n    }\r\n\r\n    function multiplyKaratsuba(x, y) {\r\n        var n = Math.max(x.length, y.length);\r\n\r\n        if (n <= 30) return multiplyLong(x, y);\r\n        n = Math.ceil(n / 2);\r\n\r\n        var b = x.slice(n),\r\n            a = x.slice(0, n),\r\n            d = y.slice(n),\r\n            c = y.slice(0, n);\r\n\r\n        var ac = multiplyKaratsuba(a, c),\r\n            bd = multiplyKaratsuba(b, d),\r\n            abcd = multiplyKaratsuba(addAny(a, b), addAny(c, d));\r\n\r\n        var product = addAny(addAny(ac, shiftLeft(subtract(subtract(abcd, ac), bd), n)), shiftLeft(bd, 2 * n));\r\n        trim(product);\r\n        return product;\r\n    }\r\n\r\n    // The following function is derived from a surface fit of a graph plotting the performance difference\r\n    // between long multiplication and karatsuba multiplication versus the lengths of the two arrays.\r\n    function useKaratsuba(l1, l2) {\r\n        return -0.012 * l1 - 0.012 * l2 + 0.000015 * l1 * l2 > 0;\r\n    }\r\n\r\n    BigInteger.prototype.multiply = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value, b = n.value,\r\n            sign = this.sign !== n.sign,\r\n            abs;\r\n        if (n.isSmall) {\r\n            if (b === 0) return Integer[0];\r\n            if (b === 1) return this;\r\n            if (b === -1) return this.negate();\r\n            abs = Math.abs(b);\r\n            if (abs < BASE) {\r\n                return new BigInteger(multiplySmall(a, abs), sign);\r\n            }\r\n            b = smallToArray(abs);\r\n        }\r\n        if (useKaratsuba(a.length, b.length)) // Karatsuba is only faster for certain array sizes\r\n            return new BigInteger(multiplyKaratsuba(a, b), sign);\r\n        return new BigInteger(multiplyLong(a, b), sign);\r\n    };\r\n\r\n    BigInteger.prototype.times = BigInteger.prototype.multiply;\r\n\r\n    function multiplySmallAndArray(a, b, sign) { // a >= 0\r\n        if (a < BASE) {\r\n            return new BigInteger(multiplySmall(b, a), sign);\r\n        }\r\n        return new BigInteger(multiplyLong(b, smallToArray(a)), sign);\r\n    }\r\n    SmallInteger.prototype._multiplyBySmall = function (a) {\r\n        if (isPrecise(a.value * this.value)) {\r\n            return new SmallInteger(a.value * this.value);\r\n        }\r\n        return multiplySmallAndArray(Math.abs(a.value), smallToArray(Math.abs(this.value)), this.sign !== a.sign);\r\n    };\r\n    BigInteger.prototype._multiplyBySmall = function (a) {\r\n        if (a.value === 0) return Integer[0];\r\n        if (a.value === 1) return this;\r\n        if (a.value === -1) return this.negate();\r\n        return multiplySmallAndArray(Math.abs(a.value), this.value, this.sign !== a.sign);\r\n    };\r\n    SmallInteger.prototype.multiply = function (v) {\r\n        return parseValue(v)._multiplyBySmall(this);\r\n    };\r\n    SmallInteger.prototype.times = SmallInteger.prototype.multiply;\r\n\r\n    NativeBigInt.prototype.multiply = function (v) {\r\n        return new NativeBigInt(this.value * parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.times = NativeBigInt.prototype.multiply;\r\n\r\n    function square(a) {\r\n        //console.assert(2 * BASE * BASE < MAX_INT);\r\n        var l = a.length,\r\n            r = createArray(l + l),\r\n            base = BASE,\r\n            product, carry, i, a_i, a_j;\r\n        for (i = 0; i < l; i++) {\r\n            a_i = a[i];\r\n            carry = 0 - a_i * a_i;\r\n            for (var j = i; j < l; j++) {\r\n                a_j = a[j];\r\n                product = 2 * (a_i * a_j) + r[i + j] + carry;\r\n                carry = Math.floor(product / base);\r\n                r[i + j] = product - carry * base;\r\n            }\r\n            r[i + l] = carry;\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    BigInteger.prototype.square = function () {\r\n        return new BigInteger(square(this.value), false);\r\n    };\r\n\r\n    SmallInteger.prototype.square = function () {\r\n        var value = this.value * this.value;\r\n        if (isPrecise(value)) return new SmallInteger(value);\r\n        return new BigInteger(square(smallToArray(Math.abs(this.value))), false);\r\n    };\r\n\r\n    NativeBigInt.prototype.square = function (v) {\r\n        return new NativeBigInt(this.value * this.value);\r\n    }\r\n\r\n    function divMod1(a, b) { // Left over from previous version. Performs faster than divMod2 on smaller input sizes.\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            base = BASE,\r\n            result = createArray(b.length),\r\n            divisorMostSignificantDigit = b[b_l - 1],\r\n            // normalization\r\n            lambda = Math.ceil(base / (2 * divisorMostSignificantDigit)),\r\n            remainder = multiplySmall(a, lambda),\r\n            divisor = multiplySmall(b, lambda),\r\n            quotientDigit, shift, carry, borrow, i, l, q;\r\n        if (remainder.length <= a_l) remainder.push(0);\r\n        divisor.push(0);\r\n        divisorMostSignificantDigit = divisor[b_l - 1];\r\n        for (shift = a_l - b_l; shift >= 0; shift--) {\r\n            quotientDigit = base - 1;\r\n            if (remainder[shift + b_l] !== divisorMostSignificantDigit) {\r\n                quotientDigit = Math.floor((remainder[shift + b_l] * base + remainder[shift + b_l - 1]) / divisorMostSignificantDigit);\r\n            }\r\n            // quotientDigit <= base - 1\r\n            carry = 0;\r\n            borrow = 0;\r\n            l = divisor.length;\r\n            for (i = 0; i < l; i++) {\r\n                carry += quotientDigit * divisor[i];\r\n                q = Math.floor(carry / base);\r\n                borrow += remainder[shift + i] - (carry - q * base);\r\n                carry = q;\r\n                if (borrow < 0) {\r\n                    remainder[shift + i] = borrow + base;\r\n                    borrow = -1;\r\n                } else {\r\n                    remainder[shift + i] = borrow;\r\n                    borrow = 0;\r\n                }\r\n            }\r\n            while (borrow !== 0) {\r\n                quotientDigit -= 1;\r\n                carry = 0;\r\n                for (i = 0; i < l; i++) {\r\n                    carry += remainder[shift + i] - base + divisor[i];\r\n                    if (carry < 0) {\r\n                        remainder[shift + i] = carry + base;\r\n                        carry = 0;\r\n                    } else {\r\n                        remainder[shift + i] = carry;\r\n                        carry = 1;\r\n                    }\r\n                }\r\n                borrow += carry;\r\n            }\r\n            result[shift] = quotientDigit;\r\n        }\r\n        // denormalization\r\n        remainder = divModSmall(remainder, lambda)[0];\r\n        return [arrayToSmall(result), arrayToSmall(remainder)];\r\n    }\r\n\r\n    function divMod2(a, b) { // Implementation idea shamelessly stolen from Silent Matt's library http://silentmatt.com/biginteger/\r\n        // Performs faster than divMod1 on larger input sizes.\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            result = [],\r\n            part = [],\r\n            base = BASE,\r\n            guess, xlen, highx, highy, check;\r\n        while (a_l) {\r\n            part.unshift(a[--a_l]);\r\n            trim(part);\r\n            if (compareAbs(part, b) < 0) {\r\n                result.push(0);\r\n                continue;\r\n            }\r\n            xlen = part.length;\r\n            highx = part[xlen - 1] * base + part[xlen - 2];\r\n            highy = b[b_l - 1] * base + b[b_l - 2];\r\n            if (xlen > b_l) {\r\n                highx = (highx + 1) * base;\r\n            }\r\n            guess = Math.ceil(highx / highy);\r\n            do {\r\n                check = multiplySmall(b, guess);\r\n                if (compareAbs(check, part) <= 0) break;\r\n                guess--;\r\n            } while (guess);\r\n            result.push(guess);\r\n            part = subtract(part, check);\r\n        }\r\n        result.reverse();\r\n        return [arrayToSmall(result), arrayToSmall(part)];\r\n    }\r\n\r\n    function divModSmall(value, lambda) {\r\n        var length = value.length,\r\n            quotient = createArray(length),\r\n            base = BASE,\r\n            i, q, remainder, divisor;\r\n        remainder = 0;\r\n        for (i = length - 1; i >= 0; --i) {\r\n            divisor = remainder * base + value[i];\r\n            q = truncate(divisor / lambda);\r\n            remainder = divisor - q * lambda;\r\n            quotient[i] = q | 0;\r\n        }\r\n        return [quotient, remainder | 0];\r\n    }\r\n\r\n    function divModAny(self, v) {\r\n        var value, n = parseValue(v);\r\n        if (supportsNativeBigInt) {\r\n            return [new NativeBigInt(self.value / n.value), new NativeBigInt(self.value % n.value)];\r\n        }\r\n        var a = self.value, b = n.value;\r\n        var quotient;\r\n        if (b === 0) throw new Error(\"Cannot divide by zero\");\r\n        if (self.isSmall) {\r\n            if (n.isSmall) {\r\n                return [new SmallInteger(truncate(a / b)), new SmallInteger(a % b)];\r\n            }\r\n            return [Integer[0], self];\r\n        }\r\n        if (n.isSmall) {\r\n            if (b === 1) return [self, Integer[0]];\r\n            if (b == -1) return [self.negate(), Integer[0]];\r\n            var abs = Math.abs(b);\r\n            if (abs < BASE) {\r\n                value = divModSmall(a, abs);\r\n                quotient = arrayToSmall(value[0]);\r\n                var remainder = value[1];\r\n                if (self.sign) remainder = -remainder;\r\n                if (typeof quotient === \"number\") {\r\n                    if (self.sign !== n.sign) quotient = -quotient;\r\n                    return [new SmallInteger(quotient), new SmallInteger(remainder)];\r\n                }\r\n                return [new BigInteger(quotient, self.sign !== n.sign), new SmallInteger(remainder)];\r\n            }\r\n            b = smallToArray(abs);\r\n        }\r\n        var comparison = compareAbs(a, b);\r\n        if (comparison === -1) return [Integer[0], self];\r\n        if (comparison === 0) return [Integer[self.sign === n.sign ? 1 : -1], Integer[0]];\r\n\r\n        // divMod1 is faster on smaller input sizes\r\n        if (a.length + b.length <= 200)\r\n            value = divMod1(a, b);\r\n        else value = divMod2(a, b);\r\n\r\n        quotient = value[0];\r\n        var qSign = self.sign !== n.sign,\r\n            mod = value[1],\r\n            mSign = self.sign;\r\n        if (typeof quotient === \"number\") {\r\n            if (qSign) quotient = -quotient;\r\n            quotient = new SmallInteger(quotient);\r\n        } else quotient = new BigInteger(quotient, qSign);\r\n        if (typeof mod === \"number\") {\r\n            if (mSign) mod = -mod;\r\n            mod = new SmallInteger(mod);\r\n        } else mod = new BigInteger(mod, mSign);\r\n        return [quotient, mod];\r\n    }\r\n\r\n    BigInteger.prototype.divmod = function (v) {\r\n        var result = divModAny(this, v);\r\n        return {\r\n            quotient: result[0],\r\n            remainder: result[1]\r\n        };\r\n    };\r\n    NativeBigInt.prototype.divmod = SmallInteger.prototype.divmod = BigInteger.prototype.divmod;\r\n\r\n\r\n    BigInteger.prototype.divide = function (v) {\r\n        return divModAny(this, v)[0];\r\n    };\r\n    NativeBigInt.prototype.over = NativeBigInt.prototype.divide = function (v) {\r\n        return new NativeBigInt(this.value / parseValue(v).value);\r\n    };\r\n    SmallInteger.prototype.over = SmallInteger.prototype.divide = BigInteger.prototype.over = BigInteger.prototype.divide;\r\n\r\n    BigInteger.prototype.mod = function (v) {\r\n        return divModAny(this, v)[1];\r\n    };\r\n    NativeBigInt.prototype.mod = NativeBigInt.prototype.remainder = function (v) {\r\n        return new NativeBigInt(this.value % parseValue(v).value);\r\n    };\r\n    SmallInteger.prototype.remainder = SmallInteger.prototype.mod = BigInteger.prototype.remainder = BigInteger.prototype.mod;\r\n\r\n    BigInteger.prototype.pow = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value,\r\n            value, x, y;\r\n        if (b === 0) return Integer[1];\r\n        if (a === 0) return Integer[0];\r\n        if (a === 1) return Integer[1];\r\n        if (a === -1) return n.isEven() ? Integer[1] : Integer[-1];\r\n        if (n.sign) {\r\n            return Integer[0];\r\n        }\r\n        if (!n.isSmall) throw new Error(\"The exponent \" + n.toString() + \" is too large.\");\r\n        if (this.isSmall) {\r\n            if (isPrecise(value = Math.pow(a, b)))\r\n                return new SmallInteger(truncate(value));\r\n        }\r\n        x = this;\r\n        y = Integer[1];\r\n        while (true) {\r\n            if (b & 1 === 1) {\r\n                y = y.times(x);\r\n                --b;\r\n            }\r\n            if (b === 0) break;\r\n            b /= 2;\r\n            x = x.square();\r\n        }\r\n        return y;\r\n    };\r\n    SmallInteger.prototype.pow = BigInteger.prototype.pow;\r\n\r\n    NativeBigInt.prototype.pow = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value, b = n.value;\r\n        var _0 = BigInt(0), _1 = BigInt(1), _2 = BigInt(2);\r\n        if (b === _0) return Integer[1];\r\n        if (a === _0) return Integer[0];\r\n        if (a === _1) return Integer[1];\r\n        if (a === BigInt(-1)) return n.isEven() ? Integer[1] : Integer[-1];\r\n        if (n.isNegative()) return new NativeBigInt(_0);\r\n        var x = this;\r\n        var y = Integer[1];\r\n        while (true) {\r\n            if ((b & _1) === _1) {\r\n                y = y.times(x);\r\n                --b;\r\n            }\r\n            if (b === _0) break;\r\n            b /= _2;\r\n            x = x.square();\r\n        }\r\n        return y;\r\n    }\r\n\r\n    BigInteger.prototype.modPow = function (exp, mod) {\r\n        exp = parseValue(exp);\r\n        mod = parseValue(mod);\r\n        if (mod.isZero()) throw new Error(\"Cannot take modPow with modulus 0\");\r\n        var r = Integer[1],\r\n            base = this.mod(mod);\r\n        if (exp.isNegative()) {\r\n            exp = exp.multiply(Integer[-1]);\r\n            base = base.modInv(mod);\r\n        }\r\n        while (exp.isPositive()) {\r\n            if (base.isZero()) return Integer[0];\r\n            if (exp.isOdd()) r = r.multiply(base).mod(mod);\r\n            exp = exp.divide(2);\r\n            base = base.square().mod(mod);\r\n        }\r\n        return r;\r\n    };\r\n    NativeBigInt.prototype.modPow = SmallInteger.prototype.modPow = BigInteger.prototype.modPow;\r\n\r\n    function compareAbs(a, b) {\r\n        if (a.length !== b.length) {\r\n            return a.length > b.length ? 1 : -1;\r\n        }\r\n        for (var i = a.length - 1; i >= 0; i--) {\r\n            if (a[i] !== b[i]) return a[i] > b[i] ? 1 : -1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    BigInteger.prototype.compareAbs = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (n.isSmall) return 1;\r\n        return compareAbs(a, b);\r\n    };\r\n    SmallInteger.prototype.compareAbs = function (v) {\r\n        var n = parseValue(v),\r\n            a = Math.abs(this.value),\r\n            b = n.value;\r\n        if (n.isSmall) {\r\n            b = Math.abs(b);\r\n            return a === b ? 0 : a > b ? 1 : -1;\r\n        }\r\n        return -1;\r\n    };\r\n    NativeBigInt.prototype.compareAbs = function (v) {\r\n        var a = this.value;\r\n        var b = parseValue(v).value;\r\n        a = a >= 0 ? a : -a;\r\n        b = b >= 0 ? b : -b;\r\n        return a === b ? 0 : a > b ? 1 : -1;\r\n    }\r\n\r\n    BigInteger.prototype.compare = function (v) {\r\n        // See discussion about comparison with Infinity:\r\n        // https://github.com/peterolson/BigInteger.js/issues/61\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (this.sign !== n.sign) {\r\n            return n.sign ? 1 : -1;\r\n        }\r\n        if (n.isSmall) {\r\n            return this.sign ? -1 : 1;\r\n        }\r\n        return compareAbs(a, b) * (this.sign ? -1 : 1);\r\n    };\r\n    BigInteger.prototype.compareTo = BigInteger.prototype.compare;\r\n\r\n    SmallInteger.prototype.compare = function (v) {\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (n.isSmall) {\r\n            return a == b ? 0 : a > b ? 1 : -1;\r\n        }\r\n        if (a < 0 !== n.sign) {\r\n            return a < 0 ? -1 : 1;\r\n        }\r\n        return a < 0 ? 1 : -1;\r\n    };\r\n    SmallInteger.prototype.compareTo = SmallInteger.prototype.compare;\r\n\r\n    NativeBigInt.prototype.compare = function (v) {\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n        var a = this.value;\r\n        var b = parseValue(v).value;\r\n        return a === b ? 0 : a > b ? 1 : -1;\r\n    }\r\n    NativeBigInt.prototype.compareTo = NativeBigInt.prototype.compare;\r\n\r\n    BigInteger.prototype.equals = function (v) {\r\n        return this.compare(v) === 0;\r\n    };\r\n    NativeBigInt.prototype.eq = NativeBigInt.prototype.equals = SmallInteger.prototype.eq = SmallInteger.prototype.equals = BigInteger.prototype.eq = BigInteger.prototype.equals;\r\n\r\n    BigInteger.prototype.notEquals = function (v) {\r\n        return this.compare(v) !== 0;\r\n    };\r\n    NativeBigInt.prototype.neq = NativeBigInt.prototype.notEquals = SmallInteger.prototype.neq = SmallInteger.prototype.notEquals = BigInteger.prototype.neq = BigInteger.prototype.notEquals;\r\n\r\n    BigInteger.prototype.greater = function (v) {\r\n        return this.compare(v) > 0;\r\n    };\r\n    NativeBigInt.prototype.gt = NativeBigInt.prototype.greater = SmallInteger.prototype.gt = SmallInteger.prototype.greater = BigInteger.prototype.gt = BigInteger.prototype.greater;\r\n\r\n    BigInteger.prototype.lesser = function (v) {\r\n        return this.compare(v) < 0;\r\n    };\r\n    NativeBigInt.prototype.lt = NativeBigInt.prototype.lesser = SmallInteger.prototype.lt = SmallInteger.prototype.lesser = BigInteger.prototype.lt = BigInteger.prototype.lesser;\r\n\r\n    BigInteger.prototype.greaterOrEquals = function (v) {\r\n        return this.compare(v) >= 0;\r\n    };\r\n    NativeBigInt.prototype.geq = NativeBigInt.prototype.greaterOrEquals = SmallInteger.prototype.geq = SmallInteger.prototype.greaterOrEquals = BigInteger.prototype.geq = BigInteger.prototype.greaterOrEquals;\r\n\r\n    BigInteger.prototype.lesserOrEquals = function (v) {\r\n        return this.compare(v) <= 0;\r\n    };\r\n    NativeBigInt.prototype.leq = NativeBigInt.prototype.lesserOrEquals = SmallInteger.prototype.leq = SmallInteger.prototype.lesserOrEquals = BigInteger.prototype.leq = BigInteger.prototype.lesserOrEquals;\r\n\r\n    BigInteger.prototype.isEven = function () {\r\n        return (this.value[0] & 1) === 0;\r\n    };\r\n    SmallInteger.prototype.isEven = function () {\r\n        return (this.value & 1) === 0;\r\n    };\r\n    NativeBigInt.prototype.isEven = function () {\r\n        return (this.value & BigInt(1)) === BigInt(0);\r\n    }\r\n\r\n    BigInteger.prototype.isOdd = function () {\r\n        return (this.value[0] & 1) === 1;\r\n    };\r\n    SmallInteger.prototype.isOdd = function () {\r\n        return (this.value & 1) === 1;\r\n    };\r\n    NativeBigInt.prototype.isOdd = function () {\r\n        return (this.value & BigInt(1)) === BigInt(1);\r\n    }\r\n\r\n    BigInteger.prototype.isPositive = function () {\r\n        return !this.sign;\r\n    };\r\n    SmallInteger.prototype.isPositive = function () {\r\n        return this.value > 0;\r\n    };\r\n    NativeBigInt.prototype.isPositive = SmallInteger.prototype.isPositive;\r\n\r\n    BigInteger.prototype.isNegative = function () {\r\n        return this.sign;\r\n    };\r\n    SmallInteger.prototype.isNegative = function () {\r\n        return this.value < 0;\r\n    };\r\n    NativeBigInt.prototype.isNegative = SmallInteger.prototype.isNegative;\r\n\r\n    BigInteger.prototype.isUnit = function () {\r\n        return false;\r\n    };\r\n    SmallInteger.prototype.isUnit = function () {\r\n        return Math.abs(this.value) === 1;\r\n    };\r\n    NativeBigInt.prototype.isUnit = function () {\r\n        return this.abs().value === BigInt(1);\r\n    }\r\n\r\n    BigInteger.prototype.isZero = function () {\r\n        return false;\r\n    };\r\n    SmallInteger.prototype.isZero = function () {\r\n        return this.value === 0;\r\n    };\r\n    NativeBigInt.prototype.isZero = function () {\r\n        return this.value === BigInt(0);\r\n    }\r\n\r\n    BigInteger.prototype.isDivisibleBy = function (v) {\r\n        var n = parseValue(v);\r\n        if (n.isZero()) return false;\r\n        if (n.isUnit()) return true;\r\n        if (n.compareAbs(2) === 0) return this.isEven();\r\n        return this.mod(n).isZero();\r\n    };\r\n    NativeBigInt.prototype.isDivisibleBy = SmallInteger.prototype.isDivisibleBy = BigInteger.prototype.isDivisibleBy;\r\n\r\n    function isBasicPrime(v) {\r\n        var n = v.abs();\r\n        if (n.isUnit()) return false;\r\n        if (n.equals(2) || n.equals(3) || n.equals(5)) return true;\r\n        if (n.isEven() || n.isDivisibleBy(3) || n.isDivisibleBy(5)) return false;\r\n        if (n.lesser(49)) return true;\r\n        // we don't know if it's prime: let the other functions figure it out\r\n    }\r\n\r\n    function millerRabinTest(n, a) {\r\n        var nPrev = n.prev(),\r\n            b = nPrev,\r\n            r = 0,\r\n            d, t, i, x;\r\n        while (b.isEven()) b = b.divide(2), r++;\r\n        next: for (i = 0; i < a.length; i++) {\r\n            if (n.lesser(a[i])) continue;\r\n            x = bigInt(a[i]).modPow(b, n);\r\n            if (x.isUnit() || x.equals(nPrev)) continue;\r\n            for (d = r - 1; d != 0; d--) {\r\n                x = x.square().mod(n);\r\n                if (x.isUnit()) return false;\r\n                if (x.equals(nPrev)) continue next;\r\n            }\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // Set \"strict\" to true to force GRH-supported lower bound of 2*log(N)^2\r\n    BigInteger.prototype.isPrime = function (strict) {\r\n        var isPrime = isBasicPrime(this);\r\n        if (isPrime !== undefined) return isPrime;\r\n        var n = this.abs();\r\n        var bits = n.bitLength();\r\n        if (bits <= 64)\r\n            return millerRabinTest(n, [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37]);\r\n        var logN = Math.log(2) * bits.toJSNumber();\r\n        var t = Math.ceil((strict === true) ? (2 * Math.pow(logN, 2)) : logN);\r\n        for (var a = [], i = 0; i < t; i++) {\r\n            a.push(bigInt(i + 2));\r\n        }\r\n        return millerRabinTest(n, a);\r\n    };\r\n    NativeBigInt.prototype.isPrime = SmallInteger.prototype.isPrime = BigInteger.prototype.isPrime;\r\n\r\n    BigInteger.prototype.isProbablePrime = function (iterations, rng) {\r\n        var isPrime = isBasicPrime(this);\r\n        if (isPrime !== undefined) return isPrime;\r\n        var n = this.abs();\r\n        var t = iterations === undefined ? 5 : iterations;\r\n        for (var a = [], i = 0; i < t; i++) {\r\n            a.push(bigInt.randBetween(2, n.minus(2), rng));\r\n        }\r\n        return millerRabinTest(n, a);\r\n    };\r\n    NativeBigInt.prototype.isProbablePrime = SmallInteger.prototype.isProbablePrime = BigInteger.prototype.isProbablePrime;\r\n\r\n    BigInteger.prototype.modInv = function (n) {\r\n        var t = bigInt.zero, newT = bigInt.one, r = parseValue(n), newR = this.abs(), q, lastT, lastR;\r\n        while (!newR.isZero()) {\r\n            q = r.divide(newR);\r\n            lastT = t;\r\n            lastR = r;\r\n            t = newT;\r\n            r = newR;\r\n            newT = lastT.subtract(q.multiply(newT));\r\n            newR = lastR.subtract(q.multiply(newR));\r\n        }\r\n        if (!r.isUnit()) throw new Error(this.toString() + \" and \" + n.toString() + \" are not co-prime\");\r\n        if (t.compare(0) === -1) {\r\n            t = t.add(n);\r\n        }\r\n        if (this.isNegative()) {\r\n            return t.negate();\r\n        }\r\n        return t;\r\n    };\r\n\r\n    NativeBigInt.prototype.modInv = SmallInteger.prototype.modInv = BigInteger.prototype.modInv;\r\n\r\n    BigInteger.prototype.next = function () {\r\n        var value = this.value;\r\n        if (this.sign) {\r\n            return subtractSmall(value, 1, this.sign);\r\n        }\r\n        return new BigInteger(addSmall(value, 1), this.sign);\r\n    };\r\n    SmallInteger.prototype.next = function () {\r\n        var value = this.value;\r\n        if (value + 1 < MAX_INT) return new SmallInteger(value + 1);\r\n        return new BigInteger(MAX_INT_ARR, false);\r\n    };\r\n    NativeBigInt.prototype.next = function () {\r\n        return new NativeBigInt(this.value + BigInt(1));\r\n    }\r\n\r\n    BigInteger.prototype.prev = function () {\r\n        var value = this.value;\r\n        if (this.sign) {\r\n            return new BigInteger(addSmall(value, 1), true);\r\n        }\r\n        return subtractSmall(value, 1, this.sign);\r\n    };\r\n    SmallInteger.prototype.prev = function () {\r\n        var value = this.value;\r\n        if (value - 1 > -MAX_INT) return new SmallInteger(value - 1);\r\n        return new BigInteger(MAX_INT_ARR, true);\r\n    };\r\n    NativeBigInt.prototype.prev = function () {\r\n        return new NativeBigInt(this.value - BigInt(1));\r\n    }\r\n\r\n    var powersOfTwo = [1];\r\n    while (2 * powersOfTwo[powersOfTwo.length - 1] <= BASE) powersOfTwo.push(2 * powersOfTwo[powersOfTwo.length - 1]);\r\n    var powers2Length = powersOfTwo.length, highestPower2 = powersOfTwo[powers2Length - 1];\r\n\r\n    function shift_isSmall(n) {\r\n        return Math.abs(n) <= BASE;\r\n    }\r\n\r\n    BigInteger.prototype.shiftLeft = function (v) {\r\n        var n = parseValue(v).toJSNumber();\r\n        if (!shift_isSmall(n)) {\r\n            throw new Error(String(n) + \" is too large for shifting.\");\r\n        }\r\n        if (n < 0) return this.shiftRight(-n);\r\n        var result = this;\r\n        if (result.isZero()) return result;\r\n        while (n >= powers2Length) {\r\n            result = result.multiply(highestPower2);\r\n            n -= powers2Length - 1;\r\n        }\r\n        return result.multiply(powersOfTwo[n]);\r\n    };\r\n    NativeBigInt.prototype.shiftLeft = SmallInteger.prototype.shiftLeft = BigInteger.prototype.shiftLeft;\r\n\r\n    BigInteger.prototype.shiftRight = function (v) {\r\n        var remQuo;\r\n        var n = parseValue(v).toJSNumber();\r\n        if (!shift_isSmall(n)) {\r\n            throw new Error(String(n) + \" is too large for shifting.\");\r\n        }\r\n        if (n < 0) return this.shiftLeft(-n);\r\n        var result = this;\r\n        while (n >= powers2Length) {\r\n            if (result.isZero() || (result.isNegative() && result.isUnit())) return result;\r\n            remQuo = divModAny(result, highestPower2);\r\n            result = remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n            n -= powers2Length - 1;\r\n        }\r\n        remQuo = divModAny(result, powersOfTwo[n]);\r\n        return remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n    };\r\n    NativeBigInt.prototype.shiftRight = SmallInteger.prototype.shiftRight = BigInteger.prototype.shiftRight;\r\n\r\n    function bitwise(x, y, fn) {\r\n        y = parseValue(y);\r\n        var xSign = x.isNegative(), ySign = y.isNegative();\r\n        var xRem = xSign ? x.not() : x,\r\n            yRem = ySign ? y.not() : y;\r\n        var xDigit = 0, yDigit = 0;\r\n        var xDivMod = null, yDivMod = null;\r\n        var result = [];\r\n        while (!xRem.isZero() || !yRem.isZero()) {\r\n            xDivMod = divModAny(xRem, highestPower2);\r\n            xDigit = xDivMod[1].toJSNumber();\r\n            if (xSign) {\r\n                xDigit = highestPower2 - 1 - xDigit; // two's complement for negative numbers\r\n            }\r\n\r\n            yDivMod = divModAny(yRem, highestPower2);\r\n            yDigit = yDivMod[1].toJSNumber();\r\n            if (ySign) {\r\n                yDigit = highestPower2 - 1 - yDigit; // two's complement for negative numbers\r\n            }\r\n\r\n            xRem = xDivMod[0];\r\n            yRem = yDivMod[0];\r\n            result.push(fn(xDigit, yDigit));\r\n        }\r\n        var sum = fn(xSign ? 1 : 0, ySign ? 1 : 0) !== 0 ? bigInt(-1) : bigInt(0);\r\n        for (var i = result.length - 1; i >= 0; i -= 1) {\r\n            sum = sum.multiply(highestPower2).add(bigInt(result[i]));\r\n        }\r\n        return sum;\r\n    }\r\n\r\n    BigInteger.prototype.not = function () {\r\n        return this.negate().prev();\r\n    };\r\n    NativeBigInt.prototype.not = SmallInteger.prototype.not = BigInteger.prototype.not;\r\n\r\n    BigInteger.prototype.and = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a & b; });\r\n    };\r\n    NativeBigInt.prototype.and = SmallInteger.prototype.and = BigInteger.prototype.and;\r\n\r\n    BigInteger.prototype.or = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a | b; });\r\n    };\r\n    NativeBigInt.prototype.or = SmallInteger.prototype.or = BigInteger.prototype.or;\r\n\r\n    BigInteger.prototype.xor = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a ^ b; });\r\n    };\r\n    NativeBigInt.prototype.xor = SmallInteger.prototype.xor = BigInteger.prototype.xor;\r\n\r\n    var LOBMASK_I = 1 << 30, LOBMASK_BI = (BASE & -BASE) * (BASE & -BASE) | LOBMASK_I;\r\n    function roughLOB(n) { // get lowestOneBit (rough)\r\n        // SmallInteger: return Min(lowestOneBit(n), 1 << 30)\r\n        // BigInteger: return Min(lowestOneBit(n), 1 << 14) [BASE=1e7]\r\n        var v = n.value,\r\n            x = typeof v === \"number\" ? v | LOBMASK_I :\r\n                typeof v === \"bigint\" ? v | BigInt(LOBMASK_I) :\r\n                    v[0] + v[1] * BASE | LOBMASK_BI;\r\n        return x & -x;\r\n    }\r\n\r\n    function integerLogarithm(value, base) {\r\n        if (base.compareTo(value) <= 0) {\r\n            var tmp = integerLogarithm(value, base.square(base));\r\n            var p = tmp.p;\r\n            var e = tmp.e;\r\n            var t = p.multiply(base);\r\n            return t.compareTo(value) <= 0 ? { p: t, e: e * 2 + 1 } : { p: p, e: e * 2 };\r\n        }\r\n        return { p: bigInt(1), e: 0 };\r\n    }\r\n\r\n    BigInteger.prototype.bitLength = function () {\r\n        var n = this;\r\n        if (n.compareTo(bigInt(0)) < 0) {\r\n            n = n.negate().subtract(bigInt(1));\r\n        }\r\n        if (n.compareTo(bigInt(0)) === 0) {\r\n            return bigInt(0);\r\n        }\r\n        return bigInt(integerLogarithm(n, bigInt(2)).e).add(bigInt(1));\r\n    }\r\n    NativeBigInt.prototype.bitLength = SmallInteger.prototype.bitLength = BigInteger.prototype.bitLength;\r\n\r\n    function max(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        return a.greater(b) ? a : b;\r\n    }\r\n    function min(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        return a.lesser(b) ? a : b;\r\n    }\r\n    function gcd(a, b) {\r\n        a = parseValue(a).abs();\r\n        b = parseValue(b).abs();\r\n        if (a.equals(b)) return a;\r\n        if (a.isZero()) return b;\r\n        if (b.isZero()) return a;\r\n        var c = Integer[1], d, t;\r\n        while (a.isEven() && b.isEven()) {\r\n            d = min(roughLOB(a), roughLOB(b));\r\n            a = a.divide(d);\r\n            b = b.divide(d);\r\n            c = c.multiply(d);\r\n        }\r\n        while (a.isEven()) {\r\n            a = a.divide(roughLOB(a));\r\n        }\r\n        do {\r\n            while (b.isEven()) {\r\n                b = b.divide(roughLOB(b));\r\n            }\r\n            if (a.greater(b)) {\r\n                t = b; b = a; a = t;\r\n            }\r\n            b = b.subtract(a);\r\n        } while (!b.isZero());\r\n        return c.isUnit() ? a : a.multiply(c);\r\n    }\r\n    function lcm(a, b) {\r\n        a = parseValue(a).abs();\r\n        b = parseValue(b).abs();\r\n        return a.divide(gcd(a, b)).multiply(b);\r\n    }\r\n    function randBetween(a, b, rng) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        var usedRNG = rng || Math.random;\r\n        var low = min(a, b), high = max(a, b);\r\n        var range = high.subtract(low).add(1);\r\n        if (range.isSmall) return low.add(Math.floor(usedRNG() * range));\r\n        var digits = toBase(range, BASE).value;\r\n        var result = [], restricted = true;\r\n        for (var i = 0; i < digits.length; i++) {\r\n            var top = restricted ? digits[i] : BASE;\r\n            var digit = truncate(usedRNG() * top);\r\n            result.push(digit);\r\n            if (digit < top) restricted = false;\r\n        }\r\n        return low.add(Integer.fromArray(result, BASE, false));\r\n    }\r\n\r\n    var parseBase = function (text, base, alphabet, caseSensitive) {\r\n        alphabet = alphabet || DEFAULT_ALPHABET;\r\n        text = String(text);\r\n        if (!caseSensitive) {\r\n            text = text.toLowerCase();\r\n            alphabet = alphabet.toLowerCase();\r\n        }\r\n        var length = text.length;\r\n        var i;\r\n        var absBase = Math.abs(base);\r\n        var alphabetValues = {};\r\n        for (i = 0; i < alphabet.length; i++) {\r\n            alphabetValues[alphabet[i]] = i;\r\n        }\r\n        for (i = 0; i < length; i++) {\r\n            var c = text[i];\r\n            if (c === \"-\") continue;\r\n            if (c in alphabetValues) {\r\n                if (alphabetValues[c] >= absBase) {\r\n                    if (c === \"1\" && absBase === 1) continue;\r\n                    throw new Error(c + \" is not a valid digit in base \" + base + \".\");\r\n                }\r\n            }\r\n        }\r\n        base = parseValue(base);\r\n        var digits = [];\r\n        var isNegative = text[0] === \"-\";\r\n        for (i = isNegative ? 1 : 0; i < text.length; i++) {\r\n            var c = text[i];\r\n            if (c in alphabetValues) digits.push(parseValue(alphabetValues[c]));\r\n            else if (c === \"<\") {\r\n                var start = i;\r\n                do { i++; } while (text[i] !== \">\" && i < text.length);\r\n                digits.push(parseValue(text.slice(start + 1, i)));\r\n            }\r\n            else throw new Error(c + \" is not a valid character\");\r\n        }\r\n        return parseBaseFromArray(digits, base, isNegative);\r\n    };\r\n\r\n    function parseBaseFromArray(digits, base, isNegative) {\r\n        var val = Integer[0], pow = Integer[1], i;\r\n        for (i = digits.length - 1; i >= 0; i--) {\r\n            val = val.add(digits[i].times(pow));\r\n            pow = pow.times(base);\r\n        }\r\n        return isNegative ? val.negate() : val;\r\n    }\r\n\r\n    function stringify(digit, alphabet) {\r\n        alphabet = alphabet || DEFAULT_ALPHABET;\r\n        if (digit < alphabet.length) {\r\n            return alphabet[digit];\r\n        }\r\n        return \"<\" + digit + \">\";\r\n    }\r\n\r\n    function toBase(n, base) {\r\n        base = bigInt(base);\r\n        if (base.isZero()) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            throw new Error(\"Cannot convert nonzero numbers to base 0.\");\r\n        }\r\n        if (base.equals(-1)) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            if (n.isNegative())\r\n                return {\r\n                    value: [].concat.apply([], Array.apply(null, Array(-n.toJSNumber()))\r\n                        .map(Array.prototype.valueOf, [1, 0])\r\n                    ),\r\n                    isNegative: false\r\n                };\r\n\r\n            var arr = Array.apply(null, Array(n.toJSNumber() - 1))\r\n                .map(Array.prototype.valueOf, [0, 1]);\r\n            arr.unshift([1]);\r\n            return {\r\n                value: [].concat.apply([], arr),\r\n                isNegative: false\r\n            };\r\n        }\r\n\r\n        var neg = false;\r\n        if (n.isNegative() && base.isPositive()) {\r\n            neg = true;\r\n            n = n.abs();\r\n        }\r\n        if (base.isUnit()) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n\r\n            return {\r\n                value: Array.apply(null, Array(n.toJSNumber()))\r\n                    .map(Number.prototype.valueOf, 1),\r\n                isNegative: neg\r\n            };\r\n        }\r\n        var out = [];\r\n        var left = n, divmod;\r\n        while (left.isNegative() || left.compareAbs(base) >= 0) {\r\n            divmod = left.divmod(base);\r\n            left = divmod.quotient;\r\n            var digit = divmod.remainder;\r\n            if (digit.isNegative()) {\r\n                digit = base.minus(digit).abs();\r\n                left = left.next();\r\n            }\r\n            out.push(digit.toJSNumber());\r\n        }\r\n        out.push(left.toJSNumber());\r\n        return { value: out.reverse(), isNegative: neg };\r\n    }\r\n\r\n    function toBaseString(n, base, alphabet) {\r\n        var arr = toBase(n, base);\r\n        return (arr.isNegative ? \"-\" : \"\") + arr.value.map(function (x) {\r\n            return stringify(x, alphabet);\r\n        }).join('');\r\n    }\r\n\r\n    BigInteger.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    SmallInteger.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    NativeBigInt.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    BigInteger.prototype.toString = function (radix, alphabet) {\r\n        if (radix === undefined) radix = 10;\r\n        if (radix !== 10) return toBaseString(this, radix, alphabet);\r\n        var v = this.value, l = v.length, str = String(v[--l]), zeros = \"0000000\", digit;\r\n        while (--l >= 0) {\r\n            digit = String(v[l]);\r\n            str += zeros.slice(digit.length) + digit;\r\n        }\r\n        var sign = this.sign ? \"-\" : \"\";\r\n        return sign + str;\r\n    };\r\n\r\n    SmallInteger.prototype.toString = function (radix, alphabet) {\r\n        if (radix === undefined) radix = 10;\r\n        if (radix != 10) return toBaseString(this, radix, alphabet);\r\n        return String(this.value);\r\n    };\r\n\r\n    NativeBigInt.prototype.toString = SmallInteger.prototype.toString;\r\n\r\n    NativeBigInt.prototype.toJSON = BigInteger.prototype.toJSON = SmallInteger.prototype.toJSON = function () { return this.toString(); }\r\n\r\n    BigInteger.prototype.valueOf = function () {\r\n        return parseInt(this.toString(), 10);\r\n    };\r\n    BigInteger.prototype.toJSNumber = BigInteger.prototype.valueOf;\r\n\r\n    SmallInteger.prototype.valueOf = function () {\r\n        return this.value;\r\n    };\r\n    SmallInteger.prototype.toJSNumber = SmallInteger.prototype.valueOf;\r\n    NativeBigInt.prototype.valueOf = NativeBigInt.prototype.toJSNumber = function () {\r\n        return parseInt(this.toString(), 10);\r\n    }\r\n\r\n    function parseStringValue(v) {\r\n        if (isPrecise(+v)) {\r\n            var x = +v;\r\n            if (x === truncate(x))\r\n                return supportsNativeBigInt ? new NativeBigInt(BigInt(x)) : new SmallInteger(x);\r\n            throw new Error(\"Invalid integer: \" + v);\r\n        }\r\n        var sign = v[0] === \"-\";\r\n        if (sign) v = v.slice(1);\r\n        var split = v.split(/e/i);\r\n        if (split.length > 2) throw new Error(\"Invalid integer: \" + split.join(\"e\"));\r\n        if (split.length === 2) {\r\n            var exp = split[1];\r\n            if (exp[0] === \"+\") exp = exp.slice(1);\r\n            exp = +exp;\r\n            if (exp !== truncate(exp) || !isPrecise(exp)) throw new Error(\"Invalid integer: \" + exp + \" is not a valid exponent.\");\r\n            var text = split[0];\r\n            var decimalPlace = text.indexOf(\".\");\r\n            if (decimalPlace >= 0) {\r\n                exp -= text.length - decimalPlace - 1;\r\n                text = text.slice(0, decimalPlace) + text.slice(decimalPlace + 1);\r\n            }\r\n            if (exp < 0) throw new Error(\"Cannot include negative exponent part for integers\");\r\n            text += (new Array(exp + 1)).join(\"0\");\r\n            v = text;\r\n        }\r\n        var isValid = /^([0-9][0-9]*)$/.test(v);\r\n        if (!isValid) throw new Error(\"Invalid integer: \" + v);\r\n        if (supportsNativeBigInt) {\r\n            return new NativeBigInt(BigInt(sign ? \"-\" + v : v));\r\n        }\r\n        var r = [], max = v.length, l = LOG_BASE, min = max - l;\r\n        while (max > 0) {\r\n            r.push(+v.slice(min, max));\r\n            min -= l;\r\n            if (min < 0) min = 0;\r\n            max -= l;\r\n        }\r\n        trim(r);\r\n        return new BigInteger(r, sign);\r\n    }\r\n\r\n    function parseNumberValue(v) {\r\n        if (supportsNativeBigInt) {\r\n            return new NativeBigInt(BigInt(v));\r\n        }\r\n        if (isPrecise(v)) {\r\n            if (v !== truncate(v)) throw new Error(v + \" is not an integer.\");\r\n            return new SmallInteger(v);\r\n        }\r\n        return parseStringValue(v.toString());\r\n    }\r\n\r\n    function parseValue(v) {\r\n        if (typeof v === \"number\") {\r\n            return parseNumberValue(v);\r\n        }\r\n        if (typeof v === \"string\") {\r\n            return parseStringValue(v);\r\n        }\r\n        if (typeof v === \"bigint\") {\r\n            return new NativeBigInt(v);\r\n        }\r\n        return v;\r\n    }\r\n    // Pre-define numbers in range [-999,999]\r\n    for (var i = 0; i < 1000; i++) {\r\n        Integer[i] = parseValue(i);\r\n        if (i > 0) Integer[-i] = parseValue(-i);\r\n    }\r\n    // Backwards compatibility\r\n    Integer.one = Integer[1];\r\n    Integer.zero = Integer[0];\r\n    Integer.minusOne = Integer[-1];\r\n    Integer.max = max;\r\n    Integer.min = min;\r\n    Integer.gcd = gcd;\r\n    Integer.lcm = lcm;\r\n    Integer.isInstance = function (x) { return x instanceof BigInteger || x instanceof SmallInteger || x instanceof NativeBigInt; };\r\n    Integer.randBetween = randBetween;\r\n\r\n    Integer.fromArray = function (digits, base, isNegative) {\r\n        return parseBaseFromArray(digits.map(parseValue), parseValue(base || 10), isNegative);\r\n    };\r\n\r\n    return Integer;\r\n})();\r\n\r\n// Node.js check\r\nif (typeof module !== \"undefined\" && module.hasOwnProperty(\"exports\")) {\r\n    module.exports = bigInt;\r\n}\r\n\r\n//amd check\r\nif (typeof define === \"function\" && define.amd) {\r\n    define( function () {\r\n        return bigInt;\r\n    });\r\n}\r\n","module.exports = require(\"path\");","var json = typeof JSON !== 'undefined' ? JSON : require('jsonify');\n\nmodule.exports = function (obj, opts) {\n    if (!opts) opts = {};\n    if (typeof opts === 'function') opts = { cmp: opts };\n    var space = opts.space || '';\n    if (typeof space === 'number') space = Array(space+1).join(' ');\n    var cycles = (typeof opts.cycles === 'boolean') ? opts.cycles : false;\n    var replacer = opts.replacer || function(key, value) { return value; };\n\n    var cmp = opts.cmp && (function (f) {\n        return function (node) {\n            return function (a, b) {\n                var aobj = { key: a, value: node[a] };\n                var bobj = { key: b, value: node[b] };\n                return f(aobj, bobj);\n            };\n        };\n    })(opts.cmp);\n\n    var seen = [];\n    return (function stringify (parent, key, node, level) {\n        var indent = space ? ('\\n' + new Array(level + 1).join(space)) : '';\n        var colonSeparator = space ? ': ' : ':';\n\n        if (node && node.toJSON && typeof node.toJSON === 'function') {\n            node = node.toJSON();\n        }\n\n        node = replacer.call(parent, key, node);\n\n        if (node === undefined) {\n            return;\n        }\n        if (typeof node !== 'object' || node === null) {\n            return json.stringify(node);\n        }\n        if (isArray(node)) {\n            var out = [];\n            for (var i = 0; i < node.length; i++) {\n                var item = stringify(node, i, node[i], level+1) || json.stringify(null);\n                out.push(indent + space + item);\n            }\n            return '[' + out.join(',') + indent + ']';\n        }\n        else {\n            if (seen.indexOf(node) !== -1) {\n                if (cycles) return json.stringify('__cycle__');\n                throw new TypeError('Converting circular structure to JSON');\n            }\n            else seen.push(node);\n\n            var keys = objectKeys(node).sort(cmp && cmp(node));\n            var out = [];\n            for (var i = 0; i < keys.length; i++) {\n                var key = keys[i];\n                var value = stringify(node, key, node[key], level+1);\n\n                if(!value) continue;\n\n                var keyValue = json.stringify(key)\n                    + colonSeparator\n                    + value;\n                ;\n                out.push(indent + space + keyValue);\n            }\n            seen.splice(seen.indexOf(node), 1);\n            return '{' + out.join(',') + indent + '}';\n        }\n    })({ '': obj }, '', obj, 0);\n};\n\nvar isArray = Array.isArray || function (x) {\n    return {}.toString.call(x) === '[object Array]';\n};\n\nvar objectKeys = Object.keys || function (obj) {\n    var has = Object.prototype.hasOwnProperty || function () { return true };\n    var keys = [];\n    for (var key in obj) {\n        if (has.call(obj, key)) keys.push(key);\n    }\n    return keys;\n};\n","module.exports = require(\"stream\");","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","const nodeFetch = require('node-fetch')\nconst realFetch = nodeFetch.default || nodeFetch\n\nconst fetch = function (url, options) {\n  // Support schemaless URIs on the server for parity with the browser.\n  // Ex: //github.com/ -> https://github.com/\n  if (/^\\/\\//.test(url)) {\n    url = 'https:' + url\n  }\n  return realFetch.call(this, url, options)\n}\n\nfetch.ponyfill = true\n\nmodule.exports = exports = fetch\nexports.fetch = fetch\nexports.Headers = nodeFetch.Headers\nexports.Request = nodeFetch.Request\nexports.Response = nodeFetch.Response\n\n// Needed for TypeScript consumers without esModuleInterop.\nexports.default = fetch\n","/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    asyncTag = '[object AsyncFunction]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    nullTag = '[object Null]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    proxyTag = '[object Proxy]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    undefinedTag = '[object Undefined]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice,\n    symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\n/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = isEqual;\n","module.exports = require(\"zlib\");","/*! https://mths.be/base64 v1.0.0 by @mathias | MIT license */\n;(function(root) {\n\n\t// Detect free variables `exports`.\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`.\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code, and use\n\t// it as `root`.\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar InvalidCharacterError = function(message) {\n\t\tthis.message = message;\n\t};\n\tInvalidCharacterError.prototype = new Error;\n\tInvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\n\tvar error = function(message) {\n\t\t// Note: the error messages used throughout this file match those used by\n\t\t// the native `atob`/`btoa` implementation in Chromium.\n\t\tthrow new InvalidCharacterError(message);\n\t};\n\n\tvar TABLE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\t// http://whatwg.org/html/common-microsyntaxes.html#space-character\n\tvar REGEX_SPACE_CHARACTERS = /[\\t\\n\\f\\r ]/g;\n\n\t// `decode` is designed to be fully compatible with `atob` as described in the\n\t// HTML Standard. http://whatwg.org/html/webappapis.html#dom-windowbase64-atob\n\t// The optimized base64-decoding algorithm used is based on @atk’s excellent\n\t// implementation. https://gist.github.com/atk/1020396\n\tvar decode = function(input) {\n\t\tinput = String(input)\n\t\t\t.replace(REGEX_SPACE_CHARACTERS, '');\n\t\tvar length = input.length;\n\t\tif (length % 4 == 0) {\n\t\t\tinput = input.replace(/==?$/, '');\n\t\t\tlength = input.length;\n\t\t}\n\t\tif (\n\t\t\tlength % 4 == 1 ||\n\t\t\t// http://whatwg.org/C#alphanumeric-ascii-characters\n\t\t\t/[^+a-zA-Z0-9/]/.test(input)\n\t\t) {\n\t\t\terror(\n\t\t\t\t'Invalid character: the string to be decoded is not correctly encoded.'\n\t\t\t);\n\t\t}\n\t\tvar bitCounter = 0;\n\t\tvar bitStorage;\n\t\tvar buffer;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\twhile (++position < length) {\n\t\t\tbuffer = TABLE.indexOf(input.charAt(position));\n\t\t\tbitStorage = bitCounter % 4 ? bitStorage * 64 + buffer : buffer;\n\t\t\t// Unless this is the first of a group of 4 characters…\n\t\t\tif (bitCounter++ % 4) {\n\t\t\t\t// …convert the first 8 bits to a single ASCII character.\n\t\t\t\toutput += String.fromCharCode(\n\t\t\t\t\t0xFF & bitStorage >> (-2 * bitCounter & 6)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t};\n\n\t// `encode` is designed to be fully compatible with `btoa` as described in the\n\t// HTML Standard: http://whatwg.org/html/webappapis.html#dom-windowbase64-btoa\n\tvar encode = function(input) {\n\t\tinput = String(input);\n\t\tif (/[^\\0-\\xFF]/.test(input)) {\n\t\t\t// Note: no need to special-case astral symbols here, as surrogates are\n\t\t\t// matched, and the input is supposed to only contain ASCII anyway.\n\t\t\terror(\n\t\t\t\t'The string to be encoded contains characters outside of the ' +\n\t\t\t\t'Latin1 range.'\n\t\t\t);\n\t\t}\n\t\tvar padding = input.length % 3;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\tvar a;\n\t\tvar b;\n\t\tvar c;\n\t\tvar buffer;\n\t\t// Make sure any padding is handled outside of the loop.\n\t\tvar length = input.length - padding;\n\n\t\twhile (++position < length) {\n\t\t\t// Read three bytes, i.e. 24 bits.\n\t\t\ta = input.charCodeAt(position) << 16;\n\t\t\tb = input.charCodeAt(++position) << 8;\n\t\t\tc = input.charCodeAt(++position);\n\t\t\tbuffer = a + b + c;\n\t\t\t// Turn the 24 bits into four chunks of 6 bits each, and append the\n\t\t\t// matching character for each of them to the output.\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 18 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer >> 12 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer >> 6 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer & 0x3F)\n\t\t\t);\n\t\t}\n\n\t\tif (padding == 2) {\n\t\t\ta = input.charCodeAt(position) << 8;\n\t\t\tb = input.charCodeAt(++position);\n\t\t\tbuffer = a + b;\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 10) +\n\t\t\t\tTABLE.charAt((buffer >> 4) & 0x3F) +\n\t\t\t\tTABLE.charAt((buffer << 2) & 0x3F) +\n\t\t\t\t'='\n\t\t\t);\n\t\t} else if (padding == 1) {\n\t\t\tbuffer = input.charCodeAt(position);\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 2) +\n\t\t\t\tTABLE.charAt((buffer << 4) & 0x3F) +\n\t\t\t\t'=='\n\t\t\t);\n\t\t}\n\n\t\treturn output;\n\t};\n\n\tvar base64 = {\n\t\t'encode': encode,\n\t\t'decode': decode,\n\t\t'version': '1.0.0'\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn base64;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = base64;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (var key in base64) {\n\t\t\t\tbase64.hasOwnProperty(key) && (freeExports[key] = base64[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.base64 = base64;\n\t}\n\n}(this));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decodeXMLStrict = exports.decodeHTML5Strict = exports.decodeHTML4Strict = exports.decodeHTML5 = exports.decodeHTML4 = exports.decodeHTMLStrict = exports.decodeHTML = exports.decodeXML = exports.encodeHTML5 = exports.encodeHTML4 = exports.escapeUTF8 = exports.escape = exports.encodeNonAsciiHTML = exports.encodeHTML = exports.encodeXML = exports.encode = exports.decodeStrict = exports.decode = void 0;\nvar decode_1 = require(\"./decode\");\nvar encode_1 = require(\"./encode\");\n/**\n * Decodes a string with entities.\n *\n * @param data String to decode.\n * @param level Optional level to decode at. 0 = XML, 1 = HTML. Default is 0.\n * @deprecated Use `decodeXML` or `decodeHTML` directly.\n */\nfunction decode(data, level) {\n    return (!level || level <= 0 ? decode_1.decodeXML : decode_1.decodeHTML)(data);\n}\nexports.decode = decode;\n/**\n * Decodes a string with entities. Does not allow missing trailing semicolons for entities.\n *\n * @param data String to decode.\n * @param level Optional level to decode at. 0 = XML, 1 = HTML. Default is 0.\n * @deprecated Use `decodeHTMLStrict` or `decodeXML` directly.\n */\nfunction decodeStrict(data, level) {\n    return (!level || level <= 0 ? decode_1.decodeXML : decode_1.decodeHTMLStrict)(data);\n}\nexports.decodeStrict = decodeStrict;\n/**\n * Encodes a string with entities.\n *\n * @param data String to encode.\n * @param level Optional level to encode at. 0 = XML, 1 = HTML. Default is 0.\n * @deprecated Use `encodeHTML`, `encodeXML` or `encodeNonAsciiHTML` directly.\n */\nfunction encode(data, level) {\n    return (!level || level <= 0 ? encode_1.encodeXML : encode_1.encodeHTML)(data);\n}\nexports.encode = encode;\nvar encode_2 = require(\"./encode\");\nObject.defineProperty(exports, \"encodeXML\", { enumerable: true, get: function () { return encode_2.encodeXML; } });\nObject.defineProperty(exports, \"encodeHTML\", { enumerable: true, get: function () { return encode_2.encodeHTML; } });\nObject.defineProperty(exports, \"encodeNonAsciiHTML\", { enumerable: true, get: function () { return encode_2.encodeNonAsciiHTML; } });\nObject.defineProperty(exports, \"escape\", { enumerable: true, get: function () { return encode_2.escape; } });\nObject.defineProperty(exports, \"escapeUTF8\", { enumerable: true, get: function () { return encode_2.escapeUTF8; } });\n// Legacy aliases (deprecated)\nObject.defineProperty(exports, \"encodeHTML4\", { enumerable: true, get: function () { return encode_2.encodeHTML; } });\nObject.defineProperty(exports, \"encodeHTML5\", { enumerable: true, get: function () { return encode_2.encodeHTML; } });\nvar decode_2 = require(\"./decode\");\nObject.defineProperty(exports, \"decodeXML\", { enumerable: true, get: function () { return decode_2.decodeXML; } });\nObject.defineProperty(exports, \"decodeHTML\", { enumerable: true, get: function () { return decode_2.decodeHTML; } });\nObject.defineProperty(exports, \"decodeHTMLStrict\", { enumerable: true, get: function () { return decode_2.decodeHTMLStrict; } });\n// Legacy aliases (deprecated)\nObject.defineProperty(exports, \"decodeHTML4\", { enumerable: true, get: function () { return decode_2.decodeHTML; } });\nObject.defineProperty(exports, \"decodeHTML5\", { enumerable: true, get: function () { return decode_2.decodeHTML; } });\nObject.defineProperty(exports, \"decodeHTML4Strict\", { enumerable: true, get: function () { return decode_2.decodeHTMLStrict; } });\nObject.defineProperty(exports, \"decodeHTML5Strict\", { enumerable: true, get: function () { return decode_2.decodeHTMLStrict; } });\nObject.defineProperty(exports, \"decodeXMLStrict\", { enumerable: true, get: function () { return decode_2.decodeXML; } });\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used to compose bitmasks for comparison styles. */\nvar UNORDERED_COMPARE_FLAG = 1,\n    PARTIAL_COMPARE_FLAG = 2;\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_SAFE_INTEGER = 9007199254740991,\n    MAX_INTEGER = 1.7976931348623157e+308,\n    NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/,\n    reLeadingDot = /^\\./,\n    rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    return freeProcess && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object),\n    nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values ? values.length : 0;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\n/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  this.__data__ = new ListCache(entries);\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  return this.__data__['delete'](key);\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var cache = this.__data__;\n  if (cache instanceof ListCache) {\n    var pairs = cache.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      return this;\n    }\n    cache = this.__data__ = new MapCache(pairs);\n  }\n  cache.set(key, value);\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = (isArray(value) || isArguments(value))\n    ? baseTimes(value.length, String)\n    : [];\n\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = isKey(path, object) ? [path] : castPath(path);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\n/**\n * The base implementation of `getTag`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  return objectToString.call(value);\n}\n\n/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {boolean} [bitmask] The bitmask of comparison flags.\n *  The bitmask may be composed of the following flags:\n *     1 - Unordered comparison\n *     2 - Partial comparison\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, customizer, bitmask, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);\n}\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual`\n *  for more details.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = arrayTag,\n      othTag = arrayTag;\n\n  if (!objIsArr) {\n    objTag = getTag(object);\n    objTag = objTag == argsTag ? objectTag : objTag;\n  }\n  if (!othIsArr) {\n    othTag = getTag(other);\n    othTag = othTag == argsTag ? objectTag : othTag;\n  }\n  var objIsObj = objTag == objectTag && !isHostObject(object),\n      othIsObj = othTag == objectTag && !isHostObject(other),\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, equalFunc, customizer, bitmask, stack)\n      : equalByTag(object, other, objTag, equalFunc, customizer, bitmask, stack);\n  }\n  if (!(bitmask & PARTIAL_COMPARE_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, customizer, bitmask, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, equalFunc, customizer, bitmask, stack);\n}\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[objectToString.call(value)];\n}\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);\n  };\n}\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value) {\n  return isArray(value) ? value : stringToPath(value);\n}\n\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\nfunction createFind(findIndexFunc) {\n  return function(collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n      predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n    }\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} customizer The function to customize comparisons.\n * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n *  for more details.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, equalFunc, customizer, bitmask, stack) {\n  var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & UNORDERED_COMPARE_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!seen.has(othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {\n              return seen.add(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, customizer, bitmask, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} customizer The function to customize comparisons.\n * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n *  for more details.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, equalFunc, customizer, bitmask, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & PARTIAL_COMPARE_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= UNORDERED_COMPARE_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), equalFunc, customizer, bitmask, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} customizer The function to customize comparisons.\n * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n *  for more details.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, equalFunc, customizer, bitmask, stack) {\n  var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n      objProps = keys(object),\n      objLength = objProps.length,\n      othProps = keys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n  return result;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11,\n// for data views in Edge < 14, and promises in Node.js.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = objectToString.call(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : undefined;\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = isKey(path, object) ? [path] : castPath(path);\n\n  var result,\n      index = -1,\n      length = path.length;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result) {\n    return result;\n  }\n  var length = object ? object.length : 0;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\n/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    return object[key] === srcValue &&\n      (srcValue !== undefined || (key in Object(object)));\n  };\n}\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoize(function(string) {\n  string = toString(string);\n\n  var result = [];\n  if (reLeadingDot.test(string)) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * This method is like `_.findIndex` except that it iterates over elements\n * of `collection` from right to left.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity]\n *  The function invoked per iteration.\n * @param {number} [fromIndex=array.length-1] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': true },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': false }\n * ];\n *\n * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n * // => 2\n *\n * // The `_.matches` iteratee shorthand.\n * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n * // => 0\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findLastIndex(users, ['active', false]);\n * // => 2\n *\n * // The `_.property` iteratee shorthand.\n * _.findLastIndex(users, 'active');\n * // => 0\n */\nfunction findLastIndex(array, predicate, fromIndex) {\n  var length = array ? array.length : 0;\n  if (!length) {\n    return -1;\n  }\n  var index = length - 1;\n  if (fromIndex !== undefined) {\n    index = toInteger(fromIndex);\n    index = fromIndex < 0\n      ? nativeMax(length + index, 0)\n      : nativeMin(index, length - 1);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index, true);\n}\n\n/**\n * This method is like `_.find` except that it iterates over elements of\n * `collection` from right to left.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity]\n *  The function invoked per iteration.\n * @param {number} [fromIndex=collection.length-1] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * _.findLast([1, 2, 3, 4], function(n) {\n *   return n % 2 == 1;\n * });\n * // => 3\n */\nvar findLast = createFind(findLastIndex);\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result);\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Assign cache to `_.memoize`.\nmemoize.Cache = MapCache;\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = findLast;\n","module.exports = require(\"url\");","//     Underscore.js 1.9.1\n//     http://underscorejs.org\n//     (c) 2009-2018 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` (`self`) in the browser, `global`\n  // on the server, or `this` in some virtual machines. We use `self`\n  // instead of `window` for `WebWorker` support.\n  var root = typeof self == 'object' && self.self === self && self ||\n            typeof global == 'object' && global.global === global && global ||\n            this ||\n            {};\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype;\n  var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var push = ArrayProto.push,\n      slice = ArrayProto.slice,\n      toString = ObjProto.toString,\n      hasOwnProperty = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var nativeIsArray = Array.isArray,\n      nativeKeys = Object.keys,\n      nativeCreate = Object.create;\n\n  // Naked function reference for surrogate-prototype-swapping.\n  var Ctor = function(){};\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for their old module API. If we're in\n  // the browser, add `_` as a global object.\n  // (`nodeType` is checked to ensure that `module`\n  // and `exports` are not HTML elements.)\n  if (typeof exports != 'undefined' && !exports.nodeType) {\n    if (typeof module != 'undefined' && !module.nodeType && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.9.1';\n\n  // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n  var optimizeCb = function(func, context, argCount) {\n    if (context === void 0) return func;\n    switch (argCount == null ? 3 : argCount) {\n      case 1: return function(value) {\n        return func.call(context, value);\n      };\n      // The 2-argument case is omitted because we’re not using it.\n      case 3: return function(value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n    }\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  var builtinIteratee;\n\n  // An internal function to generate callbacks that can be applied to each\n  // element in a collection, returning the desired result — either `identity`,\n  // an arbitrary callback, a property matcher, or a property accessor.\n  var cb = function(value, context, argCount) {\n    if (_.iteratee !== builtinIteratee) return _.iteratee(value, context);\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n    if (_.isObject(value) && !_.isArray(value)) return _.matcher(value);\n    return _.property(value);\n  };\n\n  // External wrapper for our callback generator. Users may customize\n  // `_.iteratee` if they want additional predicate/iteratee shorthand styles.\n  // This abstraction hides the internal-only argCount argument.\n  _.iteratee = builtinIteratee = function(value, context) {\n    return cb(value, context, Infinity);\n  };\n\n  // Some functions take a variable number of arguments, or a few expected\n  // arguments at the beginning and then a variable number of values to operate\n  // on. This helper accumulates all remaining arguments past the function’s\n  // argument length (or an explicit `startIndex`), into an array that becomes\n  // the last argument. Similar to ES6’s \"rest parameter\".\n  var restArguments = function(func, startIndex) {\n    startIndex = startIndex == null ? func.length - 1 : +startIndex;\n    return function() {\n      var length = Math.max(arguments.length - startIndex, 0),\n          rest = Array(length),\n          index = 0;\n      for (; index < length; index++) {\n        rest[index] = arguments[index + startIndex];\n      }\n      switch (startIndex) {\n        case 0: return func.call(this, rest);\n        case 1: return func.call(this, arguments[0], rest);\n        case 2: return func.call(this, arguments[0], arguments[1], rest);\n      }\n      var args = Array(startIndex + 1);\n      for (index = 0; index < startIndex; index++) {\n        args[index] = arguments[index];\n      }\n      args[startIndex] = rest;\n      return func.apply(this, args);\n    };\n  };\n\n  // An internal function for creating a new object that inherits from another.\n  var baseCreate = function(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor;\n    Ctor.prototype = null;\n    return result;\n  };\n\n  var shallowProperty = function(key) {\n    return function(obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  };\n\n  var has = function(obj, path) {\n    return obj != null && hasOwnProperty.call(obj, path);\n  }\n\n  var deepGet = function(obj, path) {\n    var length = path.length;\n    for (var i = 0; i < length; i++) {\n      if (obj == null) return void 0;\n      obj = obj[path[i]];\n    }\n    return length ? obj : void 0;\n  };\n\n  // Helper for collection methods to determine whether a collection\n  // should be iterated as an array or as an object.\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var getLength = shallowProperty('length');\n  var isArrayLike = function(collection) {\n    var length = getLength(collection);\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  };\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n  _.each = _.forEach = function(obj, iteratee, context) {\n    iteratee = optimizeCb(iteratee, context);\n    var i, length;\n    if (isArrayLike(obj)) {\n      for (i = 0, length = obj.length; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n    return obj;\n  };\n\n  // Return the results of applying the iteratee to each element.\n  _.map = _.collect = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length);\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Create a reducing function iterating left or right.\n  var createReduce = function(dir) {\n    // Wrap code that reassigns argument variables in a separate function than\n    // the one that accesses `arguments.length` to avoid a perf hit. (#1991)\n    var reducer = function(obj, iteratee, memo, initial) {\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n      if (!initial) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n      return memo;\n    };\n\n    return function(obj, iteratee, memo, context) {\n      var initial = arguments.length >= 3;\n      return reducer(obj, optimizeCb(iteratee, context, 4), memo, initial);\n    };\n  };\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n  _.reduce = _.foldl = _.inject = createReduce(1);\n\n  // The right-associative version of reduce, also known as `foldr`.\n  _.reduceRight = _.foldr = createReduce(-1);\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var keyFinder = isArrayLike(obj) ? _.findIndex : _.findKey;\n    var key = keyFinder(obj, predicate, context);\n    if (key !== void 0 && key !== -1) return obj[key];\n  };\n\n  // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    predicate = cb(predicate, context);\n    _.each(obj, function(value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(obj, _.negate(cb(predicate)), context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n    return true;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n  _.some = _.any = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  };\n\n  // Determine if the array or object contains a given item (using `===`).\n  // Aliased as `includes` and `include`.\n  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\n    if (!isArrayLike(obj)) obj = _.values(obj);\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n    return _.indexOf(obj, item, fromIndex) >= 0;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = restArguments(function(obj, path, args) {\n    var contextPath, func;\n    if (_.isFunction(path)) {\n      func = path;\n    } else if (_.isArray(path)) {\n      contextPath = path.slice(0, -1);\n      path = path[path.length - 1];\n    }\n    return _.map(obj, function(context) {\n      var method = func;\n      if (!method) {\n        if (contextPath && contextPath.length) {\n          context = deepGet(context, contextPath);\n        }\n        if (context == null) return void 0;\n        method = context[path];\n      }\n      return method == null ? method : method.apply(context, args);\n    });\n  });\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matcher(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matcher(attrs));\n  };\n\n  // Return the maximum element (or element-based computation).\n  _.max = function(obj, iteratee, context) {\n    var result = -Infinity, lastComputed = -Infinity,\n        value, computed;\n    if (iteratee == null || typeof iteratee == 'number' && typeof obj[0] != 'object' && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value != null && value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(v, index, list) {\n        computed = iteratee(v, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = v;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iteratee, context) {\n    var result = Infinity, lastComputed = Infinity,\n        value, computed;\n    if (iteratee == null || typeof iteratee == 'number' && typeof obj[0] != 'object' && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value != null && value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(v, index, list) {\n        computed = iteratee(v, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = v;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Shuffle a collection.\n  _.shuffle = function(obj) {\n    return _.sample(obj, Infinity);\n  };\n\n  // Sample **n** random values from a collection using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (!isArrayLike(obj)) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    var sample = isArrayLike(obj) ? _.clone(obj) : _.values(obj);\n    var length = getLength(sample);\n    n = Math.max(Math.min(n, length), 0);\n    var last = length - 1;\n    for (var index = 0; index < n; index++) {\n      var rand = _.random(index, last);\n      var temp = sample[index];\n      sample[index] = sample[rand];\n      sample[rand] = temp;\n    }\n    return sample.slice(0, n);\n  };\n\n  // Sort the object's values by a criterion produced by an iteratee.\n  _.sortBy = function(obj, iteratee, context) {\n    var index = 0;\n    iteratee = cb(iteratee, context);\n    return _.pluck(_.map(obj, function(value, key, list) {\n      return {\n        value: value,\n        index: index++,\n        criteria: iteratee(value, key, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior, partition) {\n    return function(obj, iteratee, context) {\n      var result = partition ? [[], []] : {};\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, value, key) {\n    if (has(result, key)) result[key].push(value); else result[key] = [value];\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, value, key) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, value, key) {\n    if (has(result, key)) result[key]++; else result[key] = 1;\n  });\n\n  var reStrSymbol = /[^\\ud800-\\udfff]|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\ud800-\\udfff]/g;\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (_.isString(obj)) {\n      // Keep surrogate pair characters together\n      return obj.match(reStrSymbol);\n    }\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n  };\n\n  // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = group(function(result, value, pass) {\n    result[pass ? 0 : 1].push(value);\n  }, true);\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null || array.length < 1) return n == null ? void 0 : [];\n    if (n == null || guard) return array[0];\n    return _.initial(array, array.length - n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array.\n  _.last = function(array, n, guard) {\n    if (array == null || array.length < 1) return n == null ? void 0 : [];\n    if (n == null || guard) return array[array.length - 1];\n    return _.rest(array, Math.max(0, array.length - n));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, Boolean);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, strict, output) {\n    output = output || [];\n    var idx = output.length;\n    for (var i = 0, length = getLength(input); i < length; i++) {\n      var value = input[i];\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n        // Flatten current level of array or arguments object.\n        if (shallow) {\n          var j = 0, len = value.length;\n          while (j < len) output[idx++] = value[j++];\n        } else {\n          flatten(value, shallow, strict, output);\n          idx = output.length;\n        }\n      } else if (!strict) {\n        output[idx++] = value;\n      }\n    }\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, false);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = restArguments(function(array, otherArrays) {\n    return _.difference(array, otherArrays);\n  });\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // The faster algorithm will not work with an iteratee if the iteratee\n  // is not a one-to-one function, so providing an iteratee will disable\n  // the faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n    if (iteratee != null) iteratee = cb(iteratee, context);\n    var result = [];\n    var seen = [];\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var value = array[i],\n          computed = iteratee ? iteratee(value, i, array) : value;\n      if (isSorted && !iteratee) {\n        if (!i || seen !== computed) result.push(value);\n        seen = computed;\n      } else if (iteratee) {\n        if (!_.contains(seen, computed)) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (!_.contains(result, value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = restArguments(function(arrays) {\n    return _.uniq(flatten(arrays, true, true));\n  });\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      var j;\n      for (j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = restArguments(function(array, rest) {\n    rest = flatten(rest, true, true);\n    return _.filter(array, function(value){\n      return !_.contains(rest, value);\n    });\n  });\n\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices.\n  _.unzip = function(array) {\n    var length = array && _.max(array, getLength).length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n    return result;\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = restArguments(_.unzip);\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values. Passing by pairs is the reverse of _.pairs.\n  _.object = function(list, values) {\n    var result = {};\n    for (var i = 0, length = getLength(list); i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // Generator function to create the findIndex and findLastIndex functions.\n  var createPredicateIndexFinder = function(dir) {\n    return function(array, predicate, context) {\n      predicate = cb(predicate, context);\n      var length = getLength(array);\n      var index = dir > 0 ? 0 : length - 1;\n      for (; index >= 0 && index < length; index += dir) {\n        if (predicate(array[index], index, array)) return index;\n      }\n      return -1;\n    };\n  };\n\n  // Returns the first index on an array-like that passes a predicate test.\n  _.findIndex = createPredicateIndexFinder(1);\n  _.findLastIndex = createPredicateIndexFinder(-1);\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iteratee, context) {\n    iteratee = cb(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0, high = getLength(array);\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n    }\n    return low;\n  };\n\n  // Generator function to create the indexOf and lastIndexOf functions.\n  var createIndexFinder = function(dir, predicateFind, sortedIndex) {\n    return function(array, item, idx) {\n      var i = 0, length = getLength(array);\n      if (typeof idx == 'number') {\n        if (dir > 0) {\n          i = idx >= 0 ? idx : Math.max(idx + length, i);\n        } else {\n          length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n        }\n      } else if (sortedIndex && idx && length) {\n        idx = sortedIndex(array, item);\n        return array[idx] === item ? idx : -1;\n      }\n      if (item !== item) {\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n        return idx >= 0 ? idx + i : -1;\n      }\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n        if (array[idx] === item) return idx;\n      }\n      return -1;\n    };\n  };\n\n  // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (stop == null) {\n      stop = start || 0;\n      start = 0;\n    }\n    if (!step) {\n      step = stop < start ? -1 : 1;\n    }\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  };\n\n  // Chunk a single array into multiple arrays, each containing `count` or fewer\n  // items.\n  _.chunk = function(array, count) {\n    if (count == null || count < 1) return [];\n    var result = [];\n    var i = 0, length = array.length;\n    while (i < length) {\n      result.push(slice.call(array, i, i += count));\n    }\n    return result;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments.\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  };\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = restArguments(function(func, context, args) {\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var bound = restArguments(function(callArgs) {\n      return executeBound(func, bound, context, this, args.concat(callArgs));\n    });\n    return bound;\n  });\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder by default, allowing any combination of arguments to be\n  // pre-filled. Set `_.partial.placeholder` for a custom placeholder argument.\n  _.partial = restArguments(function(func, boundArgs) {\n    var placeholder = _.partial.placeholder;\n    var bound = function() {\n      var position = 0, length = boundArgs.length;\n      var args = Array(length);\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === placeholder ? arguments[position++] : boundArgs[i];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return executeBound(func, bound, this, this, args);\n    };\n    return bound;\n  });\n\n  _.partial.placeholder = _;\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = restArguments(function(obj, keys) {\n    keys = flatten(keys, false, false);\n    var index = keys.length;\n    if (index < 1) throw new Error('bindAll must be passed function names');\n    while (index--) {\n      var key = keys[index];\n      obj[key] = _.bind(obj[key], obj);\n    }\n  });\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memoize = function(key) {\n      var cache = memoize.cache;\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n      if (!has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = restArguments(function(func, wait, args) {\n    return setTimeout(function() {\n      return func.apply(null, args);\n    }, wait);\n  });\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = _.partial(_.delay, _, 1);\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var timeout, context, args, result;\n    var previous = 0;\n    if (!options) options = {};\n\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n\n    var throttled = function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n\n    throttled.cancel = function() {\n      clearTimeout(timeout);\n      previous = 0;\n      timeout = context = args = null;\n    };\n\n    return throttled;\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, result;\n\n    var later = function(context, args) {\n      timeout = null;\n      if (args) result = func.apply(context, args);\n    };\n\n    var debounced = restArguments(function(args) {\n      if (timeout) clearTimeout(timeout);\n      if (immediate) {\n        var callNow = !timeout;\n        timeout = setTimeout(later, wait);\n        if (callNow) result = func.apply(this, args);\n      } else {\n        timeout = _.delay(later, wait, this, args);\n      }\n\n      return result;\n    });\n\n    debounced.cancel = function() {\n      clearTimeout(timeout);\n      timeout = null;\n    };\n\n    return debounced;\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a negated version of the passed-in predicate.\n  _.negate = function(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) result = args[i].call(this, result);\n      return result;\n    };\n  };\n\n  // Returns a function that will only be executed on and after the Nth call.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Returns a function that will only be executed up to (but not including) the Nth call.\n  _.before = function(times, func) {\n    var memo;\n    return function() {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      }\n      if (times <= 1) func = null;\n      return memo;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = _.partial(_.before, 2);\n\n  _.restArguments = restArguments;\n\n  // Object Functions\n  // ----------------\n\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n    'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n  var collectNonEnumProps = function(obj, keys) {\n    var nonEnumIdx = nonEnumerableProps.length;\n    var constructor = obj.constructor;\n    var proto = _.isFunction(constructor) && constructor.prototype || ObjProto;\n\n    // Constructor is a special case.\n    var prop = 'constructor';\n    if (has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n    while (nonEnumIdx--) {\n      prop = nonEnumerableProps[nonEnumIdx];\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n        keys.push(prop);\n      }\n    }\n  };\n\n  // Retrieve the names of an object's own properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`.\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (has(obj, key)) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve all the property names of an object.\n  _.allKeys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Returns the results of applying the iteratee to each element of the object.\n  // In contrast to _.map it returns an object.\n  _.mapObject = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = _.keys(obj),\n        length = keys.length,\n        results = {};\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys[index];\n      results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  // The opposite of _.object.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`.\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // An internal function for creating assigner functions.\n  var createAssigner = function(keysFunc, defaults) {\n    return function(obj) {\n      var length = arguments.length;\n      if (defaults) obj = Object(obj);\n      if (length < 2 || obj == null) return obj;\n      for (var index = 1; index < length; index++) {\n        var source = arguments[index],\n            keys = keysFunc(source),\n            l = keys.length;\n        for (var i = 0; i < l; i++) {\n          var key = keys[i];\n          if (!defaults || obj[key] === void 0) obj[key] = source[key];\n        }\n      }\n      return obj;\n    };\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = createAssigner(_.allKeys);\n\n  // Assigns a given object with all the own properties in the passed-in object(s).\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n  _.extendOwn = _.assign = createAssigner(_.keys);\n\n  // Returns the first key on an object that passes a predicate test.\n  _.findKey = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = _.keys(obj), key;\n    for (var i = 0, length = keys.length; i < length; i++) {\n      key = keys[i];\n      if (predicate(obj[key], key, obj)) return key;\n    }\n  };\n\n  // Internal pick helper function to determine if `obj` has key `key`.\n  var keyInObj = function(value, key, obj) {\n    return key in obj;\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = restArguments(function(obj, keys) {\n    var result = {}, iteratee = keys[0];\n    if (obj == null) return result;\n    if (_.isFunction(iteratee)) {\n      if (keys.length > 1) iteratee = optimizeCb(iteratee, keys[1]);\n      keys = _.allKeys(obj);\n    } else {\n      iteratee = keyInObj;\n      keys = flatten(keys, false, false);\n      obj = Object(obj);\n    }\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n      var value = obj[key];\n      if (iteratee(value, key, obj)) result[key] = value;\n    }\n    return result;\n  });\n\n  // Return a copy of the object without the blacklisted properties.\n  _.omit = restArguments(function(obj, keys) {\n    var iteratee = keys[0], context;\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n      if (keys.length > 1) context = keys[1];\n    } else {\n      keys = _.map(flatten(keys, false, false), String);\n      iteratee = function(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  });\n\n  // Fill in a given object with default properties.\n  _.defaults = createAssigner(_.allKeys, true);\n\n  // Creates an object that inherits from the given prototype object.\n  // If additional properties are provided then they will be added to the\n  // created object.\n  _.create = function(prototype, props) {\n    var result = baseCreate(prototype);\n    if (props) _.extendOwn(result, props);\n    return result;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Returns whether an object has a given set of `key:value` pairs.\n  _.isMatch = function(object, attrs) {\n    var keys = _.keys(attrs), length = keys.length;\n    if (object == null) return !length;\n    var obj = Object(object);\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n    }\n    return true;\n  };\n\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq, deepEq;\n  eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // `null` or `undefined` only equal to itself (strict comparison).\n    if (a == null || b == null) return false;\n    // `NaN`s are equivalent, but non-reflexive.\n    if (a !== a) return b !== b;\n    // Exhaust primitive checks\n    var type = typeof a;\n    if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\n    return deepEq(a, b, aStack, bStack);\n  };\n\n  // Internal recursive comparison function for `isEqual`.\n  deepEq = function(a, b, aStack, bStack) {\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN.\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n      case '[object Symbol]':\n        return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\n    }\n\n    var areArrays = className === '[object Array]';\n    if (!areArrays) {\n      if (typeof a != 'object' || typeof b != 'object') return false;\n\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n                          && ('constructor' in a && 'constructor' in b)) {\n        return false;\n      }\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false;\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      length = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      if (_.keys(b).length !== length) return false;\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n    return _.keys(obj).length === 0;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError, isMap, isWeakMap, isSet, isWeakSet.\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error', 'Symbol', 'Map', 'WeakMap', 'Set', 'WeakSet'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return has(obj, 'callee');\n    };\n  }\n\n  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n  // IE 11 (#1621), Safari 8 (#1929), and PhantomJS (#2236).\n  var nodelist = root.document && root.document.childNodes;\n  if (typeof /./ != 'function' && typeof Int8Array != 'object' && typeof nodelist != 'function') {\n    _.isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return !_.isSymbol(obj) && isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`?\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && isNaN(obj);\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, path) {\n    if (!_.isArray(path)) {\n      return has(obj, path);\n    }\n    var length = path.length;\n    for (var i = 0; i < length; i++) {\n      var key = path[i];\n      if (obj == null || !hasOwnProperty.call(obj, key)) {\n        return false;\n      }\n      obj = obj[key];\n    }\n    return !!length;\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iteratees.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Predicate-generating functions. Often useful outside of Underscore.\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.noop = function(){};\n\n  // Creates a function that, when passed an object, will traverse that object’s\n  // properties down the given `path`, specified as an array of keys or indexes.\n  _.property = function(path) {\n    if (!_.isArray(path)) {\n      return shallowProperty(path);\n    }\n    return function(obj) {\n      return deepGet(obj, path);\n    };\n  };\n\n  // Generates a function for a given object that returns a given property.\n  _.propertyOf = function(obj) {\n    if (obj == null) {\n      return function(){};\n    }\n    return function(path) {\n      return !_.isArray(path) ? obj[path] : deepGet(obj, path);\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of\n  // `key:value` pairs.\n  _.matcher = _.matches = function(attrs) {\n    attrs = _.extendOwn({}, attrs);\n    return function(obj) {\n      return _.isMatch(obj, attrs);\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = optimizeCb(iteratee, context, 1);\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n  // List of HTML entities for escaping.\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n  var unescapeMap = _.invert(escapeMap);\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  var createEscaper = function(map) {\n    var escaper = function(match) {\n      return map[match];\n    };\n    // Regexes for identifying a key that needs to be escaped.\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function(string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap);\n\n  // Traverses the children of `obj` along `path`. If a child is a function, it\n  // is invoked with its parent as context. Returns the value of the final\n  // child, or `fallback` if any child is undefined.\n  _.result = function(obj, path, fallback) {\n    if (!_.isArray(path)) path = [path];\n    var length = path.length;\n    if (!length) {\n      return _.isFunction(fallback) ? fallback.call(obj) : fallback;\n    }\n    for (var i = 0; i < length; i++) {\n      var prop = obj == null ? void 0 : obj[path[i]];\n      if (prop === void 0) {\n        prop = fallback;\n        i = length; // Ensure we don't continue iterating.\n      }\n      obj = _.isFunction(prop) ? prop.call(obj) : prop;\n    }\n    return obj;\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate: /<%([\\s\\S]+?)%>/g,\n    interpolate: /<%=([\\s\\S]+?)%>/g,\n    escape: /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\": \"'\",\n    '\\\\': '\\\\',\n    '\\r': 'r',\n    '\\n': 'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escapeRegExp = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function(match) {\n    return '\\\\' + escapes[match];\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n  _.template = function(text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escapeRegExp, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offset.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + 'return __p;\\n';\n\n    var render;\n    try {\n      render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n  _.chain = function(obj) {\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var chainResult = function(instance, obj) {\n    return instance._chain ? _(obj).chain() : obj;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    _.each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return chainResult(this, func.apply(_, args));\n      };\n    });\n    return _;\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return chainResult(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  _.each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return chainResult(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  // Extracts the result from a wrapped and chained object.\n  _.prototype.value = function() {\n    return this._wrapped;\n  };\n\n  // Provide unwrapping proxy for some methods used in engine operations\n  // such as arithmetic and JSON stringification.\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n  _.prototype.toString = function() {\n    return String(this._wrapped);\n  };\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (typeof define == 'function' && define.amd) {\n    define('underscore', [], function() {\n      return _;\n    });\n  }\n}());\n","module.exports = require(\"buffer\");","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @file utils.js\n * @author Marek Kotewicz <marek@parity.io>\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\nvar _ = require('underscore');\nvar ethjsUnit = require('ethjs-unit');\nvar utils = require('./utils.js');\nvar soliditySha3 = require('./soliditySha3.js');\nvar randombytes = require('randombytes');\nvar BN = require('bn.js');\n/**\n * Fires an error in an event emitter and callback and returns the eventemitter\n *\n * @method _fireError\n * @param {Object} error a string, a error, or an object with {message, data}\n * @param {Object} emitter\n * @param {Function} reject\n * @param {Function} callback\n * @param {any} optionalData\n * @return {Object} the emitter\n */\nvar _fireError = function (error, emitter, reject, callback, optionalData) {\n    /*jshint maxcomplexity: 10 */\n    // add data if given\n    if (_.isObject(error) && !(error instanceof Error) && error.data) {\n        if (_.isObject(error.data) || _.isArray(error.data)) {\n            error.data = JSON.stringify(error.data, null, 2);\n        }\n        error = error.message + \"\\n\" + error.data;\n    }\n    if (_.isString(error)) {\n        error = new Error(error);\n    }\n    if (_.isFunction(callback)) {\n        callback(error, optionalData);\n    }\n    if (_.isFunction(reject)) {\n        // suppress uncatched error if an error listener is present\n        // OR suppress uncatched error if an callback listener is present\n        if (emitter &&\n            (_.isFunction(emitter.listeners) &&\n                emitter.listeners('error').length) || _.isFunction(callback)) {\n            emitter.catch(function () { });\n        }\n        // reject later, to be able to return emitter\n        setTimeout(function () {\n            reject(error);\n        }, 1);\n    }\n    if (emitter && _.isFunction(emitter.emit)) {\n        // emit later, to be able to return emitter\n        setTimeout(function () {\n            emitter.emit('error', error, optionalData);\n            emitter.removeAllListeners();\n        }, 1);\n    }\n    return emitter;\n};\n/**\n * Should be used to create full function/event name from json abi\n *\n * @method _jsonInterfaceMethodToString\n * @param {Object} json\n * @return {String} full function/event name\n */\nvar _jsonInterfaceMethodToString = function (json) {\n    if (_.isObject(json) && json.name && json.name.indexOf('(') !== -1) {\n        return json.name;\n    }\n    return json.name + '(' + _flattenTypes(false, json.inputs).join(',') + ')';\n};\n/**\n * Should be used to flatten json abi inputs/outputs into an array of type-representing-strings\n *\n * @method _flattenTypes\n * @param {bool} includeTuple\n * @param {Object} puts\n * @return {Array} parameters as strings\n */\nvar _flattenTypes = function (includeTuple, puts) {\n    // console.log(\"entered _flattenTypes. inputs/outputs: \" + puts)\n    var types = [];\n    puts.forEach(function (param) {\n        if (typeof param.components === 'object') {\n            if (param.type.substring(0, 5) !== 'tuple') {\n                throw new Error('components found but type is not tuple; report on GitHub');\n            }\n            var suffix = '';\n            var arrayBracket = param.type.indexOf('[');\n            if (arrayBracket >= 0) {\n                suffix = param.type.substring(arrayBracket);\n            }\n            var result = _flattenTypes(includeTuple, param.components);\n            // console.log(\"result should have things: \" + result)\n            if (_.isArray(result) && includeTuple) {\n                // console.log(\"include tuple word, and its an array. joining...: \" + result.types)\n                types.push('tuple(' + result.join(',') + ')' + suffix);\n            }\n            else if (!includeTuple) {\n                // console.log(\"don't include tuple, but its an array. joining...: \" + result)\n                types.push('(' + result.join(',') + ')' + suffix);\n            }\n            else {\n                // console.log(\"its a single type within a tuple: \" + result.types)\n                types.push('(' + result + ')');\n            }\n        }\n        else {\n            // console.log(\"its a type and not directly in a tuple: \" + param.type)\n            types.push(param.type);\n        }\n    });\n    return types;\n};\n/**\n * Returns a random hex string by the given bytes size\n *\n * @param {Number} size\n * @returns {string}\n */\nvar randomHex = function (size) {\n    return '0x' + randombytes(size).toString('hex');\n};\n/**\n * Should be called to get ascii from it's hex representation\n *\n * @method hexToAscii\n * @param {String} hex\n * @returns {String} ascii string representation of hex value\n */\nvar hexToAscii = function (hex) {\n    if (!utils.isHexStrict(hex))\n        throw new Error('The parameter must be a valid HEX string.');\n    var str = \"\";\n    var i = 0, l = hex.length;\n    if (hex.substring(0, 2) === '0x') {\n        i = 2;\n    }\n    for (; i < l; i += 2) {\n        var code = parseInt(hex.substr(i, 2), 16);\n        str += String.fromCharCode(code);\n    }\n    return str;\n};\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @method asciiToHex\n * @param {String} str\n * @returns {String} hex representation of input string\n */\nvar asciiToHex = function (str) {\n    if (!str)\n        return \"0x00\";\n    var hex = \"\";\n    for (var i = 0; i < str.length; i++) {\n        var code = str.charCodeAt(i);\n        var n = code.toString(16);\n        hex += n.length < 2 ? '0' + n : n;\n    }\n    return \"0x\" + hex;\n};\n/**\n * Returns value of unit in Wei\n *\n * @method getUnitValue\n * @param {String} unit the unit to convert to, default ether\n * @returns {BN} value of the unit (in Wei)\n * @throws error if the unit is not correct:w\n */\nvar getUnitValue = function (unit) {\n    unit = unit ? unit.toLowerCase() : 'ether';\n    if (!ethjsUnit.unitMap[unit]) {\n        throw new Error('This unit \"' + unit + '\" doesn\\'t exist, please use the one of the following units' + JSON.stringify(ethjsUnit.unitMap, null, 2));\n    }\n    return unit;\n};\n/**\n * Takes a number of wei and converts it to any other ether unit.\n *\n * Possible units are:\n *   SI Short   SI Full        Effigy       Other\n * - kwei       femtoether     babbage\n * - mwei       picoether      lovelace\n * - gwei       nanoether      shannon      nano\n * - --         microether     szabo        micro\n * - --         milliether     finney       milli\n * - ether      --             --\n * - kether                    --           grand\n * - mether\n * - gether\n * - tether\n *\n * @method fromWei\n * @param {Number|String} number can be a number, number string or a HEX of a decimal\n * @param {String} unit the unit to convert to, default ether\n * @return {String|Object} When given a BN object it returns one as well, otherwise a number\n */\nvar fromWei = function (number, unit) {\n    unit = getUnitValue(unit);\n    if (!utils.isBN(number) && !_.isString(number)) {\n        throw new Error('Please pass numbers as strings or BN objects to avoid precision errors.');\n    }\n    return utils.isBN(number) ? ethjsUnit.fromWei(number, unit) : ethjsUnit.fromWei(number, unit).toString(10);\n};\n/**\n * Takes a number of a unit and converts it to wei.\n *\n * Possible units are:\n *   SI Short   SI Full        Effigy       Other\n * - kwei       femtoether     babbage\n * - mwei       picoether      lovelace\n * - gwei       nanoether      shannon      nano\n * - --         microether     szabo        micro\n * - --         microether     szabo        micro\n * - --         milliether     finney       milli\n * - ether      --             --\n * - kether                    --           grand\n * - mether\n * - gether\n * - tether\n *\n * @method toWei\n * @param {Number|String|BN} number can be a number, number string or a HEX of a decimal\n * @param {String} unit the unit to convert from, default ether\n * @return {String|Object} When given a BN object it returns one as well, otherwise a number\n */\nvar toWei = function (number, unit) {\n    unit = getUnitValue(unit);\n    if (!utils.isBN(number) && !_.isString(number)) {\n        throw new Error('Please pass numbers as strings or BN objects to avoid precision errors.');\n    }\n    return utils.isBN(number) ? ethjsUnit.toWei(number, unit) : ethjsUnit.toWei(number, unit).toString(10);\n};\n/**\n * Converts to a checksum address\n *\n * @method toChecksumAddress\n * @param {String} address the given HEX address\n * @return {String}\n */\nvar toChecksumAddress = function (address) {\n    if (typeof address === 'undefined')\n        return '';\n    if (!/^(0x)?[0-9a-f]{40}$/i.test(address))\n        throw new Error('Given address \"' + address + '\" is not a valid Ethereum address.');\n    address = address.toLowerCase().replace(/^0x/i, '');\n    var addressHash = utils.sha3(address).replace(/^0x/i, '');\n    var checksumAddress = '0x';\n    for (var i = 0; i < address.length; i++) {\n        // If ith character is 8 to f then make it uppercase\n        if (parseInt(addressHash[i], 16) > 7) {\n            checksumAddress += address[i].toUpperCase();\n        }\n        else {\n            checksumAddress += address[i];\n        }\n    }\n    return checksumAddress;\n};\n/**\n * Returns -1 if a<b, 1 if a>b; 0 if a == b.\n * For more details on this type of function, see\n * developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\n *\n * @method compareBlockNumbers\n *\n * @param {String|Number|BN} a\n *\n * @param {String|Number|BN} b\n *\n * @returns {Number} -1, 0, or 1\n */\nvar compareBlockNumbers = function (a, b) {\n    if (a == b) {\n        return 0;\n    }\n    else if ((\"genesis\" == a || \"earliest\" == a || 0 == a) && (\"genesis\" == b || \"earliest\" == b || 0 == b)) {\n        return 0;\n    }\n    else if (\"genesis\" == a || \"earliest\" == a) {\n        // b !== a, thus a < b\n        return -1;\n    }\n    else if (\"genesis\" == b || \"earliest\" == b) {\n        // b !== a, thus a > b\n        return 1;\n    }\n    else if (a == \"latest\") {\n        if (b == \"pending\") {\n            return -1;\n        }\n        else {\n            // b !== (\"pending\" OR \"latest\"), thus a > b\n            return 1;\n        }\n    }\n    else if (b === \"latest\") {\n        if (a == \"pending\") {\n            return 1;\n        }\n        else {\n            // b !== (\"pending\" OR \"latest\"), thus a > b\n            return -1;\n        }\n    }\n    else if (a == \"pending\") {\n        // b (== OR <) \"latest\", thus a > b\n        return 1;\n    }\n    else if (b == \"pending\") {\n        return -1;\n    }\n    else {\n        let bnA = new BN(a);\n        let bnB = new BN(b);\n        if (bnA.lt(bnB)) {\n            return -1;\n        }\n        else if (bnA.eq(bnB)) {\n            return 0;\n        }\n        else {\n            return 1;\n        }\n    }\n};\nmodule.exports = {\n    _fireError: _fireError,\n    _jsonInterfaceMethodToString: _jsonInterfaceMethodToString,\n    _flattenTypes: _flattenTypes,\n    // extractDisplayName: extractDisplayName,\n    // extractTypeName: extractTypeName,\n    randomHex: randomHex,\n    _: _,\n    BN: utils.BN,\n    isBN: utils.isBN,\n    isBigNumber: utils.isBigNumber,\n    isHex: utils.isHex,\n    isHexStrict: utils.isHexStrict,\n    sha3: utils.sha3,\n    sha3Raw: utils.sha3Raw,\n    keccak256: utils.sha3,\n    soliditySha3: soliditySha3.soliditySha3,\n    soliditySha3Raw: soliditySha3.soliditySha3Raw,\n    encodePacked: soliditySha3.encodePacked,\n    isAddress: utils.isAddress,\n    checkAddressChecksum: utils.checkAddressChecksum,\n    toChecksumAddress: toChecksumAddress,\n    toHex: utils.toHex,\n    toBN: utils.toBN,\n    bytesToHex: utils.bytesToHex,\n    hexToBytes: utils.hexToBytes,\n    hexToNumberString: utils.hexToNumberString,\n    hexToNumber: utils.hexToNumber,\n    toDecimal: utils.hexToNumber,\n    numberToHex: utils.numberToHex,\n    fromDecimal: utils.numberToHex,\n    hexToUtf8: utils.hexToUtf8,\n    hexToString: utils.hexToUtf8,\n    toUtf8: utils.hexToUtf8,\n    stripHexPrefix: utils.stripHexPrefix,\n    utf8ToHex: utils.utf8ToHex,\n    stringToHex: utils.utf8ToHex,\n    fromUtf8: utils.utf8ToHex,\n    hexToAscii: hexToAscii,\n    toAscii: hexToAscii,\n    asciiToHex: asciiToHex,\n    fromAscii: asciiToHex,\n    unitMap: ethjsUnit.unitMap,\n    toWei: toWei,\n    fromWei: fromWei,\n    padLeft: utils.leftPad,\n    leftPad: utils.leftPad,\n    padRight: utils.rightPad,\n    rightPad: utils.rightPad,\n    toTwosComplement: utils.toTwosComplement,\n    isBloom: utils.isBloom,\n    isUserEthereumAddressInBloom: utils.isUserEthereumAddressInBloom,\n    isContractAddressInBloom: utils.isContractAddressInBloom,\n    isTopic: utils.isTopic,\n    isTopicInBloom: utils.isTopicInBloom,\n    isInBloom: utils.isInBloom,\n    compareBlockNumbers: compareBlockNumbers\n};\n","module.exports = require(\"util\");","module.exports = require(\"http\");","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decodeHTML = exports.decodeHTMLStrict = exports.decodeXML = void 0;\nvar entities_json_1 = __importDefault(require(\"./maps/entities.json\"));\nvar legacy_json_1 = __importDefault(require(\"./maps/legacy.json\"));\nvar xml_json_1 = __importDefault(require(\"./maps/xml.json\"));\nvar decode_codepoint_1 = __importDefault(require(\"./decode_codepoint\"));\nvar strictEntityRe = /&(?:[a-zA-Z0-9]+|#[xX][\\da-fA-F]+|#\\d+);/g;\nexports.decodeXML = getStrictDecoder(xml_json_1.default);\nexports.decodeHTMLStrict = getStrictDecoder(entities_json_1.default);\nfunction getStrictDecoder(map) {\n    var replace = getReplacer(map);\n    return function (str) { return String(str).replace(strictEntityRe, replace); };\n}\nvar sorter = function (a, b) { return (a < b ? 1 : -1); };\nexports.decodeHTML = (function () {\n    var legacy = Object.keys(legacy_json_1.default).sort(sorter);\n    var keys = Object.keys(entities_json_1.default).sort(sorter);\n    for (var i = 0, j = 0; i < keys.length; i++) {\n        if (legacy[j] === keys[i]) {\n            keys[i] += \";?\";\n            j++;\n        }\n        else {\n            keys[i] += \";\";\n        }\n    }\n    var re = new RegExp(\"&(?:\" + keys.join(\"|\") + \"|#[xX][\\\\da-fA-F]+;?|#\\\\d+;?)\", \"g\");\n    var replace = getReplacer(entities_json_1.default);\n    function replacer(str) {\n        if (str.substr(-1) !== \";\")\n            str += \";\";\n        return replace(str);\n    }\n    // TODO consider creating a merged map\n    return function (str) { return String(str).replace(re, replacer); };\n})();\nfunction getReplacer(map) {\n    return function replace(str) {\n        if (str.charAt(1) === \"#\") {\n            var secondChar = str.charAt(2);\n            if (secondChar === \"X\" || secondChar === \"x\") {\n                return decode_codepoint_1.default(parseInt(str.substr(3), 16));\n            }\n            return decode_codepoint_1.default(parseInt(str.substr(2), 10));\n        }\n        // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n        return map[str.slice(1, -1)] || str;\n    };\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.escapeUTF8 = exports.escape = exports.encodeNonAsciiHTML = exports.encodeHTML = exports.encodeXML = void 0;\nvar xml_json_1 = __importDefault(require(\"./maps/xml.json\"));\nvar inverseXML = getInverseObj(xml_json_1.default);\nvar xmlReplacer = getInverseReplacer(inverseXML);\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using XML entities.\n *\n * If a character has no equivalent entity, a\n * numeric hexadecimal reference (eg. `&#xfc;`) will be used.\n */\nexports.encodeXML = getASCIIEncoder(inverseXML);\nvar entities_json_1 = __importDefault(require(\"./maps/entities.json\"));\nvar inverseHTML = getInverseObj(entities_json_1.default);\nvar htmlReplacer = getInverseReplacer(inverseHTML);\n/**\n * Encodes all entities and non-ASCII characters in the input.\n *\n * This includes characters that are valid ASCII characters in HTML documents.\n * For example `#` will be encoded as `&num;`. To get a more compact output,\n * consider using the `encodeNonAsciiHTML` function.\n *\n * If a character has no equivalent entity, a\n * numeric hexadecimal reference (eg. `&#xfc;`) will be used.\n */\nexports.encodeHTML = getInverse(inverseHTML, htmlReplacer);\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in HTML\n * documents using HTML entities.\n *\n * If a character has no equivalent entity, a\n * numeric hexadecimal reference (eg. `&#xfc;`) will be used.\n */\nexports.encodeNonAsciiHTML = getASCIIEncoder(inverseHTML);\nfunction getInverseObj(obj) {\n    return Object.keys(obj)\n        .sort()\n        .reduce(function (inverse, name) {\n        inverse[obj[name]] = \"&\" + name + \";\";\n        return inverse;\n    }, {});\n}\nfunction getInverseReplacer(inverse) {\n    var single = [];\n    var multiple = [];\n    for (var _i = 0, _a = Object.keys(inverse); _i < _a.length; _i++) {\n        var k = _a[_i];\n        if (k.length === 1) {\n            // Add value to single array\n            single.push(\"\\\\\" + k);\n        }\n        else {\n            // Add value to multiple array\n            multiple.push(k);\n        }\n    }\n    // Add ranges to single characters.\n    single.sort();\n    for (var start = 0; start < single.length - 1; start++) {\n        // Find the end of a run of characters\n        var end = start;\n        while (end < single.length - 1 &&\n            single[end].charCodeAt(1) + 1 === single[end + 1].charCodeAt(1)) {\n            end += 1;\n        }\n        var count = 1 + end - start;\n        // We want to replace at least three characters\n        if (count < 3)\n            continue;\n        single.splice(start, count, single[start] + \"-\" + single[end]);\n    }\n    multiple.unshift(\"[\" + single.join(\"\") + \"]\");\n    return new RegExp(multiple.join(\"|\"), \"g\");\n}\n// /[^\\0-\\x7F]/gu\nvar reNonASCII = /(?:[\\x80-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/g;\nvar getCodePoint = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\nString.prototype.codePointAt != null\n    ? // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        function (str) { return str.codePointAt(0); }\n    : // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        function (c) {\n            return (c.charCodeAt(0) - 0xd800) * 0x400 +\n                c.charCodeAt(1) -\n                0xdc00 +\n                0x10000;\n        };\nfunction singleCharReplacer(c) {\n    return \"&#x\" + (c.length > 1 ? getCodePoint(c) : c.charCodeAt(0))\n        .toString(16)\n        .toUpperCase() + \";\";\n}\nfunction getInverse(inverse, re) {\n    return function (data) {\n        return data\n            .replace(re, function (name) { return inverse[name]; })\n            .replace(reNonASCII, singleCharReplacer);\n    };\n}\nvar reEscapeChars = new RegExp(xmlReplacer.source + \"|\" + reNonASCII.source, \"g\");\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using numeric hexadecimal reference (eg. `&#xfc;`).\n *\n * Have a look at `escapeUTF8` if you want a more concise output at the expense\n * of reduced transportability.\n *\n * @param data String to escape.\n */\nfunction escape(data) {\n    return data.replace(reEscapeChars, singleCharReplacer);\n}\nexports.escape = escape;\n/**\n * Encodes all characters not valid in XML documents using numeric hexadecimal\n * reference (eg. `&#xfc;`).\n *\n * Note that the output will be character-set dependent.\n *\n * @param data String to escape.\n */\nfunction escapeUTF8(data) {\n    return data.replace(xmlReplacer, singleCharReplacer);\n}\nexports.escapeUTF8 = escapeUTF8;\nfunction getASCIIEncoder(obj) {\n    return function (data) {\n        return data.replace(reEscapeChars, function (c) { return obj[c] || singleCharReplacer(c); });\n    };\n}\n","var BN = require('bn.js');\nvar stripHexPrefix = require('strip-hex-prefix');\n\n/**\n * Returns a BN object, converts a number value to a BN\n * @param {String|Number|Object} `arg` input a string number, hex string number, number, BigNumber or BN object\n * @return {Object} `output` BN object of the number\n * @throws if the argument is not an array, object that isn't a bignumber, not a string number or number\n */\nmodule.exports = function numberToBN(arg) {\n  if (typeof arg === 'string' || typeof arg === 'number') {\n    var multiplier = new BN(1); // eslint-disable-line\n    var formattedString = String(arg).toLowerCase().trim();\n    var isHexPrefixed = formattedString.substr(0, 2) === '0x' || formattedString.substr(0, 3) === '-0x';\n    var stringArg = stripHexPrefix(formattedString); // eslint-disable-line\n    if (stringArg.substr(0, 1) === '-') {\n      stringArg = stripHexPrefix(stringArg.slice(1));\n      multiplier = new BN(-1, 10);\n    }\n    stringArg = stringArg === '' ? '0' : stringArg;\n\n    if ((!stringArg.match(/^-?[0-9]+$/) && stringArg.match(/^[0-9A-Fa-f]+$/))\n      || stringArg.match(/^[a-fA-F]+$/)\n      || (isHexPrefixed === true && stringArg.match(/^[0-9A-Fa-f]+$/))) {\n      return new BN(stringArg, 16).mul(multiplier);\n    }\n\n    if ((stringArg.match(/^-?[0-9]+$/) || stringArg === '') && isHexPrefixed === false) {\n      return new BN(stringArg, 10).mul(multiplier);\n    }\n  } else if (typeof arg === 'object' && arg.toString && (!arg.pop && !arg.push)) {\n    if (arg.toString(10).match(/^-?[0-9]+$/) && (arg.mul || arg.dividedToIntegerBy)) {\n      return new BN(arg.toString(10), 10);\n    }\n  }\n\n  throw new Error('[number-to-bn] while converting number ' + JSON.stringify(arg) + ' to BN.js instance, error: invalid number value. Value must be an integer, hex string, BN or BigNumber instance. Note, decimals are not supported.');\n}\n","/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @file utils.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\nvar _ = require('underscore');\nvar BN = require('bn.js');\nvar numberToBN = require('number-to-bn');\nvar utf8 = require('utf8');\nvar Hash = require(\"eth-lib/lib/hash\");\nvar ethereumBloomFilters = require('ethereum-bloom-filters');\n/**\n * Returns true if object is BN, otherwise false\n *\n * @method isBN\n * @param {Object} object\n * @return {Boolean}\n */\nvar isBN = function (object) {\n    return BN.isBN(object);\n};\n/**\n * Returns true if object is BigNumber, otherwise false\n *\n * @method isBigNumber\n * @param {Object} object\n * @return {Boolean}\n */\nvar isBigNumber = function (object) {\n    return object && object.constructor && object.constructor.name === 'BigNumber';\n};\n/**\n * Takes an input and transforms it into an BN\n *\n * @method toBN\n * @param {Number|String|BN} number, string, HEX string or BN\n * @return {BN} BN\n */\nvar toBN = function (number) {\n    try {\n        return numberToBN.apply(null, arguments);\n    }\n    catch (e) {\n        throw new Error(e + ' Given value: \"' + number + '\"');\n    }\n};\n/**\n * Takes and input transforms it into BN and if it is negative value, into two's complement\n *\n * @method toTwosComplement\n * @param {Number|String|BN} number\n * @return {String}\n */\nvar toTwosComplement = function (number) {\n    return '0x' + toBN(number).toTwos(256).toString(16, 64);\n};\n/**\n * Checks if the given string is an address\n *\n * @method isAddress\n * @param {String} address the given HEX address\n * @return {Boolean}\n */\nvar isAddress = function (address) {\n    // check if it has the basic requirements of an address\n    if (!/^(0x)?[0-9a-f]{40}$/i.test(address)) {\n        return false;\n        // If it's ALL lowercase or ALL upppercase\n    }\n    else if (/^(0x|0X)?[0-9a-f]{40}$/.test(address) || /^(0x|0X)?[0-9A-F]{40}$/.test(address)) {\n        return true;\n        // Otherwise check each case\n    }\n    else {\n        return checkAddressChecksum(address);\n    }\n};\n/**\n * Checks if the given string is a checksummed address\n *\n * @method checkAddressChecksum\n * @param {String} address the given HEX address\n * @return {Boolean}\n */\nvar checkAddressChecksum = function (address) {\n    // Check each case\n    address = address.replace(/^0x/i, '');\n    var addressHash = sha3(address.toLowerCase()).replace(/^0x/i, '');\n    for (var i = 0; i < 40; i++) {\n        // the nth letter should be uppercase if the nth digit of casemap is 1\n        if ((parseInt(addressHash[i], 16) > 7 && address[i].toUpperCase() !== address[i]) || (parseInt(addressHash[i], 16) <= 7 && address[i].toLowerCase() !== address[i])) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * Should be called to pad string to expected length\n *\n * @method leftPad\n * @param {String} string to be padded\n * @param {Number} chars that result string should have\n * @param {String} sign, by default 0\n * @returns {String} right aligned string\n */\nvar leftPad = function (string, chars, sign) {\n    var hasPrefix = /^0x/i.test(string) || typeof string === 'number';\n    string = string.toString(16).replace(/^0x/i, '');\n    var padding = (chars - string.length + 1 >= 0) ? chars - string.length + 1 : 0;\n    return (hasPrefix ? '0x' : '') + new Array(padding).join(sign ? sign : \"0\") + string;\n};\n/**\n * Should be called to pad string to expected length\n *\n * @method rightPad\n * @param {String} string to be padded\n * @param {Number} chars that result string should have\n * @param {String} sign, by default 0\n * @returns {String} right aligned string\n */\nvar rightPad = function (string, chars, sign) {\n    var hasPrefix = /^0x/i.test(string) || typeof string === 'number';\n    string = string.toString(16).replace(/^0x/i, '');\n    var padding = (chars - string.length + 1 >= 0) ? chars - string.length + 1 : 0;\n    return (hasPrefix ? '0x' : '') + string + (new Array(padding).join(sign ? sign : \"0\"));\n};\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n *\n * @method utf8ToHex\n * @param {String} str\n * @returns {String} hex representation of input string\n */\nvar utf8ToHex = function (str) {\n    str = utf8.encode(str);\n    var hex = \"\";\n    // remove \\u0000 padding from either side\n    str = str.replace(/^(?:\\u0000)*/, '');\n    str = str.split(\"\").reverse().join(\"\");\n    str = str.replace(/^(?:\\u0000)*/, '');\n    str = str.split(\"\").reverse().join(\"\");\n    for (var i = 0; i < str.length; i++) {\n        var code = str.charCodeAt(i);\n        // if (code !== 0) {\n        var n = code.toString(16);\n        hex += n.length < 2 ? '0' + n : n;\n        // }\n    }\n    return \"0x\" + hex;\n};\n/**\n * Should be called to get utf8 from it's hex representation\n *\n * @method hexToUtf8\n * @param {String} hex\n * @returns {String} ascii string representation of hex value\n */\nvar hexToUtf8 = function (hex) {\n    if (!isHexStrict(hex))\n        throw new Error('The parameter \"' + hex + '\" must be a valid HEX string.');\n    var str = \"\";\n    var code = 0;\n    hex = hex.replace(/^0x/i, '');\n    // remove 00 padding from either side\n    hex = hex.replace(/^(?:00)*/, '');\n    hex = hex.split(\"\").reverse().join(\"\");\n    hex = hex.replace(/^(?:00)*/, '');\n    hex = hex.split(\"\").reverse().join(\"\");\n    var l = hex.length;\n    for (var i = 0; i < l; i += 2) {\n        code = parseInt(hex.substr(i, 2), 16);\n        // if (code !== 0) {\n        str += String.fromCharCode(code);\n        // }\n    }\n    return utf8.decode(str);\n};\n/**\n * Converts value to it's number representation\n *\n * @method hexToNumber\n * @param {String|Number|BN} value\n * @return {String}\n */\nvar hexToNumber = function (value) {\n    if (!value) {\n        return value;\n    }\n    if (_.isString(value) && !isHexStrict(value)) {\n        throw new Error('Given value \"' + value + '\" is not a valid hex string.');\n    }\n    return toBN(value).toNumber();\n};\n/**\n * Converts value to it's decimal representation in string\n *\n * @method hexToNumberString\n * @param {String|Number|BN} value\n * @return {String}\n */\nvar hexToNumberString = function (value) {\n    if (!value)\n        return value;\n    if (_.isString(value) && !isHexStrict(value)) {\n        throw new Error('Given value \"' + value + '\" is not a valid hex string.');\n    }\n    return toBN(value).toString(10);\n};\n/**\n * Converts value to it's hex representation\n *\n * @method numberToHex\n * @param {String|Number|BN} value\n * @return {String}\n */\nvar numberToHex = function (value) {\n    if (_.isNull(value) || _.isUndefined(value)) {\n        return value;\n    }\n    if (!isFinite(value) && !isHexStrict(value)) {\n        throw new Error('Given input \"' + value + '\" is not a number.');\n    }\n    var number = toBN(value);\n    var result = number.toString(16);\n    return number.lt(new BN(0)) ? '-0x' + result.substr(1) : '0x' + result;\n};\n/**\n * Convert a byte array to a hex string\n *\n * Note: Implementation from crypto-js\n *\n * @method bytesToHex\n * @param {Array} bytes\n * @return {String} the hex string\n */\nvar bytesToHex = function (bytes) {\n    for (var hex = [], i = 0; i < bytes.length; i++) {\n        /* jshint ignore:start */\n        hex.push((bytes[i] >>> 4).toString(16));\n        hex.push((bytes[i] & 0xF).toString(16));\n        /* jshint ignore:end */\n    }\n    return '0x' + hex.join(\"\");\n};\n/**\n * Convert a hex string to a byte array\n *\n * Note: Implementation from crypto-js\n *\n * @method hexToBytes\n * @param {string} hex\n * @return {Array} the byte array\n */\nvar hexToBytes = function (hex) {\n    hex = hex.toString(16);\n    if (!isHexStrict(hex)) {\n        throw new Error('Given value \"' + hex + '\" is not a valid hex string.');\n    }\n    hex = hex.replace(/^0x/i, '');\n    for (var bytes = [], c = 0; c < hex.length; c += 2)\n        bytes.push(parseInt(hex.substr(c, 2), 16));\n    return bytes;\n};\n/**\n * Auto converts any given value into it's hex representation.\n *\n * And even stringifys objects before.\n *\n * @method toHex\n * @param {String|Number|BN|Object|Buffer} value\n * @param {Boolean} returnType\n * @return {String}\n */\nvar toHex = function (value, returnType) {\n    /*jshint maxcomplexity: false */\n    if (isAddress(value)) {\n        return returnType ? 'address' : '0x' + value.toLowerCase().replace(/^0x/i, '');\n    }\n    if (_.isBoolean(value)) {\n        return returnType ? 'bool' : value ? '0x01' : '0x00';\n    }\n    if (Buffer.isBuffer(value)) {\n        return '0x' + value.toString('hex');\n    }\n    if (_.isObject(value) && !isBigNumber(value) && !isBN(value)) {\n        return returnType ? 'string' : utf8ToHex(JSON.stringify(value));\n    }\n    // if its a negative number, pass it through numberToHex\n    if (_.isString(value)) {\n        if (value.indexOf('-0x') === 0 || value.indexOf('-0X') === 0) {\n            return returnType ? 'int256' : numberToHex(value);\n        }\n        else if (value.indexOf('0x') === 0 || value.indexOf('0X') === 0) {\n            return returnType ? 'bytes' : value;\n        }\n        else if (!isFinite(value)) {\n            return returnType ? 'string' : utf8ToHex(value);\n        }\n    }\n    return returnType ? (value < 0 ? 'int256' : 'uint256') : numberToHex(value);\n};\n/**\n * Check if string is HEX, requires a 0x in front\n *\n * @method isHexStrict\n * @param {String} hex to be checked\n * @returns {Boolean}\n */\nvar isHexStrict = function (hex) {\n    return ((_.isString(hex) || _.isNumber(hex)) && /^(-)?0x[0-9a-f]*$/i.test(hex));\n};\n/**\n * Check if string is HEX\n *\n * @method isHex\n * @param {String} hex to be checked\n * @returns {Boolean}\n */\nvar isHex = function (hex) {\n    return ((_.isString(hex) || _.isNumber(hex)) && /^(-0x|0x)?[0-9a-f]*$/i.test(hex));\n};\n/**\n * Remove 0x prefix from string\n *\n * @method stripHexPrefix\n * @param {String} str to be checked\n * @returns {String}\n */\nvar stripHexPrefix = function (str) {\n    if (str !== 0 && isHex(str))\n        return str.replace(/^(-)?0x/i, '$1');\n    return str;\n};\n/**\n * Returns true if given string is a valid Ethereum block header bloom.\n *\n * @method isBloom\n * @param {String} bloom encoded bloom filter\n * @return {Boolean}\n */\nvar isBloom = function (bloom) {\n    return ethereumBloomFilters.isBloom(bloom);\n};\n/**\n * Returns true if the ethereum users address is part of the given bloom\n * note: false positives are possible.\n *\n * @method isUserEthereumAddressInBloom\n * @param {String} ethereumAddress encoded bloom filter\n * @param {String} bloom ethereum addresss\n * @return {Boolean}\n */\nvar isUserEthereumAddressInBloom = function (bloom, ethereumAddress) {\n    return ethereumBloomFilters.isUserEthereumAddressInBloom(bloom, ethereumAddress);\n};\n/**\n * Returns true if the contract address is part of the given bloom\n * note: false positives are possible.\n *\n * @method isUserEthereumAddressInBloom\n * @param {String} bloom encoded bloom filter\n * @param {String} contractAddress contract addresss\n * @return {Boolean}\n */\nvar isContractAddressInBloom = function (bloom, contractAddress) {\n    return ethereumBloomFilters.isContractAddressInBloom(bloom, contractAddress);\n};\n/**\n * Returns true if given string is a valid log topic.\n *\n * @method isTopic\n * @param {String} topic encoded topic\n * @return {Boolean}\n */\nvar isTopic = function (topic) {\n    return ethereumBloomFilters.isTopic(topic);\n};\n/**\n * Returns true if the topic is part of the given bloom\n * note: false positives are possible.\n *\n * @method isTopicInBloom\n * @param {String} bloom encoded bloom filter\n * @param {String} topic encoded topic\n * @return {Boolean}\n */\nvar isTopicInBloom = function (bloom, topic) {\n    return ethereumBloomFilters.isTopicInBloom(bloom, topic);\n};\n/**\n * Returns true if the value is part of the given bloom\n * note: false positives are possible.\n *\n * @method isInBloom\n * @param {String} bloom encoded bloom filter\n * @param {String | Uint8Array} topic encoded value\n * @return {Boolean}\n */\nvar isInBloom = function (bloom, topic) {\n    return ethereumBloomFilters.isInBloom(bloom, topic);\n};\n/**\n * Hashes values to a sha3 hash using keccak 256\n *\n * To hash a HEX string the hex must have 0x in front.\n *\n * @method sha3\n * @return {String} the sha3 string\n */\nvar SHA3_NULL_S = '0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470';\nvar sha3 = function (value) {\n    if (isBN(value)) {\n        value = value.toString();\n    }\n    if (isHexStrict(value) && /^0x/i.test((value).toString())) {\n        value = hexToBytes(value);\n    }\n    var returnValue = Hash.keccak256(value); // jshint ignore:line\n    if (returnValue === SHA3_NULL_S) {\n        return null;\n    }\n    else {\n        return returnValue;\n    }\n};\n// expose the under the hood keccak256\nsha3._Hash = Hash;\n/**\n * @method sha3Raw\n *\n * @param value\n *\n * @returns {string}\n */\nvar sha3Raw = function (value) {\n    value = sha3(value);\n    if (value === null) {\n        return SHA3_NULL_S;\n    }\n    return value;\n};\nmodule.exports = {\n    BN: BN,\n    isBN: isBN,\n    isBigNumber: isBigNumber,\n    toBN: toBN,\n    isAddress: isAddress,\n    isBloom: isBloom,\n    isUserEthereumAddressInBloom: isUserEthereumAddressInBloom,\n    isContractAddressInBloom: isContractAddressInBloom,\n    isTopic: isTopic,\n    isTopicInBloom: isTopicInBloom,\n    isInBloom: isInBloom,\n    checkAddressChecksum: checkAddressChecksum,\n    utf8ToHex: utf8ToHex,\n    hexToUtf8: hexToUtf8,\n    hexToNumber: hexToNumber,\n    hexToNumberString: hexToNumberString,\n    numberToHex: numberToHex,\n    toHex: toHex,\n    hexToBytes: hexToBytes,\n    bytesToHex: bytesToHex,\n    isHex: isHex,\n    isHexStrict: isHexStrict,\n    stripHexPrefix: stripHexPrefix,\n    leftPad: leftPad,\n    rightPad: rightPad,\n    toTwosComplement: toTwosComplement,\n    sha3: sha3,\n    sha3Raw: sha3Raw\n};\n","/* MIT license */\n/* eslint-disable no-mixed-operators */\nconst cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nconst reverseKeywords = {};\nfor (const key of Object.keys(cssKeywords)) {\n\treverseKeywords[cssKeywords[key]] = key;\n}\n\nconst convert = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\nmodule.exports = convert;\n\n// Hide .channels and .labels properties\nfor (const model of Object.keys(convert)) {\n\tif (!('channels' in convert[model])) {\n\t\tthrow new Error('missing channels property: ' + model);\n\t}\n\n\tif (!('labels' in convert[model])) {\n\t\tthrow new Error('missing channel labels property: ' + model);\n\t}\n\n\tif (convert[model].labels.length !== convert[model].channels) {\n\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t}\n\n\tconst {channels, labels} = convert[model];\n\tdelete convert[model].channels;\n\tdelete convert[model].labels;\n\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\tObject.defineProperty(convert[model], 'labels', {value: labels});\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst min = Math.min(r, g, b);\n\tconst max = Math.max(r, g, b);\n\tconst delta = max - min;\n\tlet h;\n\tlet s;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst l = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tlet rdif;\n\tlet gdif;\n\tlet bdif;\n\tlet h;\n\tlet s;\n\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst v = Math.max(r, g, b);\n\tconst diff = v - Math.min(r, g, b);\n\tconst diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = 0;\n\t\ts = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tconst r = rgb[0];\n\tconst g = rgb[1];\n\tlet b = rgb[2];\n\tconst h = convert.rgb.hsl(rgb)[0];\n\tconst w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\n\tconst k = Math.min(1 - r, 1 - g, 1 - b);\n\tconst c = (1 - r - k) / (1 - k) || 0;\n\tconst m = (1 - g - k) / (1 - k) || 0;\n\tconst y = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\nfunction comparativeDistance(x, y) {\n\t/*\n\t\tSee https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n\t*/\n\treturn (\n\t\t((x[0] - y[0]) ** 2) +\n\t\t((x[1] - y[1]) ** 2) +\n\t\t((x[2] - y[2]) ** 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tconst reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tlet currentClosestDistance = Infinity;\n\tlet currentClosestKeyword;\n\n\tfor (const keyword of Object.keys(cssKeywords)) {\n\t\tconst value = cssKeywords[keyword];\n\n\t\t// Compute comparative distance\n\t\tconst distance = comparativeDistance(rgb, value);\n\n\t\t// Check if its less, if so set as closest\n\t\tif (distance < currentClosestDistance) {\n\t\t\tcurrentClosestDistance = distance;\n\t\t\tcurrentClosestKeyword = keyword;\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tlet r = rgb[0] / 255;\n\tlet g = rgb[1] / 255;\n\tlet b = rgb[2] / 255;\n\n\t// Assume sRGB\n\tr = r > 0.04045 ? (((r + 0.055) / 1.055) ** 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? (((g + 0.055) / 1.055) ** 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? (((b + 0.055) / 1.055) ** 2.4) : (b / 12.92);\n\n\tconst x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tconst y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tconst z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tconst xyz = convert.rgb.xyz(rgb);\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tconst h = hsl[0] / 360;\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\tlet t2;\n\tlet t3;\n\tlet val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tconst t1 = 2 * l - t2;\n\n\tconst rgb = [0, 0, 0];\n\tfor (let i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tconst h = hsl[0];\n\tlet s = hsl[1] / 100;\n\tlet l = hsl[2] / 100;\n\tlet smin = s;\n\tconst lmin = Math.max(l, 0.01);\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tconst v = (l + s) / 2;\n\tconst sv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tconst h = hsv[0] / 60;\n\tconst s = hsv[1] / 100;\n\tlet v = hsv[2] / 100;\n\tconst hi = Math.floor(h) % 6;\n\n\tconst f = h - Math.floor(h);\n\tconst p = 255 * v * (1 - s);\n\tconst q = 255 * v * (1 - (s * f));\n\tconst t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tconst h = hsv[0];\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\tconst vmin = Math.max(v, 0.01);\n\tlet sl;\n\tlet l;\n\n\tl = (2 - s) * v;\n\tconst lmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tconst h = hwb[0] / 360;\n\tlet wh = hwb[1] / 100;\n\tlet bl = hwb[2] / 100;\n\tconst ratio = wh + bl;\n\tlet f;\n\n\t// Wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\tconst i = Math.floor(6 * h);\n\tconst v = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tconst n = wh + f * (v - wh); // Linear interpolation\n\n\tlet r;\n\tlet g;\n\tlet b;\n\t/* eslint-disable max-statements-per-line,no-multi-spaces */\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v;  g = n;  b = wh; break;\n\t\tcase 1: r = n;  g = v;  b = wh; break;\n\t\tcase 2: r = wh; g = v;  b = n; break;\n\t\tcase 3: r = wh; g = n;  b = v; break;\n\t\tcase 4: r = n;  g = wh; b = v; break;\n\t\tcase 5: r = v;  g = wh; b = n; break;\n\t}\n\t/* eslint-enable max-statements-per-line,no-multi-spaces */\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tconst c = cmyk[0] / 100;\n\tconst m = cmyk[1] / 100;\n\tconst y = cmyk[2] / 100;\n\tconst k = cmyk[3] / 100;\n\n\tconst r = 1 - Math.min(1, c * (1 - k) + k);\n\tconst g = 1 - Math.min(1, m * (1 - k) + k);\n\tconst b = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tconst x = xyz[0] / 100;\n\tconst y = xyz[1] / 100;\n\tconst z = xyz[2] / 100;\n\tlet r;\n\tlet g;\n\tlet b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// Assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * (r ** (1.0 / 2.4))) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * (g ** (1.0 / 2.4))) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * (b ** (1.0 / 2.4))) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet x;\n\tlet y;\n\tlet z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tconst y2 = y ** 3;\n\tconst x2 = x ** 3;\n\tconst z2 = z ** 3;\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet h;\n\n\tconst hr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst c = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tconst l = lch[0];\n\tconst c = lch[1];\n\tconst h = lch[2];\n\n\tconst hr = h / 360 * 2 * Math.PI;\n\tconst a = c * Math.cos(hr);\n\tconst b = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args, saturation = null) {\n\tconst [r, g, b] = args;\n\tlet value = saturation === null ? convert.rgb.hsv(args)[2] : saturation; // Hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tlet ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// Optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tconst r = args[0];\n\tconst g = args[1];\n\tconst b = args[2];\n\n\t// We use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tconst ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tlet color = args % 10;\n\n\t// Handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tconst mult = (~~(args > 50) + 1) * 0.5;\n\tconst r = ((color & 1) * mult) * 255;\n\tconst g = (((color >> 1) & 1) * mult) * 255;\n\tconst b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// Handle greyscale\n\tif (args >= 232) {\n\t\tconst c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tlet rem;\n\tconst r = Math.floor(args / 36) / 5 * 255;\n\tconst g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tconst b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tconst integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tconst match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tlet colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(char => {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tconst integer = parseInt(colorString, 16);\n\tconst r = (integer >> 16) & 0xFF;\n\tconst g = (integer >> 8) & 0xFF;\n\tconst b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst max = Math.max(Math.max(r, g), b);\n\tconst min = Math.min(Math.min(r, g), b);\n\tconst chroma = (max - min);\n\tlet grayscale;\n\tlet hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\n\tconst c = l < 0.5 ? (2.0 * s * l) : (2.0 * s * (1.0 - l));\n\n\tlet f = 0;\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\n\tconst c = s * v;\n\tlet f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tconst h = hcg[0] / 360;\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tconst pure = [0, 0, 0];\n\tconst hi = (h % 1) * 6;\n\tconst v = hi % 1;\n\tconst w = 1 - v;\n\tlet mg = 0;\n\n\t/* eslint-disable max-statements-per-line */\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\t/* eslint-enable max-statements-per-line */\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst v = c + g * (1.0 - c);\n\tlet f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst l = g * (1.0 - c) + 0.5 * c;\n\tlet s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\tconst v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tconst w = hwb[1] / 100;\n\tconst b = hwb[2] / 100;\n\tconst v = 1 - b;\n\tconst c = v - w;\n\tlet g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hsv = convert.gray.hsl;\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tconst val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tconst integer = (val << 16) + (val << 8) + val;\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tconst val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n","module.exports = require(\"https\");","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for the maximum length and index of an array. */\nvar MAX_ARRAY_LENGTH = 4294967295,\n    MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n    HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor,\n    nativeMin = Math.min;\n\n/**\n * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n * performs a binary search of `array` to determine the index at which `value`\n * should be inserted into `array` in order to maintain its sort order.\n *\n * @private\n * @param {Array} array The sorted array to inspect.\n * @param {*} value The value to evaluate.\n * @param {boolean} [retHighest] Specify returning the highest qualified index.\n * @returns {number} Returns the index at which `value` should be inserted\n *  into `array`.\n */\nfunction baseSortedIndex(array, value, retHighest) {\n  var low = 0,\n      high = array ? array.length : low;\n\n  if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n    while (low < high) {\n      var mid = (low + high) >>> 1,\n          computed = array[mid];\n\n      if (computed !== null && !isSymbol(computed) &&\n          (retHighest ? (computed <= value) : (computed < value))) {\n        low = mid + 1;\n      } else {\n        high = mid;\n      }\n    }\n    return high;\n  }\n  return baseSortedIndexBy(array, value, identity, retHighest);\n}\n\n/**\n * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n * which invokes `iteratee` for `value` and each element of `array` to compute\n * their sort ranking. The iteratee is invoked with one argument; (value).\n *\n * @private\n * @param {Array} array The sorted array to inspect.\n * @param {*} value The value to evaluate.\n * @param {Function} iteratee The iteratee invoked per element.\n * @param {boolean} [retHighest] Specify returning the highest qualified index.\n * @returns {number} Returns the index at which `value` should be inserted\n *  into `array`.\n */\nfunction baseSortedIndexBy(array, value, iteratee, retHighest) {\n  value = iteratee(value);\n\n  var low = 0,\n      high = array ? array.length : 0,\n      valIsNaN = value !== value,\n      valIsNull = value === null,\n      valIsSymbol = isSymbol(value),\n      valIsUndefined = value === undefined;\n\n  while (low < high) {\n    var mid = nativeFloor((low + high) / 2),\n        computed = iteratee(array[mid]),\n        othIsDefined = computed !== undefined,\n        othIsNull = computed === null,\n        othIsReflexive = computed === computed,\n        othIsSymbol = isSymbol(computed);\n\n    if (valIsNaN) {\n      var setLow = retHighest || othIsReflexive;\n    } else if (valIsUndefined) {\n      setLow = othIsReflexive && (retHighest || othIsDefined);\n    } else if (valIsNull) {\n      setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n    } else if (valIsSymbol) {\n      setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n    } else if (othIsNull || othIsSymbol) {\n      setLow = false;\n    } else {\n      setLow = retHighest ? (computed <= value) : (computed < value);\n    }\n    if (setLow) {\n      low = mid + 1;\n    } else {\n      high = mid;\n    }\n  }\n  return nativeMin(high, MAX_ARRAY_INDEX);\n}\n\n/**\n * Uses a binary search to determine the lowest index at which `value`\n * should be inserted into `array` in order to maintain its sort order.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The sorted array to inspect.\n * @param {*} value The value to evaluate.\n * @returns {number} Returns the index at which `value` should be inserted\n *  into `array`.\n * @example\n *\n * _.sortedIndex([30, 50], 40);\n * // => 1\n */\nfunction sortedIndex(array, value) {\n  return baseSortedIndex(array, value);\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = sortedIndex;\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used to compose bitmasks for comparison styles. */\nvar UNORDERED_COMPARE_FLAG = 1,\n    PARTIAL_COMPARE_FLAG = 2;\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_SAFE_INTEGER = 9007199254740991,\n    MAX_INTEGER = 1.7976931348623157e+308,\n    NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/,\n    reLeadingDot = /^\\./,\n    rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    return freeProcess && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object),\n    nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values ? values.length : 0;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\n/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  this.__data__ = new ListCache(entries);\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  return this.__data__['delete'](key);\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var cache = this.__data__;\n  if (cache instanceof ListCache) {\n    var pairs = cache.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      return this;\n    }\n    cache = this.__data__ = new MapCache(pairs);\n  }\n  cache.set(key, value);\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = (isArray(value) || isArguments(value))\n    ? baseTimes(value.length, String)\n    : [];\n\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = isKey(path, object) ? [path] : castPath(path);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\n/**\n * The base implementation of `getTag`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  return objectToString.call(value);\n}\n\n/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {boolean} [bitmask] The bitmask of comparison flags.\n *  The bitmask may be composed of the following flags:\n *     1 - Unordered comparison\n *     2 - Partial comparison\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, customizer, bitmask, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);\n}\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual`\n *  for more details.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = arrayTag,\n      othTag = arrayTag;\n\n  if (!objIsArr) {\n    objTag = getTag(object);\n    objTag = objTag == argsTag ? objectTag : objTag;\n  }\n  if (!othIsArr) {\n    othTag = getTag(other);\n    othTag = othTag == argsTag ? objectTag : othTag;\n  }\n  var objIsObj = objTag == objectTag && !isHostObject(object),\n      othIsObj = othTag == objectTag && !isHostObject(other),\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, equalFunc, customizer, bitmask, stack)\n      : equalByTag(object, other, objTag, equalFunc, customizer, bitmask, stack);\n  }\n  if (!(bitmask & PARTIAL_COMPARE_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, customizer, bitmask, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, equalFunc, customizer, bitmask, stack);\n}\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[objectToString.call(value)];\n}\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);\n  };\n}\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value) {\n  return isArray(value) ? value : stringToPath(value);\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} customizer The function to customize comparisons.\n * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n *  for more details.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, equalFunc, customizer, bitmask, stack) {\n  var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & UNORDERED_COMPARE_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!seen.has(othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {\n              return seen.add(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, customizer, bitmask, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} customizer The function to customize comparisons.\n * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n *  for more details.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, equalFunc, customizer, bitmask, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & PARTIAL_COMPARE_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= UNORDERED_COMPARE_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), equalFunc, customizer, bitmask, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} customizer The function to customize comparisons.\n * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n *  for more details.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, equalFunc, customizer, bitmask, stack) {\n  var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n      objProps = keys(object),\n      objLength = objProps.length,\n      othProps = keys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n  return result;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11,\n// for data views in Edge < 14, and promises in Node.js.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = objectToString.call(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : undefined;\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = isKey(path, object) ? [path] : castPath(path);\n\n  var result,\n      index = -1,\n      length = path.length;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result) {\n    return result;\n  }\n  var length = object ? object.length : 0;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\n/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    return object[key] === srcValue &&\n      (srcValue !== undefined || (key in Object(object)));\n  };\n}\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoize(function(string) {\n  string = toString(string);\n\n  var result = [];\n  if (reLeadingDot.test(string)) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * This method is like `_.findIndex` except that it iterates over elements\n * of `collection` from right to left.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity]\n *  The function invoked per iteration.\n * @param {number} [fromIndex=array.length-1] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': true },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': false }\n * ];\n *\n * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n * // => 2\n *\n * // The `_.matches` iteratee shorthand.\n * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n * // => 0\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findLastIndex(users, ['active', false]);\n * // => 2\n *\n * // The `_.property` iteratee shorthand.\n * _.findLastIndex(users, 'active');\n * // => 0\n */\nfunction findLastIndex(array, predicate, fromIndex) {\n  var length = array ? array.length : 0;\n  if (!length) {\n    return -1;\n  }\n  var index = length - 1;\n  if (fromIndex !== undefined) {\n    index = toInteger(fromIndex);\n    index = fromIndex < 0\n      ? nativeMax(length + index, 0)\n      : nativeMin(index, length - 1);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index, true);\n}\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result);\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Assign cache to `_.memoize`.\nmemoize.Cache = MapCache;\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = findLastIndex;\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used to compose bitmasks for comparison styles. */\nvar UNORDERED_COMPARE_FLAG = 1,\n    PARTIAL_COMPARE_FLAG = 2;\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/,\n    reLeadingDot = /^\\./,\n    rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    return freeProcess && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array ? array.length : 0;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\n/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array ? array.length : 0,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  if (value !== value) {\n    return baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Checks if a cache value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice,\n    spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object),\n    nativeMax = Math.max;\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values ? values.length : 0;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\n/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  this.__data__ = new ListCache(entries);\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  return this.__data__['delete'](key);\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var cache = this.__data__;\n  if (cache instanceof ListCache) {\n    var pairs = cache.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      return this;\n    }\n    cache = this.__data__ = new MapCache(pairs);\n  }\n  cache.set(key, value);\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = (isArray(value) || isArguments(value))\n    ? baseTimes(value.length, String)\n    : [];\n\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of methods like `_.difference` without support\n * for excluding multiple arrays or iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Array} values The values to exclude.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n */\nfunction baseDifference(array, values, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      isCommon = true,\n      length = array.length,\n      result = [],\n      valuesLength = values.length;\n\n  if (!length) {\n    return result;\n  }\n  if (iteratee) {\n    values = arrayMap(values, baseUnary(iteratee));\n  }\n  if (comparator) {\n    includes = arrayIncludesWith;\n    isCommon = false;\n  }\n  else if (values.length >= LARGE_ARRAY_SIZE) {\n    includes = cacheHas;\n    isCommon = false;\n    values = new SetCache(values);\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var valuesIndex = valuesLength;\n      while (valuesIndex--) {\n        if (values[valuesIndex] === computed) {\n          continue outer;\n        }\n      }\n      result.push(value);\n    }\n    else if (!includes(values, computed, comparator)) {\n      result.push(value);\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = isKey(path, object) ? [path] : castPath(path);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\n/**\n * The base implementation of `getTag`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  return objectToString.call(value);\n}\n\n/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {boolean} [bitmask] The bitmask of comparison flags.\n *  The bitmask may be composed of the following flags:\n *     1 - Unordered comparison\n *     2 - Partial comparison\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, customizer, bitmask, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);\n}\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual`\n *  for more details.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = arrayTag,\n      othTag = arrayTag;\n\n  if (!objIsArr) {\n    objTag = getTag(object);\n    objTag = objTag == argsTag ? objectTag : objTag;\n  }\n  if (!othIsArr) {\n    othTag = getTag(other);\n    othTag = othTag == argsTag ? objectTag : othTag;\n  }\n  var objIsObj = objTag == objectTag && !isHostObject(object),\n      othIsObj = othTag == objectTag && !isHostObject(other),\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, equalFunc, customizer, bitmask, stack)\n      : equalByTag(object, other, objTag, equalFunc, customizer, bitmask, stack);\n  }\n  if (!(bitmask & PARTIAL_COMPARE_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, customizer, bitmask, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, equalFunc, customizer, bitmask, stack);\n}\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[objectToString.call(value)];\n}\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);\n  };\n}\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = array;\n    return apply(func, this, otherArgs);\n  };\n}\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value) {\n  return isArray(value) ? value : stringToPath(value);\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} customizer The function to customize comparisons.\n * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n *  for more details.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, equalFunc, customizer, bitmask, stack) {\n  var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & UNORDERED_COMPARE_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!seen.has(othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {\n              return seen.add(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, customizer, bitmask, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} customizer The function to customize comparisons.\n * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n *  for more details.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, equalFunc, customizer, bitmask, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & PARTIAL_COMPARE_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= UNORDERED_COMPARE_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), equalFunc, customizer, bitmask, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} customizer The function to customize comparisons.\n * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n *  for more details.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, equalFunc, customizer, bitmask, stack) {\n  var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n      objProps = keys(object),\n      objLength = objProps.length,\n      othProps = keys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n  return result;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11,\n// for data views in Edge < 14, and promises in Node.js.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = objectToString.call(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : undefined;\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = isKey(path, object) ? [path] : castPath(path);\n\n  var result,\n      index = -1,\n      length = path.length;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result) {\n    return result;\n  }\n  var length = object ? object.length : 0;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\n/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    return object[key] === srcValue &&\n      (srcValue !== undefined || (key in Object(object)));\n  };\n}\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoize(function(string) {\n  string = toString(string);\n\n  var result = [];\n  if (reLeadingDot.test(string)) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * This method is like `_.difference` except that it accepts `iteratee` which\n * is invoked for each element of `array` and `values` to generate the criterion\n * by which they're compared. Result values are chosen from the first array.\n * The iteratee is invoked with one argument: (value).\n *\n * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...Array} [values] The values to exclude.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n * @example\n *\n * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n * // => [1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n * // => [{ 'x': 2 }]\n */\nvar differenceBy = baseRest(function(array, values) {\n  var iteratee = last(values);\n  if (isArrayLikeObject(iteratee)) {\n    iteratee = undefined;\n  }\n  return isArrayLikeObject(array)\n    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), baseIteratee(iteratee, 2))\n    : [];\n});\n\n/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array ? array.length : 0;\n  return length ? array[length - 1] : undefined;\n}\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result);\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Assign cache to `_.memoize`.\nmemoize.Cache = MapCache;\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = differenceBy;\n","// @flow\n\nconst payoutDistributionToCsv = require(\"./distributionToCsv\");\n// TODO (@topocount) enable cross-package Flow type and interface imports from\n// packages/sourcecred. This does NOT mean we should import functions from\n// packages/sourcecred though, since that'll create a circular depedency.\n// Code we want to import from core needs to be split out into it's own\n// package first.\nconst csvIntegration /*: any */ = (payoutDistributions, _unused_config) => {\n  const csvString = payoutDistributionToCsv(payoutDistributions);\n\n  const timestamp = Date.now();\n\n  return {\n    transferredGrain: [],\n    outputFile: {\n      // The timestamp suffix is used to enforce uniqueness of filenames\n      // Human-readable dates will be prefixed in SourceCred Core\n      fileName: `Payouts-${timestamp}.csv`,\n      content: csvString,\n    },\n  };\n};\n\nmodule.exports = { csvIntegration };\n","exports.parse = require('./lib/parse');\nexports.stringify = require('./lib/stringify');\n","var at, // The index of the current character\n    ch, // The current character\n    escapee = {\n        '\"':  '\"',\n        '\\\\': '\\\\',\n        '/':  '/',\n        b:    '\\b',\n        f:    '\\f',\n        n:    '\\n',\n        r:    '\\r',\n        t:    '\\t'\n    },\n    text,\n\n    error = function (m) {\n        // Call error when something is wrong.\n        throw {\n            name:    'SyntaxError',\n            message: m,\n            at:      at,\n            text:    text\n        };\n    },\n    \n    next = function (c) {\n        // If a c parameter is provided, verify that it matches the current character.\n        if (c && c !== ch) {\n            error(\"Expected '\" + c + \"' instead of '\" + ch + \"'\");\n        }\n        \n        // Get the next character. When there are no more characters,\n        // return the empty string.\n        \n        ch = text.charAt(at);\n        at += 1;\n        return ch;\n    },\n    \n    number = function () {\n        // Parse a number value.\n        var number,\n            string = '';\n        \n        if (ch === '-') {\n            string = '-';\n            next('-');\n        }\n        while (ch >= '0' && ch <= '9') {\n            string += ch;\n            next();\n        }\n        if (ch === '.') {\n            string += '.';\n            while (next() && ch >= '0' && ch <= '9') {\n                string += ch;\n            }\n        }\n        if (ch === 'e' || ch === 'E') {\n            string += ch;\n            next();\n            if (ch === '-' || ch === '+') {\n                string += ch;\n                next();\n            }\n            while (ch >= '0' && ch <= '9') {\n                string += ch;\n                next();\n            }\n        }\n        number = +string;\n        if (!isFinite(number)) {\n            error(\"Bad number\");\n        } else {\n            return number;\n        }\n    },\n    \n    string = function () {\n        // Parse a string value.\n        var hex,\n            i,\n            string = '',\n            uffff;\n        \n        // When parsing for string values, we must look for \" and \\ characters.\n        if (ch === '\"') {\n            while (next()) {\n                if (ch === '\"') {\n                    next();\n                    return string;\n                } else if (ch === '\\\\') {\n                    next();\n                    if (ch === 'u') {\n                        uffff = 0;\n                        for (i = 0; i < 4; i += 1) {\n                            hex = parseInt(next(), 16);\n                            if (!isFinite(hex)) {\n                                break;\n                            }\n                            uffff = uffff * 16 + hex;\n                        }\n                        string += String.fromCharCode(uffff);\n                    } else if (typeof escapee[ch] === 'string') {\n                        string += escapee[ch];\n                    } else {\n                        break;\n                    }\n                } else {\n                    string += ch;\n                }\n            }\n        }\n        error(\"Bad string\");\n    },\n\n    white = function () {\n\n// Skip whitespace.\n\n        while (ch && ch <= ' ') {\n            next();\n        }\n    },\n\n    word = function () {\n\n// true, false, or null.\n\n        switch (ch) {\n        case 't':\n            next('t');\n            next('r');\n            next('u');\n            next('e');\n            return true;\n        case 'f':\n            next('f');\n            next('a');\n            next('l');\n            next('s');\n            next('e');\n            return false;\n        case 'n':\n            next('n');\n            next('u');\n            next('l');\n            next('l');\n            return null;\n        }\n        error(\"Unexpected '\" + ch + \"'\");\n    },\n\n    value,  // Place holder for the value function.\n\n    array = function () {\n\n// Parse an array value.\n\n        var array = [];\n\n        if (ch === '[') {\n            next('[');\n            white();\n            if (ch === ']') {\n                next(']');\n                return array;   // empty array\n            }\n            while (ch) {\n                array.push(value());\n                white();\n                if (ch === ']') {\n                    next(']');\n                    return array;\n                }\n                next(',');\n                white();\n            }\n        }\n        error(\"Bad array\");\n    },\n\n    object = function () {\n\n// Parse an object value.\n\n        var key,\n            object = {};\n\n        if (ch === '{') {\n            next('{');\n            white();\n            if (ch === '}') {\n                next('}');\n                return object;   // empty object\n            }\n            while (ch) {\n                key = string();\n                white();\n                next(':');\n                if (Object.hasOwnProperty.call(object, key)) {\n                    error('Duplicate key \"' + key + '\"');\n                }\n                object[key] = value();\n                white();\n                if (ch === '}') {\n                    next('}');\n                    return object;\n                }\n                next(',');\n                white();\n            }\n        }\n        error(\"Bad object\");\n    };\n\nvalue = function () {\n\n// Parse a JSON value. It could be an object, an array, a string, a number,\n// or a word.\n\n    white();\n    switch (ch) {\n    case '{':\n        return object();\n    case '[':\n        return array();\n    case '\"':\n        return string();\n    case '-':\n        return number();\n    default:\n        return ch >= '0' && ch <= '9' ? number() : word();\n    }\n};\n\n// Return the json_parse function. It will have access to all of the above\n// functions and variables.\n\nmodule.exports = function (source, reviver) {\n    var result;\n    \n    text = source;\n    at = 0;\n    ch = ' ';\n    result = value();\n    white();\n    if (ch) {\n        error(\"Syntax error\");\n    }\n\n    // If there is a reviver function, we recursively walk the new structure,\n    // passing each name/value pair to the reviver function for possible\n    // transformation, starting with a temporary root object that holds the result\n    // in an empty key. If there is not a reviver function, we simply return the\n    // result.\n\n    return typeof reviver === 'function' ? (function walk(holder, key) {\n        var k, v, value = holder[key];\n        if (value && typeof value === 'object') {\n            for (k in value) {\n                if (Object.prototype.hasOwnProperty.call(value, k)) {\n                    v = walk(value, k);\n                    if (v !== undefined) {\n                        value[k] = v;\n                    } else {\n                        delete value[k];\n                    }\n                }\n            }\n        }\n        return reviver.call(holder, key, value);\n    }({'': result}, '')) : result;\n};\n","var cx = /[\\u0000\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n    escapable = /[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n    gap,\n    indent,\n    meta = {    // table of character substitutions\n        '\\b': '\\\\b',\n        '\\t': '\\\\t',\n        '\\n': '\\\\n',\n        '\\f': '\\\\f',\n        '\\r': '\\\\r',\n        '\"' : '\\\\\"',\n        '\\\\': '\\\\\\\\'\n    },\n    rep;\n\nfunction quote(string) {\n    // If the string contains no control characters, no quote characters, and no\n    // backslash characters, then we can safely slap some quotes around it.\n    // Otherwise we must also replace the offending characters with safe escape\n    // sequences.\n    \n    escapable.lastIndex = 0;\n    return escapable.test(string) ? '\"' + string.replace(escapable, function (a) {\n        var c = meta[a];\n        return typeof c === 'string' ? c :\n            '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\n    }) + '\"' : '\"' + string + '\"';\n}\n\nfunction str(key, holder) {\n    // Produce a string from holder[key].\n    var i,          // The loop counter.\n        k,          // The member key.\n        v,          // The member value.\n        length,\n        mind = gap,\n        partial,\n        value = holder[key];\n    \n    // If the value has a toJSON method, call it to obtain a replacement value.\n    if (value && typeof value === 'object' &&\n            typeof value.toJSON === 'function') {\n        value = value.toJSON(key);\n    }\n    \n    // If we were called with a replacer function, then call the replacer to\n    // obtain a replacement value.\n    if (typeof rep === 'function') {\n        value = rep.call(holder, key, value);\n    }\n    \n    // What happens next depends on the value's type.\n    switch (typeof value) {\n        case 'string':\n            return quote(value);\n        \n        case 'number':\n            // JSON numbers must be finite. Encode non-finite numbers as null.\n            return isFinite(value) ? String(value) : 'null';\n        \n        case 'boolean':\n        case 'null':\n            // If the value is a boolean or null, convert it to a string. Note:\n            // typeof null does not produce 'null'. The case is included here in\n            // the remote chance that this gets fixed someday.\n            return String(value);\n            \n        case 'object':\n            if (!value) return 'null';\n            gap += indent;\n            partial = [];\n            \n            // Array.isArray\n            if (Object.prototype.toString.apply(value) === '[object Array]') {\n                length = value.length;\n                for (i = 0; i < length; i += 1) {\n                    partial[i] = str(i, value) || 'null';\n                }\n                \n                // Join all of the elements together, separated with commas, and\n                // wrap them in brackets.\n                v = partial.length === 0 ? '[]' : gap ?\n                    '[\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + ']' :\n                    '[' + partial.join(',') + ']';\n                gap = mind;\n                return v;\n            }\n            \n            // If the replacer is an array, use it to select the members to be\n            // stringified.\n            if (rep && typeof rep === 'object') {\n                length = rep.length;\n                for (i = 0; i < length; i += 1) {\n                    k = rep[i];\n                    if (typeof k === 'string') {\n                        v = str(k, value);\n                        if (v) {\n                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                        }\n                    }\n                }\n            }\n            else {\n                // Otherwise, iterate through all of the keys in the object.\n                for (k in value) {\n                    if (Object.prototype.hasOwnProperty.call(value, k)) {\n                        v = str(k, value);\n                        if (v) {\n                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                        }\n                    }\n                }\n            }\n            \n        // Join all of the member texts together, separated with commas,\n        // and wrap them in braces.\n\n        v = partial.length === 0 ? '{}' : gap ?\n            '{\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + '}' :\n            '{' + partial.join(',') + '}';\n        gap = mind;\n        return v;\n    }\n}\n\nmodule.exports = function (value, replacer, space) {\n    var i;\n    gap = '';\n    indent = '';\n    \n    // If the space parameter is a number, make an indent string containing that\n    // many spaces.\n    if (typeof space === 'number') {\n        for (i = 0; i < space; i += 1) {\n            indent += ' ';\n        }\n    }\n    // If the space parameter is a string, it will be used as the indent string.\n    else if (typeof space === 'string') {\n        indent = space;\n    }\n\n    // If there is a replacer, it must be a function or an array.\n    // Otherwise, throw an error.\n    rep = replacer;\n    if (replacer && typeof replacer !== 'function'\n    && (typeof replacer !== 'object' || typeof replacer.length !== 'number')) {\n        throw new Error('JSON.stringify');\n    }\n    \n    // Make a fake root object containing our value under the key of ''.\n    // Return the result of stringifying the value.\n    return str('', {'': value});\n};\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar decode_json_1 = __importDefault(require(\"./maps/decode.json\"));\n// Adapted from https://github.com/mathiasbynens/he/blob/master/src/he.js#L94-L119\nvar fromCodePoint = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\nString.fromCodePoint ||\n    function (codePoint) {\n        var output = \"\";\n        if (codePoint > 0xffff) {\n            codePoint -= 0x10000;\n            output += String.fromCharCode(((codePoint >>> 10) & 0x3ff) | 0xd800);\n            codePoint = 0xdc00 | (codePoint & 0x3ff);\n        }\n        output += String.fromCharCode(codePoint);\n        return output;\n    };\nfunction decodeCodePoint(codePoint) {\n    if ((codePoint >= 0xd800 && codePoint <= 0xdfff) || codePoint > 0x10ffff) {\n        return \"\\uFFFD\";\n    }\n    if (codePoint in decode_json_1.default) {\n        codePoint = decode_json_1.default[codePoint];\n    }\n    return fromCodePoint(codePoint);\n}\nexports.default = decodeCodePoint;\n","'use strict';\n\nvar BN = require('bn.js');\nvar numberToBN = require('number-to-bn');\n\nvar zero = new BN(0);\nvar negative1 = new BN(-1);\n\n// complete ethereum unit map\nvar unitMap = {\n  'noether': '0', // eslint-disable-line\n  'wei': '1', // eslint-disable-line\n  'kwei': '1000', // eslint-disable-line\n  'Kwei': '1000', // eslint-disable-line\n  'babbage': '1000', // eslint-disable-line\n  'femtoether': '1000', // eslint-disable-line\n  'mwei': '1000000', // eslint-disable-line\n  'Mwei': '1000000', // eslint-disable-line\n  'lovelace': '1000000', // eslint-disable-line\n  'picoether': '1000000', // eslint-disable-line\n  'gwei': '1000000000', // eslint-disable-line\n  'Gwei': '1000000000', // eslint-disable-line\n  'shannon': '1000000000', // eslint-disable-line\n  'nanoether': '1000000000', // eslint-disable-line\n  'nano': '1000000000', // eslint-disable-line\n  'szabo': '1000000000000', // eslint-disable-line\n  'microether': '1000000000000', // eslint-disable-line\n  'micro': '1000000000000', // eslint-disable-line\n  'finney': '1000000000000000', // eslint-disable-line\n  'milliether': '1000000000000000', // eslint-disable-line\n  'milli': '1000000000000000', // eslint-disable-line\n  'ether': '1000000000000000000', // eslint-disable-line\n  'kether': '1000000000000000000000', // eslint-disable-line\n  'grand': '1000000000000000000000', // eslint-disable-line\n  'mether': '1000000000000000000000000', // eslint-disable-line\n  'gether': '1000000000000000000000000000', // eslint-disable-line\n  'tether': '1000000000000000000000000000000' };\n\n/**\n * Returns value of unit in Wei\n *\n * @method getValueOfUnit\n * @param {String} unit the unit to convert to, default ether\n * @returns {BigNumber} value of the unit (in Wei)\n * @throws error if the unit is not correct:w\n */\nfunction getValueOfUnit(unitInput) {\n  var unit = unitInput ? unitInput.toLowerCase() : 'ether';\n  var unitValue = unitMap[unit]; // eslint-disable-line\n\n  if (typeof unitValue !== 'string') {\n    throw new Error('[ethjs-unit] the unit provided ' + unitInput + ' doesn\\'t exists, please use the one of the following units ' + JSON.stringify(unitMap, null, 2));\n  }\n\n  return new BN(unitValue, 10);\n}\n\nfunction numberToString(arg) {\n  if (typeof arg === 'string') {\n    if (!arg.match(/^-?[0-9.]+$/)) {\n      throw new Error('while converting number to string, invalid number value \\'' + arg + '\\', should be a number matching (^-?[0-9.]+).');\n    }\n    return arg;\n  } else if (typeof arg === 'number') {\n    return String(arg);\n  } else if (typeof arg === 'object' && arg.toString && (arg.toTwos || arg.dividedToIntegerBy)) {\n    if (arg.toPrecision) {\n      return String(arg.toPrecision());\n    } else {\n      // eslint-disable-line\n      return arg.toString(10);\n    }\n  }\n  throw new Error('while converting number to string, invalid number value \\'' + arg + '\\' type ' + typeof arg + '.');\n}\n\nfunction fromWei(weiInput, unit, optionsInput) {\n  var wei = numberToBN(weiInput); // eslint-disable-line\n  var negative = wei.lt(zero); // eslint-disable-line\n  var base = getValueOfUnit(unit);\n  var baseLength = unitMap[unit].length - 1 || 1;\n  var options = optionsInput || {};\n\n  if (negative) {\n    wei = wei.mul(negative1);\n  }\n\n  var fraction = wei.mod(base).toString(10); // eslint-disable-line\n\n  while (fraction.length < baseLength) {\n    fraction = '0' + fraction;\n  }\n\n  if (!options.pad) {\n    fraction = fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1];\n  }\n\n  var whole = wei.div(base).toString(10); // eslint-disable-line\n\n  if (options.commify) {\n    whole = whole.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  }\n\n  var value = '' + whole + (fraction == '0' ? '' : '.' + fraction); // eslint-disable-line\n\n  if (negative) {\n    value = '-' + value;\n  }\n\n  return value;\n}\n\nfunction toWei(etherInput, unit) {\n  var ether = numberToString(etherInput); // eslint-disable-line\n  var base = getValueOfUnit(unit);\n  var baseLength = unitMap[unit].length - 1 || 1;\n\n  // Is it negative?\n  var negative = ether.substring(0, 1) === '-'; // eslint-disable-line\n  if (negative) {\n    ether = ether.substring(1);\n  }\n\n  if (ether === '.') {\n    throw new Error('[ethjs-unit] while converting number ' + etherInput + ' to wei, invalid value');\n  }\n\n  // Split it into a whole and fractional part\n  var comps = ether.split('.'); // eslint-disable-line\n  if (comps.length > 2) {\n    throw new Error('[ethjs-unit] while converting number ' + etherInput + ' to wei,  too many decimal points');\n  }\n\n  var whole = comps[0],\n      fraction = comps[1]; // eslint-disable-line\n\n  if (!whole) {\n    whole = '0';\n  }\n  if (!fraction) {\n    fraction = '0';\n  }\n  if (fraction.length > baseLength) {\n    throw new Error('[ethjs-unit] while converting number ' + etherInput + ' to wei, too many decimal places');\n  }\n\n  while (fraction.length < baseLength) {\n    fraction += '0';\n  }\n\n  whole = new BN(whole);\n  fraction = new BN(fraction);\n  var wei = whole.mul(base).add(fraction); // eslint-disable-line\n\n  if (negative) {\n    wei = wei.mul(negative1);\n  }\n\n  return new BN(wei.toString(10), 10);\n}\n\nmodule.exports = {\n  unitMap: unitMap,\n  numberToString: numberToString,\n  getValueOfUnit: getValueOfUnit,\n  fromWei: fromWei,\n  toWei: toWei\n};","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buf' + 'fer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      r.strip();\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buf' + 'fer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      r.strip();\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","var isHexPrefixed = require('is-hex-prefixed');\n\n/**\n * Removes '0x' from a given `String` is present\n * @param {String} str the string value\n * @return {String|Optional} a string by pass if necessary\n */\nmodule.exports = function stripHexPrefix(str) {\n  if (typeof str !== 'string') {\n    return str;\n  }\n\n  return isHexPrefixed(str) ? str.slice(2) : str;\n}\n","/**\n * Returns a `Boolean` on whether or not the a `String` starts with '0x'\n * @param {String} str the string input value\n * @return {Boolean} a boolean if it is or is not hex prefixed\n * @throws if the str input is not a string\n */\nmodule.exports = function isHexPrefixed(str) {\n  if (typeof str !== 'string') {\n    throw new Error(\"[is-hex-prefixed] value must be type 'string', is currently type \" + (typeof str) + \", while checking isHexPrefixed.\");\n  }\n\n  return str.slice(0, 2) === '0x';\n}\n","/*! https://mths.be/utf8js v3.0.0 by @mathias */\n;(function(root) {\n\n\tvar stringFromCharCode = String.fromCharCode;\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2decode(string) {\n\t\tvar output = [];\n\t\tvar counter = 0;\n\t\tvar length = string.length;\n\t\tvar value;\n\t\tvar extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2encode(array) {\n\t\tvar length = array.length;\n\t\tvar index = -1;\n\t\tvar value;\n\t\tvar output = '';\n\t\twhile (++index < length) {\n\t\t\tvalue = array[index];\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t}\n\t\treturn output;\n\t}\n\n\tfunction checkScalarValue(codePoint) {\n\t\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n\t\t\tthrow Error(\n\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n\t\t\t\t' is not a scalar value'\n\t\t\t);\n\t\t}\n\t}\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction createByte(codePoint, shift) {\n\t\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n\t}\n\n\tfunction encodeCodePoint(codePoint) {\n\t\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\t\treturn stringFromCharCode(codePoint);\n\t\t}\n\t\tvar symbol = '';\n\t\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t\t}\n\t\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\t\tcheckScalarValue(codePoint);\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\t\tsymbol += createByte(codePoint, 12);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\t\treturn symbol;\n\t}\n\n\tfunction utf8encode(string) {\n\t\tvar codePoints = ucs2decode(string);\n\t\tvar length = codePoints.length;\n\t\tvar index = -1;\n\t\tvar codePoint;\n\t\tvar byteString = '';\n\t\twhile (++index < length) {\n\t\t\tcodePoint = codePoints[index];\n\t\t\tbyteString += encodeCodePoint(codePoint);\n\t\t}\n\t\treturn byteString;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction readContinuationByte() {\n\t\tif (byteIndex >= byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\tif ((continuationByte & 0xC0) == 0x80) {\n\t\t\treturn continuationByte & 0x3F;\n\t\t}\n\n\t\t// If we end up here, it’s not a continuation byte\n\t\tthrow Error('Invalid continuation byte');\n\t}\n\n\tfunction decodeSymbol() {\n\t\tvar byte1;\n\t\tvar byte2;\n\t\tvar byte3;\n\t\tvar byte4;\n\t\tvar codePoint;\n\n\t\tif (byteIndex > byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tif (byteIndex == byteCount) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Read first byte\n\t\tbyte1 = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\t// 1-byte sequence (no continuation bytes)\n\t\tif ((byte1 & 0x80) == 0) {\n\t\t\treturn byte1;\n\t\t}\n\n\t\t// 2-byte sequence\n\t\tif ((byte1 & 0xE0) == 0xC0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\t\tif (codePoint >= 0x80) {\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 3-byte sequence (may include unpaired surrogates)\n\t\tif ((byte1 & 0xF0) == 0xE0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\t\tif (codePoint >= 0x0800) {\n\t\t\t\tcheckScalarValue(codePoint);\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 4-byte sequence\n\t\tif ((byte1 & 0xF8) == 0xF0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tbyte4 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0C) |\n\t\t\t\t(byte3 << 0x06) | byte4;\n\t\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t\treturn codePoint;\n\t\t\t}\n\t\t}\n\n\t\tthrow Error('Invalid UTF-8 detected');\n\t}\n\n\tvar byteArray;\n\tvar byteCount;\n\tvar byteIndex;\n\tfunction utf8decode(byteString) {\n\t\tbyteArray = ucs2decode(byteString);\n\t\tbyteCount = byteArray.length;\n\t\tbyteIndex = 0;\n\t\tvar codePoints = [];\n\t\tvar tmp;\n\t\twhile ((tmp = decodeSymbol()) !== false) {\n\t\t\tcodePoints.push(tmp);\n\t\t}\n\t\treturn ucs2encode(codePoints);\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\troot.version = '3.0.0';\n\troot.encode = utf8encode;\n\troot.decode = utf8decode;\n\n}(typeof exports === 'undefined' ? this.utf8 = {} : exports));\n","// This was ported from https://github.com/emn178/js-sha3, with some minor\n// modifications and pruning. It is licensed under MIT:\n//\n// Copyright 2015-2016 Chen, Yi-Cyuan\n//  \n// Permission is hereby granted, free of charge, to any person obtaining\n// a copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to\n// permit persons to whom the Software is furnished to do so, subject to\n// the following conditions:\n// \n// The above copyright notice and this permission notice shall be\n// included in all copies or substantial portions of the Software.\n// \n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nconst HEX_CHARS = '0123456789abcdef'.split('');\nconst KECCAK_PADDING = [1, 256, 65536, 16777216];\nconst SHIFT = [0, 8, 16, 24];\nconst RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];\n\nconst Keccak = bits => ({\n  blocks: [],\n  reset: true,\n  block: 0,\n  start: 0,\n  blockCount: 1600 - (bits << 1) >> 5,\n  outputBlocks: bits >> 5,\n  s: (s => [].concat(s, s, s, s, s))([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\n});\n\nconst update = (state, message) => {\n  var length = message.length,\n      blocks = state.blocks,\n      byteCount = state.blockCount << 2,\n      blockCount = state.blockCount,\n      outputBlocks = state.outputBlocks,\n      s = state.s,\n      index = 0,\n      i,\n      code;\n\n  // update\n  while (index < length) {\n    if (state.reset) {\n      state.reset = false;\n      blocks[0] = state.block;\n      for (i = 1; i < blockCount + 1; ++i) {\n        blocks[i] = 0;\n      }\n    }\n    if (typeof message !== \"string\") {\n      for (i = state.start; index < length && i < byteCount; ++index) {\n        blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n      }\n    } else {\n      for (i = state.start; index < length && i < byteCount; ++index) {\n        code = message.charCodeAt(index);\n        if (code < 0x80) {\n          blocks[i >> 2] |= code << SHIFT[i++ & 3];\n        } else if (code < 0x800) {\n          blocks[i >> 2] |= (0xc0 | code >> 6) << SHIFT[i++ & 3];\n          blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n        } else if (code < 0xd800 || code >= 0xe000) {\n          blocks[i >> 2] |= (0xe0 | code >> 12) << SHIFT[i++ & 3];\n          blocks[i >> 2] |= (0x80 | code >> 6 & 0x3f) << SHIFT[i++ & 3];\n          blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n        } else {\n          code = 0x10000 + ((code & 0x3ff) << 10 | message.charCodeAt(++index) & 0x3ff);\n          blocks[i >> 2] |= (0xf0 | code >> 18) << SHIFT[i++ & 3];\n          blocks[i >> 2] |= (0x80 | code >> 12 & 0x3f) << SHIFT[i++ & 3];\n          blocks[i >> 2] |= (0x80 | code >> 6 & 0x3f) << SHIFT[i++ & 3];\n          blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n        }\n      }\n    }\n    state.lastByteIndex = i;\n    if (i >= byteCount) {\n      state.start = i - byteCount;\n      state.block = blocks[blockCount];\n      for (i = 0; i < blockCount; ++i) {\n        s[i] ^= blocks[i];\n      }\n      f(s);\n      state.reset = true;\n    } else {\n      state.start = i;\n    }\n  }\n\n  // finalize\n  i = state.lastByteIndex;\n  blocks[i >> 2] |= KECCAK_PADDING[i & 3];\n  if (state.lastByteIndex === byteCount) {\n    blocks[0] = blocks[blockCount];\n    for (i = 1; i < blockCount + 1; ++i) {\n      blocks[i] = 0;\n    }\n  }\n  blocks[blockCount - 1] |= 0x80000000;\n  for (i = 0; i < blockCount; ++i) {\n    s[i] ^= blocks[i];\n  }\n  f(s);\n\n  // toString\n  var hex = '',\n      i = 0,\n      j = 0,\n      block;\n  while (j < outputBlocks) {\n    for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n      block = s[i];\n      hex += HEX_CHARS[block >> 4 & 0x0F] + HEX_CHARS[block & 0x0F] + HEX_CHARS[block >> 12 & 0x0F] + HEX_CHARS[block >> 8 & 0x0F] + HEX_CHARS[block >> 20 & 0x0F] + HEX_CHARS[block >> 16 & 0x0F] + HEX_CHARS[block >> 28 & 0x0F] + HEX_CHARS[block >> 24 & 0x0F];\n    }\n    if (j % blockCount === 0) {\n      f(s);\n      i = 0;\n    }\n  }\n  return \"0x\" + hex;\n};\n\nconst f = s => {\n  var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17, b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33, b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;\n\n  for (n = 0; n < 48; n += 2) {\n    c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\n    c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\n    c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\n    c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\n    c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\n    c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\n    c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\n    c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\n    c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\n    c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\n\n    h = c8 ^ (c2 << 1 | c3 >>> 31);\n    l = c9 ^ (c3 << 1 | c2 >>> 31);\n    s[0] ^= h;\n    s[1] ^= l;\n    s[10] ^= h;\n    s[11] ^= l;\n    s[20] ^= h;\n    s[21] ^= l;\n    s[30] ^= h;\n    s[31] ^= l;\n    s[40] ^= h;\n    s[41] ^= l;\n    h = c0 ^ (c4 << 1 | c5 >>> 31);\n    l = c1 ^ (c5 << 1 | c4 >>> 31);\n    s[2] ^= h;\n    s[3] ^= l;\n    s[12] ^= h;\n    s[13] ^= l;\n    s[22] ^= h;\n    s[23] ^= l;\n    s[32] ^= h;\n    s[33] ^= l;\n    s[42] ^= h;\n    s[43] ^= l;\n    h = c2 ^ (c6 << 1 | c7 >>> 31);\n    l = c3 ^ (c7 << 1 | c6 >>> 31);\n    s[4] ^= h;\n    s[5] ^= l;\n    s[14] ^= h;\n    s[15] ^= l;\n    s[24] ^= h;\n    s[25] ^= l;\n    s[34] ^= h;\n    s[35] ^= l;\n    s[44] ^= h;\n    s[45] ^= l;\n    h = c4 ^ (c8 << 1 | c9 >>> 31);\n    l = c5 ^ (c9 << 1 | c8 >>> 31);\n    s[6] ^= h;\n    s[7] ^= l;\n    s[16] ^= h;\n    s[17] ^= l;\n    s[26] ^= h;\n    s[27] ^= l;\n    s[36] ^= h;\n    s[37] ^= l;\n    s[46] ^= h;\n    s[47] ^= l;\n    h = c6 ^ (c0 << 1 | c1 >>> 31);\n    l = c7 ^ (c1 << 1 | c0 >>> 31);\n    s[8] ^= h;\n    s[9] ^= l;\n    s[18] ^= h;\n    s[19] ^= l;\n    s[28] ^= h;\n    s[29] ^= l;\n    s[38] ^= h;\n    s[39] ^= l;\n    s[48] ^= h;\n    s[49] ^= l;\n\n    b0 = s[0];\n    b1 = s[1];\n    b32 = s[11] << 4 | s[10] >>> 28;\n    b33 = s[10] << 4 | s[11] >>> 28;\n    b14 = s[20] << 3 | s[21] >>> 29;\n    b15 = s[21] << 3 | s[20] >>> 29;\n    b46 = s[31] << 9 | s[30] >>> 23;\n    b47 = s[30] << 9 | s[31] >>> 23;\n    b28 = s[40] << 18 | s[41] >>> 14;\n    b29 = s[41] << 18 | s[40] >>> 14;\n    b20 = s[2] << 1 | s[3] >>> 31;\n    b21 = s[3] << 1 | s[2] >>> 31;\n    b2 = s[13] << 12 | s[12] >>> 20;\n    b3 = s[12] << 12 | s[13] >>> 20;\n    b34 = s[22] << 10 | s[23] >>> 22;\n    b35 = s[23] << 10 | s[22] >>> 22;\n    b16 = s[33] << 13 | s[32] >>> 19;\n    b17 = s[32] << 13 | s[33] >>> 19;\n    b48 = s[42] << 2 | s[43] >>> 30;\n    b49 = s[43] << 2 | s[42] >>> 30;\n    b40 = s[5] << 30 | s[4] >>> 2;\n    b41 = s[4] << 30 | s[5] >>> 2;\n    b22 = s[14] << 6 | s[15] >>> 26;\n    b23 = s[15] << 6 | s[14] >>> 26;\n    b4 = s[25] << 11 | s[24] >>> 21;\n    b5 = s[24] << 11 | s[25] >>> 21;\n    b36 = s[34] << 15 | s[35] >>> 17;\n    b37 = s[35] << 15 | s[34] >>> 17;\n    b18 = s[45] << 29 | s[44] >>> 3;\n    b19 = s[44] << 29 | s[45] >>> 3;\n    b10 = s[6] << 28 | s[7] >>> 4;\n    b11 = s[7] << 28 | s[6] >>> 4;\n    b42 = s[17] << 23 | s[16] >>> 9;\n    b43 = s[16] << 23 | s[17] >>> 9;\n    b24 = s[26] << 25 | s[27] >>> 7;\n    b25 = s[27] << 25 | s[26] >>> 7;\n    b6 = s[36] << 21 | s[37] >>> 11;\n    b7 = s[37] << 21 | s[36] >>> 11;\n    b38 = s[47] << 24 | s[46] >>> 8;\n    b39 = s[46] << 24 | s[47] >>> 8;\n    b30 = s[8] << 27 | s[9] >>> 5;\n    b31 = s[9] << 27 | s[8] >>> 5;\n    b12 = s[18] << 20 | s[19] >>> 12;\n    b13 = s[19] << 20 | s[18] >>> 12;\n    b44 = s[29] << 7 | s[28] >>> 25;\n    b45 = s[28] << 7 | s[29] >>> 25;\n    b26 = s[38] << 8 | s[39] >>> 24;\n    b27 = s[39] << 8 | s[38] >>> 24;\n    b8 = s[48] << 14 | s[49] >>> 18;\n    b9 = s[49] << 14 | s[48] >>> 18;\n\n    s[0] = b0 ^ ~b2 & b4;\n    s[1] = b1 ^ ~b3 & b5;\n    s[10] = b10 ^ ~b12 & b14;\n    s[11] = b11 ^ ~b13 & b15;\n    s[20] = b20 ^ ~b22 & b24;\n    s[21] = b21 ^ ~b23 & b25;\n    s[30] = b30 ^ ~b32 & b34;\n    s[31] = b31 ^ ~b33 & b35;\n    s[40] = b40 ^ ~b42 & b44;\n    s[41] = b41 ^ ~b43 & b45;\n    s[2] = b2 ^ ~b4 & b6;\n    s[3] = b3 ^ ~b5 & b7;\n    s[12] = b12 ^ ~b14 & b16;\n    s[13] = b13 ^ ~b15 & b17;\n    s[22] = b22 ^ ~b24 & b26;\n    s[23] = b23 ^ ~b25 & b27;\n    s[32] = b32 ^ ~b34 & b36;\n    s[33] = b33 ^ ~b35 & b37;\n    s[42] = b42 ^ ~b44 & b46;\n    s[43] = b43 ^ ~b45 & b47;\n    s[4] = b4 ^ ~b6 & b8;\n    s[5] = b5 ^ ~b7 & b9;\n    s[14] = b14 ^ ~b16 & b18;\n    s[15] = b15 ^ ~b17 & b19;\n    s[24] = b24 ^ ~b26 & b28;\n    s[25] = b25 ^ ~b27 & b29;\n    s[34] = b34 ^ ~b36 & b38;\n    s[35] = b35 ^ ~b37 & b39;\n    s[44] = b44 ^ ~b46 & b48;\n    s[45] = b45 ^ ~b47 & b49;\n    s[6] = b6 ^ ~b8 & b0;\n    s[7] = b7 ^ ~b9 & b1;\n    s[16] = b16 ^ ~b18 & b10;\n    s[17] = b17 ^ ~b19 & b11;\n    s[26] = b26 ^ ~b28 & b20;\n    s[27] = b27 ^ ~b29 & b21;\n    s[36] = b36 ^ ~b38 & b30;\n    s[37] = b37 ^ ~b39 & b31;\n    s[46] = b46 ^ ~b48 & b40;\n    s[47] = b47 ^ ~b49 & b41;\n    s[8] = b8 ^ ~b0 & b2;\n    s[9] = b9 ^ ~b1 & b3;\n    s[18] = b18 ^ ~b10 & b12;\n    s[19] = b19 ^ ~b11 & b13;\n    s[28] = b28 ^ ~b20 & b22;\n    s[29] = b29 ^ ~b21 & b23;\n    s[38] = b38 ^ ~b30 & b32;\n    s[39] = b39 ^ ~b31 & b33;\n    s[48] = b48 ^ ~b40 & b42;\n    s[49] = b49 ^ ~b41 & b43;\n\n    s[0] ^= RC[n];\n    s[1] ^= RC[n + 1];\n  }\n};\n\nconst keccak = bits => str => {\n  var msg;\n  if (str.slice(0, 2) === \"0x\") {\n    msg = [];\n    for (var i = 2, l = str.length; i < l; i += 2) msg.push(parseInt(str.slice(i, i + 2), 16));\n  } else {\n    msg = str;\n  }\n  return update(Keccak(bits, bits), msg);\n};\n\nmodule.exports = {\n  keccak256: keccak(256),\n  keccak512: keccak(512),\n  keccak256s: keccak(256),\n  keccak512s: keccak(512)\n};","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst utils_1 = require(\"./utils\");\r\n/**\r\n * Returns true if the bloom is a valid bloom\r\n * @param bloom The bloom\r\n */\r\nfunction isBloom(bloom) {\r\n    if (typeof bloom !== 'string') {\r\n        return false;\r\n    }\r\n    if (!/^(0x)?[0-9a-f]{512}$/i.test(bloom)) {\r\n        return false;\r\n    }\r\n    if (/^(0x)?[0-9a-f]{512}$/.test(bloom) ||\r\n        /^(0x)?[0-9A-F]{512}$/.test(bloom)) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nexports.isBloom = isBloom;\r\n/**\r\n * Returns true if the value is part of the given bloom\r\n * note: false positives are possible.\r\n * @param bloom encoded bloom\r\n * @param value The value\r\n */\r\nfunction isInBloom(bloom, value) {\r\n    if (typeof value === 'object' && value.constructor === Uint8Array) {\r\n        value = utils_1.bytesToHex(value);\r\n    }\r\n    const hash = utils_1.keccak256(value).replace('0x', '');\r\n    for (let i = 0; i < 12; i += 4) {\r\n        // calculate bit position in bloom filter that must be active\r\n        const bitpos = ((parseInt(hash.substr(i, 2), 16) << 8) +\r\n            parseInt(hash.substr(i + 2, 2), 16)) &\r\n            2047;\r\n        // test if bitpos in bloom is active\r\n        const code = codePointToInt(bloom.charCodeAt(bloom.length - 1 - Math.floor(bitpos / 4)));\r\n        const offset = 1 << bitpos % 4;\r\n        if ((code & offset) !== offset) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nexports.isInBloom = isInBloom;\r\n/**\r\n * Code points to int\r\n * @param codePoint The code point\r\n */\r\nfunction codePointToInt(codePoint) {\r\n    if (codePoint >= 48 && codePoint <= 57) {\r\n        /* ['0'..'9'] -> [0..9] */\r\n        return codePoint - 48;\r\n    }\r\n    if (codePoint >= 65 && codePoint <= 70) {\r\n        /* ['A'..'F'] -> [10..15] */\r\n        return codePoint - 55;\r\n    }\r\n    if (codePoint >= 97 && codePoint <= 102) {\r\n        /* ['a'..'f'] -> [10..15] */\r\n        return codePoint - 87;\r\n    }\r\n    throw new Error('invalid bloom');\r\n}\r\n/**\r\n * Returns true if the ethereum users address is part of the given bloom.\r\n * note: false positives are possible.\r\n * @param bloom encoded bloom\r\n * @param address the address to test\r\n */\r\nfunction isUserEthereumAddressInBloom(bloom, ethereumAddress) {\r\n    if (!isBloom(bloom)) {\r\n        throw new Error('Invalid bloom given');\r\n    }\r\n    if (!isAddress(ethereumAddress)) {\r\n        throw new Error(`Invalid ethereum address given: \"${ethereumAddress}\"`);\r\n    }\r\n    // you have to pad the ethereum address to 32 bytes\r\n    // else the bloom filter does not work\r\n    // this is only if your matching the USERS\r\n    // ethereum address. Contract address do not need this\r\n    // hence why we have 2 methods\r\n    // (0x is not in the 2nd parameter of padleft so 64 chars is fine)\r\n    const address = utils_1.padLeft(ethereumAddress, 64);\r\n    return isInBloom(bloom, address);\r\n}\r\nexports.isUserEthereumAddressInBloom = isUserEthereumAddressInBloom;\r\n/**\r\n * Returns true if the contract address is part of the given bloom.\r\n * note: false positives are possible.\r\n * @param bloom encoded bloom\r\n * @param contractAddress the contract address to test\r\n */\r\nfunction isContractAddressInBloom(bloom, contractAddress) {\r\n    if (!isBloom(bloom)) {\r\n        throw new Error('Invalid bloom given');\r\n    }\r\n    if (!isAddress(contractAddress)) {\r\n        throw new Error(`Invalid contract address given: \"${contractAddress}\"`);\r\n    }\r\n    return isInBloom(bloom, contractAddress);\r\n}\r\nexports.isContractAddressInBloom = isContractAddressInBloom;\r\n/**\r\n * Returns true if the topic is part of the given bloom.\r\n * note: false positives are possible.\r\n * @param bloom encoded bloom\r\n * @param topic the topic encoded hex\r\n */\r\nfunction isTopicInBloom(bloom, topic) {\r\n    if (!isBloom(bloom)) {\r\n        throw new Error('Invalid bloom given');\r\n    }\r\n    if (!isTopic(topic)) {\r\n        throw new Error('Invalid topic');\r\n    }\r\n    return isInBloom(bloom, topic);\r\n}\r\nexports.isTopicInBloom = isTopicInBloom;\r\n/**\r\n * Checks if its a valid topic\r\n * @param topic encoded hex topic\r\n */\r\nfunction isTopic(topic) {\r\n    if (typeof topic !== 'string') {\r\n        return false;\r\n    }\r\n    if (!/^(0x)?[0-9a-f]{64}$/i.test(topic)) {\r\n        return false;\r\n    }\r\n    else if (/^(0x)?[0-9a-f]{64}$/.test(topic) ||\r\n        /^(0x)?[0-9A-F]{64}$/.test(topic)) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nexports.isTopic = isTopic;\r\n/**\r\n * Is valid address\r\n * @param address The address\r\n */\r\nfunction isAddress(address) {\r\n    if (typeof address !== 'string') {\r\n        return false;\r\n    }\r\n    if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {\r\n        return true;\r\n    }\r\n    if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nexports.isAddress = isAddress;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst sha3 = require(\"js-sha3\");\r\n/**\r\n * Keccak256 hash\r\n * @param data The data\r\n */\r\nfunction keccak256(data) {\r\n    return '0x' + sha3.keccak_256(toByteArray(data));\r\n}\r\nexports.keccak256 = keccak256;\r\n/**\r\n * Adding padding to string on the left\r\n * @param value The value\r\n * @param chars The chars\r\n */\r\nexports.padLeft = (value, chars) => {\r\n    const hasPrefix = /^0x/i.test(value) || typeof value === 'number';\r\n    value = value.toString().replace(/^0x/i, '');\r\n    const padding = chars - value.length + 1 >= 0 ? chars - value.length + 1 : 0;\r\n    return (hasPrefix ? '0x' : '') + new Array(padding).join('0') + value;\r\n};\r\n/**\r\n * Convert bytes to hex\r\n * @param bytes The bytes\r\n */\r\nfunction bytesToHex(bytes) {\r\n    const hex = [];\r\n    for (let i = 0; i < bytes.length; i++) {\r\n        hex.push((bytes[i] >>> 4).toString(16));\r\n        hex.push((bytes[i] & 0xf).toString(16));\r\n    }\r\n    return `0x${hex.join('').replace(/^0+/, '')}`;\r\n}\r\nexports.bytesToHex = bytesToHex;\r\n/**\r\n * To byte array\r\n * @param value The value\r\n */\r\nfunction toByteArray(value) {\r\n    if (value == null) {\r\n        throw new Error('cannot convert null value to array');\r\n    }\r\n    if (typeof value === 'string') {\r\n        const match = value.match(/^(0x)?[0-9a-fA-F]*$/);\r\n        if (!match) {\r\n            throw new Error('invalid hexidecimal string');\r\n        }\r\n        if (match[1] !== '0x') {\r\n            throw new Error('hex string must have 0x prefix');\r\n        }\r\n        value = value.substring(2);\r\n        if (value.length % 2) {\r\n            value = '0' + value;\r\n        }\r\n        const result = [];\r\n        for (let i = 0; i < value.length; i += 2) {\r\n            result.push(parseInt(value.substr(i, 2), 16));\r\n        }\r\n        return addSlice(new Uint8Array(result));\r\n    }\r\n    if (isByteArray(value)) {\r\n        return addSlice(new Uint8Array(value));\r\n    }\r\n    throw new Error('invalid arrayify value');\r\n}\r\nexports.toByteArray = toByteArray;\r\n/**\r\n * Is byte array\r\n * @param value The value\r\n */\r\nfunction isByteArray(value) {\r\n    if (!value ||\r\n        // tslint:disable-next-line: radix\r\n        parseInt(String(value.length)) != value.length ||\r\n        typeof value === 'string') {\r\n        return false;\r\n    }\r\n    for (let i = 0; i < value.length; i++) {\r\n        const v = value[i];\r\n        // tslint:disable-next-line: radix\r\n        if (v < 0 || v >= 256 || parseInt(String(v)) != v) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Add slice to array\r\n * @param array The array\r\n */\r\nfunction addSlice(array) {\r\n    if (array.slice !== undefined) {\r\n        return array;\r\n    }\r\n    array.slice = () => {\r\n        const args = Array.prototype.slice.call(arguments);\r\n        return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));\r\n    };\r\n    return array;\r\n}\r\n","/**\n * [js-sha3]{@link https://github.com/emn178/js-sha3}\n *\n * @version 0.8.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2015-2018\n * @license MIT\n */\n/*jslint bitwise: true */\n(function () {\n  'use strict';\n\n  var INPUT_ERROR = 'input is invalid type';\n  var FINALIZE_ERROR = 'finalize already called';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n  if (root.JS_SHA3_NO_WINDOW) {\n    WINDOW = false;\n  }\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = global;\n  } else if (WEB_WORKER) {\n    root = self;\n  }\n  var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && typeof module === 'object' && module.exports;\n  var AMD = typeof define === 'function' && define.amd;\n  var ARRAY_BUFFER = !root.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var SHAKE_PADDING = [31, 7936, 2031616, 520093696];\n  var CSHAKE_PADDING = [4, 1024, 262144, 67108864];\n  var KECCAK_PADDING = [1, 256, 65536, 16777216];\n  var PADDING = [6, 1536, 393216, 100663296];\n  var SHIFT = [0, 8, 16, 24];\n  var RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649,\n    0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0,\n    2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771,\n    2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648,\n    2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];\n  var BITS = [224, 256, 384, 512];\n  var SHAKE_BITS = [128, 256];\n  var OUTPUT_TYPES = ['hex', 'buffer', 'arrayBuffer', 'array', 'digest'];\n  var CSHAKE_BYTEPAD = {\n    '128': 168,\n    '256': 136\n  };\n\n  if (root.JS_SHA3_NO_NODE_JS || !Array.isArray) {\n    Array.isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n  }\n\n  if (ARRAY_BUFFER && (root.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n    ArrayBuffer.isView = function (obj) {\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n  }\n\n  var createOutputMethod = function (bits, padding, outputType) {\n    return function (message) {\n      return new Keccak(bits, padding, bits).update(message)[outputType]();\n    };\n  };\n\n  var createShakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits) {\n      return new Keccak(bits, padding, outputBits).update(message)[outputType]();\n    };\n  };\n\n  var createCshakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits, n, s) {\n      return methods['cshake' + bits].update(message, outputBits, n, s)[outputType]();\n    };\n  };\n\n  var createKmacOutputMethod = function (bits, padding, outputType) {\n    return function (key, message, outputBits, s) {\n      return methods['kmac' + bits].update(key, message, outputBits, s)[outputType]();\n    };\n  };\n\n  var createOutputMethods = function (method, createMethod, bits, padding) {\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createMethod(bits, padding, type);\n    }\n    return method;\n  };\n\n  var createMethod = function (bits, padding) {\n    var method = createOutputMethod(bits, padding, 'hex');\n    method.create = function () {\n      return new Keccak(bits, padding, bits);\n    };\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n    return createOutputMethods(method, createOutputMethod, bits, padding);\n  };\n\n  var createShakeMethod = function (bits, padding) {\n    var method = createShakeOutputMethod(bits, padding, 'hex');\n    method.create = function (outputBits) {\n      return new Keccak(bits, padding, outputBits);\n    };\n    method.update = function (message, outputBits) {\n      return method.create(outputBits).update(message);\n    };\n    return createOutputMethods(method, createShakeOutputMethod, bits, padding);\n  };\n\n  var createCshakeMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createCshakeOutputMethod(bits, padding, 'hex');\n    method.create = function (outputBits, n, s) {\n      if (!n && !s) {\n        return methods['shake' + bits].create(outputBits);\n      } else {\n        return new Keccak(bits, padding, outputBits).bytepad([n, s], w);\n      }\n    };\n    method.update = function (message, outputBits, n, s) {\n      return method.create(outputBits, n, s).update(message);\n    };\n    return createOutputMethods(method, createCshakeOutputMethod, bits, padding);\n  };\n\n  var createKmacMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createKmacOutputMethod(bits, padding, 'hex');\n    method.create = function (key, outputBits, s) {\n      return new Kmac(bits, padding, outputBits).bytepad(['KMAC', s], w).bytepad([key], w);\n    };\n    method.update = function (key, message, outputBits, s) {\n      return method.create(key, outputBits, s).update(message);\n    };\n    return createOutputMethods(method, createKmacOutputMethod, bits, padding);\n  };\n\n  var algorithms = [\n    { name: 'keccak', padding: KECCAK_PADDING, bits: BITS, createMethod: createMethod },\n    { name: 'sha3', padding: PADDING, bits: BITS, createMethod: createMethod },\n    { name: 'shake', padding: SHAKE_PADDING, bits: SHAKE_BITS, createMethod: createShakeMethod },\n    { name: 'cshake', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createCshakeMethod },\n    { name: 'kmac', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createKmacMethod }\n  ];\n\n  var methods = {}, methodNames = [];\n\n  for (var i = 0; i < algorithms.length; ++i) {\n    var algorithm = algorithms[i];\n    var bits = algorithm.bits;\n    for (var j = 0; j < bits.length; ++j) {\n      var methodName = algorithm.name + '_' + bits[j];\n      methodNames.push(methodName);\n      methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);\n      if (algorithm.name !== 'sha3') {\n        var newMethodName = algorithm.name + bits[j];\n        methodNames.push(newMethodName);\n        methods[newMethodName] = methods[methodName];\n      }\n    }\n  }\n\n  function Keccak(bits, padding, outputBits) {\n    this.blocks = [];\n    this.s = [];\n    this.padding = padding;\n    this.outputBits = outputBits;\n    this.reset = true;\n    this.finalized = false;\n    this.block = 0;\n    this.start = 0;\n    this.blockCount = (1600 - (bits << 1)) >> 5;\n    this.byteCount = this.blockCount << 2;\n    this.outputBlocks = outputBits >> 5;\n    this.extraBytes = (outputBits & 31) >> 3;\n\n    for (var i = 0; i < 50; ++i) {\n      this.s[i] = 0;\n    }\n  }\n\n  Keccak.prototype.update = function (message) {\n    if (this.finalized) {\n      throw new Error(FINALIZE_ERROR);\n    }\n    var notString, type = typeof message;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (message === null) {\n          throw new Error(INPUT_ERROR);\n        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        } else if (!Array.isArray(message)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n            throw new Error(INPUT_ERROR);\n          }\n        }\n      } else {\n        throw new Error(INPUT_ERROR);\n      }\n      notString = true;\n    }\n    var blocks = this.blocks, byteCount = this.byteCount, length = message.length,\n      blockCount = this.blockCount, index = 0, s = this.s, i, code;\n\n    while (index < length) {\n      if (this.reset) {\n        this.reset = false;\n        blocks[0] = this.block;\n        for (i = 1; i < blockCount + 1; ++i) {\n          blocks[i] = 0;\n        }\n      }\n      if (notString) {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n        }\n      } else {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          code = message.charCodeAt(index);\n          if (code < 0x80) {\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\n          } else if (code < 0x800) {\n            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else if (code < 0xd800 || code >= 0xe000) {\n            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else {\n            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          }\n        }\n      }\n      this.lastByteIndex = i;\n      if (i >= byteCount) {\n        this.start = i - byteCount;\n        this.block = blocks[blockCount];\n        for (i = 0; i < blockCount; ++i) {\n          s[i] ^= blocks[i];\n        }\n        f(s);\n        this.reset = true;\n      } else {\n        this.start = i;\n      }\n    }\n    return this;\n  };\n\n  Keccak.prototype.encode = function (x, right) {\n    var o = x & 255, n = 1;\n    var bytes = [o];\n    x = x >> 8;\n    o = x & 255;\n    while (o > 0) {\n      bytes.unshift(o);\n      x = x >> 8;\n      o = x & 255;\n      ++n;\n    }\n    if (right) {\n      bytes.push(n);\n    } else {\n      bytes.unshift(n);\n    }\n    this.update(bytes);\n    return bytes.length;\n  };\n\n  Keccak.prototype.encodeString = function (str) {\n    var notString, type = typeof str;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (str === null) {\n          throw new Error(INPUT_ERROR);\n        } else if (ARRAY_BUFFER && str.constructor === ArrayBuffer) {\n          str = new Uint8Array(str);\n        } else if (!Array.isArray(str)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(str)) {\n            throw new Error(INPUT_ERROR);\n          }\n        }\n      } else {\n        throw new Error(INPUT_ERROR);\n      }\n      notString = true;\n    }\n    var bytes = 0, length = str.length;\n    if (notString) {\n      bytes = length;\n    } else {\n      for (var i = 0; i < str.length; ++i) {\n        var code = str.charCodeAt(i);\n        if (code < 0x80) {\n          bytes += 1;\n        } else if (code < 0x800) {\n          bytes += 2;\n        } else if (code < 0xd800 || code >= 0xe000) {\n          bytes += 3;\n        } else {\n          code = 0x10000 + (((code & 0x3ff) << 10) | (str.charCodeAt(++i) & 0x3ff));\n          bytes += 4;\n        }\n      }\n    }\n    bytes += this.encode(bytes * 8);\n    this.update(str);\n    return bytes;\n  };\n\n  Keccak.prototype.bytepad = function (strs, w) {\n    var bytes = this.encode(w);\n    for (var i = 0; i < strs.length; ++i) {\n      bytes += this.encodeString(strs[i]);\n    }\n    var paddingBytes = w - bytes % w;\n    var zeros = [];\n    zeros.length = paddingBytes;\n    this.update(zeros);\n    return this;\n  };\n\n  Keccak.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex, blockCount = this.blockCount, s = this.s;\n    blocks[i >> 2] |= this.padding[i & 3];\n    if (this.lastByteIndex === this.byteCount) {\n      blocks[0] = blocks[blockCount];\n      for (i = 1; i < blockCount + 1; ++i) {\n        blocks[i] = 0;\n      }\n    }\n    blocks[blockCount - 1] |= 0x80000000;\n    for (i = 0; i < blockCount; ++i) {\n      s[i] ^= blocks[i];\n    }\n    f(s);\n  };\n\n  Keccak.prototype.toString = Keccak.prototype.hex = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var hex = '', block;\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        block = s[i];\n        hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F] +\n          HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F] +\n          HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F] +\n          HEX_CHARS[(block >> 28) & 0x0F] + HEX_CHARS[(block >> 24) & 0x0F];\n      }\n      if (j % blockCount === 0) {\n        f(s);\n        i = 0;\n      }\n    }\n    if (extraBytes) {\n      block = s[i];\n      hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F];\n      if (extraBytes > 1) {\n        hex += HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F];\n      }\n      if (extraBytes > 2) {\n        hex += HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F];\n      }\n    }\n    return hex;\n  };\n\n  Keccak.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var bytes = this.outputBits >> 3;\n    var buffer;\n    if (extraBytes) {\n      buffer = new ArrayBuffer((outputBlocks + 1) << 2);\n    } else {\n      buffer = new ArrayBuffer(bytes);\n    }\n    var array = new Uint32Array(buffer);\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        array[j] = s[i];\n      }\n      if (j % blockCount === 0) {\n        f(s);\n      }\n    }\n    if (extraBytes) {\n      array[i] = s[i];\n      buffer = buffer.slice(0, bytes);\n    }\n    return buffer;\n  };\n\n  Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;\n\n  Keccak.prototype.digest = Keccak.prototype.array = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var array = [], offset, block;\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        offset = j << 2;\n        block = s[i];\n        array[offset] = block & 0xFF;\n        array[offset + 1] = (block >> 8) & 0xFF;\n        array[offset + 2] = (block >> 16) & 0xFF;\n        array[offset + 3] = (block >> 24) & 0xFF;\n      }\n      if (j % blockCount === 0) {\n        f(s);\n      }\n    }\n    if (extraBytes) {\n      offset = j << 2;\n      block = s[i];\n      array[offset] = block & 0xFF;\n      if (extraBytes > 1) {\n        array[offset + 1] = (block >> 8) & 0xFF;\n      }\n      if (extraBytes > 2) {\n        array[offset + 2] = (block >> 16) & 0xFF;\n      }\n    }\n    return array;\n  };\n\n  function Kmac(bits, padding, outputBits) {\n    Keccak.call(this, bits, padding, outputBits);\n  }\n\n  Kmac.prototype = new Keccak();\n\n  Kmac.prototype.finalize = function () {\n    this.encode(this.outputBits, true);\n    return Keccak.prototype.finalize.call(this);\n  };\n\n  var f = function (s) {\n    var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9,\n      b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17,\n      b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33,\n      b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;\n    for (n = 0; n < 48; n += 2) {\n      c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\n      c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\n      c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\n      c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\n      c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\n      c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\n      c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\n      c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\n      c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\n      c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\n\n      h = c8 ^ ((c2 << 1) | (c3 >>> 31));\n      l = c9 ^ ((c3 << 1) | (c2 >>> 31));\n      s[0] ^= h;\n      s[1] ^= l;\n      s[10] ^= h;\n      s[11] ^= l;\n      s[20] ^= h;\n      s[21] ^= l;\n      s[30] ^= h;\n      s[31] ^= l;\n      s[40] ^= h;\n      s[41] ^= l;\n      h = c0 ^ ((c4 << 1) | (c5 >>> 31));\n      l = c1 ^ ((c5 << 1) | (c4 >>> 31));\n      s[2] ^= h;\n      s[3] ^= l;\n      s[12] ^= h;\n      s[13] ^= l;\n      s[22] ^= h;\n      s[23] ^= l;\n      s[32] ^= h;\n      s[33] ^= l;\n      s[42] ^= h;\n      s[43] ^= l;\n      h = c2 ^ ((c6 << 1) | (c7 >>> 31));\n      l = c3 ^ ((c7 << 1) | (c6 >>> 31));\n      s[4] ^= h;\n      s[5] ^= l;\n      s[14] ^= h;\n      s[15] ^= l;\n      s[24] ^= h;\n      s[25] ^= l;\n      s[34] ^= h;\n      s[35] ^= l;\n      s[44] ^= h;\n      s[45] ^= l;\n      h = c4 ^ ((c8 << 1) | (c9 >>> 31));\n      l = c5 ^ ((c9 << 1) | (c8 >>> 31));\n      s[6] ^= h;\n      s[7] ^= l;\n      s[16] ^= h;\n      s[17] ^= l;\n      s[26] ^= h;\n      s[27] ^= l;\n      s[36] ^= h;\n      s[37] ^= l;\n      s[46] ^= h;\n      s[47] ^= l;\n      h = c6 ^ ((c0 << 1) | (c1 >>> 31));\n      l = c7 ^ ((c1 << 1) | (c0 >>> 31));\n      s[8] ^= h;\n      s[9] ^= l;\n      s[18] ^= h;\n      s[19] ^= l;\n      s[28] ^= h;\n      s[29] ^= l;\n      s[38] ^= h;\n      s[39] ^= l;\n      s[48] ^= h;\n      s[49] ^= l;\n\n      b0 = s[0];\n      b1 = s[1];\n      b32 = (s[11] << 4) | (s[10] >>> 28);\n      b33 = (s[10] << 4) | (s[11] >>> 28);\n      b14 = (s[20] << 3) | (s[21] >>> 29);\n      b15 = (s[21] << 3) | (s[20] >>> 29);\n      b46 = (s[31] << 9) | (s[30] >>> 23);\n      b47 = (s[30] << 9) | (s[31] >>> 23);\n      b28 = (s[40] << 18) | (s[41] >>> 14);\n      b29 = (s[41] << 18) | (s[40] >>> 14);\n      b20 = (s[2] << 1) | (s[3] >>> 31);\n      b21 = (s[3] << 1) | (s[2] >>> 31);\n      b2 = (s[13] << 12) | (s[12] >>> 20);\n      b3 = (s[12] << 12) | (s[13] >>> 20);\n      b34 = (s[22] << 10) | (s[23] >>> 22);\n      b35 = (s[23] << 10) | (s[22] >>> 22);\n      b16 = (s[33] << 13) | (s[32] >>> 19);\n      b17 = (s[32] << 13) | (s[33] >>> 19);\n      b48 = (s[42] << 2) | (s[43] >>> 30);\n      b49 = (s[43] << 2) | (s[42] >>> 30);\n      b40 = (s[5] << 30) | (s[4] >>> 2);\n      b41 = (s[4] << 30) | (s[5] >>> 2);\n      b22 = (s[14] << 6) | (s[15] >>> 26);\n      b23 = (s[15] << 6) | (s[14] >>> 26);\n      b4 = (s[25] << 11) | (s[24] >>> 21);\n      b5 = (s[24] << 11) | (s[25] >>> 21);\n      b36 = (s[34] << 15) | (s[35] >>> 17);\n      b37 = (s[35] << 15) | (s[34] >>> 17);\n      b18 = (s[45] << 29) | (s[44] >>> 3);\n      b19 = (s[44] << 29) | (s[45] >>> 3);\n      b10 = (s[6] << 28) | (s[7] >>> 4);\n      b11 = (s[7] << 28) | (s[6] >>> 4);\n      b42 = (s[17] << 23) | (s[16] >>> 9);\n      b43 = (s[16] << 23) | (s[17] >>> 9);\n      b24 = (s[26] << 25) | (s[27] >>> 7);\n      b25 = (s[27] << 25) | (s[26] >>> 7);\n      b6 = (s[36] << 21) | (s[37] >>> 11);\n      b7 = (s[37] << 21) | (s[36] >>> 11);\n      b38 = (s[47] << 24) | (s[46] >>> 8);\n      b39 = (s[46] << 24) | (s[47] >>> 8);\n      b30 = (s[8] << 27) | (s[9] >>> 5);\n      b31 = (s[9] << 27) | (s[8] >>> 5);\n      b12 = (s[18] << 20) | (s[19] >>> 12);\n      b13 = (s[19] << 20) | (s[18] >>> 12);\n      b44 = (s[29] << 7) | (s[28] >>> 25);\n      b45 = (s[28] << 7) | (s[29] >>> 25);\n      b26 = (s[38] << 8) | (s[39] >>> 24);\n      b27 = (s[39] << 8) | (s[38] >>> 24);\n      b8 = (s[48] << 14) | (s[49] >>> 18);\n      b9 = (s[49] << 14) | (s[48] >>> 18);\n\n      s[0] = b0 ^ (~b2 & b4);\n      s[1] = b1 ^ (~b3 & b5);\n      s[10] = b10 ^ (~b12 & b14);\n      s[11] = b11 ^ (~b13 & b15);\n      s[20] = b20 ^ (~b22 & b24);\n      s[21] = b21 ^ (~b23 & b25);\n      s[30] = b30 ^ (~b32 & b34);\n      s[31] = b31 ^ (~b33 & b35);\n      s[40] = b40 ^ (~b42 & b44);\n      s[41] = b41 ^ (~b43 & b45);\n      s[2] = b2 ^ (~b4 & b6);\n      s[3] = b3 ^ (~b5 & b7);\n      s[12] = b12 ^ (~b14 & b16);\n      s[13] = b13 ^ (~b15 & b17);\n      s[22] = b22 ^ (~b24 & b26);\n      s[23] = b23 ^ (~b25 & b27);\n      s[32] = b32 ^ (~b34 & b36);\n      s[33] = b33 ^ (~b35 & b37);\n      s[42] = b42 ^ (~b44 & b46);\n      s[43] = b43 ^ (~b45 & b47);\n      s[4] = b4 ^ (~b6 & b8);\n      s[5] = b5 ^ (~b7 & b9);\n      s[14] = b14 ^ (~b16 & b18);\n      s[15] = b15 ^ (~b17 & b19);\n      s[24] = b24 ^ (~b26 & b28);\n      s[25] = b25 ^ (~b27 & b29);\n      s[34] = b34 ^ (~b36 & b38);\n      s[35] = b35 ^ (~b37 & b39);\n      s[44] = b44 ^ (~b46 & b48);\n      s[45] = b45 ^ (~b47 & b49);\n      s[6] = b6 ^ (~b8 & b0);\n      s[7] = b7 ^ (~b9 & b1);\n      s[16] = b16 ^ (~b18 & b10);\n      s[17] = b17 ^ (~b19 & b11);\n      s[26] = b26 ^ (~b28 & b20);\n      s[27] = b27 ^ (~b29 & b21);\n      s[36] = b36 ^ (~b38 & b30);\n      s[37] = b37 ^ (~b39 & b31);\n      s[46] = b46 ^ (~b48 & b40);\n      s[47] = b47 ^ (~b49 & b41);\n      s[8] = b8 ^ (~b0 & b2);\n      s[9] = b9 ^ (~b1 & b3);\n      s[18] = b18 ^ (~b10 & b12);\n      s[19] = b19 ^ (~b11 & b13);\n      s[28] = b28 ^ (~b20 & b22);\n      s[29] = b29 ^ (~b21 & b23);\n      s[38] = b38 ^ (~b30 & b32);\n      s[39] = b39 ^ (~b31 & b33);\n      s[48] = b48 ^ (~b40 & b42);\n      s[49] = b49 ^ (~b41 & b43);\n\n      s[0] ^= RC[n];\n      s[1] ^= RC[n + 1];\n    }\n  };\n\n  if (COMMON_JS) {\n    module.exports = methods;\n  } else {\n    for (i = 0; i < methodNames.length; ++i) {\n      root[methodNames[i]] = methods[methodNames[i]];\n    }\n    if (AMD) {\n      define(function () {\n        return methods;\n      });\n    }\n  }\n})();\n","/* globals __webpack_amd_options__ */\nmodule.exports = __webpack_amd_options__;\n","/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @file soliditySha3.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\nvar _ = require('underscore');\nvar BN = require('bn.js');\nvar utils = require('./utils.js');\nvar _elementaryName = function (name) {\n    /*jshint maxcomplexity:false */\n    if (name.startsWith('int[')) {\n        return 'int256' + name.slice(3);\n    }\n    else if (name === 'int') {\n        return 'int256';\n    }\n    else if (name.startsWith('uint[')) {\n        return 'uint256' + name.slice(4);\n    }\n    else if (name === 'uint') {\n        return 'uint256';\n    }\n    else if (name.startsWith('fixed[')) {\n        return 'fixed128x128' + name.slice(5);\n    }\n    else if (name === 'fixed') {\n        return 'fixed128x128';\n    }\n    else if (name.startsWith('ufixed[')) {\n        return 'ufixed128x128' + name.slice(6);\n    }\n    else if (name === 'ufixed') {\n        return 'ufixed128x128';\n    }\n    return name;\n};\n// Parse N from type<N>\nvar _parseTypeN = function (type) {\n    var typesize = /^\\D+(\\d+).*$/.exec(type);\n    return typesize ? parseInt(typesize[1], 10) : null;\n};\n// Parse N from type[<N>]\nvar _parseTypeNArray = function (type) {\n    var arraySize = /^\\D+\\d*\\[(\\d+)\\]$/.exec(type);\n    return arraySize ? parseInt(arraySize[1], 10) : null;\n};\nvar _parseNumber = function (arg) {\n    var type = typeof arg;\n    if (type === 'string') {\n        if (utils.isHexStrict(arg)) {\n            return new BN(arg.replace(/0x/i, ''), 16);\n        }\n        else {\n            return new BN(arg, 10);\n        }\n    }\n    else if (type === 'number') {\n        return new BN(arg);\n    }\n    else if (utils.isBigNumber(arg)) {\n        return new BN(arg.toString(10));\n    }\n    else if (utils.isBN(arg)) {\n        return arg;\n    }\n    else {\n        throw new Error(arg + ' is not a number');\n    }\n};\nvar _solidityPack = function (type, value, arraySize) {\n    /*jshint maxcomplexity:false */\n    var size, num;\n    type = _elementaryName(type);\n    if (type === 'bytes') {\n        if (value.replace(/^0x/i, '').length % 2 !== 0) {\n            throw new Error('Invalid bytes characters ' + value.length);\n        }\n        return value;\n    }\n    else if (type === 'string') {\n        return utils.utf8ToHex(value);\n    }\n    else if (type === 'bool') {\n        return value ? '01' : '00';\n    }\n    else if (type.startsWith('address')) {\n        if (arraySize) {\n            size = 64;\n        }\n        else {\n            size = 40;\n        }\n        if (!utils.isAddress(value)) {\n            throw new Error(value + ' is not a valid address, or the checksum is invalid.');\n        }\n        return utils.leftPad(value.toLowerCase(), size);\n    }\n    size = _parseTypeN(type);\n    if (type.startsWith('bytes')) {\n        if (!size) {\n            throw new Error('bytes[] not yet supported in solidity');\n        }\n        // must be 32 byte slices when in an array\n        if (arraySize) {\n            size = 32;\n        }\n        if (size < 1 || size > 32 || size < value.replace(/^0x/i, '').length / 2) {\n            throw new Error('Invalid bytes' + size + ' for ' + value);\n        }\n        return utils.rightPad(value, size * 2);\n    }\n    else if (type.startsWith('uint')) {\n        if ((size % 8) || (size < 8) || (size > 256)) {\n            throw new Error('Invalid uint' + size + ' size');\n        }\n        num = _parseNumber(value);\n        if (num.bitLength() > size) {\n            throw new Error('Supplied uint exceeds width: ' + size + ' vs ' + num.bitLength());\n        }\n        if (num.lt(new BN(0))) {\n            throw new Error('Supplied uint ' + num.toString() + ' is negative');\n        }\n        return size ? utils.leftPad(num.toString('hex'), size / 8 * 2) : num;\n    }\n    else if (type.startsWith('int')) {\n        if ((size % 8) || (size < 8) || (size > 256)) {\n            throw new Error('Invalid int' + size + ' size');\n        }\n        num = _parseNumber(value);\n        if (num.bitLength() > size) {\n            throw new Error('Supplied int exceeds width: ' + size + ' vs ' + num.bitLength());\n        }\n        if (num.lt(new BN(0))) {\n            return num.toTwos(size).toString('hex');\n        }\n        else {\n            return size ? utils.leftPad(num.toString('hex'), size / 8 * 2) : num;\n        }\n    }\n    else {\n        // FIXME: support all other types\n        throw new Error('Unsupported or invalid type: ' + type);\n    }\n};\nvar _processSolidityEncodePackedArgs = function (arg) {\n    /*jshint maxcomplexity:false */\n    if (_.isArray(arg)) {\n        throw new Error('Autodetection of array types is not supported.');\n    }\n    var type, value = '';\n    var hexArg, arraySize;\n    // if type is given\n    if (_.isObject(arg) && (arg.hasOwnProperty('v') || arg.hasOwnProperty('t') || arg.hasOwnProperty('value') || arg.hasOwnProperty('type'))) {\n        type = arg.hasOwnProperty('t') ? arg.t : arg.type;\n        value = arg.hasOwnProperty('v') ? arg.v : arg.value;\n        // otherwise try to guess the type\n    }\n    else {\n        type = utils.toHex(arg, true);\n        value = utils.toHex(arg);\n        if (!type.startsWith('int') && !type.startsWith('uint')) {\n            type = 'bytes';\n        }\n    }\n    if ((type.startsWith('int') || type.startsWith('uint')) && typeof value === 'string' && !/^(-)?0x/i.test(value)) {\n        value = new BN(value);\n    }\n    // get the array size\n    if (_.isArray(value)) {\n        arraySize = _parseTypeNArray(type);\n        if (arraySize && value.length !== arraySize) {\n            throw new Error(type + ' is not matching the given array ' + JSON.stringify(value));\n        }\n        else {\n            arraySize = value.length;\n        }\n    }\n    if (_.isArray(value)) {\n        hexArg = value.map(function (val) {\n            return _solidityPack(type, val, arraySize).toString('hex').replace('0x', '');\n        });\n        return hexArg.join('');\n    }\n    else {\n        hexArg = _solidityPack(type, value, arraySize);\n        return hexArg.toString('hex').replace('0x', '');\n    }\n};\n/**\n * Hashes solidity values to a sha3 hash using keccak 256\n *\n * @method soliditySha3\n * @return {Object} the sha3\n */\nvar soliditySha3 = function () {\n    /*jshint maxcomplexity:false */\n    var args = Array.prototype.slice.call(arguments);\n    var hexArgs = _.map(args, _processSolidityEncodePackedArgs);\n    // console.log(args, hexArgs);\n    // console.log('0x'+ hexArgs.join(''));\n    return utils.sha3('0x' + hexArgs.join(''));\n};\n/**\n * Hashes solidity values to a sha3 hash using keccak 256 but does return the hash of value `null` instead of `null`\n *\n * @method soliditySha3Raw\n * @return {Object} the sha3\n */\nvar soliditySha3Raw = function () {\n    return utils.sha3Raw('0x' + _.map(Array.prototype.slice.call(arguments), _processSolidityEncodePackedArgs).join(''));\n};\n/**\n * Encode packed args to hex\n *\n * @method encodePacked\n * @return {String} the hex encoded arguments\n */\nvar encodePacked = function () {\n    /*jshint maxcomplexity:false */\n    var args = Array.prototype.slice.call(arguments);\n    var hexArgs = _.map(args, _processSolidityEncodePackedArgs);\n    return '0x' + hexArgs.join('').toLowerCase();\n};\nmodule.exports = {\n    soliditySha3: soliditySha3,\n    soliditySha3Raw: soliditySha3Raw,\n    encodePacked: encodePacked\n};\n","module.exports = require('crypto').randomBytes\n","module.exports = require(\"crypto\");","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 53;","import Stream from 'stream';\nimport http from 'http';\nimport Url from 'url';\nimport https from 'https';\nimport zlib from 'zlib';\n\n// Based on https://github.com/tmpvar/jsdom/blob/aa85b2abf07766ff7bf5c1f6daafb3726f2f2db5/lib/jsdom/living/blob.js\n\n// fix for \"Readable\" isn't a named export issue\nconst Readable = Stream.Readable;\n\nconst BUFFER = Symbol('buffer');\nconst TYPE = Symbol('type');\n\nclass Blob {\n\tconstructor() {\n\t\tthis[TYPE] = '';\n\n\t\tconst blobParts = arguments[0];\n\t\tconst options = arguments[1];\n\n\t\tconst buffers = [];\n\t\tlet size = 0;\n\n\t\tif (blobParts) {\n\t\t\tconst a = blobParts;\n\t\t\tconst length = Number(a.length);\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tconst element = a[i];\n\t\t\t\tlet buffer;\n\t\t\t\tif (element instanceof Buffer) {\n\t\t\t\t\tbuffer = element;\n\t\t\t\t} else if (ArrayBuffer.isView(element)) {\n\t\t\t\t\tbuffer = Buffer.from(element.buffer, element.byteOffset, element.byteLength);\n\t\t\t\t} else if (element instanceof ArrayBuffer) {\n\t\t\t\t\tbuffer = Buffer.from(element);\n\t\t\t\t} else if (element instanceof Blob) {\n\t\t\t\t\tbuffer = element[BUFFER];\n\t\t\t\t} else {\n\t\t\t\t\tbuffer = Buffer.from(typeof element === 'string' ? element : String(element));\n\t\t\t\t}\n\t\t\t\tsize += buffer.length;\n\t\t\t\tbuffers.push(buffer);\n\t\t\t}\n\t\t}\n\n\t\tthis[BUFFER] = Buffer.concat(buffers);\n\n\t\tlet type = options && options.type !== undefined && String(options.type).toLowerCase();\n\t\tif (type && !/[^\\u0020-\\u007E]/.test(type)) {\n\t\t\tthis[TYPE] = type;\n\t\t}\n\t}\n\tget size() {\n\t\treturn this[BUFFER].length;\n\t}\n\tget type() {\n\t\treturn this[TYPE];\n\t}\n\ttext() {\n\t\treturn Promise.resolve(this[BUFFER].toString());\n\t}\n\tarrayBuffer() {\n\t\tconst buf = this[BUFFER];\n\t\tconst ab = buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\treturn Promise.resolve(ab);\n\t}\n\tstream() {\n\t\tconst readable = new Readable();\n\t\treadable._read = function () {};\n\t\treadable.push(this[BUFFER]);\n\t\treadable.push(null);\n\t\treturn readable;\n\t}\n\ttoString() {\n\t\treturn '[object Blob]';\n\t}\n\tslice() {\n\t\tconst size = this.size;\n\n\t\tconst start = arguments[0];\n\t\tconst end = arguments[1];\n\t\tlet relativeStart, relativeEnd;\n\t\tif (start === undefined) {\n\t\t\trelativeStart = 0;\n\t\t} else if (start < 0) {\n\t\t\trelativeStart = Math.max(size + start, 0);\n\t\t} else {\n\t\t\trelativeStart = Math.min(start, size);\n\t\t}\n\t\tif (end === undefined) {\n\t\t\trelativeEnd = size;\n\t\t} else if (end < 0) {\n\t\t\trelativeEnd = Math.max(size + end, 0);\n\t\t} else {\n\t\t\trelativeEnd = Math.min(end, size);\n\t\t}\n\t\tconst span = Math.max(relativeEnd - relativeStart, 0);\n\n\t\tconst buffer = this[BUFFER];\n\t\tconst slicedBuffer = buffer.slice(relativeStart, relativeStart + span);\n\t\tconst blob = new Blob([], { type: arguments[2] });\n\t\tblob[BUFFER] = slicedBuffer;\n\t\treturn blob;\n\t}\n}\n\nObject.defineProperties(Blob.prototype, {\n\tsize: { enumerable: true },\n\ttype: { enumerable: true },\n\tslice: { enumerable: true }\n});\n\nObject.defineProperty(Blob.prototype, Symbol.toStringTag, {\n\tvalue: 'Blob',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * fetch-error.js\n *\n * FetchError interface for operational errors\n */\n\n/**\n * Create FetchError instance\n *\n * @param   String      message      Error message for human\n * @param   String      type         Error type for machine\n * @param   String      systemError  For Node.js system error\n * @return  FetchError\n */\nfunction FetchError(message, type, systemError) {\n  Error.call(this, message);\n\n  this.message = message;\n  this.type = type;\n\n  // when err.type is `system`, err.code contains system error code\n  if (systemError) {\n    this.code = this.errno = systemError.code;\n  }\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nFetchError.prototype = Object.create(Error.prototype);\nFetchError.prototype.constructor = FetchError;\nFetchError.prototype.name = 'FetchError';\n\nlet convert;\ntry {\n\tconvert = require('encoding').convert;\n} catch (e) {}\n\nconst INTERNALS = Symbol('Body internals');\n\n// fix an issue where \"PassThrough\" isn't a named export for node <10\nconst PassThrough = Stream.PassThrough;\n\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nfunction Body(body) {\n\tvar _this = this;\n\n\tvar _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t    _ref$size = _ref.size;\n\n\tlet size = _ref$size === undefined ? 0 : _ref$size;\n\tvar _ref$timeout = _ref.timeout;\n\tlet timeout = _ref$timeout === undefined ? 0 : _ref$timeout;\n\n\tif (body == null) {\n\t\t// body is undefined or null\n\t\tbody = null;\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\tbody = Buffer.from(body.toString());\n\t} else if (isBlob(body)) ; else if (Buffer.isBuffer(body)) ; else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\tbody = Buffer.from(body);\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\tbody = Buffer.from(body.buffer, body.byteOffset, body.byteLength);\n\t} else if (body instanceof Stream) ; else {\n\t\t// none of the above\n\t\t// coerce to string then buffer\n\t\tbody = Buffer.from(String(body));\n\t}\n\tthis[INTERNALS] = {\n\t\tbody,\n\t\tdisturbed: false,\n\t\terror: null\n\t};\n\tthis.size = size;\n\tthis.timeout = timeout;\n\n\tif (body instanceof Stream) {\n\t\tbody.on('error', function (err) {\n\t\t\tconst error = err.name === 'AbortError' ? err : new FetchError(`Invalid response body while trying to fetch ${_this.url}: ${err.message}`, 'system', err);\n\t\t\t_this[INTERNALS].error = error;\n\t\t});\n\t}\n}\n\nBody.prototype = {\n\tget body() {\n\t\treturn this[INTERNALS].body;\n\t},\n\n\tget bodyUsed() {\n\t\treturn this[INTERNALS].disturbed;\n\t},\n\n\t/**\n  * Decode response as ArrayBuffer\n  *\n  * @return  Promise\n  */\n\tarrayBuffer() {\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\t});\n\t},\n\n\t/**\n  * Return raw response as Blob\n  *\n  * @return Promise\n  */\n\tblob() {\n\t\tlet ct = this.headers && this.headers.get('content-type') || '';\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn Object.assign(\n\t\t\t// Prevent copying\n\t\t\tnew Blob([], {\n\t\t\t\ttype: ct.toLowerCase()\n\t\t\t}), {\n\t\t\t\t[BUFFER]: buf\n\t\t\t});\n\t\t});\n\t},\n\n\t/**\n  * Decode response as json\n  *\n  * @return  Promise\n  */\n\tjson() {\n\t\tvar _this2 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(buffer.toString());\n\t\t\t} catch (err) {\n\t\t\t\treturn Body.Promise.reject(new FetchError(`invalid json response body at ${_this2.url} reason: ${err.message}`, 'invalid-json'));\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n  * Decode response as text\n  *\n  * @return  Promise\n  */\n\ttext() {\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn buffer.toString();\n\t\t});\n\t},\n\n\t/**\n  * Decode response as buffer (non-spec api)\n  *\n  * @return  Promise\n  */\n\tbuffer() {\n\t\treturn consumeBody.call(this);\n\t},\n\n\t/**\n  * Decode response as text, while automatically detecting the encoding and\n  * trying to decode to UTF-8 (non-spec api)\n  *\n  * @return  Promise\n  */\n\ttextConverted() {\n\t\tvar _this3 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn convertBody(buffer, _this3.headers);\n\t\t});\n\t}\n};\n\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n\tbody: { enumerable: true },\n\tbodyUsed: { enumerable: true },\n\tarrayBuffer: { enumerable: true },\n\tblob: { enumerable: true },\n\tjson: { enumerable: true },\n\ttext: { enumerable: true }\n});\n\nBody.mixIn = function (proto) {\n\tfor (const name of Object.getOwnPropertyNames(Body.prototype)) {\n\t\t// istanbul ignore else: future proof\n\t\tif (!(name in proto)) {\n\t\t\tconst desc = Object.getOwnPropertyDescriptor(Body.prototype, name);\n\t\t\tObject.defineProperty(proto, name, desc);\n\t\t}\n\t}\n};\n\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @return  Promise\n */\nfunction consumeBody() {\n\tvar _this4 = this;\n\n\tif (this[INTERNALS].disturbed) {\n\t\treturn Body.Promise.reject(new TypeError(`body used already for: ${this.url}`));\n\t}\n\n\tthis[INTERNALS].disturbed = true;\n\n\tif (this[INTERNALS].error) {\n\t\treturn Body.Promise.reject(this[INTERNALS].error);\n\t}\n\n\tlet body = this.body;\n\n\t// body is null\n\tif (body === null) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is blob\n\tif (isBlob(body)) {\n\t\tbody = body.stream();\n\t}\n\n\t// body is buffer\n\tif (Buffer.isBuffer(body)) {\n\t\treturn Body.Promise.resolve(body);\n\t}\n\n\t// istanbul ignore if: should never happen\n\tif (!(body instanceof Stream)) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is stream\n\t// get ready to actually consume the body\n\tlet accum = [];\n\tlet accumBytes = 0;\n\tlet abort = false;\n\n\treturn new Body.Promise(function (resolve, reject) {\n\t\tlet resTimeout;\n\n\t\t// allow timeout on slow response body\n\t\tif (_this4.timeout) {\n\t\t\tresTimeout = setTimeout(function () {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`Response timeout while trying to fetch ${_this4.url} (over ${_this4.timeout}ms)`, 'body-timeout'));\n\t\t\t}, _this4.timeout);\n\t\t}\n\n\t\t// handle stream errors\n\t\tbody.on('error', function (err) {\n\t\t\tif (err.name === 'AbortError') {\n\t\t\t\t// if the request was aborted, reject with this Error\n\t\t\t\tabort = true;\n\t\t\t\treject(err);\n\t\t\t} else {\n\t\t\t\t// other errors, such as incorrect content-encoding\n\t\t\t\treject(new FetchError(`Invalid response body while trying to fetch ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\n\t\tbody.on('data', function (chunk) {\n\t\t\tif (abort || chunk === null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (_this4.size && accumBytes + chunk.length > _this4.size) {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`content size at ${_this4.url} over limit: ${_this4.size}`, 'max-size'));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\taccumBytes += chunk.length;\n\t\t\taccum.push(chunk);\n\t\t});\n\n\t\tbody.on('end', function () {\n\t\t\tif (abort) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tclearTimeout(resTimeout);\n\n\t\t\ttry {\n\t\t\t\tresolve(Buffer.concat(accum, accumBytes));\n\t\t\t} catch (err) {\n\t\t\t\t// handle streams that have accumulated too much data (issue #414)\n\t\t\t\treject(new FetchError(`Could not create Buffer from response body for ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Detect buffer encoding and convert to target encoding\n * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding\n *\n * @param   Buffer  buffer    Incoming buffer\n * @param   String  encoding  Target encoding\n * @return  String\n */\nfunction convertBody(buffer, headers) {\n\tif (typeof convert !== 'function') {\n\t\tthrow new Error('The package `encoding` must be installed to use the textConverted() function');\n\t}\n\n\tconst ct = headers.get('content-type');\n\tlet charset = 'utf-8';\n\tlet res, str;\n\n\t// header\n\tif (ct) {\n\t\tres = /charset=([^;]*)/i.exec(ct);\n\t}\n\n\t// no charset in content type, peek at response body for at most 1024 bytes\n\tstr = buffer.slice(0, 1024).toString();\n\n\t// html5\n\tif (!res && str) {\n\t\tres = /<meta.+?charset=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// html4\n\tif (!res && str) {\n\t\tres = /<meta[\\s]+?http-equiv=(['\"])content-type\\1[\\s]+?content=(['\"])(.+?)\\2/i.exec(str);\n\t\tif (!res) {\n\t\t\tres = /<meta[\\s]+?content=(['\"])(.+?)\\1[\\s]+?http-equiv=(['\"])content-type\\3/i.exec(str);\n\t\t\tif (res) {\n\t\t\t\tres.pop(); // drop last quote\n\t\t\t}\n\t\t}\n\n\t\tif (res) {\n\t\t\tres = /charset=(.*)/i.exec(res.pop());\n\t\t}\n\t}\n\n\t// xml\n\tif (!res && str) {\n\t\tres = /<\\?xml.+?encoding=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// found charset\n\tif (res) {\n\t\tcharset = res.pop();\n\n\t\t// prevent decode issues when sites use incorrect encoding\n\t\t// ref: https://hsivonen.fi/encoding-menu/\n\t\tif (charset === 'gb2312' || charset === 'gbk') {\n\t\t\tcharset = 'gb18030';\n\t\t}\n\t}\n\n\t// turn raw buffers into a single utf-8 buffer\n\treturn convert(buffer, 'UTF-8', charset).toString();\n}\n\n/**\n * Detect a URLSearchParams object\n * ref: https://github.com/bitinn/node-fetch/issues/296#issuecomment-307598143\n *\n * @param   Object  obj     Object to detect by type or brand\n * @return  String\n */\nfunction isURLSearchParams(obj) {\n\t// Duck-typing as a necessary condition.\n\tif (typeof obj !== 'object' || typeof obj.append !== 'function' || typeof obj.delete !== 'function' || typeof obj.get !== 'function' || typeof obj.getAll !== 'function' || typeof obj.has !== 'function' || typeof obj.set !== 'function') {\n\t\treturn false;\n\t}\n\n\t// Brand-checking and more duck-typing as optional condition.\n\treturn obj.constructor.name === 'URLSearchParams' || Object.prototype.toString.call(obj) === '[object URLSearchParams]' || typeof obj.sort === 'function';\n}\n\n/**\n * Check if `obj` is a W3C `Blob` object (which `File` inherits from)\n * @param  {*} obj\n * @return {boolean}\n */\nfunction isBlob(obj) {\n\treturn typeof obj === 'object' && typeof obj.arrayBuffer === 'function' && typeof obj.type === 'string' && typeof obj.stream === 'function' && typeof obj.constructor === 'function' && typeof obj.constructor.name === 'string' && /^(Blob|File)$/.test(obj.constructor.name) && /^(Blob|File)$/.test(obj[Symbol.toStringTag]);\n}\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed  instance  Response or Request instance\n * @return  Mixed\n */\nfunction clone(instance) {\n\tlet p1, p2;\n\tlet body = instance.body;\n\n\t// don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif (body instanceof Stream && typeof body.getBoundary !== 'function') {\n\t\t// tee instance body\n\t\tp1 = new PassThrough();\n\t\tp2 = new PassThrough();\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// set instance body to teed body and return the other teed body\n\t\tinstance[INTERNALS].body = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n}\n\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param   Mixed  instance  Any options.body input\n */\nfunction extractContentType(body) {\n\tif (body === null) {\n\t\t// body is null\n\t\treturn null;\n\t} else if (typeof body === 'string') {\n\t\t// body is string\n\t\treturn 'text/plain;charset=UTF-8';\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\treturn 'application/x-www-form-urlencoded;charset=UTF-8';\n\t} else if (isBlob(body)) {\n\t\t// body is blob\n\t\treturn body.type || null;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn null;\n\t} else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\treturn null;\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\treturn null;\n\t} else if (typeof body.getBoundary === 'function') {\n\t\t// detect form data input from form-data module\n\t\treturn `multipart/form-data;boundary=${body.getBoundary()}`;\n\t} else if (body instanceof Stream) {\n\t\t// body is stream\n\t\t// can't really do much about this\n\t\treturn null;\n\t} else {\n\t\t// Body constructor defaults other things to string\n\t\treturn 'text/plain;charset=UTF-8';\n\t}\n}\n\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param   Body    instance   Instance of Body\n * @return  Number?            Number of bytes, or null if not possible\n */\nfunction getTotalBytes(instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\treturn 0;\n\t} else if (isBlob(body)) {\n\t\treturn body.size;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn body.length;\n\t} else if (body && typeof body.getLengthSync === 'function') {\n\t\t// detect form data input from form-data module\n\t\tif (body._lengthRetrievers && body._lengthRetrievers.length == 0 || // 1.x\n\t\tbody.hasKnownLength && body.hasKnownLength()) {\n\t\t\t// 2.x\n\t\t\treturn body.getLengthSync();\n\t\t}\n\t\treturn null;\n\t} else {\n\t\t// body is stream\n\t\treturn null;\n\t}\n}\n\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param   Body    instance   Instance of Body\n * @return  Void\n */\nfunction writeToStream(dest, instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\tdest.end();\n\t} else if (isBlob(body)) {\n\t\tbody.stream().pipe(dest);\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\tdest.write(body);\n\t\tdest.end();\n\t} else {\n\t\t// body is stream\n\t\tbody.pipe(dest);\n\t}\n}\n\n// expose Promise\nBody.Promise = global.Promise;\n\n/**\n * headers.js\n *\n * Headers class offers convenient helpers\n */\n\nconst invalidTokenRegex = /[^\\^_`a-zA-Z\\-0-9!#$%&'*+.|~]/;\nconst invalidHeaderCharRegex = /[^\\t\\x20-\\x7e\\x80-\\xff]/;\n\nfunction validateName(name) {\n\tname = `${name}`;\n\tif (invalidTokenRegex.test(name) || name === '') {\n\t\tthrow new TypeError(`${name} is not a legal HTTP header name`);\n\t}\n}\n\nfunction validateValue(value) {\n\tvalue = `${value}`;\n\tif (invalidHeaderCharRegex.test(value)) {\n\t\tthrow new TypeError(`${value} is not a legal HTTP header value`);\n\t}\n}\n\n/**\n * Find the key in the map object given a header name.\n *\n * Returns undefined if not found.\n *\n * @param   String  name  Header name\n * @return  String|Undefined\n */\nfunction find(map, name) {\n\tname = name.toLowerCase();\n\tfor (const key in map) {\n\t\tif (key.toLowerCase() === name) {\n\t\t\treturn key;\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst MAP = Symbol('map');\nclass Headers {\n\t/**\n  * Headers class\n  *\n  * @param   Object  headers  Response headers\n  * @return  Void\n  */\n\tconstructor() {\n\t\tlet init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n\n\t\tthis[MAP] = Object.create(null);\n\n\t\tif (init instanceof Headers) {\n\t\t\tconst rawHeaders = init.raw();\n\t\t\tconst headerNames = Object.keys(rawHeaders);\n\n\t\t\tfor (const headerName of headerNames) {\n\t\t\t\tfor (const value of rawHeaders[headerName]) {\n\t\t\t\t\tthis.append(headerName, value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// We don't worry about converting prop to ByteString here as append()\n\t\t// will handle it.\n\t\tif (init == null) ; else if (typeof init === 'object') {\n\t\t\tconst method = init[Symbol.iterator];\n\t\t\tif (method != null) {\n\t\t\t\tif (typeof method !== 'function') {\n\t\t\t\t\tthrow new TypeError('Header pairs must be iterable');\n\t\t\t\t}\n\n\t\t\t\t// sequence<sequence<ByteString>>\n\t\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\t\tconst pairs = [];\n\t\t\t\tfor (const pair of init) {\n\t\t\t\t\tif (typeof pair !== 'object' || typeof pair[Symbol.iterator] !== 'function') {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be iterable');\n\t\t\t\t\t}\n\t\t\t\t\tpairs.push(Array.from(pair));\n\t\t\t\t}\n\n\t\t\t\tfor (const pair of pairs) {\n\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t}\n\t\t\t\t\tthis.append(pair[0], pair[1]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// record<ByteString, ByteString>\n\t\t\t\tfor (const key of Object.keys(init)) {\n\t\t\t\t\tconst value = init[key];\n\t\t\t\t\tthis.append(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('Provided initializer must be an object');\n\t\t}\n\t}\n\n\t/**\n  * Return combined header value given name\n  *\n  * @param   String  name  Header name\n  * @return  Mixed\n  */\n\tget(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key === undefined) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this[MAP][key].join(', ');\n\t}\n\n\t/**\n  * Iterate over all headers\n  *\n  * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)\n  * @param   Boolean   thisArg   `this` context for callback function\n  * @return  Void\n  */\n\tforEach(callback) {\n\t\tlet thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n\t\tlet pairs = getHeaders(this);\n\t\tlet i = 0;\n\t\twhile (i < pairs.length) {\n\t\t\tvar _pairs$i = pairs[i];\n\t\t\tconst name = _pairs$i[0],\n\t\t\t      value = _pairs$i[1];\n\n\t\t\tcallback.call(thisArg, value, name, this);\n\t\t\tpairs = getHeaders(this);\n\t\t\ti++;\n\t\t}\n\t}\n\n\t/**\n  * Overwrite header values given name\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tset(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tthis[MAP][key !== undefined ? key : name] = [value];\n\t}\n\n\t/**\n  * Append a value onto existing header\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tappend(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tthis[MAP][key].push(value);\n\t\t} else {\n\t\t\tthis[MAP][name] = [value];\n\t\t}\n\t}\n\n\t/**\n  * Check for header name existence\n  *\n  * @param   String   name  Header name\n  * @return  Boolean\n  */\n\thas(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\treturn find(this[MAP], name) !== undefined;\n\t}\n\n\t/**\n  * Delete all header values given name\n  *\n  * @param   String  name  Header name\n  * @return  Void\n  */\n\tdelete(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tdelete this[MAP][key];\n\t\t}\n\t}\n\n\t/**\n  * Return raw headers (non-spec api)\n  *\n  * @return  Object\n  */\n\traw() {\n\t\treturn this[MAP];\n\t}\n\n\t/**\n  * Get an iterator on keys.\n  *\n  * @return  Iterator\n  */\n\tkeys() {\n\t\treturn createHeadersIterator(this, 'key');\n\t}\n\n\t/**\n  * Get an iterator on values.\n  *\n  * @return  Iterator\n  */\n\tvalues() {\n\t\treturn createHeadersIterator(this, 'value');\n\t}\n\n\t/**\n  * Get an iterator on entries.\n  *\n  * This is the default iterator of the Headers object.\n  *\n  * @return  Iterator\n  */\n\t[Symbol.iterator]() {\n\t\treturn createHeadersIterator(this, 'key+value');\n\t}\n}\nHeaders.prototype.entries = Headers.prototype[Symbol.iterator];\n\nObject.defineProperty(Headers.prototype, Symbol.toStringTag, {\n\tvalue: 'Headers',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Headers.prototype, {\n\tget: { enumerable: true },\n\tforEach: { enumerable: true },\n\tset: { enumerable: true },\n\tappend: { enumerable: true },\n\thas: { enumerable: true },\n\tdelete: { enumerable: true },\n\tkeys: { enumerable: true },\n\tvalues: { enumerable: true },\n\tentries: { enumerable: true }\n});\n\nfunction getHeaders(headers) {\n\tlet kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'key+value';\n\n\tconst keys = Object.keys(headers[MAP]).sort();\n\treturn keys.map(kind === 'key' ? function (k) {\n\t\treturn k.toLowerCase();\n\t} : kind === 'value' ? function (k) {\n\t\treturn headers[MAP][k].join(', ');\n\t} : function (k) {\n\t\treturn [k.toLowerCase(), headers[MAP][k].join(', ')];\n\t});\n}\n\nconst INTERNAL = Symbol('internal');\n\nfunction createHeadersIterator(target, kind) {\n\tconst iterator = Object.create(HeadersIteratorPrototype);\n\titerator[INTERNAL] = {\n\t\ttarget,\n\t\tkind,\n\t\tindex: 0\n\t};\n\treturn iterator;\n}\n\nconst HeadersIteratorPrototype = Object.setPrototypeOf({\n\tnext() {\n\t\t// istanbul ignore if\n\t\tif (!this || Object.getPrototypeOf(this) !== HeadersIteratorPrototype) {\n\t\t\tthrow new TypeError('Value of `this` is not a HeadersIterator');\n\t\t}\n\n\t\tvar _INTERNAL = this[INTERNAL];\n\t\tconst target = _INTERNAL.target,\n\t\t      kind = _INTERNAL.kind,\n\t\t      index = _INTERNAL.index;\n\n\t\tconst values = getHeaders(target, kind);\n\t\tconst len = values.length;\n\t\tif (index >= len) {\n\t\t\treturn {\n\t\t\t\tvalue: undefined,\n\t\t\t\tdone: true\n\t\t\t};\n\t\t}\n\n\t\tthis[INTERNAL].index = index + 1;\n\n\t\treturn {\n\t\t\tvalue: values[index],\n\t\t\tdone: false\n\t\t};\n\t}\n}, Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));\n\nObject.defineProperty(HeadersIteratorPrototype, Symbol.toStringTag, {\n\tvalue: 'HeadersIterator',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * Export the Headers object in a form that Node.js can consume.\n *\n * @param   Headers  headers\n * @return  Object\n */\nfunction exportNodeCompatibleHeaders(headers) {\n\tconst obj = Object.assign({ __proto__: null }, headers[MAP]);\n\n\t// http.request() only supports string as Host header. This hack makes\n\t// specifying custom Host header possible.\n\tconst hostHeaderKey = find(headers[MAP], 'Host');\n\tif (hostHeaderKey !== undefined) {\n\t\tobj[hostHeaderKey] = obj[hostHeaderKey][0];\n\t}\n\n\treturn obj;\n}\n\n/**\n * Create a Headers object from an object of headers, ignoring those that do\n * not conform to HTTP grammar productions.\n *\n * @param   Object  obj  Object of headers\n * @return  Headers\n */\nfunction createHeadersLenient(obj) {\n\tconst headers = new Headers();\n\tfor (const name of Object.keys(obj)) {\n\t\tif (invalidTokenRegex.test(name)) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (Array.isArray(obj[name])) {\n\t\t\tfor (const val of obj[name]) {\n\t\t\t\tif (invalidHeaderCharRegex.test(val)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (headers[MAP][name] === undefined) {\n\t\t\t\t\theaders[MAP][name] = [val];\n\t\t\t\t} else {\n\t\t\t\t\theaders[MAP][name].push(val);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (!invalidHeaderCharRegex.test(obj[name])) {\n\t\t\theaders[MAP][name] = [obj[name]];\n\t\t}\n\t}\n\treturn headers;\n}\n\nconst INTERNALS$1 = Symbol('Response internals');\n\n// fix an issue where \"STATUS_CODES\" aren't a named export for node <10\nconst STATUS_CODES = http.STATUS_CODES;\n\n/**\n * Response class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nclass Response {\n\tconstructor() {\n\t\tlet body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t\tlet opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tBody.call(this, body, opts);\n\n\t\tconst status = opts.status || 200;\n\t\tconst headers = new Headers(opts.headers);\n\n\t\tif (body != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(body);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tthis[INTERNALS$1] = {\n\t\t\turl: opts.url,\n\t\t\tstatus,\n\t\t\tstatusText: opts.statusText || STATUS_CODES[status],\n\t\t\theaders,\n\t\t\tcounter: opts.counter\n\t\t};\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS$1].url || '';\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS$1].status;\n\t}\n\n\t/**\n  * Convenience property representing if the request ended normally\n  */\n\tget ok() {\n\t\treturn this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;\n\t}\n\n\tget redirected() {\n\t\treturn this[INTERNALS$1].counter > 0;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS$1].statusText;\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$1].headers;\n\t}\n\n\t/**\n  * Clone this response\n  *\n  * @return  Response\n  */\n\tclone() {\n\t\treturn new Response(clone(this), {\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tok: this.ok,\n\t\t\tredirected: this.redirected\n\t\t});\n\t}\n}\n\nBody.mixIn(Response.prototype);\n\nObject.defineProperties(Response.prototype, {\n\turl: { enumerable: true },\n\tstatus: { enumerable: true },\n\tok: { enumerable: true },\n\tredirected: { enumerable: true },\n\tstatusText: { enumerable: true },\n\theaders: { enumerable: true },\n\tclone: { enumerable: true }\n});\n\nObject.defineProperty(Response.prototype, Symbol.toStringTag, {\n\tvalue: 'Response',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nconst INTERNALS$2 = Symbol('Request internals');\n\n// fix an issue where \"format\", \"parse\" aren't a named export for node <10\nconst parse_url = Url.parse;\nconst format_url = Url.format;\n\nconst streamDestructionSupported = 'destroy' in Stream.Readable.prototype;\n\n/**\n * Check if a value is an instance of Request.\n *\n * @param   Mixed   input\n * @return  Boolean\n */\nfunction isRequest(input) {\n\treturn typeof input === 'object' && typeof input[INTERNALS$2] === 'object';\n}\n\nfunction isAbortSignal(signal) {\n\tconst proto = signal && typeof signal === 'object' && Object.getPrototypeOf(signal);\n\treturn !!(proto && proto.constructor.name === 'AbortSignal');\n}\n\n/**\n * Request class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nclass Request {\n\tconstructor(input) {\n\t\tlet init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tlet parsedURL;\n\n\t\t// normalize input\n\t\tif (!isRequest(input)) {\n\t\t\tif (input && input.href) {\n\t\t\t\t// in order to support Node.js' Url objects; though WHATWG's URL objects\n\t\t\t\t// will fall into this branch also (since their `toString()` will return\n\t\t\t\t// `href` property anyway)\n\t\t\t\tparsedURL = parse_url(input.href);\n\t\t\t} else {\n\t\t\t\t// coerce input to a string before attempting to parse\n\t\t\t\tparsedURL = parse_url(`${input}`);\n\t\t\t}\n\t\t\tinput = {};\n\t\t} else {\n\t\t\tparsedURL = parse_url(input.url);\n\t\t}\n\n\t\tlet method = init.method || input.method || 'GET';\n\t\tmethod = method.toUpperCase();\n\n\t\tif ((init.body != null || isRequest(input) && input.body !== null) && (method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tlet inputBody = init.body != null ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;\n\n\t\tBody.call(this, inputBody, {\n\t\t\ttimeout: init.timeout || input.timeout || 0,\n\t\t\tsize: init.size || input.size || 0\n\t\t});\n\n\t\tconst headers = new Headers(init.headers || input.headers || {});\n\n\t\tif (inputBody != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(inputBody);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = isRequest(input) ? input.signal : null;\n\t\tif ('signal' in init) signal = init.signal;\n\n\t\tif (signal != null && !isAbortSignal(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal');\n\t\t}\n\n\t\tthis[INTERNALS$2] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tparsedURL,\n\t\t\tsignal\n\t\t};\n\n\t\t// node-fetch-only options\n\t\tthis.follow = init.follow !== undefined ? init.follow : input.follow !== undefined ? input.follow : 20;\n\t\tthis.compress = init.compress !== undefined ? init.compress : input.compress !== undefined ? input.compress : true;\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\tthis.agent = init.agent || input.agent;\n\t}\n\n\tget method() {\n\t\treturn this[INTERNALS$2].method;\n\t}\n\n\tget url() {\n\t\treturn format_url(this[INTERNALS$2].parsedURL);\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$2].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS$2].redirect;\n\t}\n\n\tget signal() {\n\t\treturn this[INTERNALS$2].signal;\n\t}\n\n\t/**\n  * Clone this request\n  *\n  * @return  Request\n  */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n}\n\nBody.mixIn(Request.prototype);\n\nObject.defineProperty(Request.prototype, Symbol.toStringTag, {\n\tvalue: 'Request',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Request.prototype, {\n\tmethod: { enumerable: true },\n\turl: { enumerable: true },\n\theaders: { enumerable: true },\n\tredirect: { enumerable: true },\n\tclone: { enumerable: true },\n\tsignal: { enumerable: true }\n});\n\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param   Request  A Request instance\n * @return  Object   The options object to be passed to http.request\n */\nfunction getNodeRequestOptions(request) {\n\tconst parsedURL = request[INTERNALS$2].parsedURL;\n\tconst headers = new Headers(request[INTERNALS$2].headers);\n\n\t// fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// Basic fetch\n\tif (!parsedURL.protocol || !parsedURL.hostname) {\n\t\tthrow new TypeError('Only absolute URLs are supported');\n\t}\n\n\tif (!/^https?:$/.test(parsedURL.protocol)) {\n\t\tthrow new TypeError('Only HTTP(S) protocols are supported');\n\t}\n\n\tif (request.signal && request.body instanceof Stream.Readable && !streamDestructionSupported) {\n\t\tthrow new Error('Cancellation of streamed requests with AbortSignal is not supported in node < 8');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body == null && /^(POST|PUT)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\tif (request.body != null) {\n\t\tconst totalBytes = getTotalBytes(request);\n\t\tif (typeof totalBytes === 'number') {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip,deflate');\n\t}\n\n\tlet agent = request.agent;\n\tif (typeof agent === 'function') {\n\t\tagent = agent(parsedURL);\n\t}\n\n\tif (!headers.has('Connection') && !agent) {\n\t\theaders.set('Connection', 'close');\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\treturn Object.assign({}, parsedURL, {\n\t\tmethod: request.method,\n\t\theaders: exportNodeCompatibleHeaders(headers),\n\t\tagent\n\t});\n}\n\n/**\n * abort-error.js\n *\n * AbortError interface for cancelled requests\n */\n\n/**\n * Create AbortError instance\n *\n * @param   String      message      Error message for human\n * @return  AbortError\n */\nfunction AbortError(message) {\n  Error.call(this, message);\n\n  this.type = 'aborted';\n  this.message = message;\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nAbortError.prototype = Object.create(Error.prototype);\nAbortError.prototype.constructor = AbortError;\nAbortError.prototype.name = 'AbortError';\n\n// fix an issue where \"PassThrough\", \"resolve\" aren't a named export for node <10\nconst PassThrough$1 = Stream.PassThrough;\nconst resolve_url = Url.resolve;\n\n/**\n * Fetch function\n *\n * @param   Mixed    url   Absolute url or Request instance\n * @param   Object   opts  Fetch options\n * @return  Promise\n */\nfunction fetch(url, opts) {\n\n\t// allow custom promise\n\tif (!fetch.Promise) {\n\t\tthrow new Error('native promise missing, set fetch.Promise to your favorite alternative');\n\t}\n\n\tBody.Promise = fetch.Promise;\n\n\t// wrap http.request into fetch\n\treturn new fetch.Promise(function (resolve, reject) {\n\t\t// build request object\n\t\tconst request = new Request(url, opts);\n\t\tconst options = getNodeRequestOptions(request);\n\n\t\tconst send = (options.protocol === 'https:' ? https : http).request;\n\t\tconst signal = request.signal;\n\n\t\tlet response = null;\n\n\t\tconst abort = function abort() {\n\t\t\tlet error = new AbortError('The user aborted a request.');\n\t\t\treject(error);\n\t\t\tif (request.body && request.body instanceof Stream.Readable) {\n\t\t\t\trequest.body.destroy(error);\n\t\t\t}\n\t\t\tif (!response || !response.body) return;\n\t\t\tresponse.body.emit('error', error);\n\t\t};\n\n\t\tif (signal && signal.aborted) {\n\t\t\tabort();\n\t\t\treturn;\n\t\t}\n\n\t\tconst abortAndFinalize = function abortAndFinalize() {\n\t\t\tabort();\n\t\t\tfinalize();\n\t\t};\n\n\t\t// send request\n\t\tconst req = send(options);\n\t\tlet reqTimeout;\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\n\t\t}\n\n\t\tfunction finalize() {\n\t\t\treq.abort();\n\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\tclearTimeout(reqTimeout);\n\t\t}\n\n\t\tif (request.timeout) {\n\t\t\treq.once('socket', function (socket) {\n\t\t\t\treqTimeout = setTimeout(function () {\n\t\t\t\t\treject(new FetchError(`network timeout at: ${request.url}`, 'request-timeout'));\n\t\t\t\t\tfinalize();\n\t\t\t\t}, request.timeout);\n\t\t\t});\n\t\t}\n\n\t\treq.on('error', function (err) {\n\t\t\treject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, 'system', err));\n\t\t\tfinalize();\n\t\t});\n\n\t\treq.on('response', function (res) {\n\t\t\tclearTimeout(reqTimeout);\n\n\t\t\tconst headers = createHeadersLenient(res.headers);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif (fetch.isRedirect(res.statusCode)) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tconst locationURL = location === null ? null : resolve_url(request.url, location);\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// node-fetch-specific step: make manual redirect a bit easier to use by setting the Location header value to the resolved URL.\n\t\t\t\t\t\tif (locationURL !== null) {\n\t\t\t\t\t\t\t// handle corrupted header\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\theaders.set('Location', locationURL);\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\t// istanbul ignore next: nodejs server prevent invalid response headers, we can't test this through normal request\n\t\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow':\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOpts = {\n\t\t\t\t\t\t\theaders: new Headers(request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\tbody: request.body,\n\t\t\t\t\t\t\tsignal: request.signal,\n\t\t\t\t\t\t\ttimeout: request.timeout,\n\t\t\t\t\t\t\tsize: request.size\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tif (res.statusCode !== 303 && request.body && getTotalBytes(request) === null) {\n\t\t\t\t\t\t\treject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (res.statusCode === 303 || (res.statusCode === 301 || res.statusCode === 302) && request.method === 'POST') {\n\t\t\t\t\t\t\trequestOpts.method = 'GET';\n\t\t\t\t\t\t\trequestOpts.body = undefined;\n\t\t\t\t\t\t\trequestOpts.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tresolve(fetch(new Request(locationURL, requestOpts)));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// prepare response\n\t\t\tres.once('end', function () {\n\t\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\t});\n\t\t\tlet body = res.pipe(new PassThrough$1());\n\n\t\t\tconst response_options = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: res.statusCode,\n\t\t\t\tstatusText: res.statusMessage,\n\t\t\t\theaders: headers,\n\t\t\t\tsize: request.size,\n\t\t\t\ttimeout: request.timeout,\n\t\t\t\tcounter: request.counter\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || res.statusCode === 204 || res.statusCode === 304) {\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// for gzip\n\t\t\tif (codings == 'gzip' || codings == 'x-gzip') {\n\t\t\t\tbody = body.pipe(zlib.createGunzip(zlibOptions));\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for deflate\n\t\t\tif (codings == 'deflate' || codings == 'x-deflate') {\n\t\t\t\t// handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = res.pipe(new PassThrough$1());\n\t\t\t\traw.once('data', function (chunk) {\n\t\t\t\t\t// see http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflate());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflateRaw());\n\t\t\t\t\t}\n\t\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for br\n\t\t\tif (codings == 'br' && typeof zlib.createBrotliDecompress === 'function') {\n\t\t\t\tbody = body.pipe(zlib.createBrotliDecompress());\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// otherwise, use response as-is\n\t\t\tresponse = new Response(body, response_options);\n\t\t\tresolve(response);\n\t\t});\n\n\t\twriteToStream(req, request);\n\t});\n}\n/**\n * Redirect code matching\n *\n * @param   Number   code  Status code\n * @return  Boolean\n */\nfetch.isRedirect = function (code) {\n\treturn code === 301 || code === 302 || code === 303 || code === 307 || code === 308;\n};\n\n// expose Promise\nfetch.Promise = global.Promise;\n\nexport default fetch;\nexport { Headers, Request, Response, FetchError };\n","'use strict';\nconst ansiStyles = require('ansi-styles');\nconst {stdout: stdoutColor, stderr: stderrColor} = require('supports-color');\nconst {\n\tstringReplaceAll,\n\tstringEncaseCRLFWithFirstIndex\n} = require('./util');\n\nconst {isArray} = Array;\n\n// `supportsColor.level` → `ansiStyles.color[name]` mapping\nconst levelMapping = [\n\t'ansi',\n\t'ansi',\n\t'ansi256',\n\t'ansi16m'\n];\n\nconst styles = Object.create(null);\n\nconst applyOptions = (object, options = {}) => {\n\tif (options.level && !(Number.isInteger(options.level) && options.level >= 0 && options.level <= 3)) {\n\t\tthrow new Error('The `level` option should be an integer from 0 to 3');\n\t}\n\n\t// Detect level if not set manually\n\tconst colorLevel = stdoutColor ? stdoutColor.level : 0;\n\tobject.level = options.level === undefined ? colorLevel : options.level;\n};\n\nclass ChalkClass {\n\tconstructor(options) {\n\t\t// eslint-disable-next-line no-constructor-return\n\t\treturn chalkFactory(options);\n\t}\n}\n\nconst chalkFactory = options => {\n\tconst chalk = {};\n\tapplyOptions(chalk, options);\n\n\tchalk.template = (...arguments_) => chalkTag(chalk.template, ...arguments_);\n\n\tObject.setPrototypeOf(chalk, Chalk.prototype);\n\tObject.setPrototypeOf(chalk.template, chalk);\n\n\tchalk.template.constructor = () => {\n\t\tthrow new Error('`chalk.constructor()` is deprecated. Use `new chalk.Instance()` instead.');\n\t};\n\n\tchalk.template.Instance = ChalkClass;\n\n\treturn chalk.template;\n};\n\nfunction Chalk(options) {\n\treturn chalkFactory(options);\n}\n\nfor (const [styleName, style] of Object.entries(ansiStyles)) {\n\tstyles[styleName] = {\n\t\tget() {\n\t\t\tconst builder = createBuilder(this, createStyler(style.open, style.close, this._styler), this._isEmpty);\n\t\t\tObject.defineProperty(this, styleName, {value: builder});\n\t\t\treturn builder;\n\t\t}\n\t};\n}\n\nstyles.visible = {\n\tget() {\n\t\tconst builder = createBuilder(this, this._styler, true);\n\t\tObject.defineProperty(this, 'visible', {value: builder});\n\t\treturn builder;\n\t}\n};\n\nconst usedModels = ['rgb', 'hex', 'keyword', 'hsl', 'hsv', 'hwb', 'ansi', 'ansi256'];\n\nfor (const model of usedModels) {\n\tstyles[model] = {\n\t\tget() {\n\t\t\tconst {level} = this;\n\t\t\treturn function (...arguments_) {\n\t\t\t\tconst styler = createStyler(ansiStyles.color[levelMapping[level]][model](...arguments_), ansiStyles.color.close, this._styler);\n\t\t\t\treturn createBuilder(this, styler, this._isEmpty);\n\t\t\t};\n\t\t}\n\t};\n}\n\nfor (const model of usedModels) {\n\tconst bgModel = 'bg' + model[0].toUpperCase() + model.slice(1);\n\tstyles[bgModel] = {\n\t\tget() {\n\t\t\tconst {level} = this;\n\t\t\treturn function (...arguments_) {\n\t\t\t\tconst styler = createStyler(ansiStyles.bgColor[levelMapping[level]][model](...arguments_), ansiStyles.bgColor.close, this._styler);\n\t\t\t\treturn createBuilder(this, styler, this._isEmpty);\n\t\t\t};\n\t\t}\n\t};\n}\n\nconst proto = Object.defineProperties(() => {}, {\n\t...styles,\n\tlevel: {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn this._generator.level;\n\t\t},\n\t\tset(level) {\n\t\t\tthis._generator.level = level;\n\t\t}\n\t}\n});\n\nconst createStyler = (open, close, parent) => {\n\tlet openAll;\n\tlet closeAll;\n\tif (parent === undefined) {\n\t\topenAll = open;\n\t\tcloseAll = close;\n\t} else {\n\t\topenAll = parent.openAll + open;\n\t\tcloseAll = close + parent.closeAll;\n\t}\n\n\treturn {\n\t\topen,\n\t\tclose,\n\t\topenAll,\n\t\tcloseAll,\n\t\tparent\n\t};\n};\n\nconst createBuilder = (self, _styler, _isEmpty) => {\n\tconst builder = (...arguments_) => {\n\t\tif (isArray(arguments_[0]) && isArray(arguments_[0].raw)) {\n\t\t\t// Called as a template literal, for example: chalk.red`2 + 3 = {bold ${2+3}}`\n\t\t\treturn applyStyle(builder, chalkTag(builder, ...arguments_));\n\t\t}\n\n\t\t// Single argument is hot path, implicit coercion is faster than anything\n\t\t// eslint-disable-next-line no-implicit-coercion\n\t\treturn applyStyle(builder, (arguments_.length === 1) ? ('' + arguments_[0]) : arguments_.join(' '));\n\t};\n\n\t// We alter the prototype because we must return a function, but there is\n\t// no way to create a function with a different prototype\n\tObject.setPrototypeOf(builder, proto);\n\n\tbuilder._generator = self;\n\tbuilder._styler = _styler;\n\tbuilder._isEmpty = _isEmpty;\n\n\treturn builder;\n};\n\nconst applyStyle = (self, string) => {\n\tif (self.level <= 0 || !string) {\n\t\treturn self._isEmpty ? '' : string;\n\t}\n\n\tlet styler = self._styler;\n\n\tif (styler === undefined) {\n\t\treturn string;\n\t}\n\n\tconst {openAll, closeAll} = styler;\n\tif (string.indexOf('\\u001B') !== -1) {\n\t\twhile (styler !== undefined) {\n\t\t\t// Replace any instances already present with a re-opening code\n\t\t\t// otherwise only the part of the string until said closing code\n\t\t\t// will be colored, and the rest will simply be 'plain'.\n\t\t\tstring = stringReplaceAll(string, styler.close, styler.open);\n\n\t\t\tstyler = styler.parent;\n\t\t}\n\t}\n\n\t// We can move both next actions out of loop, because remaining actions in loop won't have\n\t// any/visible effect on parts we add here. Close the styling before a linebreak and reopen\n\t// after next line to fix a bleed issue on macOS: https://github.com/chalk/chalk/pull/92\n\tconst lfIndex = string.indexOf('\\n');\n\tif (lfIndex !== -1) {\n\t\tstring = stringEncaseCRLFWithFirstIndex(string, closeAll, openAll, lfIndex);\n\t}\n\n\treturn openAll + string + closeAll;\n};\n\nlet template;\nconst chalkTag = (chalk, ...strings) => {\n\tconst [firstString] = strings;\n\n\tif (!isArray(firstString) || !isArray(firstString.raw)) {\n\t\t// If chalk() was called by itself or with a string,\n\t\t// return the string itself as a string.\n\t\treturn strings.join(' ');\n\t}\n\n\tconst arguments_ = strings.slice(1);\n\tconst parts = [firstString.raw[0]];\n\n\tfor (let i = 1; i < firstString.length; i++) {\n\t\tparts.push(\n\t\t\tString(arguments_[i - 1]).replace(/[{}\\\\]/g, '\\\\$&'),\n\t\t\tString(firstString.raw[i])\n\t\t);\n\t}\n\n\tif (template === undefined) {\n\t\ttemplate = require('./templates');\n\t}\n\n\treturn template(chalk, parts.join(''));\n};\n\nObject.defineProperties(Chalk.prototype, styles);\n\nconst chalk = Chalk(); // eslint-disable-line new-cap\nchalk.supportsColor = stdoutColor;\nchalk.stderr = Chalk({level: stderrColor ? stderrColor.level : 0}); // eslint-disable-line new-cap\nchalk.stderr.supportsColor = stderrColor;\n\nmodule.exports = chalk;\n","'use strict';\n\nconst wrapAnsi16 = (fn, offset) => (...args) => {\n\tconst code = fn(...args);\n\treturn `\\u001B[${code + offset}m`;\n};\n\nconst wrapAnsi256 = (fn, offset) => (...args) => {\n\tconst code = fn(...args);\n\treturn `\\u001B[${38 + offset};5;${code}m`;\n};\n\nconst wrapAnsi16m = (fn, offset) => (...args) => {\n\tconst rgb = fn(...args);\n\treturn `\\u001B[${38 + offset};2;${rgb[0]};${rgb[1]};${rgb[2]}m`;\n};\n\nconst ansi2ansi = n => n;\nconst rgb2rgb = (r, g, b) => [r, g, b];\n\nconst setLazyProperty = (object, property, get) => {\n\tObject.defineProperty(object, property, {\n\t\tget: () => {\n\t\t\tconst value = get();\n\n\t\t\tObject.defineProperty(object, property, {\n\t\t\t\tvalue,\n\t\t\t\tenumerable: true,\n\t\t\t\tconfigurable: true\n\t\t\t});\n\n\t\t\treturn value;\n\t\t},\n\t\tenumerable: true,\n\t\tconfigurable: true\n\t});\n};\n\n/** @type {typeof import('color-convert')} */\nlet colorConvert;\nconst makeDynamicStyles = (wrap, targetSpace, identity, isBackground) => {\n\tif (colorConvert === undefined) {\n\t\tcolorConvert = require('color-convert');\n\t}\n\n\tconst offset = isBackground ? 10 : 0;\n\tconst styles = {};\n\n\tfor (const [sourceSpace, suite] of Object.entries(colorConvert)) {\n\t\tconst name = sourceSpace === 'ansi16' ? 'ansi' : sourceSpace;\n\t\tif (sourceSpace === targetSpace) {\n\t\t\tstyles[name] = wrap(identity, offset);\n\t\t} else if (typeof suite === 'object') {\n\t\t\tstyles[name] = wrap(suite[targetSpace], offset);\n\t\t}\n\t}\n\n\treturn styles;\n};\n\nfunction assembleStyles() {\n\tconst codes = new Map();\n\tconst styles = {\n\t\tmodifier: {\n\t\t\treset: [0, 0],\n\t\t\t// 21 isn't widely supported and 22 does the same thing\n\t\t\tbold: [1, 22],\n\t\t\tdim: [2, 22],\n\t\t\titalic: [3, 23],\n\t\t\tunderline: [4, 24],\n\t\t\tinverse: [7, 27],\n\t\t\thidden: [8, 28],\n\t\t\tstrikethrough: [9, 29]\n\t\t},\n\t\tcolor: {\n\t\t\tblack: [30, 39],\n\t\t\tred: [31, 39],\n\t\t\tgreen: [32, 39],\n\t\t\tyellow: [33, 39],\n\t\t\tblue: [34, 39],\n\t\t\tmagenta: [35, 39],\n\t\t\tcyan: [36, 39],\n\t\t\twhite: [37, 39],\n\n\t\t\t// Bright color\n\t\t\tblackBright: [90, 39],\n\t\t\tredBright: [91, 39],\n\t\t\tgreenBright: [92, 39],\n\t\t\tyellowBright: [93, 39],\n\t\t\tblueBright: [94, 39],\n\t\t\tmagentaBright: [95, 39],\n\t\t\tcyanBright: [96, 39],\n\t\t\twhiteBright: [97, 39]\n\t\t},\n\t\tbgColor: {\n\t\t\tbgBlack: [40, 49],\n\t\t\tbgRed: [41, 49],\n\t\t\tbgGreen: [42, 49],\n\t\t\tbgYellow: [43, 49],\n\t\t\tbgBlue: [44, 49],\n\t\t\tbgMagenta: [45, 49],\n\t\t\tbgCyan: [46, 49],\n\t\t\tbgWhite: [47, 49],\n\n\t\t\t// Bright color\n\t\t\tbgBlackBright: [100, 49],\n\t\t\tbgRedBright: [101, 49],\n\t\t\tbgGreenBright: [102, 49],\n\t\t\tbgYellowBright: [103, 49],\n\t\t\tbgBlueBright: [104, 49],\n\t\t\tbgMagentaBright: [105, 49],\n\t\t\tbgCyanBright: [106, 49],\n\t\t\tbgWhiteBright: [107, 49]\n\t\t}\n\t};\n\n\t// Alias bright black as gray (and grey)\n\tstyles.color.gray = styles.color.blackBright;\n\tstyles.bgColor.bgGray = styles.bgColor.bgBlackBright;\n\tstyles.color.grey = styles.color.blackBright;\n\tstyles.bgColor.bgGrey = styles.bgColor.bgBlackBright;\n\n\tfor (const [groupName, group] of Object.entries(styles)) {\n\t\tfor (const [styleName, style] of Object.entries(group)) {\n\t\t\tstyles[styleName] = {\n\t\t\t\topen: `\\u001B[${style[0]}m`,\n\t\t\t\tclose: `\\u001B[${style[1]}m`\n\t\t\t};\n\n\t\t\tgroup[styleName] = styles[styleName];\n\n\t\t\tcodes.set(style[0], style[1]);\n\t\t}\n\n\t\tObject.defineProperty(styles, groupName, {\n\t\t\tvalue: group,\n\t\t\tenumerable: false\n\t\t});\n\t}\n\n\tObject.defineProperty(styles, 'codes', {\n\t\tvalue: codes,\n\t\tenumerable: false\n\t});\n\n\tstyles.color.close = '\\u001B[39m';\n\tstyles.bgColor.close = '\\u001B[49m';\n\n\tsetLazyProperty(styles.color, 'ansi', () => makeDynamicStyles(wrapAnsi16, 'ansi16', ansi2ansi, false));\n\tsetLazyProperty(styles.color, 'ansi256', () => makeDynamicStyles(wrapAnsi256, 'ansi256', ansi2ansi, false));\n\tsetLazyProperty(styles.color, 'ansi16m', () => makeDynamicStyles(wrapAnsi16m, 'rgb', rgb2rgb, false));\n\tsetLazyProperty(styles.bgColor, 'ansi', () => makeDynamicStyles(wrapAnsi16, 'ansi16', ansi2ansi, true));\n\tsetLazyProperty(styles.bgColor, 'ansi256', () => makeDynamicStyles(wrapAnsi256, 'ansi256', ansi2ansi, true));\n\tsetLazyProperty(styles.bgColor, 'ansi16m', () => makeDynamicStyles(wrapAnsi16m, 'rgb', rgb2rgb, true));\n\n\treturn styles;\n}\n\n// Make the export immutable\nObject.defineProperty(module, 'exports', {\n\tenumerable: true,\n\tget: assembleStyles\n});\n","const conversions = require('./conversions');\nconst route = require('./route');\n\nconst convert = {};\n\nconst models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\tconst result = fn(args);\n\n\t\t// We're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (let len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(fromModel => {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tconst routes = route(fromModel);\n\tconst routeModels = Object.keys(routes);\n\n\trouteModels.forEach(toModel => {\n\t\tconst fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","const conversions = require('./conversions');\n\n/*\n\tThis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tconst graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tconst models = Object.keys(conversions);\n\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tconst graph = buildGraph();\n\tconst queue = [fromModel]; // Unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tconst current = queue.pop();\n\t\tconst adjacents = Object.keys(conversions[current]);\n\n\t\tfor (let len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tconst adjacent = adjacents[i];\n\t\t\tconst node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tconst path = [graph[toModel].parent, toModel];\n\tlet fn = conversions[graph[toModel].parent][toModel];\n\n\tlet cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tconst graph = deriveBFS(fromModel);\n\tconst conversion = {};\n\n\tconst models = Object.keys(graph);\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tconst toModel = models[i];\n\t\tconst node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// No possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n","'use strict';\nconst os = require('os');\nconst tty = require('tty');\nconst hasFlag = require('has-flag');\n\nconst {env} = process;\n\nlet forceColor;\nif (hasFlag('no-color') ||\n\thasFlag('no-colors') ||\n\thasFlag('color=false') ||\n\thasFlag('color=never')) {\n\tforceColor = 0;\n} else if (hasFlag('color') ||\n\thasFlag('colors') ||\n\thasFlag('color=true') ||\n\thasFlag('color=always')) {\n\tforceColor = 1;\n}\n\nif ('FORCE_COLOR' in env) {\n\tif (env.FORCE_COLOR === 'true') {\n\t\tforceColor = 1;\n\t} else if (env.FORCE_COLOR === 'false') {\n\t\tforceColor = 0;\n\t} else {\n\t\tforceColor = env.FORCE_COLOR.length === 0 ? 1 : Math.min(parseInt(env.FORCE_COLOR, 10), 3);\n\t}\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3\n\t};\n}\n\nfunction supportsColor(haveStream, streamIsTTY) {\n\tif (forceColor === 0) {\n\t\treturn 0;\n\t}\n\n\tif (hasFlag('color=16m') ||\n\t\thasFlag('color=full') ||\n\t\thasFlag('color=truecolor')) {\n\t\treturn 3;\n\t}\n\n\tif (hasFlag('color=256')) {\n\t\treturn 2;\n\t}\n\n\tif (haveStream && !streamIsTTY && forceColor === undefined) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor || 0;\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\tif (process.platform === 'win32') {\n\t\t// Windows 10 build 10586 is the first Windows release that supports 256 colors.\n\t\t// Windows 10 build 14931 is the first release that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(osRelease[0]) >= 10 &&\n\t\t\tNumber(osRelease[2]) >= 10586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI', 'GITHUB_ACTIONS', 'BUILDKITE'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\treturn min;\n}\n\nfunction getSupportLevel(stream) {\n\tconst level = supportsColor(stream, stream && stream.isTTY);\n\treturn translateLevel(level);\n}\n\nmodule.exports = {\n\tsupportsColor: getSupportLevel,\n\tstdout: translateLevel(supportsColor(true, tty.isatty(1))),\n\tstderr: translateLevel(supportsColor(true, tty.isatty(2)))\n};\n","module.exports = require(\"os\");","module.exports = require(\"tty\");","'use strict';\n\nmodule.exports = (flag, argv = process.argv) => {\n\tconst prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');\n\tconst position = argv.indexOf(prefix + flag);\n\tconst terminatorPosition = argv.indexOf('--');\n\treturn position !== -1 && (terminatorPosition === -1 || position < terminatorPosition);\n};\n","'use strict';\n\nconst stringReplaceAll = (string, substring, replacer) => {\n\tlet index = string.indexOf(substring);\n\tif (index === -1) {\n\t\treturn string;\n\t}\n\n\tconst substringLength = substring.length;\n\tlet endIndex = 0;\n\tlet returnValue = '';\n\tdo {\n\t\treturnValue += string.substr(endIndex, index - endIndex) + substring + replacer;\n\t\tendIndex = index + substringLength;\n\t\tindex = string.indexOf(substring, endIndex);\n\t} while (index !== -1);\n\n\treturnValue += string.substr(endIndex);\n\treturn returnValue;\n};\n\nconst stringEncaseCRLFWithFirstIndex = (string, prefix, postfix, index) => {\n\tlet endIndex = 0;\n\tlet returnValue = '';\n\tdo {\n\t\tconst gotCR = string[index - 1] === '\\r';\n\t\treturnValue += string.substr(endIndex, (gotCR ? index - 1 : index) - endIndex) + prefix + (gotCR ? '\\r\\n' : '\\n') + postfix;\n\t\tendIndex = index + 1;\n\t\tindex = string.indexOf('\\n', endIndex);\n\t} while (index !== -1);\n\n\treturnValue += string.substr(endIndex);\n\treturn returnValue;\n};\n\nmodule.exports = {\n\tstringReplaceAll,\n\tstringEncaseCRLFWithFirstIndex\n};\n","'use strict';\nconst TEMPLATE_REGEX = /(?:\\\\(u(?:[a-f\\d]{4}|\\{[a-f\\d]{1,6}\\})|x[a-f\\d]{2}|.))|(?:\\{(~)?(\\w+(?:\\([^)]*\\))?(?:\\.\\w+(?:\\([^)]*\\))?)*)(?:[ \\t]|(?=\\r?\\n)))|(\\})|((?:.|[\\r\\n\\f])+?)/gi;\nconst STYLE_REGEX = /(?:^|\\.)(\\w+)(?:\\(([^)]*)\\))?/g;\nconst STRING_REGEX = /^(['\"])((?:\\\\.|(?!\\1)[^\\\\])*)\\1$/;\nconst ESCAPE_REGEX = /\\\\(u(?:[a-f\\d]{4}|{[a-f\\d]{1,6}})|x[a-f\\d]{2}|.)|([^\\\\])/gi;\n\nconst ESCAPES = new Map([\n\t['n', '\\n'],\n\t['r', '\\r'],\n\t['t', '\\t'],\n\t['b', '\\b'],\n\t['f', '\\f'],\n\t['v', '\\v'],\n\t['0', '\\0'],\n\t['\\\\', '\\\\'],\n\t['e', '\\u001B'],\n\t['a', '\\u0007']\n]);\n\nfunction unescape(c) {\n\tconst u = c[0] === 'u';\n\tconst bracket = c[1] === '{';\n\n\tif ((u && !bracket && c.length === 5) || (c[0] === 'x' && c.length === 3)) {\n\t\treturn String.fromCharCode(parseInt(c.slice(1), 16));\n\t}\n\n\tif (u && bracket) {\n\t\treturn String.fromCodePoint(parseInt(c.slice(2, -1), 16));\n\t}\n\n\treturn ESCAPES.get(c) || c;\n}\n\nfunction parseArguments(name, arguments_) {\n\tconst results = [];\n\tconst chunks = arguments_.trim().split(/\\s*,\\s*/g);\n\tlet matches;\n\n\tfor (const chunk of chunks) {\n\t\tconst number = Number(chunk);\n\t\tif (!Number.isNaN(number)) {\n\t\t\tresults.push(number);\n\t\t} else if ((matches = chunk.match(STRING_REGEX))) {\n\t\t\tresults.push(matches[2].replace(ESCAPE_REGEX, (m, escape, character) => escape ? unescape(escape) : character));\n\t\t} else {\n\t\t\tthrow new Error(`Invalid Chalk template style argument: ${chunk} (in style '${name}')`);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction parseStyle(style) {\n\tSTYLE_REGEX.lastIndex = 0;\n\n\tconst results = [];\n\tlet matches;\n\n\twhile ((matches = STYLE_REGEX.exec(style)) !== null) {\n\t\tconst name = matches[1];\n\n\t\tif (matches[2]) {\n\t\t\tconst args = parseArguments(name, matches[2]);\n\t\t\tresults.push([name].concat(args));\n\t\t} else {\n\t\t\tresults.push([name]);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction buildStyle(chalk, styles) {\n\tconst enabled = {};\n\n\tfor (const layer of styles) {\n\t\tfor (const style of layer.styles) {\n\t\t\tenabled[style[0]] = layer.inverse ? null : style.slice(1);\n\t\t}\n\t}\n\n\tlet current = chalk;\n\tfor (const [styleName, styles] of Object.entries(enabled)) {\n\t\tif (!Array.isArray(styles)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!(styleName in current)) {\n\t\t\tthrow new Error(`Unknown Chalk style: ${styleName}`);\n\t\t}\n\n\t\tcurrent = styles.length > 0 ? current[styleName](...styles) : current[styleName];\n\t}\n\n\treturn current;\n}\n\nmodule.exports = (chalk, temporary) => {\n\tconst styles = [];\n\tconst chunks = [];\n\tlet chunk = [];\n\n\t// eslint-disable-next-line max-params\n\ttemporary.replace(TEMPLATE_REGEX, (m, escapeCharacter, inverse, style, close, character) => {\n\t\tif (escapeCharacter) {\n\t\t\tchunk.push(unescape(escapeCharacter));\n\t\t} else if (style) {\n\t\t\tconst string = chunk.join('');\n\t\t\tchunk = [];\n\t\t\tchunks.push(styles.length === 0 ? string : buildStyle(chalk, styles)(string));\n\t\t\tstyles.push({inverse, styles: parseStyle(style)});\n\t\t} else if (close) {\n\t\t\tif (styles.length === 0) {\n\t\t\t\tthrow new Error('Found extraneous } in Chalk template literal');\n\t\t\t}\n\n\t\t\tchunks.push(buildStyle(chalk, styles)(chunk.join('')));\n\t\t\tchunk = [];\n\t\t\tstyles.pop();\n\t\t} else {\n\t\t\tchunk.push(character);\n\t\t}\n\t});\n\n\tchunks.push(chunk.join(''));\n\n\tif (styles.length > 0) {\n\t\tconst errMessage = `Chalk template literal is missing ${styles.length} closing bracket${styles.length === 1 ? '' : 's'} (\\`}\\`)`;\n\t\tthrow new Error(errMessage);\n\t}\n\n\treturn chunks.join('');\n};\n","// @flow\n\n/*:: type PayoutDistributions = $ReadOnlyArray<[string, string]>;*/\nmodule.exports = function payoutDistributionToCsv(\n  payoutDistributions /*: PayoutDistributions*/\n) /*: string*/ {\n  let csvString = \"\";\n  for (const [payoutAddress, amount] of payoutDistributions) {\n    csvString += `${payoutAddress},${amount}\\n`;\n  }\n  return csvString;\n};\n","// @flow\n\n/**\n * Convert a string-keyed map to an object. Useful for conversion to\n * JSON. If a map's keys are not strings, consider invoking `mapKeys`\n * first.\n */\nexport function toObject<K: string, V, InK: K, InV: V>(\n  map: $ReadOnlyMap<InK, InV>\n): {|[K]: V|} {\n  const result: {|[K]: V|} = ({}: any);\n  for (const [k, v] of map.entries()) {\n    result[k] = v;\n  }\n  return result;\n}\n\n/**\n * Convert an object to a map. The resulting map will have key-value\n * pairs corresponding to the enumerable own properties of the object in\n * iteration order, as returned by `Object.keys`.\n */\nexport function fromObject<K, V, InK: K & string, InV: V>(object: {\n  +[InK]: InV,\n}): Map<K, V> {\n  const result = new Map();\n  const keys = (((Object.keys(object): string[]): any): InK[]);\n  for (const key of keys) {\n    result.set(key, object[key]);\n  }\n  return result;\n}\n\n/**\n * Shallow-copy a map, allowing upcasting its type parameters.\n *\n * The `Map` type constructor is not covariant in its type parameters,\n * which means that (e.g.) `Map<string, Dog>` is not a subtype of\n * `Map<string, Animal>` even if `Dog` is a subtype of `Animal`. This is\n * because, given a `Map<string, Animal>`, one can insert a `Cat`, which\n * would break invariants of existing references to the variable as a\n * map containing only `Dog`s.\n *\n *     declare class Animal {};\n *     declare class Dog extends Animal {};\n *     declare class Cat extends Animal {};\n *     declare var dogMap: Map<string, Dog>;\n *     const animalMap: Map<string, Animal> = dogMap;  // must fail\n *     animalMap.set(\"tabby\", new Cat());  // or we could do this...\n *     (dogMap.values(): Iterator<Dog>);  // ...now contains a `Cat`!\n *\n * This problem only exists when a map with existing references is\n * mutated. Therefore, when we shallow-copy a map, we have the\n * opportunity to upcast its type parameters: `copy(dogMap)` _can_ be a\n * `Map<string, Animal>`.\n */\nexport function copy<K, V, InK: K, InV: V>(\n  map: $ReadOnlyMap<InK, InV>\n): Map<K, V> {\n  const entries = map.entries();\n  return new Map((((entries: Iterator<[InK, InV]>): any): Iterator<[K, V]>));\n}\n\n/**\n * Map across the keys of a map. Note that the key-mapping function is\n * provided both the key and the value for each entry.\n *\n * The key-mapping function must be injective on the map's key set. If\n * it maps two distinct input keys to the same output key, an error may\n * be thrown.\n */\nexport function mapKeys<K, V, InK, InV: V>(\n  map: $ReadOnlyMap<InK, InV>,\n  f: (InK, InV) => K\n): Map<K, V> {\n  const result = new Map();\n  for (const [k, v] of map.entries()) {\n    const outK = f(k, v);\n    if (result.has(outK)) {\n      throw new Error(\"duplicate key: \" + String(outK));\n    }\n    result.set(outK, v);\n  }\n  return result;\n}\n\n/**\n * Map across the values of a map. Note that the value-mapping function\n * is provided both the key and the value for each entry.\n *\n * There are no restrictions on the value-mapping function (in\n * particular, it need not be injective).\n */\nexport function mapValues<K, V, InK: K, InV>(\n  map: $ReadOnlyMap<InK, InV>,\n  g: (InK, InV) => V\n): Map<K, V> {\n  const result = new Map();\n  for (const [k, v] of map.entries()) {\n    result.set(k, g(k, v));\n  }\n  return result;\n}\n\n/**\n * Map simultaneously across the keys and values of a map.\n *\n * The key-mapping function must be injective on the map's key set. If\n * it maps two distinct input keys to the same output key, an error may\n * be thrown. There are no such restrictions on the value-mapping\n * function.\n */\nexport function mapEntries<K, V, InK, InV>(\n  map: $ReadOnlyMap<InK, InV>,\n  h: (InK, InV) => [K, V]\n): Map<K, V> {\n  const result = new Map();\n  for (const [k, v] of map.entries()) {\n    const [outK, outV] = h(k, v);\n    if (result.has(outK)) {\n      throw new Error(\"duplicate key: \" + String(outK));\n    }\n    result.set(outK, outV);\n  }\n  return result;\n}\n\n/**\n * Merge maps without mutating the arguments.\n *\n * Merges multiple maps, returning a new map which has every key from\n * the source maps, with their corresponding values. None of the inputs\n * are mutated. In the event that multiple maps have the same key, an\n * error will be thrown.\n */\nexport function merge<K, V>(\n  maps: $ReadOnlyArray<$ReadOnlyMap<K, V>>\n): Map<K, V> {\n  const result = new Map();\n  let updates = 0;\n  for (const map of maps) {\n    for (const [key, value] of map.entries()) {\n      result.set(key, value);\n      if (result.size !== ++updates) {\n        throw new Error(`Maps have duplicate key: ${String(key)}`);\n      }\n    }\n  }\n  return result;\n}\n\n/**\n * Given a map whose values are arrays, push an element onto the array\n * corresponding to the given key. If the key is not in the map, first\n * insert it with value a new empty array.\n *\n * If the key is already in the map, its value will be mutated, not\n * replaced.\n */\nexport function pushValue<K, V>(map: Map<K, V[]>, key: K, value: V): V[] {\n  let arr = map.get(key);\n  if (arr == null) {\n    map.set(key, (arr = []));\n  }\n  arr.push(value);\n  return arr;\n}\n\n/**\n * Given a Map, transform its entries into an Array using a\n * provided transformer function.\n */\nexport function mapToArray<K, V, R>(\n  map: $ReadOnlyMap<K, V>,\n  fn: (pair: [K, V], index: number) => R\n): R[] {\n  return Array.from(map.entries()).map(fn);\n}\n","// @flow\n\n// Simple parser combinator library for structured types rather than\n// bytestring parsing.\n\nexport type JsonObject =\n  | string\n  | number\n  | boolean\n  | null\n  | $ReadOnlyArray<JsonObject>\n  | {+[string]: JsonObject};\n\nexport type ParseResult<+T> =\n  | {|+ok: true, +value: T|}\n  | {|+ok: false, +err: string|};\n\nexport class Parser<+T> {\n  +_f: (JsonObject) => ParseResult<T>;\n  // Phantom data for the output type of this parser. Used to more\n  // reliably match on parsers at the type level, via `$PropertyType`\n  // rather than `$Call`. Not populated at runtime; do not dereference.\n  +_phantomT: T;\n\n  constructor(f: (JsonObject) => ParseResult<T>) {\n    this._f = f;\n  }\n  parse(raw: JsonObject): ParseResult<T> {\n    return this._f(raw);\n  }\n  parseOrThrow(raw: JsonObject): T {\n    const result = this.parse(raw);\n    if (result.ok) {\n      return result.value;\n    } else {\n      throw new Error(result.err);\n    }\n  }\n}\n\n// Helper type to extract the underlying type of a parser: for instance,\n// `ParserOutput<Parser<string>>` is just `string`.\nexport type ParserOutput<P: Parser<mixed>> = $PropertyType<P, \"_phantomT\">;\ntype ExtractParserOutput = <P: Parser<mixed>>(P) => ParserOutput<P>;\n\n// Helper to make a successful parse result. For readability.\nfunction success<T>(t: T): ParseResult<T> {\n  return {ok: true, value: t};\n}\n\n// Helper to make a failed parse result. For readability.\nfunction failure(err: string): ParseResult<empty> {\n  return {ok: false, err};\n}\n\n// Helper to nicely render a JSON object's typename, accounting for\n// nulls and arrays.\nfunction typename(x: JsonObject): string {\n  if (x === null) {\n    return \"null\";\n  }\n  if (Array.isArray(x)) {\n    return \"array\";\n  }\n  return typeof x;\n}\n\nexport const string: Parser<string> = new Parser((x) => {\n  if (typeof x !== \"string\") {\n    return failure(\"expected string, got \" + typename(x));\n  }\n  return success(x);\n});\n\nexport const number: Parser<number> = new Parser((x) => {\n  if (typeof x !== \"number\") {\n    return failure(\"expected number, got \" + typename(x));\n  }\n  return success(x);\n});\n\nexport const integer: Parser<number> = new Parser((x) => {\n  if (typeof x !== \"number\" || Math.floor(x) !== x) {\n    return failure(\"expected integer, got \" + typename(x));\n  }\n  return success(x);\n});\n\nexport const boolean: Parser<boolean> = new Parser((x) => {\n  if (typeof x !== \"boolean\") {\n    return failure(\"expected boolean, got \" + typename(x));\n  }\n  return success(x);\n});\n\n// Parser that only accepts a literal `null`. (Called `null_` rather\n// than `null` to avoid conflicting with keyword.)\nexport const null_: Parser<null> = new Parser((x) => {\n  if (x !== null) {\n    return failure(\"expected null, got \" + typename(x));\n  }\n  return success(x);\n});\n\n// The identity operation: a parser that always succeeds, emitting a\n// `JsonObject` (not `any`) with the input. Used when you need a parser\n// that matches anything:\n//\n//    // Accepts an arbitrary heterogeneous array and returns its length\n//    C.fmap(C.array(C.raw), (a) => a.length)\n//\n//    // Accepts a config file with dynamic plugin-specific data\n//    C.object({version: string, pluginConfig: C.dict(C.raw)})\n//\n// To destructure the parsed value dynamically, pair with `fmap`.\nexport const raw: Parser<JsonObject> = new Parser(success);\n\n// Lift a plain value into a parser that always returns that value,\n// ignoring its input.\nexport function pure<T>(t: T): Parser<T> {\n  return new Parser((_) => success(t));\n}\n\n// Create a parser that accepts any value from a fixed set. This can be\n// used for enumerated values in configs:\n//\n//    type Environment = \"dev\" | \"prod\";\n//    const p: C.Parser<Environment> = C.exactly([\"dev\", \"prod\"]);\n//\n// This function only supports value types. Performing an `any`-cast\n// guarded by a deep equality check would be unsound, breaking opaque\n// type boundaries: e.g., a module could `export opaque type T = {}` and\n// provide two constants `ONE = {}` and `TWO = {}` (different objects),\n// and then expect that any value of type `T` would be identical to\n// either `ONE` or `TWO`. Using strict reference equality for array and\n// object types would be sound, but would not usually be what was\n// wanted, as it wouldn't match ~any actual output of `JSON.parse`.\nexport function exactly<T: string | number | boolean | null>(\n  ts: $ReadOnlyArray<T>\n): Parser<T> {\n  return new Parser((x) => {\n    for (const t of ts) {\n      if (x === t) {\n        return success(t);\n      }\n    }\n    const expected: string =\n      ts.length === 1 ? String(ts[0]) : `one of ${JSON.stringify(ts)}`;\n    return failure(`expected ${expected}, got ${typename(x)}`);\n  });\n}\n\n// Transform the output of a parser with a pure function. For instance,\n// if `p: Parser<number>` and `f = (n: number) => n % 2 === 0`, then\n// `fmap(p, f)` is a `Parser<boolean>` that first uses `p` to parse its\n// input to a number and then checks whether the number is even.\n//\n// If the function `f` throws, the thrown value will be converted to\n// string and returned as a parse error. (The string conversion takes\n// `e.message` if the thrown value `e` is an `Error`, else just converts\n// with the `String` builtin.)\n//\n// This can be used for \"strong validation\". If `U` is a (possibly\n// opaque) subtype of `T`, and `f: (T) => U` is a checked downcast that\n// either returns a `U` or throws an error, then `fmap` can transform a\n// `Parser<T>` into a validating `Parser<U>`, where the fact that the\n// validation has been performed is encoded at the type level. Thus:\n//\n//    import * as C from \".../combo\";\n//    import {NodeAddress, type NodeAddressT} from \".../core/graph\";\n//\n//    const addressParser: Parser<NodeAddressT> =\n//      C.fmap(C.array(C.string), NodeAddress.fromParts);\n//\n// As a degenerate case, it can also be used for \"weak validation\",\n// where the types `T` and `U` are the same and the function `f` simply\n// returns its argument or throws, but in this case there is nothing\n// preventing a user of a `Parser<T>` from simply forgetting to\n// validate. Prefer strong validation when possible.\nexport function fmap<T, U>(p: Parser<T>, f: (T) => U): Parser<U> {\n  return new Parser((x) => {\n    const maybeT = p.parse(x);\n    if (!maybeT.ok) {\n      return failure(maybeT.err);\n    }\n    const t = maybeT.value;\n    let u: U;\n    try {\n      u = f(t);\n    } catch (e) {\n      if (e instanceof Error) {\n        return failure(e.message);\n      } else {\n        return failure(String(e));\n      }\n    }\n    return success(u);\n  });\n}\n\n// Create a parser that tries each of the given parsers on the same\n// input, taking the first successful parse or failing if all parsers\n// fail. In the failure case, the provided `errorFn` will be called with\n// the error messages from all the subparsers to form the resulting\n// error; the default error function includes the full text of all the\n// error messages, but a user-supplied error function may act with\n// domain-specific precision.\n//\n// One use case is for parsing unions, including discriminated unions:\n//\n//    type Expr =\n//      | {|+type: \"CONSTANT\", +value: number|}\n//      | {|+type: \"VARIABLE\", +name: string|};\n//    const exprParser: C.Parser<Expr> = C.orElse([\n//      C.fmap(C.number, (value) => ({type: \"CONSTANT\", value})),\n//      C.fmap(C.string, (name) => ({type: \"VARIABLE\", name})),\n//    ]);\n//\n// Another is to use `pure` to provide a default value:\n//\n//    const lenientNumber: C.Parser<number | \"(unknown)\"> = C.orElse([\n//      C.number,\n//      C.pure(\"(unknown)\"),\n//    ]);\n//\n// This last parser will always succeed, because `C.pure(v)` always\n// succeeds and always returns `v`.\nexport function orElse<T: $ReadOnlyArray<Parser<mixed>>>(\n  parsers: T,\n  errorFn?: (string[]) => string = (errors) =>\n    `no parse matched: ${JSON.stringify(errors)}`\n): Parser<$ElementType<$TupleMap<T, ExtractParserOutput>, number>> {\n  return new Parser((x) => {\n    const errors = [];\n    for (const parser of parsers) {\n      const result = parser.parse(x);\n      if (result.ok) {\n        return success((result.value: any));\n      } else {\n        errors.push(result.err);\n      }\n    }\n    return failure(errorFn(errors));\n  });\n}\n\nexport function array<T>(p: Parser<T>): Parser<T[]> {\n  return new Parser((x) => {\n    if (!Array.isArray(x)) {\n      return failure(\"expected array, got \" + typename(x));\n    }\n    const result = Array(x.length);\n    for (let i = 0; i < result.length; i++) {\n      const raw = x[i];\n      const parsed = p.parse(raw);\n      if (!parsed.ok) {\n        return failure(`index ${i}: ${parsed.err}`);\n      }\n      result[i] = parsed.value;\n    }\n    return success(result);\n  });\n}\n\n// Fields for an object type. Each is either a bare parser or the result\n// of `rename(\"oldFieldName\", p)` for a parser `p`, to be used when the\n// field name in the output type is to be different from the field name\n// in the input type.\nexport type Field<+T> = Parser<T> | RenameField<T>;\nexport opaque type RenameField<+T>: {+_phantomT: T} = RenameFieldImpl<T>;\nexport type Fields = {+[string]: Field<mixed>};\n\n// Like `ExtractParserOutput`, but works on `Field`s even when the\n// bound ascription is checked outside of this module.\ntype FieldOutput<F: Field<mixed>> = $PropertyType<F, \"_phantomT\">;\ntype ExtractFieldOutput = <F: Field<mixed>>(F) => FieldOutput<F>;\n\nexport function rename<T>(oldKey: string, parser: Parser<T>): RenameField<T> {\n  return new RenameFieldImpl(oldKey, parser);\n}\n\nclass RenameFieldImpl<+T> extends Parser<T> {\n  +oldKey: string;\n  constructor(oldKey: string, parser: Parser<T>) {\n    super(parser._f);\n    this.oldKey = oldKey;\n  }\n}\n\n// Parser combinator for an object type all of whose fields are\n// required.\ntype PObjectAllRequired = <FReq: Fields>(\n  required: FReq\n) => Parser<$ObjMap<FReq, ExtractFieldOutput>>;\n\n// Parser combinator for an object type with some required fields (maybe\n// none) and some optional ones.\ntype PObjectWithOptionals = <FReq: Fields, FOpt: Fields>(\n  required: FReq,\n  optional: FOpt\n) => Parser<\n  $Exact<{\n    ...$Exact<$ObjMap<FReq, ExtractFieldOutput>>,\n    ...$Rest<$Exact<$ObjMap<FOpt, ExtractFieldOutput>>, {}>,\n  }>\n>;\n\n// Parser combinator for an object type where all fields are optional.\n// Special case of `PObjectWithOptionals`.\ntype PObjectShape = <FOpt: Fields>(\n  optional: FOpt\n) => Parser<$Rest<$Exact<$ObjMap<FOpt, ExtractFieldOutput>>, {}>>;\n\n// Parser combinator for an object type with some required fields (maybe\n// none) and maybe some optional ones. (This is an intersection type\n// rather than a normal function with optional second argument to force\n// inference to pick a branch based on arity rather than inferring an\n// `empty` type.)\ntype PObject = PObjectAllRequired & PObjectWithOptionals;\n\n// Create a parser for an object type, with required fields and\n// (optionally) optional fields. The returned parser will silently drop\n// extraneous fields on values that it parses, to facilitate forward and\n// backward compatibility.\nexport const object: PObject = (function object(\n  requiredFields,\n  optionalFields?\n) {\n  const newKeysSeen = new Set();\n  const fields: Array<{|\n    +oldKey: string,\n    +newKey: string,\n    +required: boolean,\n    +parser: Parser<mixed>,\n  |}> = [];\n  const fieldsets = [\n    {inputFields: requiredFields, required: true},\n    {inputFields: optionalFields || {}, required: false},\n  ];\n  for (const {inputFields, required} of fieldsets) {\n    for (const newKey of Object.keys(inputFields)) {\n      const parser = inputFields[newKey];\n      if (newKeysSeen.has(newKey)) {\n        throw new Error(\"duplicate key: \" + JSON.stringify(newKey));\n      }\n      newKeysSeen.add(newKey);\n      const oldKey = parser instanceof RenameFieldImpl ? parser.oldKey : newKey;\n      fields.push({oldKey, newKey, parser, required});\n    }\n  }\n  return new Parser((x) => {\n    if (typeof x !== \"object\" || Array.isArray(x) || x == null) {\n      return failure(\"expected object, got \" + typename(x));\n    }\n    const result = {};\n    for (const {oldKey, newKey, parser, required} of fields) {\n      const raw = x[oldKey];\n      if (raw === undefined) {\n        if (required) {\n          return failure(\"missing key: \" + JSON.stringify(oldKey));\n        } else {\n          continue;\n        }\n      }\n      const parsed = parser.parse(raw);\n      if (!parsed.ok) {\n        return failure(`key ${JSON.stringify(oldKey)}: ${parsed.err}`);\n      }\n      result[newKey] = parsed.value;\n    }\n    return success(result);\n  });\n}: any);\n\n// Create a parser for an object type all of whose fields are optional.\n// Shorthand for `object` with an empty first argument.\nexport const shape: PObjectShape = function shape(fields) {\n  return object({}, fields);\n};\n\n// Create a parser for a tuple: a fixed-length array with possibly\n// heterogeneous element types. For instance,\n//\n//    C.tuple([C.string, C.number, C.boolean])\n//\n// is a parser that accepts length-3 arrays whose first element is a\n// string, second element is a number, and third element is a boolean.\nexport function tuple<T: Iterable<Parser<mixed>>>(\n  parsers: T\n): Parser<$TupleMap<T, ExtractParserOutput>> {\n  const ps = Array.from(parsers);\n  return new Parser((x) => {\n    if (!Array.isArray(x)) {\n      return failure(\"expected array, got \" + typename(x));\n    }\n    if (x.length !== ps.length) {\n      return failure(`expected array of length ${ps.length}, got ${x.length}`);\n    }\n    const result = Array(ps.length);\n    for (let i = 0; i < result.length; i++) {\n      const raw = x[i];\n      const parser = ps[i];\n      const parsed = parser.parse(raw);\n      if (!parsed.ok) {\n        return failure(`index ${i}: ${parsed.err}`);\n      }\n      result[i] = parsed.value;\n    }\n    return success(result);\n  });\n}\n\n// Parser combinator for a dictionary whose keys are arbitrary strings.\ntype PDictStringKey = <V>(Parser<V>) => Parser<{|[string]: V|}>;\n// Parser combinator for a dictionary whose keys are a specified subtype\n// of string.\ntype PDictCustomKey = <V, K: string>(\n  Parser<V>,\n  Parser<K>\n) => Parser<{|[K]: V|}>;\ntype PDict = PDictStringKey & PDictCustomKey;\n\n// Create a parser for objects with arbitrary string keys and\n// homogeneous values. For instance, a set of package versions:\n//\n//    {\"better-sqlite3\": \"^7.0.0\", \"react\": \"^16.13.0\"}\n//\n// might be parsed by the following parser:\n//\n//    C.dict(C.fmap(C.string, (s) => SemVer.parse(s)))\n//\n// Objects may have any number of entries, including zero.\n//\n// An optional second argument may be passed to refine the keys to a\n// subtype of `string`, such as an opaque subtype (`NodeAddressT`) or a\n// string enum (`\"ONE\" | \"TWO\"`). Fails if the key parser gives the same\n// output for two distinct keys.\nexport const dict: PDict = (function dict<V, K: string>(\n  valueParser,\n  keyParser: Parser<K> = (string: any) // safe when called as `PDict`\n): Parser<{[K]: V}> {\n  return new Parser((x) => {\n    if (typeof x !== \"object\" || Array.isArray(x) || x == null) {\n      return failure(\"expected object, got \" + typename(x));\n    }\n    const rawKeys: Map<K, string> = new Map();\n    const result: {|[K]: V|} = ({}: any);\n    for (const rawKey of Object.keys(x)) {\n      const parsedKey = keyParser.parse(rawKey);\n      if (!parsedKey.ok) {\n        return failure(`key ${JSON.stringify(rawKey)}: ${parsedKey.err}`);\n      }\n      const oldRawKey = rawKeys.get(parsedKey.value);\n      if (oldRawKey != null) {\n        const s = JSON.stringify;\n        return failure(\n          `conflicting keys ${s(oldRawKey)} and ${s(rawKey)} ` +\n            `both have logical key ${s(parsedKey.value)}`\n        );\n      }\n      rawKeys.set(parsedKey.value, rawKey);\n      const rawValue = x[rawKey];\n      const parsedValue = valueParser.parse(rawValue);\n      if (!parsedValue.ok) {\n        return failure(`value ${JSON.stringify(rawKey)}: ${parsedValue.err}`);\n      }\n      result[parsedKey.value] = parsedValue.value;\n    }\n    return success(result);\n  });\n}: any);\n\nexport const delimited: (string) => Parser<string> = (delimiter) =>\n  fmap(string, (s) => s.split(delimiter)[0]);\n","// @flow\n\nimport stringify from \"json-stable-stringify\";\nimport deepFreeze from \"deep-freeze\";\n\nimport * as MapUtil from \"../util/map\";\nimport * as C from \"../util/combo\";\n\nexport interface AddressModule<Address: string> {\n  /**\n   * Assert at runtime that the provided address is actually a valid\n   * address of this kind, throwing an error if it is not. If `what` is\n   * provided, it will be included in the error message.\n   */\n  assertValid(address: Address, what?: string): void;\n\n  /**\n   * Assert at runtime that the provided array is a valid array of\n   * address parts (i.e., a valid input to `fromParts`), throwing an\n   * error if it is not. If `what` is provided, it will be included in\n   * the error message.\n   */\n  assertValidParts(parts: $ReadOnlyArray<string>, what?: string): void;\n\n  /**\n   * The empty address (the identity for `append`). Equivalent to\n   * `fromParts([])`.\n   */\n  empty: Address;\n\n  /**\n   * Convert an array of address parts to an address. The input must be\n   * a non-null array of non-null strings, none of which contains the\n   * NUL character. This is the inverse of `toParts`.\n   */\n  fromParts(parts: $ReadOnlyArray<string>): Address;\n\n  /**\n   * Convert an address to the array of parts that it represents. This\n   * is the inverse of `fromParts`.\n   */\n  toParts(address: Address): string[];\n\n  /**\n   * Pretty-print an address. The result will be human-readable and\n   * contain only printable characters. Clients should not make any\n   * assumptions about the format.\n   */\n  toString(address: Address): string;\n\n  /**\n   * Construct an address by extending the given address with the given\n   * additional components. This function is equivalent to:\n   *\n   *     return fromParts([...toParts(address), ...components]);\n   *\n   * but may be more efficient.\n   */\n  append(address: Address, ...components: string[]): Address;\n\n  /**\n   * Test whether the given address has the given prefix. This function\n   * is equivalent to:\n   *\n   *     const prefixParts = toParts(prefix);\n   *     const addressParts = toParts(address);\n   *     const actualPrefix = addressParts.slice(0, prefixParts.length);\n   *     return deepEqual(prefix, actualPrefix);\n   *\n   * (where `deepEqual` checks value equality on arrays of strings), but\n   * may be more efficient.\n   *\n   * Note that this is an array-wise prefix, not a string-wise-prefix:\n   * e.g., `toParts([\"ban\"])` is not a prefix of `toParts([\"banana\"])`.\n   */\n  hasPrefix(address: Address, prefix: Address): boolean;\n\n  /**\n   * Interpret the provided string as an Address.\n   *\n   * Addresses are natively stored as strings. This method verifies\n   * that the provided \"raw\" address is actually an Address, so that\n   * you can have a type-level assurance that a string is an Address.\n   *\n   * This is useful if e.g. you are loading serialized Addresses.\n   *\n   * Throws an error if the string is not a valid Address.\n   */\n  fromRaw(raw: string): Address;\n\n  /**\n   * A parser for Addresses.\n   *\n   * Convenience wrapper `fromRaw`.\n   */\n  parser: C.Parser<Address>;\n}\n\nexport type Options = {|\n  /**\n   * The name of this kind of address, like `NodeAddress`.\n   */\n  +name: string,\n\n  /**\n   * A unique nonce for the runtime representation of this address. For\n   * compact serialization, this should be short; a single letter\n   * suffices.\n   */\n  +nonce: string,\n\n  /**\n   * For the purposes of nice error messages: in response to an address\n   * of the wrong kind, we can inform the user what kind of address they\n   * passed (e.g., \"expected NodeAddress, got EdgeAddress\"). This\n   * dictionary maps another address module's nonce to the name of that\n   * module.\n   */\n  +otherNonces?: Map<string, string>,\n|};\n\nexport function makeAddressModule(options: Options): AddressModule<string> {\n  type Address = string; // for readability and interface consistency\n  const {name, nonce} = options;\n  const otherNonces = new Map(options.otherNonces || new Map());\n\n  const separator = \"\\0\";\n  if (nonce.indexOf(separator) !== -1) {\n    throw new Error(`invalid nonce (contains NUL): ${stringify(nonce)}`);\n  }\n\n  const nonceWithSeparator = nonce + separator;\n  const otherNoncesWithSeparators = MapUtil.mapKeys(\n    otherNonces,\n    (otherNonce) => {\n      if (otherNonce === nonce) {\n        throw new Error(\n          `primary nonce listed as otherNonce: ${stringify(nonce)}`\n        );\n      }\n      if (otherNonce.indexOf(separator) !== -1) {\n        throw new Error(\n          `invalid otherNonce (contains NUL): ${stringify(otherNonce)}`\n        );\n      }\n      return otherNonce + separator;\n    }\n  );\n\n  function assertValid(address: Address, what?: string): void {\n    // istanbul ignore if\n    if (process.env.NODE_ENV !== \"test\") {\n      // Catching invalid addresses in test code should be sufficient\n      return;\n    }\n    const prefix = what == null ? \"\" : `${what}: `;\n    if (address == null) {\n      throw new Error(prefix + `expected ${name}, got: ${String(address)}`);\n    }\n    if (!address.endsWith(separator)) {\n      throw new Error(prefix + `expected ${name}, got: ${stringify(address)}`);\n    }\n    if (!address.startsWith(nonceWithSeparator)) {\n      for (const [\n        otherNonceWithSeparator,\n        otherName,\n      ] of otherNoncesWithSeparators) {\n        if (address.startsWith(otherNonceWithSeparator)) {\n          throw new Error(\n            prefix + `expected ${name}, got ${otherName}: ${stringify(address)}`\n          );\n        }\n      }\n      throw new Error(prefix + `expected ${name}, got: ${stringify(address)}`);\n    }\n  }\n\n  function partsString(parts: $ReadOnlyArray<string>): string {\n    // This is needed to properly print arrays containing `undefined`.\n    return \"[\" + parts.map((p) => String(stringify(p))).join(\",\") + \"]\";\n  }\n\n  function assertValidParts(\n    parts: $ReadOnlyArray<string>,\n    what?: string\n  ): void {\n    // istanbul ignore if\n    if (process.env.NODE_ENV !== \"test\") {\n      // Catching invalid parts in test code should be sufficient\n      return;\n    }\n    const prefix = what == null ? \"\" : `${what}: `;\n    if (parts == null) {\n      throw new Error(\n        prefix + `expected array of parts, got: ${String(parts)}`\n      );\n    }\n    parts.forEach((s: string) => {\n      if (s == null) {\n        throw new Error(\n          prefix +\n            `expected array of parts, got ${String(s)} in: ${partsString(\n              parts\n            )}`\n        );\n      }\n      if (s.indexOf(separator) !== -1) {\n        const where = `${stringify(s)} in ${partsString(parts)}`;\n        throw new Error(prefix + `part contains NUL character: ${where}`);\n      }\n    });\n  }\n\n  function nullDelimited(components: $ReadOnlyArray<string>): string {\n    return [...components, \"\"].join(separator);\n  }\n\n  function fromParts(parts: $ReadOnlyArray<string>): Address {\n    assertValidParts(parts);\n    return nonce + separator + nullDelimited(parts);\n  }\n\n  const empty = fromParts([]);\n\n  function toParts(address: Address): string[] {\n    assertValid(address);\n    const parts = address.split(separator);\n    return parts.slice(1, parts.length - 1);\n  }\n\n  function toString(address: Address): string {\n    const parts = toParts(address);\n    return `${name}${stringify(parts)}`;\n  }\n\n  function append(address: Address, ...parts: string[]): Address {\n    assertValid(address);\n    assertValidParts(parts);\n    return address + nullDelimited(parts);\n  }\n\n  function hasPrefix(address: Address, prefix: Address): boolean {\n    assertValid(address, \"address\");\n    assertValid(prefix, \"prefix\");\n    return address.startsWith(prefix);\n  }\n\n  function fromRaw(address: string): Address {\n    if (!address.endsWith(separator)) {\n      throw new Error(\n        `address does not end with separator: ${stringify(address)}`\n      );\n    }\n    if (!address.startsWith(nonceWithSeparator)) {\n      for (const [\n        otherNonceWithSeparator,\n        otherName,\n      ] of otherNoncesWithSeparators) {\n        if (address.startsWith(otherNonceWithSeparator)) {\n          throw new Error(\n            `expected ${name}, got ${otherName}: ${stringify(address)}`\n          );\n        }\n      }\n      throw new Error(`expected ${name}, got: ${stringify(address)}`);\n    }\n    return address;\n  }\n\n  const parser: C.Parser<Address> = C.fmap(C.string, fromRaw);\n\n  const result = {\n    assertValid,\n    assertValidParts,\n    empty,\n    fromParts,\n    toParts,\n    toString,\n    append,\n    hasPrefix,\n    fromRaw,\n    parser,\n  };\n  return deepFreeze(result);\n}\n","// @flow\n\nimport * as C from \"./combo\";\nexport type Compatible<T> = [CompatInfo, T];\ntype CompatInfo = {|\n  +type: string,\n  +version: string,\n|};\n\nexport function toCompat<T>(compatInfo: CompatInfo, obj: T): Compatible<T> {\n  return [compatInfo, obj];\n}\n\n/**\n * Load an object from compatibilized state created by `toCompat`.\n * The object has an expected type and version, and may optionally have\n * handler functions for transforming previous versions into a canonical state.\n * If a handler is present for the current version, it will be applied.\n * Throws an error if the compatibilized object is the wrong type, or if its version\n * is not current and there was no handler for its version.\n */\nexport function fromCompat<T>(\n  expectedCompatInfo: CompatInfo,\n  obj: Compatible<any>,\n  handlers: ?{[version: string]: (any) => T}\n): T {\n  if (!Array.isArray(obj) || obj.length !== 2) {\n    throw new Error(\n      \"Tried to load object that didn't have compatibility defined\"\n    );\n  }\n  const {type, version} = obj[0];\n  let result = obj[1];\n\n  const {type: expectedType, version: expectedVersion} = expectedCompatInfo;\n  if (type !== expectedType) {\n    throw new Error(`Expected type to be ${expectedType} but got ${type}`);\n  }\n\n  if (handlers != null && handlers[version] != null) {\n    result = handlers[version](result);\n  } else if (version !== expectedVersion) {\n    throw new Error(`${type}: tried to load unsupported version ${version}`);\n  }\n  return result;\n}\n\nconst headerParser = C.object({type: C.string, version: C.string});\nconst wrappedParser = C.tuple([headerParser, C.raw]);\n\nexport function compatibleParser<T>(\n  expectedType: string,\n  handlers: {+[version: string]: C.Parser<T>}\n): C.Parser<T> {\n  return new C.Parser((x) => {\n    const wrapResult = wrappedParser.parse(x);\n    if (!wrapResult.ok) {\n      return {ok: false, err: `unable to unwrap compatible: ${wrapResult.err}`};\n    }\n    const [{type, version}, raw] = wrapResult.value;\n    if (type !== expectedType) {\n      return {\n        ok: false,\n        err: `expected type \"${expectedType}\" but got \"${type}\"`,\n      };\n    }\n    if (!Object.prototype.hasOwnProperty.call(handlers, version)) {\n      return {ok: false, err: `no \"${type}/${version}\" handler`};\n    }\n    const parseResult = handlers[version].parse(raw);\n    if (parseResult.ok) {\n      return parseResult;\n    } else {\n      return {ok: false, err: `${type}/${version}: ${parseResult.err}`};\n    }\n  });\n}\n","// @flow\n\n/**\n * Utilities for working with nullable types: `?T = T | null | void`.\n *\n * These functions use the native runtime representation, as opposed to\n * creating an `Optional<T>` wrapper class. This ensures that they have\n * minimal runtime cost (just a function call), and that they are\n * trivially interoperable with other code.\n *\n * When a value of type `?T` is `null` or `undefined`, we say that it is\n * _absent_. Otherwise, it is _present_.\n *\n * Some functions that typically appear in such libraries are not\n * needed:\n *\n *   - `join` (`??T => ?T`) can be implemented as the identity function,\n *     because the Flow types `??T` and `?T` are equivalent;\n *   - `flatMap` (`?T => (T => ?U) => ?U`) can be implemented simply as\n *     `map`, again because `??T` and `?T` are equivalent;\n *   - `first` (`?T => ?T => ?T`) can be implemented simply as `orElse`,\n *     again because `??T` and `?T` are equivalent;\n *   - `isPresent` (`?T => boolean`) doesn't provide much value over the\n *     equivalent abstract disequality check;\n *   - constructors like `empty` (`() => ?T`) and `of` (`T => ?T`) are\n *     entirely spurious.\n *\n * Other functions could reasonably be implemented, but have been left\n * out because they have rarely been needed:\n *\n *   - `filter` (`?T => (T => boolean) => ?T`);\n *   - `forEach` (`?T => (T => void) => void`);\n *   - `orElseGet` (`?T => (() => T) => T`), which is useful in the case\n *      where constructing the default value is expensive.\n *\n * (Of these three, `orElseGet` would probably be the most useful for\n * our existing codebase.)\n */\n\n/**\n * Apply the given function inside the nullable. If the input is absent,\n * then it will be returned unchanged. Otherwise, the given function\n * will be applied.\n */\nexport function map<T, U>(x: ?T, f: (T) => U): ?U {\n  return x != null ? f(x) : x;\n}\n\n/**\n * Extract the value from a nullable. If the input is present, it will\n * be returned. Otherwise, an error will be thrown with the provided\n * message (defaulting to the string representation of the absent input).\n */\nexport function get<T>(x: ?T, errorMessage?: string): T {\n  if (x == null) {\n    throw new Error(errorMessage != null ? errorMessage : String(x));\n  } else {\n    return x;\n  }\n}\n\n/**\n * Extract the value from a nullable. If the input is present, it will\n * be returned. Otherwise, an error will be thrown, with message given\n * by the provided function.\n */\nexport function orThrow<T>(x: ?T, getErrorMessage: () => string): T {\n  if (x == null) {\n    throw new Error(getErrorMessage());\n  } else {\n    return x;\n  }\n}\n\n/**\n * Extract the value from a nullable, using the provided default value\n * in case the input is absent.\n */\nexport function orElse<T>(x: ?T, defaultValue: T): T {\n  return x != null ? x : defaultValue;\n}\n\n/**\n * Filter nulls and undefined out of an array, returning a new array.\n *\n * The functionality is easy to implement without a util method (just call\n * `filter`); however Flow doesn't infer the type of the output array based on\n * the callback that was passed to filter. This method basically wraps filter\n * in a type-aware way.\n */\nexport function filterList<T>(xs: $ReadOnlyArray<?T>): T[] {\n  // A type-safe way to implement this would be:\n  /*:: (xs.flatMap((x) => x == null ? [] : [x]): T[]); */\n  // For performance, we instead take an unsafe route.\n  return ((xs.filter((x) => x != null): any): T[]);\n}\n","// @flow\n\nimport deepEqual from \"lodash.isequal\";\nimport deepFreeze from \"deep-freeze\";\n\nimport {makeAddressModule, type AddressModule} from \"./address\";\nimport {toCompat, fromCompat, type Compatible} from \"../util/compat\";\nimport * as NullUtil from \"../util/null\";\nimport {type TimestampMs} from \"../util/timestamp\";\n\n/**\n * This module contains the Graph, which is one of the most fundamental pieces\n * of SourceCred. SourceCred uses this graph to model all of the contributions\n * that make up a project, and the relationships between those contributions.\n *\n * If you aren't familiar with computer science graphs, now would be a good\n * time to refresh. See [this StackOverflow answer][1] for an introduction, and\n * [Wikipedia][2] for a more thorough overview. This Graph is used by\n * SourceCred as a \"Contribution Graph\", where every node is a contribution or\n * contributor (e.g. a pull request, or a GitHub user identity) and every edge\n * represents a connection between contributions or contributors (e.g. a pull\n * request contains a comment, or a comment is authored by a user).\n *\n * [1]: https://softwareengineering.stackexchange.com/questions/168058/what-are-graphs-in-laymens-terms#168067\n * [2]: https://en.wikipedia.org/wiki/Graph_(abstract_data_type)\n *\n * The Graph serves a simple function: it keeps track of which Nodes exist, and\n * what Edges join those nodes to each other. Nodes and Edges are both identified\n * by Addresses; specifically, `NodeAddressT`s and `EdgeAddressT`s.\n *\n * In both cases, addresses are modeled as arrays of strings. For example,\n * you might want to give an address to your favorite node. You can do so as\n * follows:\n *\n * const myAddress: NodeAddressT = NodeAddress.fromParts([\"my\", \"favorite\"])\n *\n * Edge Addresses are quite similar, except you use the EdgeAddress module.\n *\n * We model addresses as arrays of strings so that plugins can apply\n * hierarchical namespacing for the address. In general, for any address, the\n * first piece should be the name of the organization that owns the plugin, and\n * the second piece should be the name of the plugin. Pieces thereafter are\n * namespaced by the plugin's internal logic. For example, SourceCred has a\n * Git plugin, and that plugin produces addresses like\n * [\"sourcecred\", \"git\", \"commit\", \"9cba0e9e212a287ce26e8d7c2d273e1025c9f9bf\"].\n *\n * This enables \"prefix matching\" for finding only certain types of nodes. For\n * example, if we wanted to find every Git commit in the graph, we\n * could use the following code:\n *\n * const commitPrefix = NodeAddress.fromParts([\"sourcecred\", \"git\", \"commit\"]);\n * const commitNodes = graph.nodes({prefix: commitPrefix});\n *\n * The graph represents nodes as the `Node` data type, which includes an\n * address (NodeAddressT) as well as a few other fields that are needed for\n * calculating and displaying cred. The Graph is intended to be a lightweight\n * data structure, so only data directly needed for cred analysis is included.\n * If there's other data you want to store (e.g. the full text of posts that\n * are tracked in the graph), you can use the node address as a key for a\n * separate database.\n *\n * Edges are represented by `Edge` objects. They have `src` and `dst` fields.\n * These fields represent the \"source\" of the edge and the \"destination\" of the\n * edge respectively, and both fields contain `NodeAddressT`s. The edge also\n * has its own address, which is an `EdgeAddressT`.\n *\n * Graphs are allowed to contain Edges whose `src` or `dst` are not present.\n * Such edges are called 'Dangling Edges'. An edge may convert from dangling to\n * non-dangling (if it is added before its src or dst), and it may convert from\n * non-dangling to dangling (if its src or dst are removed).\n *\n * Supporting dangling edges is important, because it means that we can require\n * metadata be present for a Node (e.g. its creation timestamp), and still\n * allow graph creators that do not know a node's metadata to create references\n * to it. (Of course, they still need to know the node's address).\n *\n * Here's a toy example of creating a graph:\n *\n * ```js\n * const prAddress = NodeAddress.fromParts([\"pull_request\", \"1\"]);\n * const prDescription = \"My Fancy Pull Request\"\n * const pr: Node = {address: prAddress, description: prDescription, timestampMs: +Date.now()}\n * const myAddress = NodeAddress.fromParts([\"user\", \"decentralion\"]);\n * const myDescription = \"@decentralion\"\n * const me: Node = {addess: myAddress, description: myDescription, timestampMs: null}\n * const authoredAddress = EdgeAddress.fromParts([\"authored\", \"pull_request\", \"1\"]);\n * const edge = {src: me, dst: pr, address: authoredAddress, timestampMs: +Date.now()};\n *\n * const g = new Graph();\n * g.addNode(pr);\n * g.addNode(me);\n * g.addEdge(edge);\n * ```\n *\n * Graph has a number of accessor methods:\n * - `hasNode` to check if a node address is in the Graph\n * - `node` to retrieve a node by its address\n * - `nodes` to iterate over the nodes in the graph\n * - `hasEdge` to check if an edge address is in the Graph\n * - `isDanglingEdge` to check if an edge is dangling\n * - `edge` to retrieve an edge by its address\n * - `edges` to iterate over the edges in the graph\n * - `neighbors` to find all the edges and nodes adjacent to a node\n *    (also supports filtering by direction, by node prefix, or edge prefix)\n *\n * The Graph also has a few other convenience methods, like toJSON/fromJSON\n * for serialization, and `Graph.merge` for combining multiple graphs.\n */\nexport opaque type NodeAddressT: string = string;\nexport opaque type EdgeAddressT: string = string;\nexport const NodeAddress: AddressModule<NodeAddressT> = (makeAddressModule({\n  name: \"NodeAddress\",\n  nonce: \"N\",\n  otherNonces: new Map().set(\"E\", \"EdgeAddress\"),\n}): AddressModule<string>);\nexport const EdgeAddress: AddressModule<EdgeAddressT> = (makeAddressModule({\n  name: \"EdgeAddress\",\n  nonce: \"E\",\n  otherNonces: new Map().set(\"N\", \"NodeAddress\"),\n}): AddressModule<string>);\n\n/**\n * Represents a node in the graph.\n */\nexport type Node = {|\n  +address: NodeAddressT,\n  // Brief (ideally oneline) description for the node.\n  // Markdown is supported.\n  +description: string,\n  // When this node was created.\n  // Should be null for a \"timeless\" node, where we don't\n  // want to model that node as having been created at any particular\n  // point in time. User nodes are a good example of this.\n  +timestampMs: TimestampMs | null,\n|};\n\n/**\n * An edge between two nodes.\n */\nexport type Edge = {|\n  +address: EdgeAddressT,\n  +src: NodeAddressT,\n  +dst: NodeAddressT,\n  +timestampMs: TimestampMs,\n|};\n\nconst COMPAT_INFO = {type: \"sourcecred/graph\", version: \"0.8.0\"};\n\nexport type Neighbor = {|+node: Node, +edge: Edge|};\n\nexport opaque type DirectionT = symbol;\nexport const Direction: {|\n  +IN: DirectionT,\n  +OUT: DirectionT,\n  +ANY: DirectionT,\n|} = deepFreeze({\n  IN: Symbol(\"IN\"),\n  OUT: Symbol(\"OUT\"),\n  ANY: Symbol(\"ANY\"),\n});\n\nexport type NeighborsOptions = {|\n  +direction: DirectionT,\n  +nodePrefix: NodeAddressT,\n  +edgePrefix: EdgeAddressT,\n|};\n\nexport type EdgesOptions = {|\n  // An edge address prefix. Only show edges whose addresses match this prefix.\n  +addressPrefix?: EdgeAddressT,\n  // A node address prefix. Only show edges whose src matches\n  // this prefix.\n  +srcPrefix?: NodeAddressT,\n  // A node address prefix. Only show edges whose dst matches\n  // this prefix.\n  +dstPrefix?: NodeAddressT,\n  // Determines whether dangling edges should be included in the results.\n  +showDangling: boolean,\n|};\n\ntype AddressJSON = string[]; // Result of calling {Node,Edge}Address.toParts\ntype Integer = number;\ntype IndexedNodeJSON = {|\n  +index: Integer,\n  +description: string,\n  +timestampMs: TimestampMs | null,\n|};\ntype IndexedEdgeJSON = {|\n  +address: AddressJSON,\n  +srcIndex: Integer,\n  +dstIndex: Integer,\n  +timestampMs: TimestampMs,\n|};\n\nexport type GraphJSON = Compatible<{|\n  // A node address can be present because it corresponds to a node, or because\n  // it is referenced by a dangling edge.\n  +sortedNodeAddresses: AddressJSON[],\n  +nodes: IndexedNodeJSON[],\n  +edges: IndexedEdgeJSON[],\n|}>;\n\nexport type ModificationCount = number;\n\n// Internal-only type used to cache the sorted node and edge address order.\n// The modification count is used as the cache key.\ntype CachedOrder = {|\n  +nodeOrder: $ReadOnlyArray<NodeAddressT>,\n  +edgeOrder: $ReadOnlyArray<EdgeAddressT>,\n  +modificationCount: number,\n|};\n\n/**\n * Specifies how to contract a graph, collapsing several old nodes\n * into a single new node, and re-writing edges for consistency.\n */\nexport type NodeContraction = {|\n  +old: $ReadOnlyArray<NodeAddressT>,\n  +replacement: Node,\n|};\n\nexport class Graph {\n  _nodes: Map<NodeAddressT, Node>;\n  _edges: Map<EdgeAddressT, Edge>;\n  // Map every node address present in the graph to its inEdges (edges for\n  // which it is a dst) and outEdges (edges for which it is a src)\n  _incidentEdges: Map<NodeAddressT, {|+inEdges: Edge[], +outEdges: Edge[]|}>;\n\n  // Incremented each time that any change is made to the graph. Used to\n  // check for comodification and to avoid needlessly checking\n  // invariants.\n  _modificationCount: ModificationCount;\n  _cachedOrder: CachedOrder;\n  _invariantsLastChecked: {|+when: ModificationCount, +failure: ?string|};\n\n  constructor(): void {\n    this._modificationCount = 0;\n    this._invariantsLastChecked = {\n      when: -1,\n      failure: \"Invariants never checked\",\n    };\n    this._cachedOrder = {\n      nodeOrder: [],\n      edgeOrder: [],\n      modificationCount: 0,\n    };\n    this._nodes = new Map();\n    this._edges = new Map();\n    this._incidentEdges = new Map();\n    this._maybeCheckInvariants();\n  }\n\n  _checkForComodification(since: ModificationCount) {\n    // TODO(perf): Consider eliding this in production.\n    const now = this._modificationCount;\n    if (now === since) {\n      this._maybeCheckInvariants();\n      return;\n    }\n    if (now > since) {\n      throw new Error(\"Concurrent modification detected\");\n    }\n    if (now < since) {\n      throw new Error(\n        \"Invariant violation: expected modification count in the future\"\n      );\n    }\n  }\n\n  _markModification() {\n    // TODO(perf): Consider eliding this in production.\n    if (this._modificationCount >= Number.MAX_SAFE_INTEGER) {\n      throw new Error(\n        `Graph cannot be modified more than ${this._modificationCount} times.`\n      );\n    }\n    this._modificationCount++;\n    this._maybeCheckInvariants();\n  }\n\n  /**\n   * A node address is 'referenced' if it is either present in the graph, or is\n   * the src or dst of some edge.\n   *\n   * Referenced nodes always have an entry in this._incidentEdges (regardless\n   * of whether they are incident to any edges).\n   *\n   * This method ensures that a given node address has a reference.\n   */\n  _reference(n: NodeAddressT) {\n    if (!this._incidentEdges.has(n)) {\n      this._incidentEdges.set(n, {inEdges: [], outEdges: []});\n    }\n  }\n\n  /**\n   * A node stops being referenced as soon as it is both not in the graph, and is\n   * not incident to any edge. This method must be called after any operation which\n   * might cause a node address to no longer be referenced, so that the node can\n   * be unreferenced if appropriate.\n   */\n  _unreference(n: NodeAddressT) {\n    const incidence = this._incidentEdges.get(n);\n    if (incidence != null) {\n      const {inEdges, outEdges} = incidence;\n      if (\n        !this._nodes.has(n) &&\n        inEdges.length === 0 &&\n        outEdges.length === 0\n      ) {\n        this._incidentEdges.delete(n);\n      }\n    }\n  }\n\n  _getOrder(): CachedOrder {\n    const modificationCount = this._modificationCount;\n    if (this._cachedOrder.modificationCount !== modificationCount) {\n      const edgeOrder = Array.from(this._edges.keys()).sort();\n      const nodeOrder = Array.from(this._nodes.keys()).sort();\n      this._cachedOrder = {nodeOrder, edgeOrder, modificationCount};\n    }\n    return this._cachedOrder;\n  }\n\n  /**\n   * Returns how many times the graph has been modified.\n   *\n   * This value is exposed so that users of Graph can cache computations over\n   * the graph with confidence, knowing that they will be able to check the\n   * modification count to know when their cache is potentially invalid.\n   *\n   * This value may increase any time the graph is potentially modified, even\n   * if no modification actually occurs; for example, if a client calls\n   * `addNode`, the modification count may increase even if the added node was\n   * already present in the graph.\n   *\n   * This value is not serialized, and is ignored when checking equality, i.e.\n   * two graphs may be semantically equal even when they have different\n   * modification counts.\n   */\n  modificationCount(): ModificationCount {\n    return this._modificationCount;\n  }\n\n  /**\n   * Adds a new node to the graph.\n   *\n   * If the node already exists in the graph, no action is taken and no error\n   * is thrown. (This operation is idempotent).\n   *\n   * Returns `this` for chaining.\n   */\n  addNode(node: Node): this {\n    const {address} = node;\n    NodeAddress.assertValid(address);\n    this._reference(address);\n    const existingNode = this._nodes.get(address);\n    if (existingNode == null) {\n      this._nodes.set(address, node);\n    } else {\n      if (!deepEqual(node, existingNode)) {\n        const strNode = nodeToString(node);\n        const strExisting = nodeToString(existingNode);\n        throw new Error(\n          `conflict between new node ${strNode} and existing ${strExisting}`\n        );\n      }\n    }\n    this._markModification();\n    this._maybeCheckInvariants();\n    return this;\n  }\n\n  /**\n   * Remove a node from the graph.\n   *\n   * If the node does not exist in the graph, no action is taken and no error\n   * is thrown. (This operation is idempotent.)\n   *\n   * Removing a node which is incident to some edges is allowed; such edges will\n   * become dangling edges. See the discussion of 'Dangling Edges' in the module docstring\n   * for details.\n   *\n   * Returns `this` for chaining.\n   */\n  removeNode(a: NodeAddressT): this {\n    NodeAddress.assertValid(a);\n    this._nodes.delete(a);\n    this._unreference(a);\n    this._markModification();\n    this._maybeCheckInvariants();\n    return this;\n  }\n\n  /**\n   * Test whether there exists a Node corresponding to the given NodeAddress.\n   *\n   * This will return false for node addresses which are referenced by some\n   * edge, but not actually present in the graph.\n   */\n  hasNode(a: NodeAddressT): boolean {\n    NodeAddress.assertValid(a);\n    const result = this._nodes.has(a);\n    this._maybeCheckInvariants();\n    return result;\n  }\n\n  /**\n   * Returns the Node matching a given NodeAddressT, if such a node exists,\n   * or undefined otherwise.\n   */\n  node(address: NodeAddressT): ?Node {\n    NodeAddress.assertValid(address);\n    const result = this._nodes.get(address);\n    this._maybeCheckInvariants();\n    return result;\n  }\n\n  /**\n   * Returns an iterator over all of the nodes in the graph.\n   *\n   * Optionally, the caller can provide a node prefix. If\n   * provided, the iterator will only contain nodes matching that\n   * prefix. See semantics of [Address.hasPrefix][1] for details.\n   *\n   * Clients must not modify the graph during iteration. If they do so, an\n   * error may be thrown at the iteration call site.\n   *\n   * Nodes are yielded in address-sorted order.\n   *\n   * [1]: https://github.com/sourcecred/sourcecred/blob/7c7fa2d83d4fd5ba38efb2b2f4e0244235ac1312/src/core/address.js#L74\n   */\n  nodes(options?: {|+prefix: NodeAddressT|}): Iterator<Node> {\n    const prefix = options != null ? options.prefix : NodeAddress.empty;\n    if (prefix == null) {\n      throw new Error(`Invalid prefix: ${String(prefix)}`);\n    }\n    const result = this._nodesIterator(this._modificationCount, prefix);\n    this._maybeCheckInvariants();\n    return result;\n  }\n\n  *_nodesIterator(\n    initialModificationCount: ModificationCount,\n    prefix: NodeAddressT\n  ): Iterator<Node> {\n    for (const address of this._getOrder().nodeOrder) {\n      if (NodeAddress.hasPrefix(address, prefix)) {\n        const node = NullUtil.get(this._nodes.get(address));\n        this._checkForComodification(initialModificationCount);\n        this._maybeCheckInvariants();\n        yield node;\n      }\n    }\n    this._checkForComodification(initialModificationCount);\n    this._maybeCheckInvariants();\n  }\n\n  /**\n   * Add an edge to the graph.\n   *\n   * It is permitted to add an edge if its src or dst are not in the graph. See\n   * the discussion of 'Dangling Edges' in the module docstring for semantics.\n   *\n   * It is an error to add an edge if a distinct edge with the same address\n   * already exists in the graph (i.e., if the source or destination are\n   * different).\n   *\n   * Adding an edge that already exists to the graph is a no-op. (This\n   * operation is idempotent.)\n   *\n   * Returns `this` for chaining.\n   */\n  addEdge(edge: Edge): this {\n    NodeAddress.assertValid(edge.src, \"edge.src\");\n    NodeAddress.assertValid(edge.dst, \"edge.dst\");\n    EdgeAddress.assertValid(edge.address, \"edge.address\");\n\n    this._reference(edge.src);\n    this._reference(edge.dst);\n    const existingEdge = this._edges.get(edge.address);\n    if (existingEdge != null) {\n      if (\n        existingEdge.src !== edge.src ||\n        existingEdge.dst !== edge.dst ||\n        existingEdge.address !== edge.address ||\n        existingEdge.timestampMs !== edge.timestampMs\n      ) {\n        const strEdge = edgeToString(edge);\n        const strExisting = edgeToString(existingEdge);\n        throw new Error(\n          `conflict between new edge ${strEdge} and existing ${strExisting}`\n        );\n      }\n    } else {\n      this._edges.set(edge.address, edge);\n      const {inEdges} = NullUtil.get(this._incidentEdges.get(edge.dst));\n      const {outEdges} = NullUtil.get(this._incidentEdges.get(edge.src));\n      inEdges.push(edge);\n      outEdges.push(edge);\n    }\n    this._edges.set(edge.address, edge);\n    this._markModification();\n    this._maybeCheckInvariants();\n    return this;\n  }\n\n  /**\n   * Remove an edge from the graph.\n   *\n   * Calling removeEdge on an address that does not correspond to any edge in\n   * the graph is a no-op. (This method is idempotent.)\n   *\n   * Returns `this` for chaining.\n   */\n  removeEdge(address: EdgeAddressT): this {\n    EdgeAddress.assertValid(address);\n    const edge = this._edges.get(address);\n    if (edge != null) {\n      this._edges.delete(address);\n      const {inEdges} = NullUtil.get(this._incidentEdges.get(edge.dst));\n      const {outEdges} = NullUtil.get(this._incidentEdges.get(edge.src));\n      // TODO(perf): This is linear in the degree of the endpoints of the\n      // edge. Consider storing in non-list form (e.g., `inEdges` and\n      // `outEdges` fields in `_incidentEdges` could be `Set<EdgeAddressT>`).\n      [inEdges, outEdges].forEach((edges) => {\n        const index = edges.findIndex((edge) => edge.address === address);\n        if (index === -1) {\n          const strAddress = EdgeAddress.toString(address);\n          throw new Error(\n            `Invariant violation when removing edge@${strAddress}`\n          );\n        }\n        edges.splice(index, 1);\n      });\n      this._unreference(edge.src);\n      this._unreference(edge.dst);\n    }\n    this._markModification();\n    this._maybeCheckInvariants();\n    return this;\n  }\n\n  /**\n   * Test whether the graph contains an edge with the given address.\n   */\n  hasEdge(address: EdgeAddressT): boolean {\n    EdgeAddress.assertValid(address);\n    const result = this._edges.has(address);\n    this._maybeCheckInvariants();\n    return result;\n  }\n\n  /**\n   * Test whether there is a dangling edge at the given address.\n   *\n   * Returns true if the edge is present, and is dangling.\n   * Returns false if the edge is present, and is not dangling.\n   * Returns undefined if the edge is not present.\n   *\n   * See the module docstring for more details on dangling edges.\n   */\n  isDanglingEdge(address: EdgeAddressT): boolean | typeof undefined {\n    EdgeAddress.assertValid(address);\n    const edge = this.edge(address);\n    let result: boolean | typeof undefined;\n    if (edge != null) {\n      const {src, dst} = edge;\n      result = !this.hasNode(src) || !this.hasNode(dst);\n    }\n    this._maybeCheckInvariants();\n    return result;\n  }\n\n  /**\n   * Returns the Edge matching a given EdgeAddressT, if such an edge exists, or\n   * null otherwise.\n   */\n  edge(address: EdgeAddressT): ?Edge {\n    EdgeAddress.assertValid(address);\n    const result = this._edges.get(address);\n    this._maybeCheckInvariants();\n    return result;\n  }\n\n  /**\n   * Returns an iterator over edges in the graph, optionally filtered by edge\n   * address prefix, source address prefix, and/or destination address prefix.\n   *\n   * The caller must pass an options object with a boolean field `showDangling`,\n   * which determines whether dangling edges will be included in the results.\n   * The caller may also pass fields `addressPrefix`, `srcPrefix`, and `dstPrefix`\n   * to perform prefix-based address filtering of edges that are returned.\n   * (See the module docstring for more context on dangling edges.)\n   *\n   * Suppose that you want to find every edge that represents authorship by a\n   * user. If all authorship edges have the `AUTHORS_EDGE_PREFIX` prefix, and\n   * all user nodes have the `USER_NODE_PREFIX` prefix, then you could call:\n   *\n   * graph.edges({\n   *  showDangling: true,  // or false, irrelevant for this example\n   *  addressPrefix: AUTHORS_EDGE_PREFIX,\n   *  srcPrefix: USER_NODE_PREFIX,\n   * });\n   *\n   * In this example, as `dstPrefix` was left unset, it will default to\n   * `NodeAddress.empty`, which is a prefix of every node address.\n   *\n   * Clients must not modify the graph during iteration. If they do so, an\n   * error may be thrown at the iteration call site.\n   *\n   * The edges are yielded in sorted address order.\n   */\n  edges(options: EdgesOptions): Iterator<Edge> {\n    if (options == null) {\n      throw new Error(\"Options are required for Graph.edges\");\n    }\n    const {showDangling} = options;\n    const addressPrefix = NullUtil.orElse(\n      options.addressPrefix,\n      EdgeAddress.empty\n    );\n    const srcPrefix = NullUtil.orElse(options.srcPrefix, NodeAddress.empty);\n    const dstPrefix = NullUtil.orElse(options.dstPrefix, NodeAddress.empty);\n\n    const result = this._edgesIterator(\n      this._modificationCount,\n      showDangling,\n      addressPrefix,\n      srcPrefix,\n      dstPrefix\n    );\n    this._maybeCheckInvariants();\n    return result;\n  }\n\n  *_edgesIterator(\n    initialModificationCount: ModificationCount,\n    showDangling: boolean,\n    addressPrefix: EdgeAddressT,\n    srcPrefix: NodeAddressT,\n    dstPrefix: NodeAddressT\n  ): Iterator<Edge> {\n    for (const address of this._getOrder().edgeOrder) {\n      const edge = NullUtil.get(this._edges.get(address));\n      if (\n        (showDangling || this.isDanglingEdge(edge.address) === false) &&\n        EdgeAddress.hasPrefix(edge.address, addressPrefix) &&\n        NodeAddress.hasPrefix(edge.src, srcPrefix) &&\n        NodeAddress.hasPrefix(edge.dst, dstPrefix)\n      ) {\n        this._checkForComodification(initialModificationCount);\n        this._maybeCheckInvariants();\n        yield edge;\n      }\n    }\n    this._checkForComodification(initialModificationCount);\n    this._maybeCheckInvariants();\n  }\n\n  /**\n   * Find the `Neighbors` that are incident to a chosen root node.\n   *\n   * A `Neighbor` contains an edge that is incident to the root,\n   * and the node at the other endpoint of the edge. This may be\n   * either the source or destination of the edge, depending on whether the\n   * edge is an in-edge or an out-edge from the perspective of the root. For\n   * convenience, a `Neighbor` is thus an object that includes both the edge\n   * and the adjacent node.\n   *\n   * Every non-dangling edge incident to the root corresponds to exactly one\n   * neighbor, but note that multiple neighbors may have the same `node` in the\n   * case that there are multiple edges with the same source and destination.\n   *\n   * Callers to `neighbors` must provide `NeighborsOptions` as follows:\n   *\n   * - direction: one of Direction.IN, direction.OUT, or Direction.ANY.\n   *   - Direction.IN finds neigbhors where root is the destination of the\n   *     edge.\n   *   - Direction.OUT finds neigbhors where root is the source of the edge.\n   *   - Direction.ANY finds neigbhors where root is the source or destination\n   *     of the edge.\n   *\n   * - nodePrefix: A NodeAddressT to use as a prefix filter for the adjacent node.\n   *   If you want all nodes, use `NodeAddress`.empty.\n   *\n   * - edgePrefix: An EdgeAddressT to use as a prefix filter for the edge.\n   *   If you want all edges, use `EdgeAddress`.empty.\n   *\n   * Calling `neighbors` on a node that is not present in the graph is an error.\n   *\n   * If the root node has an edge for which it is both the source and the\n   * destination (a loop edge), there will be one `Neighbor` with the root node\n   * and the loop edge.\n   *\n   * No `Neighbors` will be created for dangling edges, as such edges do not\n   * correspond to any Node in the graph.\n   *\n   * Clients must not modify the graph during iteration. If they do so, an\n   * error may be thrown at the iteration call site. The iteration order is\n   * undefined.\n   */\n  neighbors(node: NodeAddressT, options: NeighborsOptions): Iterator<Neighbor> {\n    if (!this.hasNode(node)) {\n      throw new Error(`Node does not exist: ${NodeAddress.toString(node)}`);\n    }\n    const result = this._neighbors(node, options, this._modificationCount);\n    this._maybeCheckInvariants();\n    return result;\n  }\n\n  *_neighbors(\n    node: NodeAddressT,\n    options: NeighborsOptions,\n    initialModificationCount: ModificationCount\n  ): Iterator<Neighbor> {\n    const nodeFilter = (n) => NodeAddress.hasPrefix(n, options.nodePrefix);\n    const edgeFilter = (e) => EdgeAddress.hasPrefix(e, options.edgePrefix);\n    const direction = options.direction;\n    const adjacencies: {edges: Edge[], direction: string}[] = [];\n    if (direction === Direction.IN || direction === Direction.ANY) {\n      const {inEdges} = NullUtil.get(this._incidentEdges.get(node));\n      adjacencies.push({edges: inEdges, direction: \"IN\"});\n    }\n    if (direction === Direction.OUT || direction === Direction.ANY) {\n      const {outEdges} = NullUtil.get(this._incidentEdges.get(node));\n      adjacencies.push({edges: outEdges, direction: \"OUT\"});\n    }\n\n    for (const adjacency of adjacencies) {\n      for (const edge of adjacency.edges) {\n        if (direction === Direction.ANY && adjacency.direction === \"IN\") {\n          if (edge.src === edge.dst) {\n            continue; // don't yield loop edges twice.\n          }\n        }\n        const neighborNodeAddress =\n          adjacency.direction === \"IN\" ? edge.src : edge.dst;\n        const neighborNode = this.node(neighborNodeAddress);\n        if (\n          nodeFilter(neighborNodeAddress) &&\n          edgeFilter(edge.address) &&\n          neighborNode != null\n        ) {\n          this._checkForComodification(initialModificationCount);\n          this._maybeCheckInvariants();\n          yield {edge, node: neighborNode};\n        }\n      }\n    }\n    this._checkForComodification(initialModificationCount);\n    this._maybeCheckInvariants();\n  }\n\n  /**\n   * Checks whether this graph is equal to another graph.\n   *\n   * Two Graphs are considered equal if they have identical sets of nodes\n   * and edges. Insertion order is irrelevant.\n   *\n   * Runs in time `O(n + e)`, where `n` is the number of nodes and `e` is the\n   * number of edges.\n   */\n  equals(that: Graph): boolean {\n    if (!(that instanceof Graph)) {\n      throw new Error(`Expected Graph, got ${String(that)}`);\n    }\n    const result =\n      deepEqual(this._nodes, that._nodes) &&\n      deepEqual(this._edges, that._edges);\n    this._maybeCheckInvariants();\n    return result;\n  }\n\n  /**\n   * Produce a copy of this graph.\n   *\n   * The copy is equal to the original, but distinct, so that they may be\n   * modified independently.\n   */\n  copy(): Graph {\n    const result = Graph.merge([this]);\n    this._maybeCheckInvariants();\n    return result;\n  }\n\n  /**\n   * Serialize a Graph into a plain JavaScript object.\n   */\n  toJSON(): GraphJSON {\n    // Unlike Array.from(this.nodes()).map((x) => x.address), this will include\n    // node references. Including node references is necessary so that we can\n    // index edges' src and dst consistently, even for dangling edges.\n    const sortedNodeAddresses = Array.from(this._incidentEdges.keys()).sort();\n    const nodeAddressToSortedIndex = new Map();\n    sortedNodeAddresses.forEach((address, i) => {\n      nodeAddressToSortedIndex.set(address, i);\n    });\n    const sortedEdges = Array.from(this.edges({showDangling: true}));\n    const indexedEdges: IndexedEdgeJSON[] = sortedEdges.map(\n      ({src, dst, address, timestampMs}) => {\n        const srcIndex = NullUtil.get(nodeAddressToSortedIndex.get(src));\n        const dstIndex = NullUtil.get(nodeAddressToSortedIndex.get(dst));\n        return {\n          srcIndex,\n          dstIndex,\n          address: EdgeAddress.toParts(address),\n          timestampMs,\n        };\n      }\n    );\n    const sortedNodes = Array.from(this.nodes());\n    const indexedNodes: IndexedNodeJSON[] = sortedNodes.map(\n      ({address, description, timestampMs}) => {\n        const index = NullUtil.get(nodeAddressToSortedIndex.get(address));\n        return {index, description, timestampMs};\n      }\n    );\n    const rawJSON = {\n      sortedNodeAddresses: sortedNodeAddresses.map((x) =>\n        NodeAddress.toParts(x)\n      ),\n      edges: indexedEdges,\n      nodes: indexedNodes,\n    };\n    const result = toCompat(COMPAT_INFO, rawJSON);\n    this._maybeCheckInvariants();\n    return result;\n  }\n\n  /**\n   * Deserializes a GraphJSON into a new Graph.\n   */\n  static fromJSON(compatJson: GraphJSON): Graph {\n    const {\n      nodes: nodesJSON,\n      edges: edgesJSON,\n      sortedNodeAddresses: sortedNodeAddressesJSON,\n    } = fromCompat(COMPAT_INFO, compatJson);\n    const sortedNodeAddresses = sortedNodeAddressesJSON.map(\n      NodeAddress.fromParts\n    );\n    const result = new Graph();\n    nodesJSON.forEach((j: IndexedNodeJSON) => {\n      const n: Node = {\n        address: sortedNodeAddresses[j.index],\n        description: j.description,\n        timestampMs: j.timestampMs,\n      };\n      result.addNode(n);\n    });\n    edgesJSON.forEach(({address, srcIndex, dstIndex, timestampMs}) => {\n      const src = sortedNodeAddresses[srcIndex];\n      const dst = sortedNodeAddresses[dstIndex];\n      result.addEdge({\n        address: EdgeAddress.fromParts(address),\n        src: src,\n        dst: dst,\n        timestampMs,\n      });\n    });\n    return result;\n  }\n\n  /**\n   * Compute the union of the given graphs. The result is a new graph that has\n   * all of the nodes and all of the edges from all the provided graphs.\n   *\n   * If two of the given graphs have edges with the same address, the edges\n   * must be equal (i.e. must have the same source and destination in each\n   * graph). If this is not the case, an error will be thrown.\n   *\n   * Example usage:\n   *\n   * const g1 = new Graph().addNode(a).addNode(b).addEdge(e);\n   * const g2 = new Graph().addNode(b).addNode(c).addEdge(f);\n   * const g3 = Graph.merge([g1, g2]);\n   * Array.from(g3.nodes()).length;  // 3\n   * Array.from(g3.edges()).length;  // 2\n   * const g1 = new Graph().addNode(a).addNode(b).addEdge(x);\n   * const g2 = new Graph().addNode(c);\n   * const g3 = Graph.merge([g1, g2]);\n   *\n   * The newly created graph is a separate instance from any of the input graphs,\n   * and may be mutated independently.\n   */\n  static merge(graphs: Iterable<Graph>): Graph {\n    const result = new Graph();\n    for (const graph of graphs) {\n      for (const node of graph.nodes()) {\n        result.addNode(node);\n      }\n      for (const edge of graph.edges({showDangling: true})) {\n        result.addEdge(edge);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Create a new graph, in which some nodes have been contracted together.\n   *\n   * contractNodes takes a list of NodeContractions, each of which specifies a\n   * replacement node, and a list of old node addresses to map onto the new\n   * node. A new graph will be returned where the new node is added, none of\n   * the old nodes are present, and every edge incident to one of the old nodes\n   * has been re-written so that it is incident to the new node instead.\n   *\n   * If the same node addresses is \"old\" for several contractions, all incident\n   * edges will be re-written to connect to whichever contraction came last.\n   *\n   * If the replacement node is present in the graph, no error will be thrown,\n   * provided that the replacement node is consistent with the one in the graph.\n   *\n   * If there is a \"chain\" of remaps (i.e. a->b and b->c), then an error will\n   * be thrown, as support for chaining has not yet been implemented.\n   *\n   * The original Graph is not mutated.\n   *\n   * contractNodes runs in O(n+e+k), where `n` is the number of nodes, `e` is the\n   * number of edges, and `k` is the number of contractions. If needed, we can\n   * improve the peformance by mutating the original graph instead of creating\n   * a new one.\n   */\n  contractNodes(contractions: $ReadOnlyArray<NodeContraction>): Graph {\n    const remap = new Map();\n    const replacements = new Set();\n    const contracted = new Graph();\n    for (const {old, replacement} of contractions) {\n      for (const addr of old) {\n        if (replacements.has(addr)) {\n          throw new Error(\n            `Chained contractions are not supported: ${NodeAddress.toString(\n              addr\n            )}`\n          );\n        }\n        remap.set(addr, replacement.address);\n      }\n      replacements.add(replacement.address);\n      contracted.addNode(replacement);\n    }\n    for (const node of this.nodes()) {\n      if (!remap.has(node.address)) {\n        contracted.addNode(node);\n      }\n    }\n    for (const edge of this.edges({showDangling: true})) {\n      const src = NullUtil.orElse(remap.get(edge.src), edge.src);\n      const dst = NullUtil.orElse(remap.get(edge.dst), edge.dst);\n      const newEdge = {...edge, src, dst};\n      contracted.addEdge(newEdge);\n    }\n    return contracted;\n  }\n\n  checkInvariants() {\n    if (this._invariantsLastChecked.when !== this._modificationCount) {\n      let failure: ?string = null;\n      try {\n        this._checkInvariants();\n      } catch (e) {\n        failure = e.message;\n      } finally {\n        this._invariantsLastChecked = {\n          when: this._modificationCount,\n          failure,\n        };\n      }\n    }\n    if (this._invariantsLastChecked.failure != null) {\n      throw new Error(this._invariantsLastChecked.failure);\n    }\n  }\n\n  _checkInvariants() {\n    // Definition. A node `n` is in the graph if `n` is deep-equal to\n    // `_nodes.get(n.address)`.\n    //\n    // Definition. An edge `e` is in the graph if `e` is deep-equal to\n    // `_edges.get(e.address)`.\n    //\n    // Definition. A *logical value* is an equivalence class of ECMAScript\n    // values modulo deep equality (or, from context, an element of such a\n    // class).\n\n    // Invariant 1. A node address `na` is 'referenced' if `_incidentEdges.has(na)`.\n    // 1.1 If a node is in the graph, then it is referenced by its address.\n    // 1.2 If a node has any incident edge, then it is referenced.\n    // 1.3 If a node is not in the graph and does not have incident edges, then\n    // it is not referenced.\n    const referencedNodesEncountered = new Set();\n    // 1.1\n    for (const [address, node] of this._nodes) {\n      if (node.address !== address) {\n        throw new Error(\n          `bad node address for ${NodeAddress.toString(address)}`\n        );\n      }\n      if (!this._incidentEdges.has(address)) {\n        throw new Error(\n          `missing incident-edges for ${NodeAddress.toString(address)}`\n        );\n      }\n      referencedNodesEncountered.add(address);\n    }\n    // 1.2\n    for (const edge of this._edges.values()) {\n      if (!this._incidentEdges.has(edge.src)) {\n        throw new Error(\n          `missing incident-edges for src of: ${edgeToString(edge)}`\n        );\n      }\n      referencedNodesEncountered.add(edge.src);\n      if (!this._incidentEdges.has(edge.dst)) {\n        throw new Error(\n          `missing incident-edges for dst of: ${edgeToString(edge)}`\n        );\n      }\n      referencedNodesEncountered.add(edge.dst);\n    }\n    // Check 1.3 by implication: for every address in\n    // referencedNodesEncountered, we've explicitly checked that it is present\n    // in _incidentEdges.\n    //\n    // Therefore, if the number of keys in _incidentEdges differs from the\n    // number of elements in referencedNodesEncountered, it must be because\n    // some elements in _incidentEdges were not present in\n    // referencedNodesEncountered, which means that they did not correspond to\n    // a node in the graph and did not have incident edges.\n    const numIncidentEntries = Array.from(this._incidentEdges.keys()).length;\n    if (numIncidentEntries !== referencedNodesEncountered.size) {\n      throw new Error(\"extra addresses in incident-edges\");\n    }\n\n    // Invariant 2. For an edge address `a`, if `_edges.has(a)` and\n    // `_edges.get(a) === e`, then:\n    //  1. `e.address` equals `a`;\n    //  2. `e.src` is referenced;\n    //  3. `e.dst` is referenced;\n    //  4. `_incidentEdges.get(e.dst).inEdges` contains `e`; and\n    //  5. `_incidentEdges.get(e.src).outEdges` contains `e`.\n    //\n    // 2.2 and 2.3 are implied by 2.4 and 2.5 respectively (as a node's address\n    // being available in _incidentEdges means that it is referenced). So we may\n    // ignore them.\n    //\n    // We check 2.1 here, and check 2.4 and 2.5 later for improved performance.\n    for (const [address, edge] of this._edges.entries()) {\n      if (edge.address !== address) {\n        throw new Error(\n          `bad edge address: ${edgeToString(edge)} does not match ${address}`\n        );\n      }\n    }\n\n    // Invariant 3. Suppose that `_incidentEdges.has(n)` and, let `es` be\n    // `_incidentEdges.get(n).inEdges`. Then\n    //  1. `es` contains any logical value at most once;\n    //  2. if `es` contains `e`, then `e` is in the graph; and\n    //  3. if `es` contains `e`, then `e.dst === n`.\n    //\n    // Invariant 4. Suppose that `_incidentEdges.has(n)` and, let `es` be\n    // `_incidentEdges.get(n).outEdges`. Then\n    //  1. `es` contains any logical value at most once;\n    //  2. if `es` contains `e`, then `e` is in the graph; and\n    //  3. if `es` contains `e`, then `e.src === n`.\n    //\n    // Note that Invariant 3.1 is equivalent to the following:\n    //\n    //     Invariant 3.1*. If `a` is an address, then there is at most\n    //     one index `i` such that `es[i].address` is `a`.\n    //\n    // It is immediate that 3.1* implies 3.1. To see that 3.1 implies\n    // 3.1*, suppose that `i` and `j` are such that `es[i].address` and\n    // `es[j].address` are both `a`. Then, by Invariant 3.2, each of\n    // `es[i]` and `es[j]` is in the graph, so each is deep-equal to\n    // `_edges.get(a)`. Therefore, `es[i]` and `es[j]` are deep-equal to\n    // each other. By 3.1, `es` contains a logical value at most once,\n    // so `i` must be equal to `j`.\n    //\n    // Therefore, it is valid to verify that 3.1*, which we will do. The\n    // same logic of course applies to Invariant 4.1.\n    const inEdgesSeen: Set<EdgeAddressT> = new Set();\n    const outEdgesSeen: Set<EdgeAddressT> = new Set();\n    const incidentEntries = Array.from(this._incidentEdges.entries());\n    for (const {seen, entries, baseNodeAccessor, kind} of [\n      {\n        seen: inEdgesSeen,\n        entries: incidentEntries.map(([a, {inEdges}]) => [a, inEdges]),\n        baseNodeAccessor: (e) => e.dst,\n        kind: \"in-edge\",\n      },\n      {\n        seen: outEdgesSeen,\n        entries: incidentEntries.map(([a, {outEdges}]) => [a, outEdges]),\n        baseNodeAccessor: (e) => e.src,\n        kind: \"out-edge\",\n      },\n    ]) {\n      for (const [base, edges] of entries) {\n        for (const edge of edges) {\n          // 3.1/4.1\n          if (seen.has(edge.address)) {\n            throw new Error(`duplicate ${kind}: ${edgeToString(edge)}`);\n          }\n          seen.add(edge.address);\n          const expected = this._edges.get(edge.address);\n          // 3.2/4.2\n          if (!deepEqual(edge, expected)) {\n            if (expected == null) {\n              throw new Error(`spurious ${kind}: ${edgeToString(edge)}`);\n            } else {\n              const vs = `${edgeToString(edge)} vs. ${edgeToString(expected)}`;\n              throw new Error(`bad ${kind}: ${vs}`);\n            }\n          }\n          // 3.3/4.3\n          const expectedBase = baseNodeAccessor(edge);\n          if (base !== baseNodeAccessor(edge)) {\n            throw new Error(\n              `bad ${kind}: ${edgeToString(edge)} should be ` +\n                `should be anchored at ${NodeAddress.toString(expectedBase)}`\n            );\n          }\n        }\n      }\n    }\n\n    // We now return to check 2.4 and 2.5, with the help of the\n    // structures that we have built up in checking Invariants 3 and 4.\n    for (const edge of this._edges.values()) {\n      // That `_incidentEdges.get(n).inEdges` contains `e` for some `n` is\n      // sufficient to show that `_incidentEdges.get(e.dst).inEdges` contains\n      // `e`: if `n` were something other than `e.dst`, then we would have a\n      // failure of invariant 3.3, which would have been caught earlier.\n      // Likewise for outEdges.\n      if (!inEdgesSeen.has(edge.address)) {\n        throw new Error(`missing in-edge: ${edgeToString(edge)}`);\n      }\n      if (!outEdgesSeen.has(edge.address)) {\n        throw new Error(`missing out-edge: ${edgeToString(edge)}`);\n      }\n    }\n  }\n\n  _maybeCheckInvariants() {\n    if (process.env.NODE_ENV === \"test\") {\n      // TODO(perf): If this method becomes really slow, we can disable\n      // it on specific tests wherein we construct large graphs.\n      this.checkInvariants();\n    }\n  }\n}\n\n/**\n * Convert a node into a human readable string.\n *\n * The precise behavior is an implementation detail and subject to change.\n */\nexport function nodeToString(node: Node): string {\n  const address = NodeAddress.toString(node.address);\n  const timestamp =\n    node.timestampMs == null ? \"null\" : String(node.timestampMs);\n  return `{address: ${address}, description: ${node.description}, timestampMs: ${timestamp}}`;\n}\n\n/**\n * Convert an edge into a human readable string.\n *\n * The precise behavior is an implementation detail and subject to change.\n */\nexport function edgeToString(edge: Edge): string {\n  const address = EdgeAddress.toString(edge.address);\n  const src = NodeAddress.toString(edge.src);\n  const dst = NodeAddress.toString(edge.dst);\n  return `{address: ${address}, src: ${src}, dst: ${dst}, timestampMs: ${edge.timestampMs}}`;\n}\n\n/**\n * Convert an edge to an object whose fields are human-readable.\n * This is useful for storing edges in human-readable formats that\n * should not include NUL characters, such as Jest snapshots.\n */\nexport function edgeToStrings(\n  edge: Edge\n): {|\n  +address: string,\n  +src: string,\n  +dst: string,\n  +timestampMs: TimestampMs,\n|} {\n  return {\n    address: EdgeAddress.toString(edge.address),\n    src: NodeAddress.toString(edge.src),\n    dst: NodeAddress.toString(edge.dst),\n    timestampMs: edge.timestampMs,\n  };\n}\n\nexport function edgeToParts(\n  edge: Edge\n): {|\n  +addressParts: string[],\n  +srcParts: string[],\n  +dstParts: string[],\n  +timestampMs: TimestampMs,\n|} {\n  const addressParts = EdgeAddress.toParts(edge.address);\n  const srcParts = NodeAddress.toParts(edge.src);\n  const dstParts = NodeAddress.toParts(edge.dst);\n  const timestampMs = edge.timestampMs;\n  return {addressParts, srcParts, dstParts, timestampMs};\n}\n\nexport type NodeDiff = {|\n  +first: ?Node,\n  +second: ?Node,\n|};\n\nexport type EdgeDiff = {|\n  +first: ?Edge,\n  +second: ?Edge,\n|};\n\nexport type GraphComparison = {|\n  +graphsAreEqual: boolean,\n  +nodeDiffs: $ReadOnlyArray<NodeDiff>,\n  +edgeDiffs: $ReadOnlyArray<EdgeDiff>,\n|};\n\nexport function compareGraphs(\n  firstGraph: Graph,\n  secondGraph: Graph\n): GraphComparison {\n  const nodeDiffs = [];\n  const edgeDiffs = [];\n  const graphsAreEqual = firstGraph.equals(secondGraph);\n\n  if (!graphsAreEqual) {\n    for (const firstNode of firstGraph.nodes()) {\n      const secondNode = secondGraph.node(firstNode.address);\n      if (!deepEqual(firstNode, secondNode))\n        nodeDiffs.push({first: firstNode, second: secondNode});\n    }\n    for (const secondNode of secondGraph.nodes()) {\n      const firstNode = firstGraph.node(secondNode.address);\n      if (!firstNode) {\n        nodeDiffs.push({first: firstNode, second: secondNode});\n      }\n    }\n\n    for (const firstEdge of firstGraph.edges({showDangling: true})) {\n      const secondEdge = secondGraph.edge(firstEdge.address);\n      if (!deepEqual(firstEdge, secondEdge))\n        edgeDiffs.push({first: firstEdge, second: secondEdge});\n    }\n    for (const secondEdge of secondGraph.edges({showDangling: true})) {\n      const firstEdge = firstGraph.edge(secondEdge.address);\n      if (!firstEdge) {\n        edgeDiffs.push({first: firstEdge, second: secondEdge});\n      }\n    }\n  }\n\n  return {\n    graphsAreEqual,\n    nodeDiffs,\n    edgeDiffs,\n  };\n}\n","// @flow\n\nimport deepFreeze from \"deep-freeze\";\nimport type {PluginDeclaration} from \"../../analysis/pluginDeclaration\";\nimport type {NodeType, EdgeType} from \"../../analysis/types\";\nimport {\n  NodeAddress,\n  EdgeAddress,\n  type NodeAddressT,\n  type EdgeAddressT,\n} from \"../../core/graph\";\n\nexport const nodePrefix: NodeAddressT = NodeAddress.fromParts([\n  \"sourcecred\",\n  \"discourse\",\n]);\nexport const edgePrefix: EdgeAddressT = EdgeAddress.fromParts([\n  \"sourcecred\",\n  \"discourse\",\n]);\n\nexport const topicNodeType: NodeType = deepFreeze({\n  name: \"Topic\",\n  pluralName: \"Topics\",\n  prefix: NodeAddress.append(nodePrefix, \"topic\"),\n  defaultWeight: 0,\n  description:\n    \"A topic (or post-container) in a Discourse instance. Every topic has at least one post.\",\n});\n\nexport const postNodeType: NodeType = deepFreeze({\n  name: \"Post\",\n  pluralName: \"Posts\",\n  prefix: NodeAddress.append(nodePrefix, \"post\"),\n  defaultWeight: 0,\n  description: \"A post in some topic in a Discourse instance.\",\n});\n\nexport const userNodeType: NodeType = deepFreeze({\n  name: \"User\",\n  pluralName: \"Users\",\n  prefix: NodeAddress.append(nodePrefix, \"user\"),\n  defaultWeight: 0,\n  description: \"A user account on a particular Discourse instance.\",\n});\n\nexport const likeNodeType: NodeType = deepFreeze({\n  name: \"Like\",\n  pluralName: \"Likes\",\n  prefix: NodeAddress.append(nodePrefix, \"like\"),\n  defaultWeight: 4,\n  description: \"A like by some user, directed at some post\",\n});\n\nexport const topicContainsPostEdgeType: EdgeType = deepFreeze({\n  forwardName: \"contains post\",\n  backwardName: \"is contained by topic\",\n  prefix: EdgeAddress.append(edgePrefix, \"topicContainsPost\"),\n  defaultWeight: {forwards: 1 / 8, backwards: 1},\n  description: \"Connects a topic to the posts that it contains.\",\n});\n\nexport const topicHasLikedPostEdgeType: EdgeType = deepFreeze({\n  forwardName: \"has post with likes\",\n  backwardName: \"is liked post within topic\",\n  prefix: EdgeAddress.append(edgePrefix, \"topicHasLikedPost\"),\n  defaultWeight: {forwards: 1, backwards: 0},\n  description:\n    \"Connects a topic to posts with likes, with weight proportional to the number of likes\",\n});\n\nexport const postRepliesEdgeType: EdgeType = deepFreeze({\n  forwardName: \"post is reply to\",\n  backwardName: \"post replied to by\",\n  prefix: EdgeAddress.append(edgePrefix, \"replyTo\"),\n  defaultWeight: {forwards: 1, backwards: 0},\n  description: \"Connects a post to the post that it is a reply to.\",\n});\n\nexport const authorsTopicEdgeType: EdgeType = deepFreeze({\n  forwardName: \"authors topic\",\n  backwardName: \"topic is authored by\",\n  prefix: EdgeAddress.append(edgePrefix, \"authors\", \"topic\"),\n  defaultWeight: {forwards: 0, backwards: 0},\n  description: \"Connects an author to a topic they created.\",\n});\n\nexport const authorsPostEdgeType: EdgeType = deepFreeze({\n  forwardName: \"authors post\",\n  backwardName: \"post is authored by\",\n  prefix: EdgeAddress.append(edgePrefix, \"authors\", \"post\"),\n  defaultWeight: {forwards: 1 / 4, backwards: 1},\n  description: \"Connects an author to a post they've created.\",\n});\n\nexport const createsLikeEdgeType: EdgeType = deepFreeze({\n  forwardName: \"creates like\",\n  backwardName: \"like created by\",\n  prefix: EdgeAddress.append(edgePrefix, \"createsLike\"),\n  defaultWeight: {forwards: 1, backwards: 0},\n  description: \"Connects a Discourse user to a like that they created.\",\n});\n\nexport const likesEdgeType: EdgeType = deepFreeze({\n  forwardName: \"likes\",\n  backwardName: \"is liked by\",\n  prefix: EdgeAddress.append(edgePrefix, \"likes\"),\n  defaultWeight: {forwards: 1, backwards: 0},\n  description: \"Connects a Discourse like to a post that was liked.\",\n});\n\nexport const referencesPostEdgeType: EdgeType = deepFreeze({\n  forwardName: \"references post\",\n  backwardName: \"post is referenced by\",\n  prefix: EdgeAddress.append(edgePrefix, \"references\", \"post\"),\n  defaultWeight: {forwards: 1 / 2, backwards: 0},\n  description: \"Connects a Discourse post to another post it referenced.\",\n});\n\nexport const referencesTopicEdgeType: EdgeType = deepFreeze({\n  forwardName: \"references topic\",\n  backwardName: \"topic is referenced by\",\n  prefix: EdgeAddress.append(edgePrefix, \"references\", \"topic\"),\n  defaultWeight: {forwards: 1 / 2, backwards: 0},\n  description: \"Connects a Discourse post to a topic it referenced.\",\n});\n\nexport const referencesUserEdgeType: EdgeType = deepFreeze({\n  forwardName: \"mentions\",\n  backwardName: \"is mentioned by\",\n  prefix: EdgeAddress.append(edgePrefix, \"references\", \"user\"),\n  defaultWeight: {forwards: 1 / 2, backwards: 0},\n  description: \"Connects a Discourse post to a user it mentions\",\n});\n\nexport const declaration: PluginDeclaration = deepFreeze({\n  name: \"Discourse\",\n  nodePrefix,\n  edgePrefix,\n  nodeTypes: [userNodeType, topicNodeType, postNodeType, likeNodeType],\n  edgeTypes: [\n    postRepliesEdgeType,\n    authorsTopicEdgeType,\n    authorsPostEdgeType,\n    topicContainsPostEdgeType,\n    topicHasLikedPostEdgeType,\n    likesEdgeType,\n    createsLikeEdgeType,\n    referencesPostEdgeType,\n    referencesTopicEdgeType,\n    referencesUserEdgeType,\n  ],\n  userTypes: [userNodeType],\n});\n","// @flow\n\nimport {NodeAddress, type NodeAddressT} from \"../../core/graph\";\n\nimport {type PostId, type TopicId, type LikeAction} from \"./fetch\";\n\nimport {\n  topicNodeType,\n  postNodeType,\n  userNodeType,\n  likeNodeType,\n} from \"./declaration\";\n\nexport function topicAddress(serverUrl: string, id: TopicId): NodeAddressT {\n  return NodeAddress.append(topicNodeType.prefix, serverUrl, String(id));\n}\n\nexport function postAddress(serverUrl: string, id: PostId): NodeAddressT {\n  return NodeAddress.append(postNodeType.prefix, serverUrl, String(id));\n}\n\nexport function userAddress(serverUrl: string, username: string): NodeAddressT {\n  return NodeAddress.append(userNodeType.prefix, serverUrl, username);\n}\n\nexport function likeAddress(serverUrl: string, like: LikeAction): NodeAddressT {\n  return NodeAddress.append(\n    likeNodeType.prefix,\n    serverUrl,\n    like.username,\n    String(like.postId)\n  );\n}\n","// @flow\n\nimport deepFreeze from \"deep-freeze\";\nimport type {PluginDeclaration} from \"../../analysis/pluginDeclaration\";\nimport type {NodeType, EdgeType} from \"../../analysis/types\";\nimport {\n  NodeAddress,\n  EdgeAddress,\n  type NodeAddressT,\n  type EdgeAddressT,\n} from \"../../core/graph\";\n\nexport const nodePrefix: NodeAddressT = NodeAddress.fromParts([\n  \"sourcecred\",\n  \"discord\",\n]);\nexport const edgePrefix: EdgeAddressT = EdgeAddress.fromParts([\n  \"sourcecred\",\n  \"discord\",\n]);\n\nexport const memberNodeType: NodeType = deepFreeze({\n  name: \"Member\",\n  pluralName: \"Members\",\n  prefix: NodeAddress.append(nodePrefix, \"MEMBER\"),\n  defaultWeight: 0,\n  description: \"A member of the Discord server\",\n});\n\nexport const messageNodeType: NodeType = deepFreeze({\n  name: \"Message\",\n  pluralName: \"Messages\",\n  prefix: NodeAddress.append(nodePrefix, \"MESSAGE\"),\n  defaultWeight: 0,\n  description: \"A Discord message, posted in a particular channel\",\n});\n\nexport const reactionNodeType: NodeType = deepFreeze({\n  name: \"Reaction\",\n  pluralName: \"Reactions\",\n  prefix: NodeAddress.append(nodePrefix, \"REACTION\"),\n  defaultWeight: 1,\n  description: \"A reaction by some user, directed at some message\",\n});\n\nexport const authorsMessageEdgeType: EdgeType = deepFreeze({\n  forwardName: \"authors message\",\n  backwardName: \"message is authored by\",\n  prefix: EdgeAddress.append(edgePrefix, \"AUTHORS\", \"MESSAGE\"),\n  defaultWeight: {forwards: 1 / 4, backwards: 1},\n  description: \"Connects an author to a message they've created.\",\n});\n\nexport const addsReactionEdgeType: EdgeType = deepFreeze({\n  forwardName: \"adds reaction\",\n  backwardName: \"reaction added by\",\n  prefix: EdgeAddress.append(edgePrefix, \"ADDS_REACTION\"),\n  defaultWeight: {forwards: 1, backwards: 1 / 16},\n  description: \"Connects a member to a reaction that they added.\",\n});\n\nexport const reactsToEdgeType: EdgeType = deepFreeze({\n  forwardName: \"reacts to\",\n  backwardName: \"is reacted to by\",\n  prefix: EdgeAddress.append(edgePrefix, \"REACTS_TO\"),\n  defaultWeight: {forwards: 1, backwards: 1 / 16},\n  description: \"Connects a reaction to a message that it reacts to.\",\n});\n\nexport const mentionsEdgeType: EdgeType = deepFreeze({\n  forwardName: \"mentions\",\n  backwardName: \"is mentioned by\",\n  prefix: EdgeAddress.append(edgePrefix, \"MENTIONS\"),\n  defaultWeight: {forwards: 1, backwards: 1 / 16},\n  description: \"Connects a message to the member being mentioned.\",\n});\n\nexport const propsEdgeType: EdgeType = deepFreeze({\n  forwardName: \"gives props to\",\n  backwardName: \"recieves props from\",\n  prefix: EdgeAddress.append(edgePrefix, \"PROPS\"),\n  // We set the default forward weight to 19x because message authors get a\n  // 1x weight by default, so in the most common case of a props with a\n  // single recipient, the props author will get 5% of the Cred and the\n  // props-ee will get 95%.\n  defaultWeight: {forwards: 19, backwards: 1 / 16},\n  description: \"Connects a props message to the person getting props\",\n});\n\nexport const declaration: PluginDeclaration = deepFreeze({\n  name: \"Discord\",\n  nodePrefix,\n  edgePrefix,\n  nodeTypes: [memberNodeType, messageNodeType, reactionNodeType],\n  edgeTypes: [\n    authorsMessageEdgeType,\n    addsReactionEdgeType,\n    reactsToEdgeType,\n    mentionsEdgeType,\n    propsEdgeType,\n  ],\n  userTypes: [memberNodeType],\n});\n","// @flow\n\n/*\n * A template tag function that performs dedenting on the template, but\n * not its arguments.\n *\n * For instance, given the template\n *\n *     |dedent`\\\n *     |    one ${one}\n *     |        two ${two}\n *     |    done`,\n *\n * where `one === \"1\"` and `two === \"\\n    2\"`, the template string\n * would expand to \"one 1\\n    two\\n    2\\ndone\". Note that four spaces\n * of indentation were stripped off of each of \"one\" and \"two\", but not\n * from \"2\".\n *\n * Lines that contain only whitespace are not used for measuring.\n */\nexport default function dedent(strings: string[], ...values: string[]): string {\n  const lineLengths = strings\n    .join(\"\")\n    .split(\"\\n\")\n    .filter((line) => line.trim().length !== 0)\n    .map((line) => line.length - line.trimLeft().length);\n  const trimAmount = Math.min.apply(null, lineLengths);\n\n  const parts = [];\n  for (let i = 0; i < strings.length; i++) {\n    const trimmed = strings[i]\n      .split(\"\\n\")\n      .map((line, j) => (i === 0 || j > 0 ? line.substr(trimAmount) : line))\n      .join(\"\\n\");\n    parts.push(trimmed);\n    if (i < values.length) {\n      parts.push(values[i]);\n    }\n  }\n  return parts.join(\"\");\n}\n","// @flow\n\nimport deepEqual from \"lodash.isequal\";\nimport * as MapUtil from \"../util/map\";\nimport * as C from \"../util/combo\";\nimport {\n  type NodeAddressT,\n  type EdgeAddressT,\n  NodeAddress,\n  EdgeAddress,\n} from \"../core/graph\";\nimport {toCompat, type Compatible, compatibleParser} from \"../util/compat\";\n\n/**\n * Represents the weight for a particular Node (or node address prefix).\n * Weight 1 is the default value and signifies normal importance.\n * Weights are linear, so 2 is twice as important as 1.\n */\nexport type NodeWeight = number;\n\nexport type NodeOperator = (NodeWeight, NodeWeight) => NodeWeight;\n\n/**\n * Represents the forwards and backwards weights for a particular Edge (or\n * edge address prefix).\n * Weight 1 is the default value and signifies normal importance.\n * Weights are linear, so 2 is twice as important as 1.\n */\nexport type EdgeWeight = {|+forwards: number, +backwards: number|};\nexport const edgeWeightParser: C.Parser<EdgeWeight> = C.object({\n  forwards: C.number,\n  backwards: C.number,\n});\n\nexport type EdgeOperator = (EdgeWeight, EdgeWeight) => EdgeWeight;\n\n/**\n * Represents the weights for nodes and edges.\n *\n * The weights are stored by address prefix, i.e. multiple weights may apply\n * to a given node or edge.\n */\nexport type WeightsT = {|\n  nodeWeights: Map<NodeAddressT, NodeWeight>,\n  // Map from an edge prefix or address to a weight\n  edgeWeights: Map<EdgeAddressT, EdgeWeight>,\n|};\n\n/**\n * Creates new, empty weights.\n */\nexport function empty(): WeightsT {\n  return {\n    nodeWeights: new Map(),\n    edgeWeights: new Map(),\n  };\n}\n\nexport function copy(w: WeightsT): WeightsT {\n  return {\n    nodeWeights: new Map(w.nodeWeights),\n    edgeWeights: new Map(w.edgeWeights),\n  };\n}\n\n/** Merge multiple Weights together.\n *\n * The resultant Weights will have every weight specified by each of the input\n * weights.\n *\n * When there are overlaps (i.e. the same address is present in two or more of\n * the Weights), then the appropriate resolver will be invoked to resolve the\n * conflict. The resolver takes two weights and combines them to return a new\n * weight.\n *\n * When no resolvers are explicitly provided, merge defaults to\n * conservative \"error on conflict\" resolvers.\n */\nexport function merge(\n  ws: $ReadOnlyArray<WeightsT>,\n  resolvers: ?{|+nodeResolver: NodeOperator, +edgeResolver: EdgeOperator|}\n): WeightsT {\n  if (resolvers == null) {\n    const nodeResolver = (_unused_a, _unused_b) => {\n      throw new Error(\n        \"node weight conflict detected, but no resolver specified\"\n      );\n    };\n    const edgeResolver = (_unused_a, _unused_b) => {\n      throw new Error(\n        \"edge weight conflict detected, but no resolver specified\"\n      );\n    };\n    resolvers = {nodeResolver, edgeResolver};\n  }\n  const weights: WeightsT = empty();\n  const {nodeWeights, edgeWeights} = weights;\n  const {nodeResolver, edgeResolver} = resolvers;\n  for (const w of ws) {\n    for (const [addr, val] of w.nodeWeights.entries()) {\n      const existing = nodeWeights.get(addr);\n      if (existing == null) {\n        nodeWeights.set(addr, val);\n      } else {\n        try {\n          nodeWeights.set(addr, nodeResolver(existing, val));\n        } catch (e) {\n          throw new Error(`${e} when resolving ${NodeAddress.toString(addr)}`);\n        }\n      }\n    }\n    for (const [addr, val] of w.edgeWeights.entries()) {\n      const existing = edgeWeights.get(addr);\n      if (existing == null) {\n        edgeWeights.set(addr, val);\n      } else {\n        try {\n          edgeWeights.set(addr, edgeResolver(existing, val));\n        } catch (e) {\n          throw new Error(\n            `Error ${e} when resolving ${EdgeAddress.toString(addr)}`\n          );\n        }\n      }\n    }\n  }\n  return weights;\n}\n\nexport type SerializedWeights_0_2_0 = {|\n  +nodeWeights: {[NodeAddressT]: NodeWeight},\n  +edgeWeights: {[EdgeAddressT]: EdgeWeight},\n|};\n\nfunction serialize_0_2_0(weights: WeightsT): SerializedWeights_0_2_0 {\n  return {\n    nodeWeights: MapUtil.toObject(weights.nodeWeights),\n    edgeWeights: MapUtil.toObject(weights.edgeWeights),\n  };\n}\n\nfunction deserialize_0_2_0(weights: SerializedWeights_0_2_0): WeightsT {\n  return {\n    nodeWeights: MapUtil.fromObject(weights.nodeWeights),\n    edgeWeights: MapUtil.fromObject(weights.edgeWeights),\n  };\n}\n\nconst Parse_0_2_0: C.Parser<SerializedWeights_0_2_0> = (() => {\n  return C.object({\n    nodeWeights: C.dict(C.number, NodeAddress.parser),\n    edgeWeights: C.dict(edgeWeightParser, EdgeAddress.parser),\n  });\n})();\n\nconst COMPAT_INFO = {type: \"sourcecred/weights\", version: \"0.2.0\"};\n\nexport const parser: C.Parser<WeightsT> = compatibleParser(COMPAT_INFO.type, {\n  \"0.2.0\": C.fmap(Parse_0_2_0, deserialize_0_2_0),\n});\n\nexport type WeightsJSON_0_2_0 = Compatible<SerializedWeights_0_2_0>;\nexport type WeightsJSON = WeightsJSON_0_2_0;\n\nexport function toJSON(weights: WeightsT): WeightsJSON {\n  return toCompat(COMPAT_INFO, serialize_0_2_0(weights));\n}\n\nexport function fromJSON(json: WeightsJSON): WeightsT {\n  return parser.parseOrThrow(json);\n}\n\nexport type NodeWeightDiff = {|\n  +address: NodeAddressT,\n  +first: ?NodeWeight,\n  +second: ?NodeWeight,\n|};\n\nexport type EdgeWeightDiff = {|\n  +address: EdgeAddressT,\n  +first: ?EdgeWeight,\n  +second: ?EdgeWeight,\n|};\n\nexport type WeightsComparison = {|\n  +weightsAreEqual: boolean,\n  +nodeWeightDiffs: $ReadOnlyArray<NodeWeightDiff>,\n  +edgeWeightDiffs: $ReadOnlyArray<EdgeWeightDiff>,\n|};\n\nexport function compareWeights(\n  firstWeights: WeightsT,\n  secondWeights: WeightsT\n): WeightsComparison {\n  const nodeWeightDiffs = [];\n  const edgeWeightDiffs = [];\n\n  const nodeAddresses = new Set([\n    ...firstWeights.nodeWeights.keys(),\n    ...secondWeights.nodeWeights.keys(),\n  ]);\n  for (const address of nodeAddresses) {\n    const first = firstWeights.nodeWeights.get(address);\n    const second = secondWeights.nodeWeights.get(address);\n    if (!deepEqual(first, second)) {\n      nodeWeightDiffs.push({\n        address,\n        first,\n        second,\n      });\n    }\n  }\n  const edgeAddresses = new Set([\n    ...firstWeights.edgeWeights.keys(),\n    ...secondWeights.edgeWeights.keys(),\n  ]);\n  for (const address of edgeAddresses) {\n    const first = firstWeights.edgeWeights.get(address);\n    const second = secondWeights.edgeWeights.get(address);\n    if (!deepEqual(first, second)) {\n      edgeWeightDiffs.push({\n        address,\n        first,\n        second,\n      });\n    }\n  }\n  const weightsAreEqual =\n    nodeWeightDiffs.length === 0 && edgeWeightDiffs.length === 0;\n\n  return {\n    weightsAreEqual,\n    nodeWeightDiffs,\n    edgeWeightDiffs,\n  };\n}\n","// @flow\n\nimport {escape} from \"entities\";\nimport {type WeightedGraph as WeightedGraphT} from \"../../core/weightedGraph\";\nimport {empty as emptyWeights} from \"../../core/weights\";\nimport {\n  Graph,\n  NodeAddress,\n  EdgeAddress,\n  type Node,\n  type Edge,\n  type NodeAddressT,\n  type EdgeAddressT,\n} from \"../../core/graph\";\nimport {SqliteMirrorRepository} from \"./mirrorRepository\";\nimport {\n  memberNodeType,\n  messageNodeType,\n  reactionNodeType,\n  authorsMessageEdgeType,\n  addsReactionEdgeType,\n  reactsToEdgeType,\n  mentionsEdgeType,\n  propsEdgeType,\n} from \"./declaration\";\nimport * as Model from \"./models\";\n\nimport {type DiscordConfig} from \"./config\";\nimport {reactionWeight} from \"./reactionWeights\";\n\n// Display this many characters in description.\nconst MESSAGE_LENGTH = 30;\n\nfunction messageUrl(\n  guild: Model.Snowflake,\n  channel: Model.Snowflake,\n  message: Model.Snowflake\n) {\n  return `https://discordapp.com/channels/${guild}/${channel}/${message}`;\n}\n\nexport function userAddress(userId: Model.Snowflake): NodeAddressT {\n  return NodeAddress.append(memberNodeType.prefix, \"user\", userId);\n}\n\nexport function memberAddress(member: Model.GuildMember): NodeAddressT {\n  return NodeAddress.append(\n    memberNodeType.prefix,\n    member.user.bot ? \"bot\" : \"user\",\n    member.user.id\n  );\n}\n\nfunction messageAddress(message: Model.Message): NodeAddressT {\n  return NodeAddress.append(\n    messageNodeType.prefix,\n    message.channelId,\n    message.id\n  );\n}\n\nfunction reactionAddress(reaction: Model.Reaction): NodeAddressT {\n  // Hacky order, so we can boost categories.\n  return NodeAddress.append(\n    reactionNodeType.prefix,\n    reaction.channelId,\n    Model.emojiToRef(reaction.emoji),\n    reaction.authorId,\n    reaction.messageId\n  );\n}\n\nfunction memberNode(member: Model.GuildMember): Node {\n  const description = `discord/${escape(member.user.username.slice(0, 20))}#${\n    member.user.discriminator\n  }`;\n  return {\n    address: memberAddress(member),\n    description,\n    timestampMs: null,\n  };\n}\n\nfunction messageNode(\n  message: Model.Message,\n  guild: Model.Snowflake,\n  channelName: string\n): Node {\n  const url = messageUrl(guild, message.channelId, message.id);\n  const partialMessage = escape(message.content.substring(0, MESSAGE_LENGTH));\n  const description = `#${channelName} message [\"${partialMessage}...\"](${url})`;\n  return {\n    address: messageAddress(message),\n    description,\n    timestampMs: message.timestampMs,\n  };\n}\n\nfunction authorsMessageEdge(\n  message: Model.Message,\n  author: Model.GuildMember\n): Edge {\n  const address: EdgeAddressT = EdgeAddress.append(\n    authorsMessageEdgeType.prefix,\n    author.user.bot ? \"bot\" : \"user\",\n    author.user.id,\n    message.channelId,\n    message.id\n  );\n  return {\n    address,\n    timestampMs: message.timestampMs,\n    src: memberAddress(author),\n    dst: messageAddress(message),\n  };\n}\n\nfunction reactionNode(\n  reaction: Model.Reaction,\n  timestampMs: number,\n  guild: Model.Snowflake\n): Node {\n  const msgUrl = messageUrl(guild, reaction.channelId, reaction.messageId);\n  const reactionStr = reaction.emoji.id\n    ? `:${reaction.emoji.name}:`\n    : reaction.emoji.name;\n  const description = `Reacted \\`${reactionStr}\\` to message [${reaction.messageId}](${msgUrl})`;\n  return {\n    address: reactionAddress(reaction),\n    description,\n    timestampMs,\n  };\n}\n\nfunction addsReactionEdge(\n  reaction: Model.Reaction,\n  member: Model.GuildMember,\n  timestampMs: number\n): Edge {\n  const address: EdgeAddressT = EdgeAddress.append(\n    addsReactionEdgeType.prefix,\n    member.user.bot ? \"bot\" : \"user\",\n    member.user.id,\n    Model.emojiToRef(reaction.emoji),\n    reaction.channelId,\n    reaction.messageId\n  );\n  return {\n    address,\n    // TODO: for now using timestamp of the message,\n    // as reactions don't have timestamps.\n    timestampMs,\n    src: memberAddress(member),\n    dst: reactionAddress(reaction),\n  };\n}\n\nfunction reactsToEdge(reaction: Model.Reaction, message: Model.Message): Edge {\n  const address: EdgeAddressT = EdgeAddress.append(\n    reactsToEdgeType.prefix,\n    Model.emojiToRef(reaction.emoji),\n    reaction.authorId,\n    reaction.channelId,\n    reaction.messageId\n  );\n  return {\n    address,\n    // TODO: for now using timestamp of the message,\n    // as reactions don't have timestamps.\n    timestampMs: message.timestampMs,\n    src: reactionAddress(reaction),\n    dst: messageAddress(message),\n  };\n}\n\nfunction mentionsEdge(message: Model.Message, member: Model.GuildMember): Edge {\n  const address: EdgeAddressT = EdgeAddress.append(\n    mentionsEdgeType.prefix,\n    message.channelId,\n    message.authorId,\n    message.id,\n    member.user.bot ? \"bot\" : \"user\",\n    member.user.id\n  );\n  return {\n    address,\n    timestampMs: message.timestampMs,\n    src: messageAddress(message),\n    dst: memberAddress(member),\n  };\n}\n\nfunction propsEdge(message: Model.Message, member: Model.GuildMember): Edge {\n  const address: EdgeAddressT = EdgeAddress.append(\n    propsEdgeType.prefix,\n    message.channelId,\n    message.authorId,\n    message.id,\n    member.user.bot ? \"bot\" : \"user\",\n    member.user.id\n  );\n  return {\n    address,\n    timestampMs: message.timestampMs,\n    src: messageAddress(message),\n    dst: memberAddress(member),\n  };\n}\n\nexport type GraphReaction = {|\n  +reaction: Model.Reaction,\n  +reactingMember: Model.GuildMember,\n|};\n\nexport type GraphMention = {|\n  +member: Model.GuildMember,\n  +count: number,\n|};\n\n/**\n * All of the information necessary to add a message to\n * the graph, along with its reactions and its mentions.\n */\nexport type GraphMessage = {|\n  +message: Model.Message,\n  +author: Model.GuildMember | null,\n  +reactions: $ReadOnlyArray<GraphReaction>,\n  +mentions: $ReadOnlyArray<GraphMention>,\n  // Included so we can apply any channel-based rules (e.g. creating props\n  // edges instead of mentions edges) at graph construction time.\n  +channelId: Model.Snowflake,\n  // Included because we want the channel name in the node description.\n  +channelName: string,\n|};\n\n/**\n * Find all of the messages that should go into the graph.\n * This will deliberately ignore messages that have no reactions, since\n * they have no Cred impact and don't need to go into the graph.\n */\nexport function* findGraphMessages(\n  repo: SqliteMirrorRepository\n): Iterable<GraphMessage> {\n  const memberMap = new Map(repo.members().map((m) => [m.user.id, m]));\n  for (const channel of repo.channels()) {\n    for (const message of repo.messages(channel.id)) {\n      if (message.nonUserAuthor) {\n        continue;\n      }\n\n      const reactions = [];\n      for (const reaction of repo.reactions(channel.id, message.id)) {\n        const reactingMember = memberMap.get(reaction.authorId);\n        if (!reactingMember) {\n          // Probably this user left the server.\n          // Let's ignore this reaction (keeping the rest of the message)\n          continue;\n        }\n        reactions.push({reaction, reactingMember});\n      }\n\n      const mentions = [];\n      for (const {userId, count} of message.mentions) {\n        const mentionedMember = memberMap.get(userId);\n        if (!mentionedMember) {\n          // Probably this user left the server.\n          // We'll skip this mention (keeping the rest of the message)\n          continue;\n        }\n        mentions.push({member: mentionedMember, count});\n      }\n      if (mentions.length === 0 && reactions.length === 0) {\n        // No valid mentions or reactions, meaning this message won't have real Cred effects.\n        // let's skip it.\n        continue;\n      }\n\n      const author = memberMap.get(message.authorId) || null;\n\n      yield {\n        message,\n        author,\n        reactions,\n        mentions,\n        channelName: channel.name,\n        channelId: channel.id,\n      };\n    }\n  }\n}\n\nexport function createGraph(\n  config: DiscordConfig,\n  repo: SqliteMirrorRepository\n): WeightedGraphT {\n  const graphMessages = findGraphMessages(repo);\n  return _createGraphFromMessages(config, graphMessages);\n}\n\nexport function _createGraphFromMessages(\n  config: DiscordConfig,\n  messages: Iterable<GraphMessage>\n): WeightedGraphT {\n  const wg = {\n    graph: new Graph(),\n    weights: emptyWeights(),\n  };\n  const {guildId, weights} = config;\n  const propsChannels = new Set(config.propsChannels);\n\n  for (const graphMessage of messages) {\n    const {\n      message,\n      author,\n      reactions,\n      mentions,\n      channelName,\n      channelId,\n    } = graphMessage;\n    if (author) {\n      wg.graph.addNode(memberNode(author));\n      wg.graph.addEdge(authorsMessageEdge(message, author));\n    }\n    wg.graph.addNode(messageNode(message, guildId, channelName));\n\n    for (const {reaction, reactingMember} of reactions) {\n      const node = reactionNode(reaction, message.timestampMs, guildId);\n      wg.weights.nodeWeights.set(\n        node.address,\n        reactionWeight(\n          weights,\n          message,\n          reaction,\n          reactingMember,\n          propsChannels,\n          reactions\n        )\n      );\n      wg.graph.addNode(node);\n      wg.graph.addNode(memberNode(reactingMember));\n      wg.graph.addEdge(reactsToEdge(reaction, message));\n      wg.graph.addEdge(\n        addsReactionEdge(reaction, reactingMember, message.timestampMs)\n      );\n    }\n\n    for (const {member, count} of mentions) {\n      wg.graph.addNode(memberNode(member));\n      let edge;\n      if (propsChannels.has(channelId)) {\n        edge = propsEdge(message, member);\n      } else {\n        edge = mentionsEdge(message, member);\n      }\n      wg.graph.addEdge(edge);\n      if (count > 1)\n        wg.weights.edgeWeights.set(edge.address, {\n          forwards: count,\n          backwards: 1,\n        });\n    }\n  }\n\n  return wg;\n}\n","// @flow\n\nimport * as C from \"../../util/combo\";\n\n/**\n * A Name is an identity name which has the following properties:\n * - It consists of alphanumeric ASCII and of dashes, which makes it suitable\n *   for including in urls (so we can give each contributor a hardcoded URL\n *   showing their contributions, Cred, and Grain).\n * - It is unique within an instance. Also, no two identities may have names that both\n *   have the same lowercase representation.\n * - It's chosen by (and changeable by) the owner of the identity.\n */\nexport opaque type Name: string = string;\nconst NAME_PATTERN = /^[A-Za-z0-9-]+$/;\n\n// Based on the length of an Ethereum address (with '0x' prefix)\nconst MAXIMUM_NAME_LENGTH = 42;\n\n/**\n * Parse a Name from a string.\n *\n * Throws an error if the Name is invalid.\n */\nexport function nameFromString(name: string): Name {\n  if (!name.match(NAME_PATTERN)) {\n    throw new Error(`invalid name: ${name}`);\n  }\n  if (name.length > MAXIMUM_NAME_LENGTH) {\n    throw new Error(`name too long: ${name}`);\n  }\n  return name;\n}\n\nconst COERCE_PATTERN = /[^A-Za-z0-9-]/g;\n/**\n * Attempt to coerce a string into a valid name, by replacing invalid\n * characters like `_` or `#` with hyphens.\n *\n * This can still error, if given a very long string or the empty string, it\n * will fail rather than try to change the name length.\n */\nexport function coerce(name: string): Name {\n  const coerced = name.replace(COERCE_PATTERN, \"-\");\n  return nameFromString(coerced);\n}\n\nexport const parser: C.Parser<Name> = C.fmap(C.string, nameFromString);\n","// @flow\n\nimport {escape} from \"entities\";\nimport {SqliteMirrorRepository} from \"./mirrorRepository\";\nimport * as Model from \"./models\";\nimport {memberAddress} from \"./createGraph\";\nimport {type IdentityProposal} from \"../../core/ledger/identityProposal\";\nimport {coerce, nameFromString} from \"../../core/identity/name\";\n\nexport function createIdentity(member: Model.GuildMember): IdentityProposal {\n  let name = member.nick || member.user.username;\n  // Discord allows very long names. Let's ensure the length is reasonable.\n  name = name.slice(0, 39);\n  const description = `discord/${escape(name)}#${member.user.discriminator}`;\n  const alias = {\n    description,\n    address: memberAddress(member),\n  };\n  const type = member.user.bot ? \"BOT\" : \"USER\";\n  return {\n    pluginName: nameFromString(\"discord\"),\n    name: coerce(name),\n    type,\n    alias,\n  };\n}\n\nexport function createIdentities(\n  repo: SqliteMirrorRepository\n): $ReadOnlyArray<IdentityProposal> {\n  return repo.members().map((m) => createIdentity(m));\n}\n","// @flow\n\nimport {createIdentity, createIdentities} from \"./createIdentities\";\n\nexport const identity = {\n  createIdentities,\n  createIdentity,\n};\n","// @flow\n\nimport deepFreeze from \"deep-freeze\";\nimport type {PluginDeclaration} from \"../../analysis/pluginDeclaration\";\nimport type {NodeType, EdgeType} from \"../../analysis/types\";\nimport {\n  NodeAddress,\n  EdgeAddress,\n  type NodeAddressT,\n  type EdgeAddressT,\n} from \"../../core/graph\";\nimport type {NodeEntryField} from \"./nodeEntry\";\n\nexport const nodePrefix: NodeAddressT = NodeAddress.fromParts([\n  \"sourcecred\",\n  \"initiatives\",\n]);\nexport const edgePrefix: EdgeAddressT = EdgeAddress.fromParts([\n  \"sourcecred\",\n  \"initiatives\",\n]);\n\nexport const initiativeNodeType: NodeType = deepFreeze({\n  name: \"Initiative\",\n  pluralName: \"Initiatives\",\n  prefix: NodeAddress.append(nodePrefix, \"initiative\"),\n  defaultWeight: 1,\n  description:\n    \"An initiative supernode, describing a scoped improvement to a project from proposal to completion.\",\n});\n\n// Changes capitalization for the field for display purposes.\nexport function _formatNodeEntryField(field: NodeEntryField): string {\n  return field[0].toUpperCase() + field.substring(1).toLowerCase();\n}\n\nfunction nodeEntryType(field: NodeEntryField): NodeType {\n  const displayField = _formatNodeEntryField(field);\n  return deepFreeze({\n    name: `${displayField} Entry`,\n    pluralName: `${displayField} Entries`,\n    prefix: NodeAddress.append(nodePrefix, String(field)),\n    defaultWeight: 1,\n    description:\n      `A ${displayField.toLowerCase()} entry node, to easily include` +\n      `contributions when other plugins don't add it to the graph.`,\n  });\n}\n\n// Note: we're exporting an object map with `NodeEntryField` as the key type.\n// This allows a generalized lookup of the NodeType in graphing logic.\nexport const nodeEntryTypes: {[NodeEntryField]: NodeType} = deepFreeze({\n  CONTRIBUTION: nodeEntryType(\"CONTRIBUTION\"),\n  DEPENDENCY: nodeEntryType(\"DEPENDENCY\"),\n  REFERENCE: nodeEntryType(\"REFERENCE\"),\n});\n\n// Keeping with convention of other declarations, also name each type.\nexport const contributionEntryType = nodeEntryTypes.CONTRIBUTION;\nexport const dependencyEntryType = nodeEntryTypes.DEPENDENCY;\nexport const referenceEntryType = nodeEntryTypes.REFERENCE;\n\n/*\n  Note on the forward and backward naming convention.\n  It follows the core/graph.js documentation to use\n  a <subject> <verb> <object> format to figure out\n  the directionality.\n*/\n\n/**\n * An initiative (src) DEPENDS ON (verb) a dependency (dst).\n * Forward: depending on something shows the value of the dependency.\n * Backward: having a dependency does not endorse the iniative, but does flow\n * some cred to incentivize reuse and attribution.\n */\nexport const dependsOnEdgeType: EdgeType = deepFreeze({\n  forwardName: \"depends on\",\n  backwardName: \"is a dependency for\",\n  prefix: EdgeAddress.append(edgePrefix, \"dependsOn\"),\n  defaultWeight: {forwards: 1, backwards: 1 / 16},\n  description: \"Connects an initiative to it's dependencies.\",\n});\n\n/**\n * An initiative (src) REFERENCES (verb) a reference (dst).\n * Forward: referencing from an initiative shows the value of the reference.\n * But we assume a reference likely needs some refinement to be used by the initiative,\n * so it flows less cred than to a dependency.\n * Backward: having reference material does not endorse the iniative, but does flow\n * some cred to incentivize using existing research and attribution.\n */\nexport const referencesEdgeType: EdgeType = deepFreeze({\n  forwardName: \"references\",\n  backwardName: \"is referenced for\",\n  prefix: EdgeAddress.append(edgePrefix, \"references\"),\n  defaultWeight: {forwards: 1 / 2, backwards: 1 / 16},\n  description: \"Connects an initiative to it's references.\",\n});\n\n/**\n * A contribution (src) CONTRIBUTES TO (verb) an initiative (dst).\n * Forward: a contribution towards the initiative is also an endorsement of the\n * value of that initiative.\n * Backward: an initiative in large part consists of it's contributions, so the\n * value of an initiative caries over to it's contributions.\n */\nexport const contributesToEdgeType: EdgeType = deepFreeze({\n  forwardName: \"contributes to\",\n  backwardName: \"is contributed to by\",\n  prefix: EdgeAddress.append(edgePrefix, \"contributesTo\"),\n  defaultWeight: {forwards: 1, backwards: 1},\n  description: \"Connects an initiative to it's contributions.\",\n});\n\n/**\n * A contributor (src) CONTRIBUTES TO (verb) an entry node (dst).\n * Forward: a contributor towards the entry node has a small endorsement of that\n * contribution. Though a high weight would risk contributors' own cred gets\n * \"lost to alpha\".\n * Backward: flows the value of the contribution to the contributors.\n */\nexport const contributesToEntryEdgeType: EdgeType = deepFreeze({\n  forwardName: \"contributes to entry\",\n  backwardName: \"entry is contributed to by\",\n  prefix: EdgeAddress.append(edgePrefix, \"contributesToEntry\"),\n  defaultWeight: {forwards: 1 / 16, backwards: 1},\n  description: \"Connects a contributor to an entry node.\",\n});\n\n/**\n * A user (src) CHAMPIONS (verb) an initiative (dst).\n * Meaning forward is the user claiming and committing they will champion an\n * initiative. And backward is the return of cred based on the completion and\n * succesful championing of the ininiative.\n *\n * Forward: a user championing an iniative is also an endorsement of the value\n * of that initiative.\n * Backward: an initiative likely received a lot of ongoing support from it's\n * champion. We're assuming this is more support than individual contributions.\n */\nexport const championsEdgeType: EdgeType = deepFreeze({\n  forwardName: \"champions\",\n  backwardName: \"is championed by\",\n  prefix: EdgeAddress.append(edgePrefix, \"champions\"),\n  defaultWeight: {forwards: 1, backwards: 4},\n  description: \"Connects an initiative to users who champion it.\",\n});\n\nexport const declaration: PluginDeclaration = deepFreeze({\n  name: \"Initiatives\",\n  nodePrefix,\n  edgePrefix,\n  nodeTypes: [\n    initiativeNodeType,\n    contributionEntryType,\n    dependencyEntryType,\n    referenceEntryType,\n  ],\n  edgeTypes: [\n    dependsOnEdgeType,\n    referencesEdgeType,\n    contributesToEdgeType,\n    championsEdgeType,\n    contributesToEntryEdgeType,\n  ],\n  userTypes: [],\n});\n","// @flow\n\nimport deepFreeze from \"deep-freeze\";\nimport {NodeAddress, type NodeAddressT} from \"../../core/graph\";\nimport {botSet} from \"./bots\";\n\nexport opaque type RawAddress: NodeAddressT = NodeAddressT;\n\nconst GITHUB_PREFIX = NodeAddress.fromParts([\"sourcecred\", \"github\"]);\nexport function _githubAddress(...parts: string[]): RawAddress {\n  return NodeAddress.append(GITHUB_PREFIX, ...parts);\n}\n\nexport const REPO_TYPE: \"REPO\" = \"REPO\";\nexport const ISSUE_TYPE: \"ISSUE\" = \"ISSUE\";\nexport const PULL_TYPE: \"PULL\" = \"PULL\";\nexport const REVIEW_TYPE: \"REVIEW\" = \"REVIEW\";\nexport const COMMENT_TYPE: \"COMMENT\" = \"COMMENT\";\nexport const COMMIT_TYPE: \"COMMIT\" = \"COMMIT\";\nexport const USERLIKE_TYPE: \"USERLIKE\" = \"USERLIKE\";\nexport const USER_SUBTYPE: \"USER\" = \"USER\";\nexport const BOT_SUBTYPE: \"BOT\" = \"BOT\";\n\nexport const Prefix: {|\n  base: NodeAddressT,\n  bot: RawAddress,\n  comment: RawAddress,\n  commit: RawAddress,\n  issue: RawAddress,\n  issueComment: RawAddress,\n  pull: RawAddress,\n  pullComment: RawAddress,\n  repo: RawAddress,\n  review: RawAddress,\n  reviewComment: RawAddress,\n  user: RawAddress,\n  userlike: RawAddress,\n|} = deepFreeze({\n  base: GITHUB_PREFIX,\n  repo: _githubAddress(REPO_TYPE),\n  issue: _githubAddress(ISSUE_TYPE),\n  pull: _githubAddress(PULL_TYPE),\n  review: _githubAddress(REVIEW_TYPE),\n  comment: _githubAddress(COMMENT_TYPE),\n  commit: _githubAddress(COMMIT_TYPE),\n  userlike: _githubAddress(USERLIKE_TYPE),\n  user: _githubAddress(USERLIKE_TYPE, USER_SUBTYPE),\n  bot: _githubAddress(USERLIKE_TYPE, BOT_SUBTYPE),\n  reviewComment: _githubAddress(COMMENT_TYPE, REVIEW_TYPE),\n  issueComment: _githubAddress(COMMENT_TYPE, ISSUE_TYPE),\n  pullComment: _githubAddress(COMMENT_TYPE, PULL_TYPE),\n});\n\n/**\n * Return the address corresponding to a GitHub login.\n *\n * If the login is considered a bot, then a bot address is returned. Otherwise,\n * a regular user address is returned. The method does not attempt to find out\n * whether the address should actually be an organization address, as we don't\n * yet handle organization addresses.\n *\n * Note: The signature will need to be refactored when we make the list of bots\n * a configuration option rather than a hardcoded constant.\n */\nexport function loginAddress(username: string): RawAddress {\n  const bots = botSet();\n  if (bots.has(username)) {\n    return NodeAddress.append(Prefix.bot, username);\n  } else {\n    return NodeAddress.append(Prefix.user, username);\n  }\n}\n\nexport type RepoAddress = {|\n  +type: typeof REPO_TYPE,\n  +owner: string,\n  +name: string,\n|};\nexport type IssueAddress = {|\n  +type: typeof ISSUE_TYPE,\n  +repo: RepoAddress,\n  +number: string,\n|};\nexport type PullAddress = {|\n  +type: typeof PULL_TYPE,\n  +repo: RepoAddress,\n  +number: string,\n|};\nexport type ReviewAddress = {|\n  +type: typeof REVIEW_TYPE,\n  +pull: PullAddress,\n  +id: string,\n|};\nexport type CommentAddress = {|\n  +type: typeof COMMENT_TYPE,\n  +parent: CommentableAddress,\n  +id: string,\n|};\nexport type CommitAddress = {|\n  +type: typeof COMMIT_TYPE,\n  +id: string,\n|};\nexport type UserlikeAddress = {|\n  +type: typeof USERLIKE_TYPE,\n  +subtype: typeof USER_SUBTYPE | typeof BOT_SUBTYPE,\n  +login: string,\n|};\n\nexport type StructuredAddress =\n  | RepoAddress\n  | IssueAddress\n  | PullAddress\n  | ReviewAddress\n  | CommentAddress\n  | CommitAddress\n  | UserlikeAddress;\n\n// Each of these types has 0 or more \"AUTHORS\" edges, each of which\n// leads to a UserlikeAddress.  Note: It is not true that every\n// Authorable has at least one author, as when GitHub accounts are\n// deleted, they leave behind posts without authors.\nexport type AuthorableAddress =\n  | IssueAddress\n  | PullAddress\n  | ReviewAddress\n  | CommentAddress\n  | CommitAddress;\n\n// Each of these types has text content, which means\n// it may be the source of a reference to a ReferentAddress.\nexport type TextContentAddress =\n  | IssueAddress\n  | PullAddress\n  | ReviewAddress\n  | CommentAddress\n  | CommitAddress;\n\n// Each of these types may be referred to by something\n// with text content.\nexport type ReferentAddress =\n  | RepoAddress\n  | IssueAddress\n  | PullAddress\n  | ReviewAddress\n  | CommentAddress\n  | CommitAddress\n  | UserlikeAddress;\n\n// Each of these types is structurally the child of some\n// entity with a ParentAddress.\nexport type ChildAddress =\n  | IssueAddress // child of RepoAddress\n  | PullAddress // child of RepoAddress\n  | ReviewAddress // child of PullAddress\n  | CommentAddress; // child of IssueAddress, PullAddress, or ReviewAddress\n\n// Each of these types may have child nodes (see ChildAddress).\nexport type ParentAddress =\n  | RepoAddress\n  | IssueAddress\n  | PullAddress\n  | ReviewAddress;\n\n// GitHub allows you to react to these types\nexport type ReactableAddress = IssueAddress | PullAddress | CommentAddress;\n\n// Each of these types may have Comments as children\nexport type CommentableAddress = IssueAddress | PullAddress | ReviewAddress;\n\n// Verify that Commentable is a subtype of Parent\nconst _unused_static = (_: CommentableAddress): ParentAddress => _;\n\nexport function fromRaw(x: RawAddress): StructuredAddress {\n  function fail() {\n    return new Error(`Bad address: ${NodeAddress.toString(x)}`);\n  }\n  if (!NodeAddress.hasPrefix(x, GITHUB_PREFIX)) {\n    throw fail();\n  }\n  const [_unused_sc, _unused_gh, kind, ...rest] = NodeAddress.toParts(x);\n  switch (kind) {\n    case REPO_TYPE: {\n      if (rest.length !== 2) {\n        throw fail();\n      }\n      const [owner, name] = rest;\n      return {type: REPO_TYPE, owner, name};\n    }\n    case ISSUE_TYPE: {\n      if (rest.length !== 3) {\n        throw fail();\n      }\n      const [owner, name, number] = rest;\n      const repo = {type: REPO_TYPE, owner, name};\n      return {type: ISSUE_TYPE, repo, number};\n    }\n    case PULL_TYPE: {\n      if (rest.length !== 3) {\n        throw fail();\n      }\n      const [owner, name, number] = rest;\n      const repo = {type: REPO_TYPE, owner, name};\n      return {type: PULL_TYPE, repo, number};\n    }\n    case REVIEW_TYPE: {\n      if (rest.length !== 4) {\n        throw fail();\n      }\n      const [owner, name, pullNumber, id] = rest;\n      const repo = {type: REPO_TYPE, owner, name};\n      const pull = {type: PULL_TYPE, repo, number: pullNumber};\n      return {type: REVIEW_TYPE, pull, id};\n    }\n    case COMMENT_TYPE: {\n      if (rest.length < 1) {\n        throw fail();\n      }\n      const [subkind, ...subrest] = rest;\n      switch (subkind) {\n        case ISSUE_TYPE: {\n          if (subrest.length !== 4) {\n            throw fail();\n          }\n          const [owner, name, issueNumber, id] = subrest;\n          const repo = {type: REPO_TYPE, owner, name};\n          const issue = {type: ISSUE_TYPE, repo, number: issueNumber};\n          return {type: COMMENT_TYPE, parent: issue, id};\n        }\n        case PULL_TYPE: {\n          if (subrest.length !== 4) {\n            throw fail();\n          }\n          const [owner, name, pullNumber, id] = subrest;\n          const repo = {type: REPO_TYPE, owner, name};\n          const pull = {type: PULL_TYPE, repo, number: pullNumber};\n          return {type: COMMENT_TYPE, parent: pull, id};\n        }\n        case REVIEW_TYPE: {\n          if (subrest.length !== 5) {\n            throw fail();\n          }\n          const [owner, name, pullNumber, reviewFragment, id] = subrest;\n          const repo = {type: REPO_TYPE, owner, name};\n          const pull = {type: PULL_TYPE, repo, number: pullNumber};\n          const review = {type: REVIEW_TYPE, pull, id: reviewFragment};\n          return {type: COMMENT_TYPE, parent: review, id};\n        }\n        default:\n          throw fail();\n      }\n    }\n    case COMMIT_TYPE: {\n      if (rest.length !== 1) {\n        throw fail();\n      }\n      const [id] = rest;\n      return {type: COMMIT_TYPE, id};\n    }\n    case USERLIKE_TYPE: {\n      if (rest.length !== 2) {\n        throw fail();\n      }\n      const [subtype, login] = rest;\n      if (subtype !== \"USER\" && subtype !== \"BOT\") {\n        throw fail();\n      }\n      return {type: USERLIKE_TYPE, subtype, login};\n    }\n    default:\n      throw fail();\n  }\n}\n\nexport function toRaw(x: StructuredAddress): RawAddress {\n  switch (x.type) {\n    case REPO_TYPE:\n      return NodeAddress.append(Prefix.repo, x.owner, x.name);\n    case ISSUE_TYPE:\n      return NodeAddress.append(\n        Prefix.issue,\n        x.repo.owner,\n        x.repo.name,\n        x.number\n      );\n    case PULL_TYPE:\n      return NodeAddress.append(\n        Prefix.pull,\n        x.repo.owner,\n        x.repo.name,\n        x.number\n      );\n    case REVIEW_TYPE:\n      return NodeAddress.append(\n        Prefix.review,\n        x.pull.repo.owner,\n        x.pull.repo.name,\n        x.pull.number,\n        x.id\n      );\n    case COMMENT_TYPE:\n      switch (x.parent.type) {\n        case ISSUE_TYPE:\n          return NodeAddress.append(\n            Prefix.issueComment,\n            x.parent.repo.owner,\n            x.parent.repo.name,\n            x.parent.number,\n            x.id\n          );\n        case PULL_TYPE:\n          return NodeAddress.append(\n            Prefix.pullComment,\n            x.parent.repo.owner,\n            x.parent.repo.name,\n            x.parent.number,\n            x.id\n          );\n        case REVIEW_TYPE:\n          return NodeAddress.append(\n            Prefix.reviewComment,\n            x.parent.pull.repo.owner,\n            x.parent.pull.repo.name,\n            x.parent.pull.number,\n            x.parent.id,\n            x.id\n          );\n        default:\n          throw new Error(`Bad comment parent type: ${(x.parent.type: empty)}`);\n      }\n    case USERLIKE_TYPE:\n      switch (x.subtype) {\n        case \"BOT\":\n          return NodeAddress.append(Prefix.bot, x.login);\n        case \"USER\":\n          return NodeAddress.append(Prefix.user, x.login);\n        default:\n          throw new Error((x.subtype: empty));\n      }\n    case COMMIT_TYPE:\n      return NodeAddress.append(Prefix.commit, x.id);\n    default:\n      throw new Error(`Unexpected type ${(x.type: empty)}`);\n  }\n}\n","// @flow\n\n// TODO(#638): Allow projects to specify bots via configuration,\n// rather than depending on this single souce of truth\nexport function botSet(): Set<string> {\n  return new Set([\n    \"codecov\",\n    \"codecov-io\",\n    \"credbot\",\n    \"facebook-github-bot\",\n    \"gitcoinbot\",\n    \"gitter-badger\",\n    \"googlebot\",\n    \"greenkeeper\",\n    \"greenkeeperio-bot\",\n    \"metamaskbot\",\n    \"nodejs-github-bot\",\n    \"stickler-ci\",\n    \"tensorflow-gardener\",\n    \"tensorflow-jenkins\",\n    \"tensorflowbutler\",\n    \"github-actions\",\n    \"vercel\",\n    \"codecov-commenter\",\n    \"transifex-integration\",\n    \"dependabot\",\n  ]);\n}\n","// @flow\n\nimport deepFreeze from \"deep-freeze\";\nimport {NodeAddress, type NodeAddressT} from \"../../core/graph\";\nimport type {Hash} from \"./types\";\n\nexport opaque type RawAddress: NodeAddressT = NodeAddressT;\n\nconst GIT_PREFIX = NodeAddress.fromParts([\"sourcecred\", \"git\"]);\nexport function _gitAddress(...parts: string[]): RawAddress {\n  return NodeAddress.append(GIT_PREFIX, ...parts);\n}\n\nexport const COMMIT_TYPE: \"COMMIT\" = \"COMMIT\";\n\nexport const Prefix: {|base: NodeAddressT, commit: RawAddress|} = deepFreeze({\n  base: GIT_PREFIX,\n  commit: _gitAddress(COMMIT_TYPE),\n});\n\nexport type CommitAddress = {|\n  +type: typeof COMMIT_TYPE,\n  +hash: Hash,\n|};\n\nexport type StructuredAddress = CommitAddress;\n\nexport function fromRaw(x: RawAddress): StructuredAddress {\n  function fail() {\n    return new Error(`Bad address: ${NodeAddress.toString(x)}`);\n  }\n  if (!NodeAddress.hasPrefix(x, GIT_PREFIX)) {\n    throw fail();\n  }\n  const [_unused_sc, _unused_git, _type, ...rest] = NodeAddress.toParts(x);\n  const type: $ElementType<StructuredAddress, \"type\"> = (_type: any);\n  switch (type) {\n    case \"COMMIT\": {\n      if (rest.length !== 1) throw fail();\n      const [hash] = rest;\n      return {type: COMMIT_TYPE, hash};\n    }\n    default:\n      // eslint-disable-next-line no-unused-expressions\n      (type: empty);\n      throw fail();\n  }\n}\n\nexport function toRaw(x: StructuredAddress): RawAddress {\n  switch (x.type) {\n    case COMMIT_TYPE:\n      return NodeAddress.append(Prefix.commit, x.hash);\n    default:\n      throw new Error(`Unexpected type ${(x.type: empty)}`);\n  }\n}\n","// @flow\n\n// Autogenerated file. Do not edit.\n\nimport deepFreeze from \"deep-freeze\";\n\nexport type Actor = Bot | Organization | User;\n\nexport type Blob = {|\n  +__typename: \"Blob\",\n  +id: string,\n  +oid: GitObjectID,\n|};\n\nexport type Bot = {|\n  +__typename: \"Bot\",\n  +id: string,\n  +login: String,\n  +url: URI,\n|};\n\nexport type Commit = {|\n  +__typename: \"Commit\",\n  +author: null | {|\n    +date: null | GitTimestamp,\n    +user: null | Bot | User,\n  |},\n  +authoredDate: GitTimestamp,\n  +id: string,\n  +message: String,\n  +oid: GitObjectID,\n  +parents: $ReadOnlyArray<null | Commit>,\n  +url: URI,\n|};\n\nexport type DateTime = string;\n\nexport type GitObject = Blob | Commit | Tag | Tree;\n\nexport type GitObjectID = string;\n\nexport type GitTimestamp = string;\n\nexport type Int = number;\n\nexport type Issue = {|\n  +__typename: \"Issue\",\n  +author: null | Actor,\n  +body: String,\n  +comments: $ReadOnlyArray<null | IssueComment>,\n  +createdAt: DateTime,\n  +id: string,\n  +number: Int,\n  +reactions: $ReadOnlyArray<null | Reaction>,\n  +title: String,\n  +url: URI,\n|};\n\nexport type IssueComment = {|\n  +__typename: \"IssueComment\",\n  +author: null | Actor,\n  +body: String,\n  +createdAt: DateTime,\n  +id: string,\n  +reactions: $ReadOnlyArray<null | Reaction>,\n  +url: URI,\n|};\n\nexport type Organization = {|\n  +__typename: \"Organization\",\n  +id: string,\n  +login: String,\n  +url: URI,\n|};\n\nexport type PullRequest = {|\n  +__typename: \"PullRequest\",\n  +additions: Int,\n  +author: null | Actor,\n  +baseRefName: String,\n  +body: String,\n  +comments: $ReadOnlyArray<null | IssueComment>,\n  +createdAt: DateTime,\n  +deletions: Int,\n  +id: string,\n  +mergeCommit: null | Commit,\n  +number: Int,\n  +reactions: $ReadOnlyArray<null | Reaction>,\n  +reviews: $ReadOnlyArray<null | PullRequestReview>,\n  +title: String,\n  +url: URI,\n|};\n\nexport type PullRequestReview = {|\n  +__typename: \"PullRequestReview\",\n  +author: null | Actor,\n  +body: String,\n  +comments: $ReadOnlyArray<null | PullRequestReviewComment>,\n  +createdAt: DateTime,\n  +id: string,\n  +state: PullRequestReviewState,\n  +url: URI,\n|};\n\nexport type PullRequestReviewComment = {|\n  +__typename: \"PullRequestReviewComment\",\n  +author: null | Actor,\n  +body: String,\n  +createdAt: DateTime,\n  +id: string,\n  +reactions: $ReadOnlyArray<null | Reaction>,\n  +url: URI,\n|};\n\nexport type PullRequestReviewState =\n  | \"APPROVED\"\n  | \"CHANGES_REQUESTED\"\n  | \"COMMENTED\"\n  | \"DISMISSED\"\n  | \"PENDING\";\n\nexport const PullRequestReviewState$Values: {|\n  +\"APPROVED\": \"APPROVED\",\n  +\"CHANGES_REQUESTED\": \"CHANGES_REQUESTED\",\n  +\"COMMENTED\": \"COMMENTED\",\n  +\"DISMISSED\": \"DISMISSED\",\n  +\"PENDING\": \"PENDING\",\n|} = deepFreeze({\n  \"APPROVED\": \"APPROVED\",\n  \"CHANGES_REQUESTED\": \"CHANGES_REQUESTED\",\n  \"COMMENTED\": \"COMMENTED\",\n  \"DISMISSED\": \"DISMISSED\",\n  \"PENDING\": \"PENDING\",\n});\n\nexport type Reaction = {|\n  +__typename: \"Reaction\",\n  +content: ReactionContent,\n  +createdAt: DateTime,\n  +id: string,\n  +user: null | Organization | User,\n|};\n\nexport type ReactionContent =\n  | \"CONFUSED\"\n  | \"EYES\"\n  | \"HEART\"\n  | \"HOORAY\"\n  | \"LAUGH\"\n  | \"ROCKET\"\n  | \"THUMBS_DOWN\"\n  | \"THUMBS_UP\";\n\nexport const ReactionContent$Values: {|\n  +\"CONFUSED\": \"CONFUSED\",\n  +\"EYES\": \"EYES\",\n  +\"HEART\": \"HEART\",\n  +\"HOORAY\": \"HOORAY\",\n  +\"LAUGH\": \"LAUGH\",\n  +\"ROCKET\": \"ROCKET\",\n  +\"THUMBS_DOWN\": \"THUMBS_DOWN\",\n  +\"THUMBS_UP\": \"THUMBS_UP\",\n|} = deepFreeze({\n  \"CONFUSED\": \"CONFUSED\",\n  \"EYES\": \"EYES\",\n  \"HEART\": \"HEART\",\n  \"HOORAY\": \"HOORAY\",\n  \"LAUGH\": \"LAUGH\",\n  \"ROCKET\": \"ROCKET\",\n  \"THUMBS_DOWN\": \"THUMBS_DOWN\",\n  \"THUMBS_UP\": \"THUMBS_UP\",\n});\n\nexport type Ref = {|\n  +__typename: \"Ref\",\n  +id: string,\n  +target: null | GitObject,\n|};\n\nexport type Repository = {|\n  +__typename: \"Repository\",\n  +createdAt: DateTime,\n  +defaultBranchRef: null | Ref,\n  +id: string,\n  +issues: $ReadOnlyArray<null | Issue>,\n  +name: String,\n  +owner: null | RepositoryOwner,\n  +pullRequests: $ReadOnlyArray<null | PullRequest>,\n  +url: URI,\n|};\n\nexport type RepositoryOwner = Organization | User;\n\nexport type String = string;\n\nexport type Tag = {|\n  +__typename: \"Tag\",\n  +id: string,\n  +oid: GitObjectID,\n|};\n\nexport type Tree = {|\n  +__typename: \"Tree\",\n  +id: string,\n  +oid: GitObjectID,\n|};\n\nexport type URI = string;\n\nexport type User = {|\n  +__typename: \"User\",\n  +id: string,\n  +login: String,\n  +url: URI,\n|};\n","// @flow\n\nimport deepFreeze from \"deep-freeze\";\nimport {\n  type Edge,\n  type EdgeAddressT,\n  EdgeAddress,\n  NodeAddress,\n} from \"../../core/graph\";\nimport * as GithubNode from \"./nodes\";\nimport * as GitNode from \"../git/nodes\";\nimport {\n  type ReactionContent,\n  ReactionContent$Values as Reactions,\n} from \"./graphqlTypes\";\nimport {type TimestampMs} from \"../../util/timestamp\";\n\nexport opaque type RawAddress: EdgeAddressT = EdgeAddressT;\n\nexport const AUTHORS_TYPE = \"AUTHORS\";\nexport const MERGED_AS_TYPE = \"MERGED_AS\";\nexport const HAS_PARENT_TYPE = \"HAS_PARENT\";\nexport const REFERENCES_TYPE = \"REFERENCES\";\nexport const REACTS_TYPE = \"REACTS\";\n// GitHub tracks its own notion of a commit, which has a particular\n// database id, is scoped to a particular repository, and has a canonical url\n// on GitHub. The CORRESPONDS_TO_COMMIT_TYPE edges connect the GitHub commits\n// to the corresponding Git commit.\nexport const CORRESPONDS_TO_COMMIT_TYPE = \"CORRESPONDS_TO_COMMIT_TYPE\";\n\nconst GITHUB_PREFIX = EdgeAddress.fromParts([\"sourcecred\", \"github\"]);\nfunction githubEdgeAddress(...parts: string[]): RawAddress {\n  return EdgeAddress.append(GITHUB_PREFIX, ...parts);\n}\n\nexport const Prefix: {|\n  authors: RawAddress,\n  base: EdgeAddressT,\n  correspondsToCommit: RawAddress,\n  hasParent: RawAddress,\n  mergedAs: RawAddress,\n  reacts: RawAddress,\n  reactsHeart: RawAddress,\n  reactsHooray: RawAddress,\n  reactsRocket: RawAddress,\n  reactsThumbsUp: RawAddress,\n  references: RawAddress,\n|} = deepFreeze({\n  base: GITHUB_PREFIX,\n  authors: githubEdgeAddress(AUTHORS_TYPE),\n  mergedAs: githubEdgeAddress(MERGED_AS_TYPE),\n  references: githubEdgeAddress(REFERENCES_TYPE),\n  hasParent: githubEdgeAddress(HAS_PARENT_TYPE),\n  reacts: githubEdgeAddress(REACTS_TYPE),\n  reactsThumbsUp: githubEdgeAddress(REACTS_TYPE, Reactions.THUMBS_UP),\n  reactsHeart: githubEdgeAddress(REACTS_TYPE, Reactions.HEART),\n  reactsHooray: githubEdgeAddress(REACTS_TYPE, Reactions.HOORAY),\n  reactsRocket: githubEdgeAddress(REACTS_TYPE, Reactions.ROCKET),\n  correspondsToCommit: githubEdgeAddress(CORRESPONDS_TO_COMMIT_TYPE),\n});\n\nexport type AuthorsAddress = {|\n  +type: typeof AUTHORS_TYPE,\n  +author: GithubNode.UserlikeAddress,\n  +content: GithubNode.AuthorableAddress,\n|};\nexport type MergedAsAddress = {|\n  +type: typeof MERGED_AS_TYPE,\n  +pull: GithubNode.PullAddress,\n|};\nexport type HasParentAddress = {|\n  +type: typeof HAS_PARENT_TYPE,\n  +child: GithubNode.ChildAddress,\n|};\nexport type ReferencesAddress = {|\n  +type: typeof REFERENCES_TYPE,\n  +referrer: GithubNode.TextContentAddress,\n  +referent: GithubNode.ReferentAddress,\n|};\nexport type ReactsAddress = {|\n  +type: typeof REACTS_TYPE,\n  +reactionType: ReactionContent,\n  +user: GithubNode.UserlikeAddress,\n  +reactable: GithubNode.ReactableAddress,\n|};\nexport type CorrespondsToCommitAddress = {|\n  +type: typeof CORRESPONDS_TO_COMMIT_TYPE,\n  +githubCommit: GithubNode.CommitAddress,\n|};\n\nexport type StructuredAddress =\n  | AuthorsAddress\n  | MergedAsAddress\n  | HasParentAddress\n  | ReferencesAddress\n  | ReactsAddress\n  | CorrespondsToCommitAddress;\n\nexport const createEdge: {|\n  authors: (\n    author: GithubNode.UserlikeAddress,\n    content: GithubNode.AuthorableAddress,\n    timestampMs: TimestampMs\n  ) => Edge,\n  correspondsToCommit: (\n    githubCommit: GithubNode.CommitAddress,\n    gitCommit: GitNode.CommitAddress,\n    timestampMs: TimestampMs\n  ) => Edge,\n  hasParent: (\n    child: GithubNode.ChildAddress,\n    parent: GithubNode.ParentAddress,\n    timestampMs: TimestampMs\n  ) => Edge,\n  mergedAs: (\n    pull: GithubNode.PullAddress,\n    commit: GithubNode.CommitAddress,\n    timestampMs: TimestampMs\n  ) => Edge,\n  reacts: (\n    reactionType: ReactionContent,\n    user: GithubNode.UserlikeAddress,\n    reactable: GithubNode.ReactableAddress,\n    timestampMs: TimestampMs\n  ) => Edge,\n  references: (\n    referrer: GithubNode.TextContentAddress,\n    referent: GithubNode.ReferentAddress,\n    timestampMs: TimestampMs\n  ) => Edge,\n|} = deepFreeze({\n  authors: (\n    author: GithubNode.UserlikeAddress,\n    content: GithubNode.AuthorableAddress,\n    timestampMs: TimestampMs\n  ): Edge => ({\n    address: toRaw({type: AUTHORS_TYPE, author, content}),\n    src: GithubNode.toRaw(author),\n    dst: GithubNode.toRaw(content),\n    timestampMs,\n  }),\n  mergedAs: (\n    pull: GithubNode.PullAddress,\n    commit: GithubNode.CommitAddress,\n    timestampMs: TimestampMs\n  ): Edge => ({\n    address: toRaw({type: MERGED_AS_TYPE, pull}),\n    src: GithubNode.toRaw(pull),\n    dst: GithubNode.toRaw(commit),\n    timestampMs,\n  }),\n  correspondsToCommit: (\n    githubCommit: GithubNode.CommitAddress,\n    gitCommit: GitNode.CommitAddress,\n    timestampMs: TimestampMs\n  ): Edge => ({\n    address: toRaw({type: CORRESPONDS_TO_COMMIT_TYPE, githubCommit}),\n    src: GithubNode.toRaw(githubCommit),\n    dst: GitNode.toRaw(gitCommit),\n    timestampMs,\n  }),\n  hasParent: (\n    child: GithubNode.ChildAddress,\n    parent: GithubNode.ParentAddress,\n    timestampMs: TimestampMs\n  ): Edge => ({\n    address: toRaw({type: HAS_PARENT_TYPE, child}),\n    src: GithubNode.toRaw(child),\n    dst: GithubNode.toRaw(parent),\n    timestampMs,\n  }),\n  references: (\n    referrer: GithubNode.TextContentAddress,\n    referent: GithubNode.ReferentAddress,\n    timestampMs: TimestampMs\n  ): Edge => ({\n    address: toRaw({type: REFERENCES_TYPE, referrer, referent}),\n    src: GithubNode.toRaw(referrer),\n    dst: GithubNode.toRaw(referent),\n    timestampMs,\n  }),\n  reacts: (\n    reactionType: ReactionContent,\n    user: GithubNode.UserlikeAddress,\n    reactable: GithubNode.ReactableAddress,\n    timestampMs: TimestampMs\n  ): Edge => ({\n    address: toRaw({\n      type: REACTS_TYPE,\n      user,\n      reactionType,\n      reactable,\n    }),\n    src: GithubNode.toRaw(user),\n    dst: GithubNode.toRaw(reactable),\n    timestampMs,\n  }),\n});\n\nfunction lengthEncode(x: GithubNode.RawAddress): $ReadOnlyArray<string> {\n  const parts = NodeAddress.toParts(x);\n  return [String(parts.length), ...parts];\n}\nfunction lengthDecode(\n  x: $ReadOnlyArray<string>,\n  fail: () => Error\n): {|+parts: $ReadOnlyArray<string>, +rest: $ReadOnlyArray<string>|} {\n  if (x.length === 0) {\n    // Not length-encoded.\n    throw fail();\n  }\n  const [lengthString, ...allParts] = x;\n  const length = parseInt(lengthString, 10);\n  if (isNaN(length)) {\n    throw fail();\n  }\n  if (length > allParts.length) {\n    // Not enough elements.\n    throw fail();\n  }\n  return {parts: allParts.slice(0, length), rest: allParts.slice(length)};\n}\nfunction multiLengthDecode(x: $ReadOnlyArray<string>, fail: () => Error) {\n  let remaining = x;\n  const partses = [];\n  while (remaining.length > 0) {\n    const {parts, rest} = lengthDecode(remaining, fail);\n    partses.push(parts);\n    remaining = rest;\n  }\n  return partses;\n}\n\nexport function fromRaw(x: RawAddress): StructuredAddress {\n  function fail() {\n    return new Error(`Bad address: ${EdgeAddress.toString(x)}`);\n  }\n  if (!EdgeAddress.hasPrefix(x, GITHUB_PREFIX)) {\n    throw fail();\n  }\n  const [_unused_sc, _unused_gh, kind, ...rest] = EdgeAddress.toParts(x);\n  switch (kind) {\n    case AUTHORS_TYPE: {\n      const parts = multiLengthDecode(rest, fail);\n      if (parts.length !== 2) {\n        throw fail();\n      }\n      const [authorParts, contentParts] = parts;\n      const author: GithubNode.UserlikeAddress = (GithubNode.fromRaw(\n        (NodeAddress.fromParts(authorParts): any)\n      ): any);\n      const content: GithubNode.AuthorableAddress = (GithubNode.fromRaw(\n        (NodeAddress.fromParts(contentParts): any)\n      ): any);\n      return ({type: AUTHORS_TYPE, author, content}: AuthorsAddress);\n    }\n    case MERGED_AS_TYPE: {\n      const parts = multiLengthDecode(rest, fail);\n      if (parts.length !== 1) {\n        throw fail();\n      }\n      const [pullParts] = parts;\n      const pull: GithubNode.PullAddress = (GithubNode.fromRaw(\n        (NodeAddress.fromParts(pullParts): any)\n      ): any);\n      return ({type: MERGED_AS_TYPE, pull}: MergedAsAddress);\n    }\n    case HAS_PARENT_TYPE: {\n      const parts = multiLengthDecode(rest, fail);\n      if (parts.length !== 1) {\n        throw fail();\n      }\n      const [childParts] = parts;\n      const child: GithubNode.ChildAddress = (GithubNode.fromRaw(\n        (NodeAddress.fromParts(childParts): any)\n      ): any);\n      return ({type: HAS_PARENT_TYPE, child}: HasParentAddress);\n    }\n    case REFERENCES_TYPE: {\n      const parts = multiLengthDecode(rest, fail);\n      if (parts.length !== 2) {\n        throw fail();\n      }\n      const [referrerParts, referentParts] = parts;\n      const referrer: GithubNode.TextContentAddress = (GithubNode.fromRaw(\n        (NodeAddress.fromParts(referrerParts): any)\n      ): any);\n      const referent: GithubNode.ReferentAddress = (GithubNode.fromRaw(\n        (NodeAddress.fromParts(referentParts): any)\n      ): any);\n      return ({type: REFERENCES_TYPE, referrer, referent}: ReferencesAddress);\n    }\n    case REACTS_TYPE: {\n      const [rawReactionType, ...rest2] = rest;\n      const reactionType = Reactions[rawReactionType];\n      if (reactionType == null) {\n        throw fail();\n      }\n      const parts = multiLengthDecode(rest2, fail);\n      if (parts.length !== 2) {\n        throw fail();\n      }\n      const [userParts, reactableParts] = parts;\n      const user: GithubNode.UserlikeAddress = (GithubNode.fromRaw(\n        (NodeAddress.fromParts(userParts): any)\n      ): any);\n      const reactable: GithubNode.ReactableAddress = (GithubNode.fromRaw(\n        (NodeAddress.fromParts(reactableParts): any)\n      ): any);\n      return {type: REACTS_TYPE, reactionType, user, reactable};\n    }\n    default:\n      throw fail();\n  }\n}\n\nexport function toRaw(x: StructuredAddress): RawAddress {\n  switch (x.type) {\n    case AUTHORS_TYPE:\n      return EdgeAddress.append(\n        Prefix.authors,\n        ...lengthEncode(GithubNode.toRaw(x.author)),\n        ...lengthEncode(GithubNode.toRaw(x.content))\n      );\n    case MERGED_AS_TYPE:\n      return EdgeAddress.append(\n        Prefix.mergedAs,\n        ...lengthEncode(GithubNode.toRaw(x.pull))\n      );\n    case HAS_PARENT_TYPE:\n      return EdgeAddress.append(\n        Prefix.hasParent,\n        ...lengthEncode(GithubNode.toRaw(x.child))\n      );\n    case REFERENCES_TYPE:\n      return EdgeAddress.append(\n        Prefix.references,\n        ...lengthEncode(GithubNode.toRaw(x.referrer)),\n        ...lengthEncode(GithubNode.toRaw(x.referent))\n      );\n    case REACTS_TYPE:\n      return EdgeAddress.append(\n        Prefix.reacts,\n        x.reactionType,\n        ...lengthEncode(GithubNode.toRaw(x.user)),\n        ...lengthEncode(GithubNode.toRaw(x.reactable))\n      );\n    case CORRESPONDS_TO_COMMIT_TYPE:\n      return EdgeAddress.append(\n        Prefix.correspondsToCommit,\n        ...lengthEncode(GithubNode.toRaw(x.githubCommit))\n      );\n    default:\n      throw new Error((x.type: empty));\n  }\n}\n","// @flow\n\nimport deepFreeze from \"deep-freeze\";\nimport type {PluginDeclaration} from \"../../analysis/pluginDeclaration\";\nimport * as N from \"./nodes\";\nimport * as E from \"./edges\";\nimport type {NodeAddressT} from \"../../core/graph\";\nimport dedent from \"../../util/dedent\";\n\nexport const repoNodeType: {|\n  +defaultWeight: number,\n  +description: string,\n  +name: string,\n  +pluralName: string,\n  +prefix: NodeAddressT,\n|} = deepFreeze({\n  name: \"Repository\",\n  pluralName: \"Repositories\",\n  prefix: N.Prefix.repo,\n  defaultWeight: 0,\n  description: \"NodeType for a GitHub repository\",\n});\n\nconst issueNodeType = deepFreeze({\n  name: \"Issue\",\n  pluralName: \"Issues\",\n  prefix: N.Prefix.issue,\n  defaultWeight: 0,\n  description: \"NodeType for a GitHub issue\",\n});\n\nconst pullNodeType = deepFreeze({\n  name: \"Pull request\",\n  pluralName: \"Pull requests\",\n  prefix: N.Prefix.pull,\n  defaultWeight: 4,\n  description: \"NodeType for a GitHub pull request\",\n});\n\nconst reviewNodeType = deepFreeze({\n  name: \"Pull request review\",\n  pluralName: \"Pull request reviews\",\n  prefix: N.Prefix.review,\n  defaultWeight: 1,\n  description: \"NodeType for a GitHub code review\",\n});\n\nconst commentNodeType = deepFreeze({\n  name: \"Comment\",\n  pluralName: \"Comments\",\n  prefix: N.Prefix.comment,\n  defaultWeight: 0,\n  description: \"NodeType for a GitHub comment\",\n});\n\nconst commitNodeType = deepFreeze({\n  name: \"Commit\",\n  pluralName: \"Commits\",\n  prefix: N.Prefix.commit,\n  defaultWeight: 0,\n  description:\n    \"Represents a particular Git commit on GitHub, i.e. scoped to a particular repository\",\n});\n\nexport const userNodeType: {|\n  +defaultWeight: number,\n  +description: string,\n  +name: string,\n  +pluralName: string,\n  +prefix: NodeAddressT,\n|} = deepFreeze({\n  name: \"User\",\n  pluralName: \"Users\",\n  prefix: N.Prefix.user,\n  defaultWeight: 0,\n  description: \"NodeType for a GitHub user\",\n});\n\nconst botNodeType = deepFreeze({\n  name: \"Bot\",\n  pluralName: \"Bots\",\n  prefix: N.Prefix.bot,\n  defaultWeight: 0,\n  description: \"NodeType for a GitHub bot account\",\n});\n\nconst nodeTypes = deepFreeze([\n  repoNodeType,\n  issueNodeType,\n  pullNodeType,\n  reviewNodeType,\n  commentNodeType,\n  commitNodeType,\n  userNodeType,\n  botNodeType,\n]);\n\nconst authorsEdgeType = deepFreeze({\n  forwardName: \"authors\",\n  backwardName: \"is authored by\",\n  defaultWeight: {forwards: 1 / 2, backwards: 1},\n  prefix: E.Prefix.authors,\n  description: dedent`\\\n    Connects a GitHub account to a post that they authored.\n\n    Examples of posts include issues, pull requests, and comments.\n  `,\n});\n\nconst hasParentEdgeType = deepFreeze({\n  forwardName: \"has parent\",\n  backwardName: \"has child\",\n  defaultWeight: {forwards: 1, backwards: 1 / 4},\n  prefix: E.Prefix.hasParent,\n  description: dedent`\\\n    Connects a GitHub entity to its child entities.\n\n    For example, a Repository has Issues and Pull Requests as children, and a\n    Pull Request has comments and reviews as children.\n  `,\n});\n\nconst mergedAsEdgeType = deepFreeze({\n  forwardName: \"merges\",\n  backwardName: \"is merged by\",\n  defaultWeight: {forwards: 1 / 2, backwards: 1},\n  prefix: E.Prefix.mergedAs,\n  description: dedent`\\\n    Connects a GitHub pull request to the Git commit that it merges.\n  `,\n});\n\nconst referencesEdgeType = deepFreeze({\n  forwardName: \"references\",\n  backwardName: \"is referenced by\",\n  defaultWeight: {forwards: 1, backwards: 0},\n  prefix: E.Prefix.references,\n  description: dedent`\\\n    Connects a GitHub post to an entity that it references.\n\n    For example, if you write a GitHub issue comment that says \"thanks\n    @username for pull #1337\", it will create references edges to both the user\n    @username, and to pull #1337 in the same repository.\n  `,\n});\n\nconst reactsHeartEdgeType = deepFreeze({\n  forwardName: \"reacted ❤️ to\",\n  backwardName: \"got ❤️ from\",\n  defaultWeight: {forwards: 2, backwards: 0},\n  prefix: E.Prefix.reactsHeart,\n  description: dedent`\\\n    Connects users to posts to which they gave a ❤️ reaction.\n  `,\n});\n\nconst reactsThumbsUpEdgeType = deepFreeze({\n  forwardName: \"reacted 👍 to\",\n  backwardName: \"got 👍 from\",\n  defaultWeight: {forwards: 1, backwards: 0},\n  prefix: E.Prefix.reactsThumbsUp,\n  description: dedent`\\\n    Connects users to posts to which they gave a 👍 reaction.\n  `,\n});\n\nconst reactsHoorayEdgeType = deepFreeze({\n  forwardName: \"reacted 🎉 to\",\n  backwardName: \"got 🎉 from\",\n  defaultWeight: {forwards: 4, backwards: 0},\n  prefix: E.Prefix.reactsHooray,\n  description: dedent`\\\n    Connects users to posts to which they gave a 🎉 reaction.\n  `,\n});\n\nconst reactsRocketEdgeType = deepFreeze({\n  forwardName: \"reacted 🚀 to\",\n  backwardName: \"got 🚀 from\",\n  defaultWeight: {forwards: 1, backwards: 0},\n  prefix: E.Prefix.reactsRocket,\n  description: dedent`\\\n    Connects users to posts to which they gave a 🚀 reaction.\n  `,\n});\n\nconst correspondsToCommitEdgeType = deepFreeze({\n  forwardName: \"corresponds to Git commit\",\n  backwardName: \"merged on GitHub as\",\n  defaultWeight: {forwards: 1, backwards: 1},\n  prefix: E.Prefix.correspondsToCommit,\n  description: dedent`\\\n    Connects a commit on GitHub to the corresponding raw Git commit.\n  `,\n});\n\nconst edgeTypes = deepFreeze([\n  authorsEdgeType,\n  hasParentEdgeType,\n  mergedAsEdgeType,\n  referencesEdgeType,\n  reactsThumbsUpEdgeType,\n  reactsHeartEdgeType,\n  reactsHoorayEdgeType,\n  reactsRocketEdgeType,\n  correspondsToCommitEdgeType,\n]);\n\nexport const declaration: PluginDeclaration = deepFreeze({\n  name: \"GitHub\",\n  nodePrefix: N.Prefix.base,\n  edgePrefix: E.Prefix.base,\n  nodeTypes: nodeTypes,\n  edgeTypes: edgeTypes,\n  userTypes: [userNodeType],\n});\n","// @flow\n\nimport deepFreeze from \"deep-freeze\";\nimport type {PluginDeclaration} from \"../../analysis/pluginDeclaration\";\nimport type {NodeType} from \"../../analysis/types\";\nimport {\n  NodeAddress,\n  EdgeAddress,\n  type NodeAddressT,\n  type EdgeAddressT,\n} from \"../../core/graph\";\n\nexport const nodePrefix: NodeAddressT = NodeAddress.fromParts([\n  \"sourcecred\",\n  \"ethereum\",\n]);\n\nexport const edgePrefix: EdgeAddressT = EdgeAddress.fromParts([\n  \"sourcecred\",\n  \"ethereum\",\n]);\n\nexport const ethAddressEntryType: NodeType = deepFreeze({\n  name: `Ethereum Address Entry`,\n  pluralName: `Ethereum Address Entries`,\n  prefix: nodePrefix,\n  defaultWeight: 0,\n  description:\n    `A Ethereum address, that can be utilized by a participant` +\n    `to receive grain payouts, and linked to their identity.`,\n});\n\nexport const declaration: PluginDeclaration = deepFreeze({\n  name: \"Ethereum\",\n  nodePrefix,\n  edgePrefix,\n  nodeTypes: [ethAddressEntryType],\n  edgeTypes: [],\n  userTypes: [ethAddressEntryType],\n});\n","// @flow\n\nimport stringify from \"json-stable-stringify\";\nimport * as C from \"./combo\";\n\n/**\n * JsonLog tracks and serializes append-only logs of JSON values.\n *\n * At its heart, it's basically a simple wrapper around an array, which\n * enforces the rule that items may be appended to it, but never removed.\n *\n * It also provides serialization logic. We store the log as a\n * newline-delimited stream of JSON values, with a one-to-one correspondence\n * between POSIX lines and elements in the sequence. That is, the serialized\n * form of an element will never contain an embedded newline, and there are no\n * empty lines. JSON streams can be easily inspected and manipulatedwith tools\n * like `jq` as well as standard Unix filters, and can be stored and\n * transmitted efficiently in Git repositories thanks to packfiles and delta\n * compression.\n *\n * Elements of a `JsonLog` are always parsed using a Combo.Parser, which\n * ensures type safety at runtime.\n */\nexport class JsonLog<T: C.JsonObject> {\n  +_items: T[];\n\n  constructor() {\n    this._items = [];\n  }\n\n  append(item: T): JsonLog<T> {\n    this._items.push(item);\n    return this;\n  }\n\n  extend(items: Iterable<T>): JsonLog<T> {\n    for (const item of items) {\n      this._items.push(item);\n    }\n    return this;\n  }\n\n  values(): Iterator<T> {\n    return this._items.values();\n  }\n\n  toString(): string {\n    const lines = this._items.map((x) => stringify(x) + \"\\n\");\n    return lines.join(\"\");\n  }\n\n  static fromString(log: string, parser: C.Parser<T>): JsonLog<T> {\n    const result = new JsonLog();\n    _extractLogLines(log).forEach((line, i) => {\n      let parsed;\n      try {\n        parsed = parser.parse(JSON.parse(line));\n      } catch (e) {\n        throw new Error(`line ${i + 1} is not valid JSON: ${e}`);\n      }\n      if (parsed.ok) {\n        result.append(parsed.value);\n      } else {\n        throw new Error(`line ${i + 1}: ${parsed.err}`);\n      }\n    });\n    return result;\n  }\n}\n\nfunction _extractLogLines(log: string): string[] {\n  // In the legacy format, all automatically written ledgers erroneously\n  // lacked trailing LF, but some hand-edited ones have them. In the new\n  // format, all automatically written ledgers include a trailing LF.\n  // Strip it, if present, for ease of `split(\"\\n\")`.\n  log = log.trimRight();\n  // If the file is empty, return no entries to parse\n  if (log.length === 0) {\n    return [];\n  }\n  if (log.startsWith(\"[\")) {\n    // Temporarily compatibility measure for raw JSON arrays (not NDJSON),\n    // in the specific form written by previous versions of this module.\n    if (log === \"[]\") {\n      return [];\n    }\n    const dataLines = log.split(\"\\n\").slice(1, -1);\n    return dataLines.map((line) =>\n      line.endsWith(\",\") ? line.slice(0, -1) : line\n    );\n  }\n  return log.split(\"\\n\");\n}\n","// @flow\n\nimport {type NodeAddressT, NodeAddress} from \"../../core/graph\";\nimport {nodePrefix} from \"./declaration\";\nimport {type EthAddress} from \"./ethAddress\";\n\nexport function nodeAddressForEthAddress(address: EthAddress): NodeAddressT {\n  return NodeAddress.append(nodePrefix, address);\n}\n","// @flow\n\nimport {type IdentityProposal} from \"../../core/ledger/identityProposal\";\nimport {coerce, nameFromString} from \"../../core/identity/name\";\nimport {JsonLog} from \"../../util/jsonLog\";\nimport {type EthAddress} from \"./ethAddress\";\nimport {nodeAddressForEthAddress} from \"./ethAddressNode\";\n\nexport function createIdentity(address: EthAddress): IdentityProposal {\n  const alias = {\n    description: address,\n    address: nodeAddressForEthAddress(address),\n  };\n\n  return {\n    pluginName: nameFromString(\"ethereum\"),\n    name: coerce(address),\n    type: \"USER\",\n    alias,\n  };\n}\n\nexport function createIdentities(\n  ethAddresses: JsonLog<EthAddress>\n): $ReadOnlyArray<IdentityProposal> {\n  return Array.from(ethAddresses.values()).map(createIdentity);\n}\n","// @flow\n\nimport {isAddress, toChecksumAddress} from \"web3-utils\";\n\nimport * as C from \"../../util/combo\";\nimport {compatibleParser} from \"../../util/compat\";\n\nexport opaque type EthAddress: string = string;\n\nexport const ETH_CURRENCY_ADDRESS: EthAddress =\n  \"0x0000000000000000000000000000000000000000\";\n\n/**\n * parseAddress will accept any 20-byte hexadecimal ethereum address encoded as\n * a string, optionally prefixed with `0x`.\n *\n * Per EIP-55 (https://eips.ethereum.org/EIPS/eip-55), parseAddress throws if\n * the provided string is mixed-case but not checksum-encoded. All valid\n * addresses in lower- and upper-case format will not throw.\n *\n * For consistency, all valid addresses are converted and returned in\n * mixed-case form with the `0x` prefix included\n *\n * valid formats:\n * \"2Ccc7cD913677553766873483ed9eEDdB77A0Bb0\"\n * \"0x2Ccc7cD913677553766873483ed9eEDdB77A0Bb0\"\n * \"0X2CCC7CD913677553766873483ED9EEDDB77A0BB0\"\n * \"0x2ccc7cd913677553766873483ed9eeddb77a0bb0\"\n *\n * invalid formats:\n * \"0x2ccc7cD913677553766873483ed9eEDdB77A0Bb0\"\n * \"2ccc7cD913677553766873483ed9eEDdB77A0Bb0\"\n */\nexport function parseAddress(s: string): EthAddress {\n  if (!isAddress(s)) {\n    throw new Error(`not a valid ethereum address: ${s}`);\n  }\n  return toChecksumAddress(s);\n}\n\n// Utilized for a more readable and recognizable address. This is\n// needed to allow the address to fit within the Identity name requirements\nexport function truncateEthAddress(address: EthAddress): string {\n  const prefix = address.slice(0, 6);\n  const suffix = address.slice(-4);\n  return `${prefix}...${suffix}`;\n}\n\nexport const ethAddressParser: C.Parser<EthAddress> = C.fmap(\n  C.string,\n  parseAddress\n);\n\nexport const COMPAT_INFO = {\n  type: \"sourcecred/ethAddress\",\n  version: \"0.0.1\",\n};\n\nconst addressEntriesParser = C.array(ethAddressParser);\n\nexport const parser: C.Parser<\n  Array<EthAddress>\n> = compatibleParser(COMPAT_INFO.type, {\"0.0.1\": addressEntriesParser});\n","// @flow\n\nimport {createIdentity, createIdentities} from \"./createIdentities\";\nimport {parseAddress, truncateEthAddress} from \"./ethAddress\";\nimport {nodeAddressForEthAddress} from \"./ethAddressNode\";\n\nexport const address = {\n  parseAddress,\n  truncateEthAddress,\n  nodeAddressForEthAddress,\n};\n\nexport const identity = {\n  createIdentities,\n  createIdentity,\n};\n","// @flow\n\nimport {\n  type NodeAddressT,\n  type EdgeAddressT,\n  NodeAddress,\n  EdgeAddress,\n} from \"../core/graph\";\nimport {type EdgeWeight, edgeWeightParser} from \"../core/weights\";\nimport * as G from \"../util/combo\";\n\n/**\n * This module defines `NodeType`s and `EdgeType`s, both of which are\n * data structures containing shared metadata that describes many nodes or edges\n * in the graph. Nodes can be \"members\" of zero or more `NodeType`s, and edges can\n * be \"members\" of zero or more `EdgeType`s. Membership is determined based on the\n * type's `prefix`, which is an address. A node or edge is considered a member of\n * a type if that type's prefix is a prefix of the node's address.\n *\n * To make this more concrete, let's consider a specific example. Suppose we define\n * the following nodes:\n *\n * const pullNode = NodeAddress.fromParts([\"github\", \"pull\", \"repo\", \"34\"]);\n * const commitNode = NodeAddress.fromParts([\"git\", \"commit\", \"e1337\"]);\n * const pullType: NodeType = {\n *  name: \"Pull request\",\n *  prefix: NodeAddress.fromParts([\"github\", \"pull\"]),\n *  // ... more properties as required\n * };\n * const githubType: NodeType = {\n *   name: \"GitHub node\",\n *   prefix: NodeAddress.fromParts([\"github\"])\n * };\n *\n * Then the `pullNode` is considered a member of the `pullType` and `githubType`,\n * while the `commitNode` is not a member of either type.\n *\n * The concept of a \"type\" is useful to SourceCred because it let's us express\n * that groups of nodes are conceptually related, and that we should treat them similarly.\n * Most saliently, we use types to assign default weights to groups of nodes, and to\n * aggregate them for better UI organization. The fact that the SourceCred UI can group\n * all pull requests together, and assign a default weight to all of them, is possible\n * because the GitHub plugin defines a pull request node type.\n *\n * While a node or edge can theoretically be a member of multiple types, in practice we\n * generally treat the node or edge as though it is only a member of its most specific type.\n * In the example above, we would treat any individual pull request as though it is only\n * a member of the pull request node type. That may change in the future. In general,\n * the type system is not wholly finalized; when it does become finalized, we will\n * likely move it into src/core. See [#710] for context.\n *\n * [#710]: https://github.com/sourcecred/sourcecred/issues/710\n */\n\n/**\n * Represents a \"Type\" of node in the graph. See the module docstring\n * for context.\n */\nexport type NodeType = {|\n  // The name for an individual node of this type.\n  // For example, for the GitHub PULL_REQUEST node type, the name is \"Pull\n  // request\". The first letter of the name should be capitalized.\n  +name: string,\n  // The name for multiple nodes of this type.\n  // For example, for the GitHub PULL_REQUEST node type, the pluralName is\n  // \"Pull requests\". The first letter of this name should be capitalized.\n  +pluralName: string,\n  // The address that will be used to test whether a node is a member\n  // of this NodeType. A given node `n` is a member of the type `t` if\n  // `NodeAddress.hasPrefix(n, t.prefix) == true`\n  +prefix: NodeAddressT,\n  // The default weight to assign to nodes of this type. We use `1` to mean \"of\n  // normal importance\", and the weights scale linearly from there (i.e. 2\n  // means twice as important).\n  +defaultWeight: number,\n  // The `description` property should be a human-readable string that makes\n  // it clear to a user what each NodeType does\n  +description: string,\n|};\n\nexport const nodeTypeParser: G.Parser<NodeType> = G.object({\n  name: G.string,\n  pluralName: G.string,\n  prefix: NodeAddress.parser,\n  defaultWeight: G.number,\n  description: G.string,\n});\n\n/**\n * Represents a \"Type\" of edge in the graph. See the module docstring\n * for context.\n */\nexport type EdgeType = {|\n  // A brief descriptive name of what the \"forward\" direction of the edge\n  // means. For example, for the GitHub REFERENCES edge type, the forwardName\n  // is \"references\"\n  +forwardName: string,\n\n  // A brief descriptive name of what the \"backward\" direction of the edge\n  // means. For example, for the GitHub REFERENCES edge type, the backwardName\n  // is \"referenced by\"\n  +backwardName: string,\n\n  // The default forwards and backwards weights for this edge.\n  // We use `1` as a default value (\"of normal importance\").\n  // The weights have linear importance, i.e. 2 is twice as important as 1.\n  +defaultWeight: EdgeWeight,\n\n  // The address that will be used to test whether an edge is a member\n  // of this EdgeType. A given edge `e` is a member of the type `t` if\n  // `EdgeAddress.hasPrefix(e.address, t.prefix) == true`\n  +prefix: EdgeAddressT,\n\n  // The `description` property should be a human-readable string that makes\n  // it clear to a user what each EdgeType does.\n  //\n  // By convention, the first line of the description should be a sentence\n  // beginning with the word \"Connects\", which describes what kinds of nodes\n  // the edge connects and why. Optionally, you may provide examples and additional\n  // context after one blank link. Here is an example (for the \"Merged As\" edge).\n  //\n  // ```js\n  // const mergedAsDescription = dedent`\\\n  //  Connects a GitHub pull request to the Git commit it merged.\n  //\n  //  A pull request can have either one or zero Merged As edges, depending on\n  //  whether or not it was ever merged.\n  //  `\n  // ```\n  //\n  // (Note the use of the `util/dedent.js` makes it easier to write multi-lined\n  // strings with clean formatting.)\n  +description: string,\n|};\n\nexport const edgeTypeParser: G.Parser<EdgeType> = G.object({\n  forwardName: G.string,\n  backwardName: G.string,\n  defaultWeight: edgeWeightParser,\n  prefix: EdgeAddress.parser,\n  description: G.string,\n});\n\nexport type NodeAndEdgeTypes = {|\n  +nodeTypes: NodeType[],\n  +edgeTypes: EdgeType[],\n|};\n","// @flow\n\nimport {\n  type NodeAddressT,\n  type EdgeAddressT,\n  NodeAddress,\n  EdgeAddress,\n} from \"../core/graph\";\nimport type {EdgeType, NodeType, NodeAndEdgeTypes} from \"./types\";\nimport {nodeTypeParser, edgeTypeParser} from \"./types\";\nimport * as Weights from \"../core/weights\";\nimport {type WeightsT} from \"../core/weights\";\nimport * as C from \"../util/combo\";\n\n// TODO(@decentralion): Maybe merge this file with analysis/types\n\nexport type PluginDeclaration = {|\n  +name: string,\n  +nodePrefix: NodeAddressT,\n  +edgePrefix: EdgeAddressT,\n  +nodeTypes: $ReadOnlyArray<NodeType>,\n  +edgeTypes: $ReadOnlyArray<EdgeType>,\n  // Which node types represent user identities.\n  // This is used to exclude user node types from the weight configuration UI\n  +userTypes: $ReadOnlyArray<NodeType>,\n|};\n\nexport const declarationParser: C.Parser<PluginDeclaration> = C.object({\n  name: C.string,\n  nodePrefix: NodeAddress.parser,\n  edgePrefix: EdgeAddress.parser,\n  nodeTypes: C.array(nodeTypeParser),\n  edgeTypes: C.array(edgeTypeParser),\n  userTypes: C.array(nodeTypeParser),\n});\n\nexport function combineTypes(\n  decs: $ReadOnlyArray<PluginDeclaration>\n): NodeAndEdgeTypes {\n  const nodeTypes = [].concat(...decs.map((x) => x.nodeTypes));\n  const edgeTypes = [].concat(...decs.map((x) => x.edgeTypes));\n  return {nodeTypes, edgeTypes};\n}\n\nexport function weightsForDeclaration(dec: PluginDeclaration): WeightsT {\n  const weights = Weights.empty();\n  const {nodeTypes, edgeTypes} = dec;\n  for (const {prefix, defaultWeight} of nodeTypes) {\n    weights.nodeWeights.set(prefix, defaultWeight);\n  }\n  for (const {prefix, defaultWeight} of edgeTypes) {\n    weights.edgeWeights.set(prefix, defaultWeight);\n  }\n  return weights;\n}\n","// @flow\n\n// Universally unique identifiers. As in the UUID4 spec, we use\n// uniformly random 128-bit payloads, but we represent them more\n// compactly as base64 strings (22 characters long) rather than hex\n// strings (36 characters with a bunch of hyphens). We also ensure that\n// the serialized form is clean for machine and human eyes.\n\nimport {encode as base64Encode, decode as base64Decode} from \"base-64\";\nimport getRandomValues from \"./getRandomValues\";\n\nimport * as C from \"./combo\";\n\nexport opaque type Uuid: string = string;\n\n// Any UUIDs that we generate will be purely alphanumeric and will not\n// contain consecutive pairs of certain letters. Non-alphanumeric base64\n// characters are either +/ or -_, depending on encoding. The former set\n// is not URL-safe, and the latter set is not safe for command line\n// arguments (IDs starting with hyphens) or easy legibility (consecutive\n// hyphens or underscores). Consecutive occurrences of /csfhuit/i are\n// forbidden per a heuristic given by <https://hashids.org/#cursing> to\n// avoid common English curse words.\nconst _RE_UNCLEAN = /[+/\\-_]|[csfhuit]{2}/i;\n\nfunction isClean(s: string): boolean {\n  return !s.match(_RE_UNCLEAN);\n}\n\n// Generate an unpadded base64 string of a uniformly random 128-bit\n// payload. This may be unclean.\nfunction randomUuidUnchecked(): string {\n  const bytes = getRandomValues(new Uint8Array(16));\n  const blob = [...bytes].map((n) => String.fromCharCode(n)).join(\"\");\n  return base64Encode(blob).slice(0, -2); // drop \"==\" padding\n}\n\n// Generate this many uniformly random UUIDs looking for a clean one.\n// The total failure probability drops off exponentially with each try.\n//\n// To model the probability that `randomUuidUnchecked` emits a clean ID,\n// consider a DFA with three states INIT, DANGER, and FAIL. If we ever\n// see a non-alphanumeric character, go straight to FAIL (which\n// absorbs). If we see one of the characters that must not appear twice\n// consecutively, more from INIT to DANGER or DANGER to FAIL. If we see\n// any other character, move from DANGER back to INIT. Then this is a\n// Markov chain with transitions:\n//\n//   - INIT: 48/64 to INIT, 14/64 to DANGER, 2/64 to FAIL;\n//   - DANGER: 48/64 to INIT, 16/64 to FAIL;\n//   - FAIL: always back to FAIL.\n//\n// A 128-bit payload is base-64 encoded by 21 uniform code units plus\n// one final code unit with less entropy (only 2 bits), but for\n// simplicity we'll just model this as 22 uniform code units, which is\n// very nearly correct. Then the probability of emitting an unclean ID\n// is the probability that after 22 steps in this Markov chain starting\n// from INIT we end up at FAIL---\n//\n//     $ octave --no-gui\n//     >> A = [48 14 2; 48 0 16; 0 0 64] / 64;\n//     >> A^22\n//     ans =\n//\n//        0.15839   0.03738   0.80424\n//        0.12815   0.03024   0.84161\n//        0.00000   0.00000   1.00000\n//\n// ---which is about 80.4%. So any individual attempt is likely to fail,\n// but after five attempts the probability of total failure is only\n// 33.6%, and it drops off exponentially from there.\nconst _MAX_ATTEMPTS = 1024;\n\n/**\n * Generate a uniformly random clean ID.\n */\nexport function random(): Uuid {\n  for (let i = 0; i < _MAX_ATTEMPTS; i++) {\n    const result: string = randomUuidUnchecked();\n    if (isClean(result)) {\n      // Because we use rejection sampling, this is uniformly random\n      // among clean IDs.\n      return (result: Uuid);\n    }\n  }\n  // This is vanishingly unlikely (p ~= 10^-97). Something is wrong.\n  // istanbul ignore next\n  throw new Error(\n    `failed to generate clean UUID after ${_MAX_ATTEMPTS} attempts`\n  );\n}\n\n/**\n * Parse a serialized UUID. This is the left inverse of the trivial\n * injection from `Uuid` to `string`, and throws on invalid input.\n */\nexport function fromString(s: string): Uuid {\n  if (s.endsWith(\"=\")) {\n    throw new Error(\"expected unpadded string: \" + JSON.stringify(s));\n  }\n  if (s.length !== 22) {\n    throw new Error(\"expected length-22 string: \" + JSON.stringify(s));\n  }\n  if (!isClean(s)) {\n    throw new Error(\n      \"unclean UUID: \" + JSON.stringify(s) + JSON.stringify(_RE_UNCLEAN.exec(s))\n    );\n  }\n  let bytes;\n  try {\n    bytes = base64Decode(s);\n  } catch (e) {\n    throw new Error(\"invalid base64 string: \" + JSON.stringify(s));\n  }\n  if (base64Encode(bytes) !== s + \"==\") {\n    // e.g., \"z\" === atob(\"eg\") === atob(\"eh\")\n    throw new Error(\"non-canonical base64 string: \" + JSON.stringify(s));\n  }\n  return s;\n}\n\n/**\n * Parse a serialized UUID. This expects to parse a JSON string value\n * with the same semantics as `fromString`.\n */\nexport const parser: C.Parser<Uuid> = C.fmap(C.string, fromString);\n","// @flow\n\n/*\n * API shim for `window.crypto.getRandomValues` in the browser, for\n * compatibility with browser, Node, Jest, and Observable.\n *\n * Forked from NPM `get-random-bytes` by Kenan Yildirim, which is\n * released under the MIT License.\n */\n\n/**\n * Fill the given buffer with cryptographically secure random bytes. The\n * buffer length must not exceed 65536.\n */\nexport default function getRandomValues(buf: Uint8Array): Uint8Array {\n  if (typeof window !== \"undefined\") {\n    if (window.crypto && window.crypto.getRandomValues) {\n      return window.crypto.getRandomValues(buf);\n    }\n    if (\n      typeof window.msCrypto === \"object\" &&\n      typeof window.msCrypto.getRandomValues === \"function\"\n    ) {\n      return window.msCrypto.getRandomValues(buf);\n    }\n  }\n\n  if (typeof require !== \"undefined\") {\n    // Late-import `crypto` to avoid `require` in Observable notebooks,\n    // and avoid using a literal `require(...)` to prevent Webpack from\n    // rewriting this. (Getting Webpack externals to work properly is\n    // daunting.)\n    //\n    /* eslint-disable camelcase */\n    /* eslint-disable no-undef */\n    const realRequire =\n      // $FlowExpectedError[cannot-resolve-name]\n      typeof __non_webpack_require__ !== \"undefined\"\n        ? __non_webpack_require__\n        : require; /* needed for Jest */\n    const nodeCrypto = realRequire(\"crypto\");\n    if (buf.length > 65536) {\n      const e = new Error();\n      (e: any).code = 22;\n      e.message = `Quota exceeded: requested ${buf.length} > 65536 bytes`;\n      e.name = \"QuotaExceededError\";\n      throw e;\n    }\n    const bytes = nodeCrypto.randomBytes(buf.length);\n    buf.set(bytes);\n    return buf;\n  }\n  throw new Error(\"No secure random number generator available.\");\n}\n","// @flow\n\nimport {type Uuid, parser} from \"../../util/uuid\";\n\nexport type IdentityId = Uuid;\nexport const identityIdParser = parser;\n","// @flow\n\nimport {type NodeAddressT, NodeAddress} from \"../../core/graph\";\nimport * as C from \"../../util/combo\";\n\n/**\n * An Alias is basically another graph Node which resolves to this identity. We\n * ignore the timestamp because it's generally not significant for users; we\n * keep the address out of obvious necessity, and we keep the description so we\n * can describe this alias in UIs (e.g. the ledger admin panel).\n */\nexport type Alias = {|\n  +description: string,\n  +address: NodeAddressT,\n|};\n\nexport const parser: C.Parser<Alias> = C.object({\n  address: NodeAddress.parser,\n  description: C.string,\n});\n","// @flow\n\nimport * as C from \"../../util/combo\";\nimport deepFreeze from \"deep-freeze\";\n\nconst ValidIdentityTypes = {\n  USER: \"USER\",\n  PROJECT: \"PROJECT\",\n  ORGANIZATION: \"ORGANIZATION\",\n  BOT: \"BOT\",\n};\n\n// export a read-only version of the ValidIdentityTypes object for programmatic reference\nexport const IdentityTypes: typeof ValidIdentityTypes = deepFreeze(\n  ValidIdentityTypes\n);\nexport type IdentityType = $Keys<typeof IdentityTypes>;\nexport const parser: C.Parser<IdentityType> = C.exactly(\n  Object.keys(IdentityTypes)\n);\n","// @flow\n\nimport * as C from \"../../util/combo\";\nimport {\n  type Uuid,\n  random as randomUuid,\n  parser as uuidParser,\n} from \"../../util/uuid\";\nimport {type Name, parser as nameParser, nameFromString} from \"./name\";\nimport {type Alias, parser as aliasParser} from \"./alias\";\nimport {type IdentityType, parser as identityTypeParser} from \"./identityType\";\nimport {\n  type NodeAddressT,\n  NodeAddress,\n  type Node as GraphNode,\n  type NodeContraction,\n} from \"../../core/graph\";\n\nexport type IdentityId = Uuid;\n\nexport type Identity = {|\n  // UUID, assigned when the identity is created.\n  +id: IdentityId,\n  +name: Name,\n  +subtype: IdentityType,\n  // The identity's own node address.\n  // The address is guaranteed to start with IDENTITY_PREFIX, and to\n  // include the identity id for uniqueness. Beyond that, you may NOT make any\n  // assumptions about the particular address structure. Remember that these\n  // addresses are permanent.\n  +address: NodeAddressT,\n  // Every other node in the graph that this identity corresponds to.\n  // Does not include the identity's \"own\" address, i.e. the result\n  // of calling (identityAddress(identity.id)).\n  +aliases: $ReadOnlyArray<Alias>,\n|};\n\n// It's not in the typical [owner, name] format because it isn't provided by a plugin.\n// Instead, it's a raw type owned by SourceCred project.\nexport const IDENTITY_PREFIX: NodeAddressT = NodeAddress.fromParts([\n  \"sourcecred\",\n  \"core\",\n  \"IDENTITY\",\n]);\n\nexport function newIdentity(subtype: IdentityType, name: string): Identity {\n  const id = randomUuid();\n  try {\n    identityTypeParser.parseOrThrow(subtype);\n  } catch (e) {\n    throw new Error(`invalid identity subtype: ${subtype}`);\n  }\n  return {\n    id,\n    subtype,\n    address: NodeAddress.append(IDENTITY_PREFIX, id),\n    name: nameFromString(name),\n    aliases: [],\n  };\n}\n\nexport function graphNode({name, address}: Identity): GraphNode {\n  return {\n    address,\n    description: name,\n    timestampMs: null,\n  };\n}\n\nexport function contractions(\n  identities: $ReadOnlyArray<Identity>\n): $ReadOnlyArray<NodeContraction> {\n  return identities.map((i) => ({\n    replacement: graphNode(i),\n    old: i.aliases.map((a) => a.address),\n  }));\n}\n\nexport const parser: C.Parser<Identity> = C.object({\n  id: uuidParser,\n  subtype: identityTypeParser,\n  name: nameParser,\n  address: NodeAddress.parser,\n  aliases: C.array(aliasParser),\n});\n","// @flow\n\nimport {\n  ethAddressParser,\n  type EthAddress,\n} from \"../../plugins/ethereum/ethAddress\";\nimport * as C from \"../../util/combo\";\n\n/**\n * EvmChainId is represented in the form of a stringified integer for all\n * EVM-based chains, including mainnet (1), and xDai (100).\n * The reason for this is that ethereum's client configuration utilizes\n * a number to represent chainId, and this way we can just transpose that\n * chainId here as a component of the currency Id, since the web3 client will\n * return a stringified integer when the chainId is requested.\n */\nexport opaque type EvmChainId: string = string;\n\nexport function parseEvmChainId(id: string): EvmChainId {\n  const result = parseInt(id, 10).toString();\n  if (Number.isNaN(result) || result !== id) {\n    throw new Error(`Invalid EVM chainId value: ${id}`);\n  }\n  return id;\n}\n\nexport type Evm = {|\n  +type: \"EVM\",\n  +chainId: EvmChainId,\n  /**\n   * tokenAddress is a subset of all available EthAddresses.\n   *\n   * A token address is the address of the token contract for an ERC20 token,\n   * or the 20 byte-length equivalent of 0x0, which is the conventional address\n   * used to represent ETH on the ethereum mainnet, or the native currency on an\n   * EVM-based sidechain. See here for more details on these semantics:\n   * https://ethereum.org/en/developers/docs/intro-to-ethereum/#eth\n   */\n  +tokenAddress: EthAddress,\n|};\n\n/**\n * Example protocol symbols: \"BTC\" for bitcoin and \"FIL\" for Filecoin\n */\nexport opaque type ProtocolSymbol: string = string;\n\nexport const protocolSymbolParser: C.Parser<ProtocolSymbol> = C.exactly([\n  \"BTC\",\n  \"FIL\",\n]);\n\n/**\n * Chains like Bitcoin and Filecoin do not have \"production\" sidechains so\n * we represent them as a string, as specified in the ProtocolSymbol type\n */\nexport type Protocol = {|\n  +type: \"PROTOCOL\",\n  +chainId: ProtocolSymbol,\n|};\n\nexport type ChainId = EvmChainId | ProtocolSymbol;\nexport type Currency = Evm | Protocol;\n\nexport const evmChainParser: C.Parser<EvmChainId> = C.fmap(\n  C.string,\n  parseEvmChainId\n);\n\nexport const evmParser: C.Parser<Evm> = C.object({\n  type: C.exactly([\"EVM\"]),\n  chainId: evmChainParser,\n  tokenAddress: ethAddressParser,\n});\n\nexport const protocolParser: C.Parser<Protocol> = C.object({\n  type: C.exactly([\"PROTOCOL\"]),\n  chainId: protocolSymbolParser,\n});\n\n// @topocount TODO: enable protocolIdParser once we support its address types\nexport const currencyParser: C.Parser<Currency> = C.orElse([\n  evmParser,\n  protocolParser,\n]);\n\nexport function buildCurrency(\n  chainId: string,\n  tokenAddress?: string\n): Currency {\n  return tokenAddress\n    ? evmParser.parseOrThrow({\n        type: \"EVM\",\n        chainId,\n        tokenAddress,\n      })\n    : protocolParser.parseOrThrow({\n        type: \"PROTOCOL\",\n        chainId,\n      });\n}\n","// @flow\n\nimport * as C from \"../util/combo\";\nimport * as NullUtil from \"../util/null\";\nimport {\n  type Currency as IntegrationCurrency,\n  currencyParser as integrationCurrencyParser,\n} from \"../core/ledger/currency\";\n/**\n * Shape of currencyDetails.json on disk\n */\ntype SerializedCurrencyDetails = {|\n  +currencyName?: string,\n  +currencySuffix?: string,\n  +decimalsToDisplay?: number,\n  +integrationCurrency?: IntegrationCurrency,\n|};\n\n/**\n * Shape of currencyDetails json in memory after parsing\n */\nexport type CurrencyDetails = {|\n  +name: string,\n  +suffix: string,\n  +decimals: number,\n  +integrationCurrency?: IntegrationCurrency,\n|};\n\nexport const DEFAULT_NAME = \"Grain\";\nexport const DEFAULT_SUFFIX = \"g\";\nexport const DEFAULT_DECIMALS = 2;\n\n/**\n * Utilized by combo.fmap to enforce default currency values\n * when parsing. This engenders a \"canonical default\" since there\n * will be no need to add default fallbacks when handling currency\n * detail values after parsing the serialized file.\n */\nfunction upgrade(c: SerializedCurrencyDetails): CurrencyDetails {\n  if (\n    typeof c.decimalsToDisplay === \"number\" &&\n    (c.decimalsToDisplay > 18 || c.decimalsToDisplay < 0)\n  )\n    throw new Error(\"currencyConfig: decimalsToDisplay must be between 0-18\");\n\n  return {\n    name: NullUtil.orElse(c.currencyName, DEFAULT_NAME),\n    suffix: NullUtil.orElse(c.currencySuffix, DEFAULT_SUFFIX),\n    decimals: NullUtil.orElse(c.decimalsToDisplay, DEFAULT_DECIMALS),\n    integrationCurrency: c.integrationCurrency,\n  };\n}\n\nexport function defaultCurrencyConfig(): CurrencyDetails {\n  return {\n    name: DEFAULT_NAME,\n    suffix: DEFAULT_SUFFIX,\n    decimals: DEFAULT_DECIMALS,\n  };\n}\n\nexport const parser: C.Parser<CurrencyDetails> = C.fmap(\n  C.object(\n    {},\n    {\n      currencyName: C.string,\n      currencySuffix: C.string,\n      decimalsToDisplay: C.number,\n      integrationCurrency: integrationCurrencyParser,\n    }\n  ),\n  upgrade\n);\n","// @flow\n\nimport * as P from \"../../util/combo\";\nimport bigInt from \"big-integer\";\nimport {DEFAULT_SUFFIX} from \"../../api/currencyConfig\";\n\n/**\n * This module contains the types for tracking Grain, which is the native\n * project-specific, cred-linked token created in SourceCred instances. In\n * practice, projects can call these tokens anything they want, but we will\n * refer to the tokens as \"Grain\" throughout the codebase. The conserved\n * properties of all Grains are that they are minted/distributed based on cred\n * scores, and that they can be used to Boost contributions in a cred graph.\n *\n * We track Grain using big integer arithmetic, so that we can be precise with\n * Grain values and avoid float imprecision issues. Following the convention of\n * ERC20 tokens, we track Grain at 18 decimals of precision, although we can\n * make this project-specific if there's a future need.\n *\n * At rest, we represent Grain as strings. This is a convenient decision around\n * serialization boundaries, so that we can just directly stringify objects containing\n * Grain values and it will Just Work. The downside is that we need to convert them to/fro\n * string representations any time we need to do Grain arithmetic, which could create\n * perf hot spots. If so, we can factor out the hot loop and do them in a way\n * that has less overhead. You can see context for this decision in [#1936] and [#1938].\n *\n * Ideally, we would just use the native [BigInt] type. However, at time of\n * writing it's not well supported by [flow] or Safari, so we use the\n * big-integer library. That library delegates out to native BigInt when\n * available, so this should be fine.\n *\n * Since the big-integer library does have a sensible `toString` method defined\n * on the integers, we could switch to representing Grain at rest via\n * big-integers rather than as strings. However, this would require re-writing\n * a lot of test code. If perf becomes an issue that would be a principled fix.\n *\n * [BigInt]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt\n * [flow]: https://github.com/facebook/flow/issues/6639\n * [#1936]: https://github.com/sourcecred/sourcecred/pull/1936\n * [#1938]: https://github.com/sourcecred/sourcecred/pull/1938\n */\nexport opaque type Grain: string = string;\n\nexport const ZERO: Grain = \"0\";\n\n// How many digits of precision there are in \"one\" grain\nexport const DECIMAL_PRECISION = 18;\n\n// One \"full\" grain\nexport const ONE: Grain = bigInt(10).pow(DECIMAL_PRECISION).toString();\n\nexport function add(a: Grain, b: Grain): Grain {\n  return bigInt(a).plus(bigInt(b)).toString();\n}\nexport function sub(a: Grain, b: Grain): Grain {\n  return bigInt(a).subtract(bigInt(b)).toString();\n}\nexport function mul(a: Grain, b: Grain): Grain {\n  return bigInt(a).times(bigInt(b)).toString();\n}\nexport function div(a: Grain, b: Grain): Grain {\n  return bigInt(a).divide(bigInt(b)).toString();\n}\nexport function lt(a: Grain, b: Grain): boolean {\n  return bigInt(a).lt(bigInt(b));\n}\nexport function gt(a: Grain, b: Grain): boolean {\n  return bigInt(a).gt(bigInt(b));\n}\nexport function lte(a: Grain, b: Grain): boolean {\n  return bigInt(a).leq(bigInt(b));\n}\nexport function gte(a: Grain, b: Grain): boolean {\n  return bigInt(a).geq(bigInt(b));\n}\nexport function eq(a: Grain, b: Grain): boolean {\n  return bigInt(a).eq(bigInt(b));\n}\n\nexport function fromString(s: string): Grain {\n  return bigInt(s).toString();\n}\n\n/**\n * Formats a grain balance as a human-readable number, dividing the\n * raw grain balance by `one`.\n *\n * The client controls how many digits of precision are shown; by default, we\n * display zero digits. Grain balances will have commas added as\n * thousands-separators if the balance is greater than 1000g.\n *\n * The client also specifies a suffix; by default, we use 'g' for grain.\n *\n * Here are some examples of its behavior, pretending that we use 2 decimals\n * of precision for readability:\n *\n * format(133700042n) === \"1,337,000g\"\n * format(133700042n, 2) === \"1,337,000.42g\"\n * format(133700042n, 2, \"seeds\") === \"1,337,000.42seeds\"\n * format(133700042n, 2, \"\") === \"1,337,000.42\"\n *\n */\nexport function format(\n  grain: Grain,\n  decimals: number = 0,\n  suffix: string = DEFAULT_SUFFIX\n): string {\n  if (\n    !Number.isInteger(decimals) ||\n    decimals < 0 ||\n    decimals > DECIMAL_PRECISION\n  ) {\n    throw new Error(\n      `decimals must be integer in range [0..${DECIMAL_PRECISION}]`\n    );\n  }\n  const isNegative = grain[0] === \"-\";\n  let digits = [...grain];\n  if (isNegative) {\n    // Remove the negative sign for consistency, we'll prepend it back at the end\n    digits = digits.slice(1, digits.length);\n  }\n\n  // If the number is less than one, we need to pad it with zeros at the front\n  if (digits.length < DECIMAL_PRECISION + 1) {\n    digits = [\n      ...new Array(DECIMAL_PRECISION + 1 - digits.length).fill(\"0\"),\n      ...digits,\n    ];\n  }\n  // If we have more than 1000 grain, then we will insert commas for\n  // readability\n  const integerDigits = digits.length - DECIMAL_PRECISION;\n  const numCommasToInsert = Math.floor((integerDigits - 1) / 3);\n  for (let i = 0; i < numCommasToInsert; i++) {\n    // Count digits backwards from the last integer.\n    // Since we are moving from high index to low, we don't need to adjust for\n    // the fact that we're mutating the length of the array as we go... if you\n    // are concerned, rest assured that this logic is tested :)\n    digits.splice(integerDigits - i * 3 - 3, 0, \",\");\n  }\n  if (decimals > 0) {\n    // Insert a decimal point at the right spot\n    digits.splice(digits.length - DECIMAL_PRECISION, 0, \".\");\n  }\n  // Slice away all the unwanted precision\n  digits = digits.slice(0, digits.length - DECIMAL_PRECISION + decimals);\n  if (isNegative) {\n    // re-insert the negative sign, if appropriate\n    digits.splice(0, 0, \"-\");\n  }\n  return digits.join(\"\") + suffix;\n}\n\n/**\n * Formats a grain balance as a human-readable number using the format()\n * method, but trims any unnecessary decimal information.\n *\n * The intended use is for UI presentation where less visual clutter is\n * desired.\n *\n * Here are some examples of its behavior\n *\n * format(100000000000000) === \"0.0001g\"\n * format(150000000000000000000) === \"150g\"\n * format(15000000000000000000000) === \"15,000g\"\n * format(15000000000000000000000, \"seeds\") === \"15,000seeds\"\n * format(15000000000000000000000, \"\") === \"15,000\"\n *\n */\nexport function formatAndTrim(\n  grain: Grain,\n  suffix: string = DEFAULT_SUFFIX\n): string {\n  return format(grain, DECIMAL_PRECISION, \"\").replace(/\\.?0+$/, \"\") + suffix;\n}\n\n/**\n * Multiply a grain amount by a floating point number.\n *\n * Use this method when you need to multiply a grain balance by a floating\n * point number, e.g. a ratio.\n *\n * Note that this method is imprecise. It is not safe to assume, for example,\n * that `multiply(g, 1/3) + multiply(g, 2/3) === g` due to loss of precision.\n * However, the errors will be small in absolute terms (i.e. tiny compared to\n * one full grain).\n *\n * See some messy analysis of the numerical errors here:\n * https://observablehq.com/@decentralion/grain-arithmetic\n */\nexport function multiplyFloat(grain: Grain, num: number): Grain {\n  if (!isFinite(num)) {\n    throw new Error(`invalid input: num is ${num}`);\n  }\n  if (num === 1) {\n    // The one case where we can be sure to return a correct answer :)\n    return grain;\n  }\n\n  const floatProduct = Number(grain) * num;\n  return bigInt(Math.floor(floatProduct)).toString();\n}\n\nexport function divideFloat(dividend: Grain, divisor: number): Grain {\n  return multiplyFloat(dividend, 1 / divisor);\n}\n\n/**\n * Convert an integer number (in floating-point representation) into a precise\n * Grain value.\n */\nexport function fromInteger(x: number): Grain {\n  if (!isFinite(x) || Math.floor(x) !== x) {\n    throw new Error(`not an integer: ${x}`);\n  }\n  return bigInt(ONE).times(bigInt(x)).toString();\n}\n\n/**\n * Accept human-readable numbers strings and convert them to precise grain amounts\n *\n * This is most useful for processing form input values before passing them\n * into the ledger, since all form fields return strings\n *\n * In this case, a \"float string\" is a string that returns a number value\n * when passed into `parseFloat`\n *\n * The reason to circumvent any floating point values is to avoid losses in\n * precision. By modifying the string directly in a predictable pattern, we can\n * convert uer-generated floating point values to grain at full fidelity, and avoid\n * any fuzzy floating point arithmetic\n *\n * The tradeoff here is around versatility. Values with more decimals than the\n * allowable precision will yield an error when passed in.\n */\nexport function fromFloatString(\n  x: string,\n  precision: number = DECIMAL_PRECISION\n): Grain {\n  if (typeof x !== \"string\") {\n    throw new Error(`not a string: ${x}`);\n  }\n  if (!(isFinite(x) && x.trim())) {\n    throw new Error(`input not a valid number: ${x}`);\n  }\n\n  const [whole = \"\", dec = \"\"] = x.split(\".\");\n  if (dec.length > precision) {\n    throw new Error(\n      `Provided decimals ${dec.length} exceed allowable precision ${precision}`\n    );\n  }\n  const paddedDecimal = dec.padEnd(precision, \"0\");\n\n  return bigInt(`${whole}${paddedDecimal}`).toString();\n}\n\n/**\n * Approximately create a grain balance from a float.\n *\n * This method tries to convert the floating point `amt` into a grain\n * balance. For example, `grain(1)` approximately equals `ONE`.\n *\n * Do not assume this will be precise! For example, `grain(0.1337)` results in\n * `133700000000000016n`. This method is intended for test code.\n *\n * This is a shorthand for `multiplyFloat(ONE, amt)`.\n */\nexport function fromApproximateFloat(f: number): Grain {\n  return multiplyFloat(ONE, f);\n}\n\n/**\n * Approximates the division of two grain values\n *\n * This naive implementation of grain division converts the given values\n * to floats and performs simple floating point division.\n *\n * Do not assume this will be precise!\n */\nexport function toFloatRatio(numerator: Grain, denominator: Grain): number {\n  return Number(numerator) / Number(denominator);\n}\n\n/**\n * Splits a budget of Grain proportional to floating-point scores.\n *\n * splitBudget guarantees that the total amount distributed will precisely\n * equal the budget. This is a surprisingly challenging property to ensure, and\n * it explains the complexity of this algorithm. We stress-test the method with\n * extremely uneven share distribution (e.g. a split where some users' scores\n * are 10**100 larger than others).\n *\n * The algorithm can be arbitrarily unfair at the atto-Grain level; for\n * example, in the case `splitBudget(fromString(\"1\"), [1, 100])` it will give\n * all the Grain to the first account, even though it only has 1/100th the score\n * of the second account. However, since Grain is tracked with 18 decimal point\n * precision, these tiny biases mean very little in practice. In testing, when\n * splitting one full Grain (i.e. 10**18 attoGrain), we haven't seen discrepancies\n * over ~100 attoGrain, or one billion-million-th of a full Grain.\n */\nexport function splitBudget(\n  budget: Grain,\n  scores: $ReadOnlyArray<number>\n): $ReadOnlyArray<Grain> {\n  if (lt(budget, ZERO)) {\n    throw new Error(\"negative budget\");\n  }\n\n  const totalScore = scores.reduce((a, b) => a + b, 0);\n  if (!isFinite(totalScore)) {\n    throw new Error(`scores must all be finite, got: ${totalScore}`);\n  }\n  if (totalScore <= 0) {\n    throw new Error(`total score must be positive, got: ${totalScore}`);\n  }\n\n  let scoreRemaining = totalScore;\n  let budgetRemaining = budget;\n  const pieces = scores.map((s) => {\n    if (s < 0) {\n      throw new Error(\"negative score: \" + s);\n    }\n    if (s === 0 || scoreRemaining === 0) {\n      // You would think that s === 0 implies scoreRemaining === 0, but\n      // testing in extreme circumstances reveals that both checks are needed.\n      return \"0\";\n    }\n    let fraction = s / scoreRemaining;\n    if (fraction > 1) {\n      fraction = 1;\n    }\n    const piece = multiplyFloat(budgetRemaining, fraction);\n\n    /**\n     * Uncomment below if you want to measure the discrepancy caused by\n     * forcing fracion=1 whenever fraction > 1.\n     *\n     * In testing, when distributing one full Grain across wildly unequal\n     * scores, it never produced more than ~hundreds of attoGrain discrepancy.\n     */\n    /*\n    const altPiece = multiplyFloat(budgetRemaining, s / scoreRemaining);\n    if (altPiece !== piece) {\n      const delta = sub(altPiece, piece);\n      console.error(\n        `${delta} discrepancy due to capping ${s} / ${scoreRemaining} from ${\n          s / scoreRemaining\n        } to 1`\n      );\n    }\n    */\n\n    budgetRemaining = sub(budgetRemaining, piece);\n    scoreRemaining -= s;\n    return piece;\n  });\n\n  // istanbul ignore if\n  if (lt(budgetRemaining, \"0\")) {\n    // Per the contract of the function, this should never happen.\n    throw new Error(\"invariant error: budget overspent: \" + budgetRemaining);\n  }\n  if (gt(budgetRemaining, \"0\")) {\n    /**\n     * Uncomment below if you want to measure the discrepancy caused by this\n     * \"giveaway-leftovers\" approach. In testing, when run with wildly varying\n     * shares, it never produced more than ~hundreds of attoGrain discrepancy.\n     */\n    /*\n    console.error(\n      `${budgetRemaining} discrepancy being resolved via giveaway to last share`\n    );\n    */\n    pieces[pieces.length - 1] = add(pieces[pieces.length - 1], budgetRemaining);\n  }\n  return pieces;\n}\n\n/**\n * Sum a sequence of Grain values.\n */\nexport function sum(xs: Iterable<Grain>): Grain {\n  let total = bigInt(0);\n  for (const x of xs) {\n    total = total.add(bigInt(x));\n  }\n  return total.toString();\n}\n\nexport const parser: P.Parser<Grain> = P.fmap(P.string, fromString);\n","export default function sum(values, valueof) {\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        sum += value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        sum += value;\n      }\n    }\n  }\n  return sum;\n}\n","// @flow\n\nimport * as G from \"./grain\";\nimport * as P from \"../../util/combo\";\n\n/**\n * The NonnegativeGrain type ensures Grain amount is >= 0,\n * which is particularly useful in the case of policy budgets\n * or grain transfers.\n */\nexport opaque type NonnegativeGrain: G.Grain = G.Grain;\n\nexport function fromGrain(g: G.Grain): NonnegativeGrain {\n  if (G.lt(g, G.ZERO)) {\n    throw new Error(`Grain amount must be nonnegative, got ${g}`);\n  }\n  return g;\n}\n\nexport function fromInteger(n: number): NonnegativeGrain {\n  return fromGrain(G.fromInteger(n));\n}\n\nexport function fromString(s: string): NonnegativeGrain {\n  return fromGrain(G.fromString(s));\n}\n\nexport function fromFloatString(s: string): NonnegativeGrain {\n  return fromGrain(G.fromFloatString(s));\n}\n\nexport const grainParser: P.Parser<NonnegativeGrain> = P.fmap(\n  G.parser,\n  fromGrain\n);\nexport const numberParser: P.Parser<NonnegativeGrain> = P.fmap(\n  P.number,\n  fromInteger\n);\nexport const numberOrFloatStringParser: P.Parser<NonnegativeGrain> = P.orElse([\n  P.fmap(P.integer, fromInteger),\n  P.fmap(P.string, fromFloatString),\n]);\nexport const stringParser: P.Parser<NonnegativeGrain> = P.fmap(\n  P.string,\n  fromString\n);\n","// @flow\nimport {sum} from \"d3-array\";\nimport * as G from \"../grain\";\nimport * as P from \"../../../util/combo\";\nimport {type GrainReceipt} from \"../grainAllocation\";\nimport {\n  type NonnegativeGrain,\n  grainParser,\n  numberOrFloatStringParser,\n} from \"../nonnegativeGrain\";\nimport {type CredGrainView} from \"../../credGrainView\";\nimport {type TimestampMs} from \"../../../util/timestamp\";\n/**\n * The Balanced policy attempts to pay Grain to everyone so that their\n * lifetime Grain payouts are consistent with their lifetime Cred scores.\n *\n * We recommend use of the Balanced strategy as it takes new information into\n * account-- for example, if a user's contributions earned little Cred in the\n * past, but are now seen as more valuable, the Balanced policy will take this\n * into account and pay them more, to fully appreciate their past\n * contributions.\n */\nexport type Balanced = \"BALANCED\";\n\nexport type BalancedPolicy = {|\n  +policyType: Balanced,\n  +budget: NonnegativeGrain,\n  +numIntervalsLookback: number,\n|};\n\n/**\n * Allocate a fixed budget of Grain to the users who were \"most underpaid\".\n *\n * We consider a user underpaid if they have received a smaller proportion of\n * past earnings than their share of score. They are balanced paid if their\n * proportion of earnings is equal to their score share, and they are overpaid\n * if their proportion of earnings is higher than their share of the score.\n *\n * We start by imagining a hypothetical world, where the entire grain supply of\n * the project (including this allocation) was allocated according to the\n * current scores. Based on this, we can calculate the \"balanced\" lifetime earnings\n * for each participant. Usually, some will be \"underpaid\" (they received less\n * than this amount) and others are \"overpaid\".\n *\n * We can sum across all users who were underpaid to find the \"total\n * underpayment\".\n *\n * Now that we've calculated each actor's underpayment, and the total\n * underpayment, we divide the allocation's grain budget across users in\n * proportion to their underpayment.\n *\n * You should use this allocation when you want to divide a fixed budget of grain\n * across participants in a way that aligns long-term payment with total cred\n * scores.\n */\nexport function balancedReceipts(\n  policy: BalancedPolicy,\n  credGrainView: CredGrainView,\n  effectiveTimestamp: TimestampMs\n): $ReadOnlyArray<GrainReceipt> {\n  if (policy.numIntervalsLookback < 0) {\n    throw new Error(\n      `numIntervalsLookback must be at least 0, got ${policy.numIntervalsLookback}`\n    );\n  }\n  if (!Number.isInteger(policy.numIntervalsLookback)) {\n    throw new Error(\n      `numIntervalsLookback must be an integer, got ${policy.numIntervalsLookback}`\n    );\n  }\n\n  const timeLimitedCredGrainView = credGrainView.withTimeScopeFromLookback(\n    effectiveTimestamp,\n    policy.numIntervalsLookback\n  );\n  const timeLimitedParticipants = timeLimitedCredGrainView.activeParticipants();\n\n  const totalCred = sum(\n    timeLimitedParticipants.map((participant) => participant.cred)\n  );\n\n  const totalEverPaid = G.sum(\n    timeLimitedParticipants.map((participant) => participant.grainEarned)\n  );\n\n  const targetTotalDistributed = G.add(totalEverPaid, policy.budget);\n  const targetGrainPerCred = G.multiplyFloat(\n    targetTotalDistributed,\n    1 / totalCred\n  );\n\n  const userUnderpayment = timeLimitedParticipants.map((participant) => {\n    const lookbackCred = sum(participant.credPerInterval);\n    const target = G.multiplyFloat(targetGrainPerCred, lookbackCred);\n\n    if (G.gt(target, participant.grainEarned)) {\n      return G.sub(target, participant.grainEarned);\n    } else {\n      return G.ZERO;\n    }\n  });\n\n  const floatUnderpayment = userUnderpayment.map((x) => Number(x));\n  const grainAmounts = G.splitBudget(policy.budget, floatUnderpayment);\n  return timeLimitedParticipants.map(({identity}, i) => ({\n    id: identity.id,\n    amount: grainAmounts[i],\n  }));\n}\n\nexport const balancedConfigParser: P.Parser<BalancedPolicy> = P.object({\n  policyType: P.exactly([\"BALANCED\"]),\n  budget: numberOrFloatStringParser,\n  numIntervalsLookback: P.number,\n});\n\nexport const balancedPolicyParser: P.Parser<BalancedPolicy> = P.fmap(\n  P.object(\n    {\n      policyType: P.exactly([\"BALANCED\"]),\n      budget: grainParser,\n    },\n    {\n      numIntervalsLookback: P.number,\n    }\n  ),\n  (policy) => ({\n    ...policy,\n    numIntervalsLookback:\n      policy.numIntervalsLookback != null ? policy.numIntervalsLookback : 0,\n  })\n);\n\nexport function toString(policy: BalancedPolicy): string {\n  return [\n    policy.policyType + \" Policy\",\n    \"Budget \" + G.format(policy.budget, 3),\n  ].join(`\\n`);\n}\n","// @flow\n\nimport * as G from \"../grain\";\nimport * as P from \"../../../util/combo\";\nimport {type GrainReceipt} from \"../grainAllocation\";\nimport {type CredGrainView} from \"../../credGrainView\";\nimport {\n  type NonnegativeGrain,\n  grainParser,\n  numberOrFloatStringParser,\n} from \"../nonnegativeGrain\";\nimport {type TimestampMs} from \"../../../util/timestamp\";\n\n/**\n * The Immediate policy evenly distributes its Grain budget across users\n * based on their Cred in the most recent interval.\n *\n * It's used when you want to ensure that everyone gets some consistent reward\n * for participating (even if they may be \"overpaid\" in a lifetime sense).\n * We recommend using a smaller budget for the Immediate policy.\n */\nexport type Immediate = \"IMMEDIATE\";\n\nexport type ImmediatePolicy = {|\n  +policyType: Immediate,\n  +budget: NonnegativeGrain,\n  +numIntervalsLookback: number,\n|};\n\n/**\n * Split a grain budget in proportion to the cred scores in\n * the most recent time interval, with the option to extend the interval\n * to include the last {numIntervalsLookback} weeks.\n */\nexport function immediateReceipts(\n  policy: ImmediatePolicy,\n  credGrainView: CredGrainView,\n  effectiveTimestamp: TimestampMs\n): $ReadOnlyArray<GrainReceipt> {\n  // Default to 1 interval to preserve back-compat with old ledger events\n\n  if (policy.numIntervalsLookback < 1) {\n    throw new Error(\n      `numIntervalsLookback must be at least 1, got ${policy.numIntervalsLookback}`\n    );\n  }\n  if (!Number.isInteger(policy.numIntervalsLookback)) {\n    throw new Error(\n      `numIntervalsLookback must be an integer, got ${policy.numIntervalsLookback}`\n    );\n  }\n\n  const timeLimitedCredGrainView = credGrainView.withTimeScopeFromLookback(\n    effectiveTimestamp,\n    policy.numIntervalsLookback\n  );\n  const timeLimitedParticipants = timeLimitedCredGrainView.activeParticipants();\n\n  const shortTermCredPerIdentity = timeLimitedParticipants.map((p) => p.cred);\n  const amounts = G.splitBudget(policy.budget, shortTermCredPerIdentity);\n\n  return timeLimitedParticipants.map(({identity}, i) => ({\n    id: identity.id,\n    amount: amounts[i],\n  }));\n}\n\nexport const immediateConfigParser: P.Parser<ImmediatePolicy> = P.object({\n  policyType: P.exactly([\"IMMEDIATE\"]),\n  budget: numberOrFloatStringParser,\n  numIntervalsLookback: P.number,\n});\n\nexport const immediatePolicyParser: P.Parser<ImmediatePolicy> = P.fmap(\n  P.object(\n    {\n      policyType: P.exactly([\"IMMEDIATE\"]),\n      budget: grainParser,\n    },\n    {\n      numIntervalsLookback: P.number,\n    }\n  ),\n  (policy) => ({\n    ...policy,\n    numIntervalsLookback:\n      policy.numIntervalsLookback != null ? policy.numIntervalsLookback : 1,\n  })\n);\n\nexport function toString(policy: ImmediatePolicy): string {\n  return [\n    policy.policyType + \" Policy\",\n    \"Budget \" + G.format(policy.budget, 3),\n  ].join(`\\n`);\n}\n","// @flow\n\nimport * as G from \"../grain\";\nimport * as P from \"../../../util/combo\";\nimport {type CredGrainView} from \"../../credGrainView\";\nimport {type TimestampMs} from \"../../../util/timestamp\";\nimport {type GrainReceipt} from \"../grainAllocation\";\nimport {\n  type NonnegativeGrain,\n  grainParser,\n  numberOrFloatStringParser,\n} from \"../nonnegativeGrain\";\n\n/**\n * The Recent policy distributes cred using a time discount factor, weighing\n * recent contributions higher. The policy takes a history of cred scores, progressively\n * discounting past cred scores, and then taking the sum over the discounted scores.\n *\n * A cred score at time t reads as follows: \"The discounted cred c' at a timestep which is\n * n timesteps back from the most recent one is its cred score c multiplied by the discount\n * factor to the nth power.\"\n *\n * c' =  c * (1 - discount) ** n\n *\n * Discounts range from 0 to 1, with a higher discount weighing recent contribution\n * higher.\n *\n * Note that this is a generalization of the Immediate policy, where Immediate\n * is the same as Recent with a full discount, i.e. a discount factor 1 (100%).\n *\n */\nexport type Recent = \"RECENT\";\n\nexport type RecentPolicy = {|\n  +policyType: Recent,\n  +budget: NonnegativeGrain,\n  +discount: Discount,\n|};\n\n/**\n * Split a grain budget based on exponentially weighted recent\n * cred.\n */\nexport function recentReceipts(\n  policy: RecentPolicy,\n  credGrainView: CredGrainView,\n  effectiveTimestamp: TimestampMs\n): $ReadOnlyArray<GrainReceipt> {\n  const lookback = 0;\n\n  const timeLimitedCredGrainView = credGrainView.withTimeScopeFromLookback(\n    effectiveTimestamp,\n    lookback\n  );\n  const timeLimitedParticipants = timeLimitedCredGrainView.activeParticipants();\n\n  const computeDecayedCred = (i) => {\n    return i.credPerInterval.reduce(\n      (acc, cred) => acc * (1 - policy.discount) + cred,\n      0\n    );\n  };\n  const decayedCredPerIdentity = timeLimitedParticipants.map(\n    computeDecayedCred\n  );\n\n  const amounts = G.splitBudget(policy.budget, decayedCredPerIdentity);\n\n  return timeLimitedParticipants.map(({identity}, i) => ({\n    id: identity.id,\n    amount: amounts[i],\n  }));\n}\n\nexport const recentConfigParser: P.Parser<RecentPolicy> = P.object({\n  policyType: P.exactly([\"RECENT\"]),\n  budget: numberOrFloatStringParser,\n  discount: P.fmap(P.number, toDiscount),\n});\n\nexport const recentPolicyParser: P.Parser<RecentPolicy> = P.object({\n  policyType: P.exactly([\"RECENT\"]),\n  budget: grainParser,\n  discount: P.fmap(P.number, toDiscount),\n});\n\nexport opaque type Discount: number = number;\nexport function toDiscount(n: number): Discount {\n  if (n < 0 || n > 1) {\n    throw new Error(`Discount must be in range [0,1]`);\n  }\n\n  return n;\n}\n\nexport function toString(policy: RecentPolicy): string {\n  return [\n    policy.policyType + \" Policy\",\n    \"Budget \" + G.format(policy.budget, 3),\n    \"Discount: \" + policy.discount,\n  ].join(`\\n`);\n}\n","// @flow\n\nimport {parser as uuidParser} from \"../../../util/uuid\";\nimport * as P from \"../../../util/combo\";\nimport {type IdentityId, type Identity} from \"../../identity\";\nimport * as G from \"../grain\";\nimport {type GrainReceipt} from \"../grainAllocation\";\nimport {\n  type NonnegativeGrain,\n  grainParser,\n  numberOrFloatStringParser,\n} from \"../nonnegativeGrain\";\n\n/**\n * The Special policy is a power-maintainer tool for directly paying Grain\n * to a target identity. I'm including it because we will use it to create\n * \"initialization\" payouts to contributors with prior Grain balances in our old\n * ledger.\n *\n * This has potential for abuse, I don't recommend making it easy to make special\n * payouts from the UI, since it subverts the \"Grain comes from Cred\" model.\n */\nexport type Special = \"SPECIAL\";\n\nexport type SpecialPolicy = {|\n  +policyType: Special,\n  +budget: NonnegativeGrain,\n  +memo: string,\n  +recipient: IdentityId,\n|};\n\nexport function specialReceipts(\n  policy: SpecialPolicy,\n  identities: $ReadOnlyArray<Identity>\n): $ReadOnlyArray<GrainReceipt> {\n  for (const {id} of identities) {\n    if (id === policy.recipient) {\n      return [{id, amount: policy.budget}];\n    }\n  }\n  throw new Error(`no active grain account for identity: ${policy.recipient}`);\n}\n\nexport const specialConfigParser: P.Parser<SpecialPolicy> = P.object({\n  policyType: P.exactly([\"SPECIAL\"]),\n  budget: numberOrFloatStringParser,\n  memo: P.string,\n  recipient: uuidParser,\n});\n\nexport const specialPolicyParser: P.Parser<SpecialPolicy> = P.object({\n  policyType: P.exactly([\"SPECIAL\"]),\n  budget: grainParser,\n  memo: P.string,\n  recipient: uuidParser,\n});\n\nexport function toString(policy: SpecialPolicy): string {\n  return [\n    policy.policyType + \" Policy\",\n    \"Budget \" + G.format(policy.budget, 3),\n    \"Memo: \" + policy.memo,\n    \"Recepient: \" + policy.recipient,\n  ].join(`\\n`);\n}\n","// @flow\n\nimport * as P from \"../../../util/combo\";\nimport {\n  type BalancedPolicy,\n  balancedReceipts,\n  balancedPolicyParser,\n  balancedConfigParser,\n  toString as toStringBalanced,\n} from \"./balanced\";\nimport {\n  type ImmediatePolicy,\n  immediateReceipts,\n  immediatePolicyParser,\n  immediateConfigParser,\n  toString as toStringImmediate,\n} from \"./immediate\";\nimport {\n  type RecentPolicy,\n  recentReceipts,\n  recentPolicyParser,\n  recentConfigParser,\n  toString as toStringRecent,\n} from \"./recent\";\nimport {\n  type SpecialPolicy,\n  specialReceipts,\n  specialPolicyParser,\n  specialConfigParser,\n  toString as toStringSpecial,\n} from \"./special\";\n\nexport {balancedReceipts, balancedPolicyParser};\nexport {immediateReceipts, immediatePolicyParser};\nexport {recentReceipts, recentPolicyParser};\nexport {specialReceipts, specialPolicyParser};\n\nexport type AllocationPolicy =\n  | BalancedPolicy\n  | ImmediatePolicy\n  | RecentPolicy\n  | SpecialPolicy;\n\nexport const policyConfigParser: P.Parser<AllocationPolicy> = P.orElse([\n  balancedConfigParser,\n  immediateConfigParser,\n  recentConfigParser,\n  specialConfigParser,\n]);\n\nexport function toString(policy: AllocationPolicy): string {\n  switch (policy.policyType) {\n    case \"BALANCED\":\n      return toStringBalanced(policy);\n    case \"IMMEDIATE\":\n      return toStringImmediate(policy);\n    case \"RECENT\":\n      return toStringRecent(policy);\n    case \"SPECIAL\":\n      return toStringSpecial(policy);\n  }\n}\n\nexport const allocationPolicyParser: P.Parser<AllocationPolicy> = P.orElse([\n  balancedPolicyParser,\n  immediatePolicyParser,\n  recentPolicyParser,\n  specialPolicyParser,\n]);\n","// @flow\n\n/**\n * In SourceCred, projects regularly distribute Grain to contributors based on\n * their Cred scores. This is called a \"Distribution\". This module contains the\n * logic for computing distributions.\n */\nimport * as G from \"./grain\";\nimport * as P from \"../../util/combo\";\nimport {type CredGrainView} from \"../credGrainView\";\nimport {type TimestampMs} from \"../../util/timestamp\";\n\nimport {\n  type Uuid,\n  random as randomUuid,\n  parser as uuidParser,\n} from \"../../util/uuid\";\nimport {type IdentityId, type Identity} from \"../identity\";\nimport {\n  type AllocationPolicy,\n  allocationPolicyParser,\n  balancedReceipts,\n  immediateReceipts,\n  recentReceipts,\n  specialReceipts,\n} from \"./policies\";\n\nexport type AllocationId = Uuid;\n\nexport type GrainReceipt = {|\n  +id: IdentityId,\n  +amount: G.Grain,\n|};\n\nexport type Allocation = {|\n  +id: AllocationId,\n  +policy: AllocationPolicy,\n  +receipts: $ReadOnlyArray<GrainReceipt>,\n|};\n\nexport function computeAllocation(\n  policy: AllocationPolicy,\n  credGrainView: CredGrainView,\n  effectiveTimestamp: TimestampMs\n): Allocation {\n  const validatedPolicy = _validatePolicy(policy);\n  credGrainView.validateForGrainAllocation();\n  return _validateAllocationBudget({\n    policy,\n    receipts: receipts(validatedPolicy, credGrainView, effectiveTimestamp),\n    id: randomUuid(),\n  });\n}\n\n/* This is a simplified case that should not require a credGrainView */\nexport function computeAllocationSpecial(\n  policy: AllocationPolicy,\n  identities: $ReadOnlyArray<Identity>\n): Allocation {\n  const validatedPolicy = _validatePolicy(policy);\n  if (validatedPolicy.policyType === \"SPECIAL\") {\n    return _validateAllocationBudget({\n      policy,\n      receipts: specialReceipts(validatedPolicy, identities),\n      id: randomUuid(),\n    });\n  } else {\n    throw new Error(\n      `SpecialPolicyRequired. Got: ${validatedPolicy.policyType}`\n    );\n  }\n}\n\nfunction _validatePolicy(p: AllocationPolicy) {\n  allocationPolicyParser.parseOrThrow(p);\n  if (G.lt(p.budget, G.ZERO)) {\n    throw new Error(`invalid budget: ${p.budget}`);\n  }\n  return p;\n}\n\n// Exported for test purposes.\nexport function _validateAllocationBudget(a: Allocation): Allocation {\n  const amt = G.sum(a.receipts.map((a) => a.amount));\n  if (amt !== a.policy.budget) {\n    throw new Error(\n      `allocation has budget of ${a.policy.budget} but distributed ${amt}`\n    );\n  }\n  return a;\n}\n\nfunction receipts(\n  policy: AllocationPolicy,\n  credGrainView: CredGrainView,\n  effectiveTimestamp: TimestampMs\n): $ReadOnlyArray<GrainReceipt> {\n  switch (policy.policyType) {\n    case \"IMMEDIATE\":\n      return immediateReceipts(policy, credGrainView, effectiveTimestamp);\n    case \"RECENT\":\n      return recentReceipts(policy, credGrainView, effectiveTimestamp);\n    case \"BALANCED\":\n      return balancedReceipts(policy, credGrainView, effectiveTimestamp);\n    case \"SPECIAL\":\n      const identities = credGrainView\n        .activeParticipants()\n        .map((participant) => participant.identity);\n      return specialReceipts(policy, identities);\n    // istanbul ignore next: unreachable per Flow\n    default:\n      throw new Error(`Unknown policyType: ${(policy.policyType: empty)}`);\n  }\n}\n\nconst grainReceiptParser: P.Parser<GrainReceipt> = P.object({\n  id: uuidParser,\n  amount: G.parser,\n});\nexport const allocationParser: P.Parser<Allocation> = P.object({\n  policy: allocationPolicyParser,\n  id: uuidParser,\n  receipts: P.array(grainReceiptParser),\n});\n","// @flow\n\nimport * as C from \"../../util/combo\";\nimport * as Uuid from \"../../util/uuid\";\nimport {type TimestampMs} from \"../../util/timestamp\";\nimport {type Allocation, allocationParser} from \"./grainAllocation\";\n\nexport type DistributionId = Uuid.Uuid;\n\nexport type Distribution = {|\n  +id: DistributionId,\n  +allocations: $ReadOnlyArray<Allocation>,\n  +credTimestamp: TimestampMs,\n|};\n\nexport const parser: C.Parser<Distribution> = C.object({\n  id: Uuid.parser,\n  allocations: C.array(allocationParser),\n  credTimestamp: C.number,\n});\n","// @flow\n\n/**\n * This module contains the ledger, for accumulating state updates related to\n * identity identities and Grain distribution.\n *\n * A key requirement for the ledger is that we need to store an ordered log of\n * every action that's happened in the ledger, so that we can audit the ledger\n * state to ensure its integrity.\n */\nimport {\n  type IdentityId,\n  type Name,\n  type IdentityType,\n  nameParser,\n  nameFromString,\n  type Alias,\n  aliasParser,\n  type Identity,\n  newIdentity,\n  identityParser,\n  identityTypeParser,\n} from \"../identity\";\nimport {\n  type Currency,\n  type ChainId,\n  currencyParser,\n  buildCurrency,\n} from \"./currency\";\nimport {type NodeAddressT, NodeAddress} from \"../graph\";\nimport {type TimestampMs} from \"../../util/timestamp\";\nimport * as NullUtil from \"../../util/null\";\nimport * as uuid from \"../../util/uuid\";\nimport {\n  type Distribution,\n  type DistributionId,\n  parser as distributionParser,\n} from \"./distribution\";\nimport {\n  ethAddressParser,\n  type EthAddress,\n} from \"../../plugins/ethereum/ethAddress\";\nimport * as G from \"./grain\";\nimport {JsonLog} from \"../../util/jsonLog\";\nimport * as C from \"../../util/combo\";\nimport {\n  type Allocation,\n  type AllocationId,\n  type GrainReceipt,\n} from \"./grainAllocation\";\n\n/**\n * Timestamped record of a grain payment\n * made to an Identity from a specific Allocation.\n */\ntype AllocationReceipt = {|\n  +allocationId: AllocationId,\n  +grainReceipt: GrainReceipt,\n  +credTimestampMs: TimestampMs,\n|};\n\n/**\n * Every Identity in the ledger has an Account.\n */\ntype MutableAccount = {|\n  identity: Identity,\n  // The current Grain balance of this account\n  balance: G.Grain,\n  // The amount of Grain this account has received in past Distributions\n  paid: G.Grain,\n  // A history of Grain allocations to the account in chronological order.\n  // Includes allocations received directly and via identity merge.\n  allocationHistory: Array<AllocationReceipt>,\n  // Whether or not the account is currently \"active\". An inactive account\n  // may not receive or transfer Grain. Accounts start inactive, and must\n  // be explicitly activated.\n  active: boolean,\n  // key-value store of blockchain addresses the account receives grain to\n  payoutAddresses: PayableAddressStore,\n  // An array of IdentityIds from target accounts that have been merged into\n  // the account. This allows for reverse-lookups of IdentityIds if this\n  // account is ever a merge target, so those identityIds can be pointed\n  // towards the new base account.\n  mergedIdentityIds: Array<IdentityId>,\n|};\nexport type Account = $ReadOnly<MutableAccount>;\n\n/**\n * The Currency key must be stringified to ensure the data is retrievable.\n * Keying on the raw Currency object means keying on the object reference,\n * rather than the contents of the object.\n */\nexport type CurrencyId = string;\n\n// Only Eth Addresses are supported at the moment\nexport type PayoutAddress = EthAddress;\n\n/**\n * PayableAddressStore maps currencies to a participant's\n * address capable of accepting the currency. This structure exists to\n * accomodate safe migration for grain/payout token changes. Users must verify\n * themselves that the address they are supplying is capable of receiving their\n * share of a grain distribution.\n */\ntype PayableAddressStore = Map<CurrencyId, PayoutAddress>;\n\n/**\n * The Ledger is an append-only auditable data store which tracks\n * - Identities and what aliases they possess\n * - Identities' grain balances\n *\n * Every time the ledger state is changed, a corresponding Action is added to\n * the ledger's action log. The ledger state may be serialized by saving the\n * action log, and then reconstructed by replaying the action log. The\n * corresponding methods are `actionLog` and `Ledger.fromActionLog`.\n *\n * None of these methods are idempotent, since they all modify the Ledger state\n * on success by adding a new action to the log. Therefore, they will all fail\n * if they would not cause any change to the ledger's logical state, so as to\n * prevent the ledger from permanently accumulating no-op clutter in the log.\n *\n * It's important that any API method that fails (e.g. trying to add a\n * conflicting identity) fails without mutating the ledger state; this way we avoid\n * ever getting the ledger in a corrupted state. To make this easier to test,\n * the test code uses deep equality testing on the ledger before/after\n * attempting illegal actions. To ensure that this testing works, we should\n * avoid adding any ledger state that can't be verified by deep equality\n * checking (e.g. don't store state in functions or closures that aren't\n * attached to the Ledger object).\n *\n * Every Ledger action has a timestamp, and the Ledger's actions must always be\n * in timestamp-sorted order. Adding a new Action with a timestamp older than a\n * previous action is illegal.\n */\nexport class Ledger {\n  _ledgerEventLog: JsonLog<LedgerEvent>;\n  _nameToId: Map<Name, IdentityId>;\n  _lowercaseNames: Set<string>;\n  _aliasAddressToIdentity: Map<NodeAddressT, IdentityId>;\n  _accounts: Map<IdentityId, MutableAccount>;\n  _allocations: Map<AllocationId, $ReadOnly<Allocation>>;\n  _distributions: Map<DistributionId, $ReadOnly<Distribution>>;\n  _allocationsToDistributions: Map<AllocationId, DistributionId>;\n  _latestTimestamp: TimestampMs = -Infinity;\n  _lastDistributionTimestamp: TimestampMs | null = null;\n  _shouldTrackGrainIntegration: boolean = false;\n  _grainIntegrationStatuses: Map<DistributionId, boolean>;\n\n  constructor() {\n    this._ledgerEventLog = new JsonLog();\n    this._nameToId = new Map();\n    this._lowercaseNames = new Set();\n    this._aliasAddressToIdentity = new Map();\n    this._accounts = new Map();\n    this._allocations = new Map();\n    this._distributions = new Map();\n    this._allocationsToDistributions = new Map();\n    this._grainIntegrationStatuses = new Map();\n  }\n\n  /**\n   * Return all the Accounts in the ledger.\n   */\n  accounts(): $ReadOnlyArray<Account> {\n    return Array.from(new Set(this._accounts.values()));\n  }\n\n  /**\n   * Get the Account associated with a particular identity.\n   *\n   * If the identity is not in the ledger, an error is thrown.\n   */\n  account(id: IdentityId): Account {\n    // This wrapper ensures it's a read-only type\n    return this._mutableAccount(id);\n  }\n\n  _mutableAccount(id: IdentityId): MutableAccount {\n    const result = this._accounts.get(id);\n    if (result == null) {\n      throw new Error(`no Account for identity: ${id}`);\n    }\n    return result;\n  }\n\n  /**\n   * Return whether the IdentityName in question is available.\n   *\n   * For convenience in test code (and consistency with createIdentity and renameIdentity),\n   * the name is provided as a string. If the string is not a valid name, an error will be\n   * thrown.\n   */\n  nameAvailable(name: string): boolean {\n    // Error if the name is not valid.\n    nameFromString(name);\n    // We don't need to explicitly test the name itself, since if a name\n    // is reserved, its lowercased version is also reserved.\n    return !this._lowercaseNames.has(name.toLowerCase());\n  }\n\n  /**\n   * Return the account matching a given NodeAddress, if one exists.\n   *\n   * Returns null if there is no account matching that address.\n   */\n  accountByAddress(address: NodeAddressT): Account | null {\n    const identityId = this._aliasAddressToIdentity.get(address);\n    if (identityId == null) {\n      return null;\n    }\n    return this.account(identityId);\n  }\n\n  /**\n   * Return the account with the given name, if one exists.\n   *\n   * Returns null if there is no account matching that address.\n   *\n   * Note: This is case sensitive.\n   */\n  accountByName(name: string): Account | null {\n    const identityId = this._nameToId.get(nameFromString(name));\n    if (identityId == null) {\n      return null;\n    }\n    return this.account(identityId);\n  }\n\n  /**\n   * Get the Allocation associated with a particular Allocation ID.\n   *\n   * If the ID is not in the ledger, an error is thrown.\n   */\n  allocation(id: AllocationId): Allocation {\n    const allocation = this._allocations.get(id);\n    if (allocation == null) throw new Error(`no Allocation for id: ${id}`);\n    return allocation;\n  }\n\n  /**\n   * Get an Iterator over all Allocations in the order they occur in the Ledger.\n   */\n  allocations(): Iterator<Allocation> {\n    return this._allocations.values();\n  }\n\n  /**\n   * Get the Distribution associated with a particular Distribution ID.\n   *\n   * If the ID is not in the ledger, an error is thrown.\n   */\n  distribution(id: DistributionId): Distribution {\n    const distribution = this._distributions.get(id);\n    if (distribution == null) throw new Error(`no Distribution for id: ${id}`);\n    return distribution;\n  }\n\n  /**\n   * Get an Iterator over all Distributions in the order they occur in the Ledger.\n   */\n  distributions(): Iterator<Distribution> {\n    return this._distributions.values();\n  }\n\n  /**\n   * Get the Distribution associated with a particular Allocation ID.\n   *\n   * If the Allocation ID is not associated with a distribution, an error is thrown.\n   */\n  distributionByAllocationId(allocationId: AllocationId): Distribution {\n    const distributionId = this._allocationsToDistributions.get(allocationId);\n    if (distributionId == null)\n      throw new Error(`no Distribution for allocation id: ${allocationId}`);\n    return this.distribution(distributionId);\n  }\n\n  /**\n   * Create an account in the ledger.\n   *\n   * This will reserve the identity's name, and its innate address.\n   *\n   * This returns the newly created Identity's ID, so that the caller\n   * store it for future reference.\n   *\n   * Will fail if the name is not valid, or already taken.\n   */\n  createIdentity(type: IdentityType, name: string): IdentityId {\n    const identity = newIdentity(type, name);\n    const action = {\n      type: \"CREATE_IDENTITY\",\n      identity,\n    };\n    this._createAndProcessEvent(action);\n    return NullUtil.get(this._nameToId.get(identity.name));\n  }\n  _createIdentity({identity}: CreateIdentity) {\n    if (this._nameToId.has(identity.name)) {\n      // This identity already exists; return.\n      throw new Error(`createIdentity: name already taken: ${identity.name}`);\n    }\n    if (this._lowercaseNames.has(identity.name.toLowerCase())) {\n      throw new Error(\n        `createIdentity: already have same name with different capitalization: ${identity.name}`\n      );\n    }\n    if (identity.aliases.length !== 0) {\n      throw new Error(`createIdentity: new identities may not have aliases`);\n    }\n    // istanbul ignore if\n    if (this._aliasAddressToIdentity.has(identity.address)) {\n      // This should never happen, as it implies a UUID conflict.\n      throw new Error(\n        `createIdentity: innate address already claimed ${identity.id}`\n      );\n    }\n\n    // Mutations! Method must not fail after this comment.\n    this._nameToId.set(identity.name, identity.id);\n    this._lowercaseNames.add(identity.name.toLowerCase());\n    // Reserve this identity's own address\n    this._aliasAddressToIdentity.set(identity.address, identity.id);\n    // Every identity has a corresponding Account.\n    this._accounts.set(identity.id, {\n      balance: G.ZERO,\n      paid: G.ZERO,\n      identity,\n      active: false,\n      allocationHistory: [],\n      payoutAddresses: new Map(),\n      // seed this array with the account's own identityId\n      mergedIdentityIds: [identity.id],\n    });\n  }\n\n  /**\n   * Merge two identities together.\n   *\n   * One identity is considered the \"base\" and the other is the \"target\".\n   * The target is absorbed into the base, meaning:\n   * - Base gets the Grain balance, and lifetime paid amount added to its account.\n   * - Base gets every alias that the target had.\n   * - Base gets the target's own address as an alias.\n   * - The target account is removed from the ledger.\n   * - The target's login name is freed.\n   *\n   * Attempting to merge an identity that doesn't exist, or to merge an identity into\n   * itself, will error.\n   */\n  mergeIdentities(opts: {base: IdentityId, target: IdentityId}): Ledger {\n    const {base, target} = opts;\n    const action = {\n      type: \"MERGE_IDENTITIES\",\n      base,\n      target,\n    };\n    this._createAndProcessEvent(action);\n    return this;\n  }\n  _mergeIdentities({base, target}: MergeIdentities) {\n    const baseAccount = this._mutableAccount(base);\n    const targetAccount = this.account(target);\n    const baseIdentity = baseAccount.identity;\n    const targetIdentity = targetAccount.identity;\n    if (base === target) {\n      throw new Error(\n        `tried to merge identity @${baseIdentity.name} with itself`\n      );\n    }\n\n    const updatedAliases = baseIdentity.aliases.slice();\n    const transferAlias = (alias: Alias) => {\n      updatedAliases.push(alias);\n      this._aliasAddressToIdentity.set(alias.address, baseIdentity.id);\n    };\n    // Mutation follows. Nothing after this line may throw.\n    targetIdentity.aliases.forEach((a) => transferAlias(a));\n    const innateAlias = {\n      address: targetIdentity.address,\n      description: `identity @${targetIdentity.name} (id: ${targetIdentity.id})`,\n    };\n    transferAlias(innateAlias);\n    const updatedIdentity = {\n      ...baseIdentity,\n      aliases: updatedAliases,\n    };\n    baseAccount.identity = updatedIdentity;\n    baseAccount.paid = G.add(baseAccount.paid, targetAccount.paid);\n    baseAccount.allocationHistory = baseAccount.allocationHistory\n      .concat(targetAccount.allocationHistory)\n      .sort((a, b) => a.credTimestampMs - b.credTimestampMs);\n    // merge payout payoutAddresses under one account, but don't overwrite base\n    // account entries\n    baseAccount.payoutAddresses = new Map([\n      ...targetAccount.payoutAddresses.entries(),\n      ...baseAccount.payoutAddresses.entries(),\n    ]);\n    baseAccount.balance = G.add(baseAccount.balance, targetAccount.balance);\n    targetAccount.mergedIdentityIds.forEach((id) => {\n      this._accounts.set(id, baseAccount);\n      baseAccount.mergedIdentityIds.push(id);\n    });\n    this._nameToId.delete(targetIdentity.name);\n    this._lowercaseNames.delete(targetIdentity.name.toLowerCase());\n  }\n\n  /**\n   * Change a identity's name.\n   *\n   * Will fail if no identity matches the identityId, or if the identity already has that\n   * name, or if the identity's new name is claimed by another identity.\n   */\n  renameIdentity(identityId: IdentityId, newName: string): Ledger {\n    this._createAndProcessEvent({\n      type: \"RENAME_IDENTITY\",\n      identityId,\n      newName: nameFromString(newName),\n    });\n    return this;\n  }\n  _renameIdentity({identityId, newName}: RenameIdentity) {\n    if (!this._accounts.has(identityId)) {\n      throw new Error(`renameIdentity: no identity matches id ${identityId}`);\n    }\n    const account = this._mutableAccount(identityId);\n    const existingIdentity = account.identity;\n    const existingName = existingIdentity.name;\n    if (existingName === newName) {\n      // We error rather than silently succeed because we don't want the ledger\n      // to get polluted with no-op records (no successful operations are\n      // idempotent, since they do add to the ledger logs)\n      throw new Error(`renameIdentity: identity already has name ${newName}`);\n    }\n    if (this._nameToId.has(newName)) {\n      // We already checked that the name is not owned by this identity,\n      // so it is a conflict. Fail.\n      throw new Error(`renameIdentity: conflict on name ${newName}`);\n    }\n    const lowerCased = newName.toLowerCase();\n    if (\n      this._lowercaseNames.has(lowerCased) &&\n      lowerCased !== existingName.toLowerCase()\n    ) {\n      throw new Error(\n        `renameIdentity: already have same name with different capitalization: ${newName}`\n      );\n    }\n    const updatedIdentity = {\n      id: identityId,\n      name: newName,\n      subtype: existingIdentity.subtype,\n      address: existingIdentity.address,\n      aliases: existingIdentity.aliases,\n    };\n\n    // Mutations! Method must not fail after this comment.\n    this._nameToId.delete(existingIdentity.name);\n    this._nameToId.set(newName, identityId);\n    this._lowercaseNames.delete(existingIdentity.name.toLowerCase());\n    this._lowercaseNames.add(newName.toLowerCase());\n    account.identity = updatedIdentity;\n  }\n\n  /**\n   * Add an alias for a identity.\n   *\n   * If that alias is associated with past Grain payments (because it\n   * was unlinked from another identity), those past Grain payments will be\n   * associated with the newly linked identity.\n   *\n   * Will fail if the identity does not exist.\n   * Will fail if the alias is already claimed by any identity.\n   */\n  addAlias(identityId: IdentityId, alias: Alias): Ledger {\n    this._createAndProcessEvent({\n      type: \"ADD_ALIAS\",\n      identityId,\n      alias,\n    });\n    return this;\n  }\n  _addAlias({identityId, alias}: AddAlias) {\n    if (!this._accounts.has(identityId)) {\n      throw new Error(`addAlias: no identity matches id ${identityId}`);\n    }\n    const account = this._mutableAccount(identityId);\n    const existingIdentity = account.identity;\n    const existingAliases = existingIdentity.aliases;\n    if (existingAliases.map((a) => a.address).indexOf(alias.address) !== -1) {\n      throw new Error(\n        `addAlias: identity already has alias: ${\n          existingIdentity.name\n        }, ${NodeAddress.toString(alias.address)}`\n      );\n    }\n    if (this._aliasAddressToIdentity.has(alias.address)) {\n      // Some other identity has this alias; fail.\n      throw new Error(\n        `addAlias: alias ${NodeAddress.toString(alias.address)} already bound`\n      );\n    }\n\n    // Mutations below; method must not fail after this line.\n    this._aliasAddressToIdentity.set(alias.address, identityId);\n    const updatedAliases = existingIdentity.aliases.slice();\n    updatedAliases.push(alias);\n    const updatedIdentity = {\n      id: existingIdentity.id,\n      name: existingIdentity.name,\n      subtype: existingIdentity.subtype,\n      aliases: updatedAliases,\n      address: existingIdentity.address,\n    };\n    account.identity = updatedIdentity;\n  }\n\n  /**\n   * Activate an account, making it eligible to send and recieve Grain.\n   *\n   * If the account is already active, this will no-op (without emitting any\n   * event).\n   */\n  activate(id: IdentityId): Ledger {\n    if (!this._accounts.has(id)) {\n      throw new Error(`identity ${id} not found`);\n    }\n    const {active} = this.account(id);\n    if (active) {\n      // no-op; account already active\n      return this;\n    } else {\n      this._createAndProcessEvent({\n        type: \"TOGGLE_ACTIVATION\",\n        identityId: id,\n      });\n      return this;\n    }\n  }\n\n  /**\n   * Deactivate an account, making it ineligible to send or recieve Grain.\n   *\n   * The account's Grain balance will remain untouched until it is reactivated.\n   *\n   * If the account is already inactive, this will no-op (without emitting any\n   * event).\n   */\n  deactivate(id: IdentityId): Ledger {\n    if (!this._accounts.has(id)) {\n      throw new Error(`identity ${id} not found`);\n    }\n    const {active} = this.account(id);\n    if (active) {\n      this._createAndProcessEvent({\n        type: \"TOGGLE_ACTIVATION\",\n        identityId: id,\n      });\n      return this;\n    } else {\n      // no-op; account already inactive\n      return this;\n    }\n  }\n  _toggleActivation({identityId}: ToggleActivation) {\n    const account = this._mutableAccount(identityId);\n    // Cannot fail below this line.\n    account.active = !account.active;\n  }\n\n  /**\n   * Canonicalize a Grain distribution in the ledger.\n   *\n   * Fails if any of the recipients are not active.\n   */\n  distributeGrain(distribution: Distribution): Ledger {\n    this._createAndProcessEvent({\n      type: \"DISTRIBUTE_GRAIN\",\n      distribution,\n    });\n    return this;\n  }\n  _distributeGrain({distribution}: DistributeGrain) {\n    const parseResult = distributionParser.parse(distribution);\n    if (!parseResult.ok) {\n      throw new Error(`invalid distribution: ${parseResult.err}`);\n    }\n    for (const {receipts} of distribution.allocations) {\n      for (const {id, amount} of receipts) {\n        if (!this._accounts.has(id)) {\n          throw new Error(`cannot distribute; invalid id ${id}`);\n        }\n        if (G.lt(amount, G.ZERO)) {\n          throw new Error(`negative Grain amount: ${amount}`);\n        }\n        const {active} = this.account(id);\n        if (!active) {\n          throw new Error(`attempt to distribute to inactive account: ${id}`);\n        }\n      }\n    }\n    // Mutations beckon: method must not fail after this comment\n    this._distributions.set(distribution.id, distribution);\n    for (const allocation of distribution.allocations) {\n      this._allocations.set(allocation.id, allocation);\n      this._allocationsToDistributions.set(allocation.id, distribution.id);\n      for (const grainReceipt of allocation.receipts) {\n        this._allocateGrain({\n          grainReceipt,\n          allocationId: allocation.id,\n          credTimestampMs: distribution.credTimestamp,\n        });\n      }\n    }\n    if (\n      this._lastDistributionTimestamp === null ||\n      distribution.credTimestamp > this._lastDistributionTimestamp\n    ) {\n      this._lastDistributionTimestamp = distribution.credTimestamp;\n    }\n    if (this._shouldTrackGrainIntegration) {\n      this._grainIntegrationStatuses.set(distribution.id, false);\n    }\n  }\n\n  /**\n   * Transfer Grain from one account to another.\n   *\n   * Fails if the sender does not have enough Grain, or if the Grain amount is\n   * negative.\n   * Fails if either the sender or the receipient have not been activated.\n   * Self-transfers are supported.\n   * An optional memo may be added.\n   *\n   * Note: The arguments need to be bundled together in an object with named\n   * keys, to avoid getting confused about which positional argument is `from`\n   * and which one is `to`.\n   */\n  transferGrain(opts: {|\n    from: IdentityId,\n    to: IdentityId,\n    amount: G.Grain,\n    memo: string | null,\n  |}): this {\n    const {from, to, amount, memo} = opts;\n    this._createAndProcessEvent({\n      from,\n      to,\n      amount,\n      memo,\n      type: \"TRANSFER_GRAIN\",\n    });\n    return this;\n  }\n  _transferGrain({from, to, amount}: TransferGrain) {\n    if (!this._accounts.has(from)) {\n      throw new Error(`invalid sender: ${from}`);\n    }\n    if (!this._accounts.has(to)) {\n      throw new Error(`invalid recipient: ${to}`);\n    }\n    const fromAccount = this._mutableAccount(from);\n    const toAccount = this._mutableAccount(to);\n    if (!fromAccount.active) {\n      throw new Error(`transfer from inactive account: ${from}`);\n    }\n    if (!toAccount.active) {\n      throw new Error(`transfer to inactive account: ${to}`);\n    }\n    if (G.lt(amount, G.ZERO)) {\n      throw new Error(`cannot transfer negative Grain amount: ${amount}`);\n    }\n    if (G.gt(amount, fromAccount.balance)) {\n      throw new Error(\n        `transferGrain: ${from} has insufficient balance for transfer: ${amount} > ${fromAccount.balance}`\n      );\n    }\n\n    // Mutation ahead: May not fail after this comment\n    fromAccount.balance = G.sub(fromAccount.balance, amount);\n    toAccount.balance = G.add(toAccount.balance, amount);\n  }\n\n  changeIdentityType(identityId: IdentityId, newType: IdentityType): Ledger {\n    this._createAndProcessEvent({\n      type: \"CHANGE_IDENTITY_TYPE\",\n      newType,\n      identityId,\n    });\n    return this;\n  }\n  _changeIdentityType({identityId, newType}: ChangeIdentityType) {\n    const parseResult = identityTypeParser.parse(newType);\n    if (!parseResult.ok) {\n      throw new Error(`changeIdentityType: invalid type ${newType}`);\n    }\n    if (!this._accounts.has(identityId)) {\n      throw new Error(\n        `changeIdentityType: no identity matches id ${identityId}`\n      );\n    }\n    const account = this._mutableAccount(identityId);\n    const existingIdentity = account.identity;\n    if (existingIdentity.subtype === newType) {\n      // We error rather than silently succeed because we don't want the ledger\n      // to get polluted with no-op records (no successful operations are\n      // idempotent, since they do add to the ledger logs)\n      throw new Error(\n        `changeIdentityType: identity already has type ${newType}`\n      );\n    }\n    const updatedIdentity = {\n      id: identityId,\n      name: existingIdentity.name,\n      subtype: newType,\n      address: existingIdentity.address,\n      aliases: existingIdentity.aliases,\n    };\n\n    // Mutations! Method must not fail after this comment.\n    account.identity = updatedIdentity;\n  }\n\n  /**\n   * setPayoutAddress allows participants to set a payable address to collect\n   * grain. These addresses are keyed on a specific currency, which ensures that\n   * users don't erroneously receive a grain distribution to an address that\n   * cannot handle it (such as a custodial wallet, or rigidly-designed\n   * contract) and effectively lose that reward.\n   *\n   * An address may be deleted by passing in `null` for the\n   * `payoutAddress` parameter. This is useful in case the underlying private key\n   * is compromised or the exchange hosting a custodial account is hacked.\n   */\n  setPayoutAddress(\n    id: IdentityId,\n    payoutAddress: PayoutAddress | null,\n    chainId: ChainId,\n    tokenAddress?: EthAddress\n  ): Ledger {\n    this._createAndProcessEvent({\n      type: \"SET_PAYOUT_ADDRESS\",\n      id,\n      payoutAddress,\n      currency: buildCurrency(chainId, tokenAddress),\n    });\n    return this;\n  }\n  _setPayoutAddress({id, currency, payoutAddress}: SetPayoutAddress) {\n    if (!this._accounts.has(id)) {\n      throw new Error(`setPayoutAddress: no identity matches id ${id}`);\n    }\n    const account = this._mutableAccount(id);\n    const currencyResult = currencyParser.parse(currency);\n    if (!currencyResult.ok) {\n      throw new Error(\n        `Invalid chainId or tokenAddress:\n        ${currencyResult.err}`\n      );\n    }\n    if (payoutAddress !== null) {\n      const addressResult = ethAddressParser.parse(payoutAddress);\n      if (!addressResult.ok) {\n        throw new Error(\n          `setPayoutAddress: invalid payout address: ${payoutAddress}`\n        );\n      }\n      // Mutations! Method must not fail below this comment.\n      account.payoutAddresses.set(\n        JSON.stringify(currencyResult.value),\n        payoutAddress\n      );\n      return;\n    }\n    // else (payoutAddress === null) and we delete the entry\n    account.payoutAddresses.delete(JSON.stringify(currencyResult.value));\n  }\n\n  /**\n   * no-ops if integration tracking is already enabled\n   */\n  enableIntegrationTracking(): Ledger {\n    if (!this._shouldTrackGrainIntegration) {\n      this._createAndProcessEvent({\n        type: \"ENABLE_GRAIN_INTEGRATION\",\n      });\n    }\n    return this;\n  }\n\n  /**\n   * no-ops if integration tracking is already disabled\n   */\n  disableIntegrationTracking(): Ledger {\n    if (this._shouldTrackGrainIntegration) {\n      this._createAndProcessEvent({\n        type: \"DISABLE_GRAIN_INTEGRATION\",\n      });\n    }\n    return this;\n  }\n\n  _enableGrainIntegrationTracking(_: EnableGrainIntegration) {\n    this._shouldTrackGrainIntegration = true;\n  }\n\n  _disableGrainIntegrationTracking(_: DisableGrainIntegration) {\n    this._shouldTrackGrainIntegration = false;\n    this._grainIntegrationStatuses.clear();\n  }\n\n  /**\n   * Mark integrations as executed.\n   * Validates that:\n   * a) executions are tracked\n   * b) executions are not yet marked as executed\n   * c) distribution tracking is enabled\n   */\n  markDistributionExecuted(id: DistributionId): Ledger {\n    if (!this._shouldTrackGrainIntegration) {\n      throw new Error(\"integration tracking not enabled\");\n    }\n    if (this._grainIntegrationStatuses.get(id) === undefined) {\n      throw new Error(\"Distribution not eligible to executed\");\n    }\n    if (this._grainIntegrationStatuses.get(id) === true) {\n      throw new Error(\"Integration has already executed this distribution\");\n    }\n    this._createAndProcessEvent({\n      type: \"MARK_DISTRIBUTION_EXECUTED\",\n      id,\n    });\n    return this;\n  }\n  _markDistributionExecuted({id}: MarkDistributionExecuted) {\n    this._grainIntegrationStatuses.set(id, true);\n  }\n\n  /**\n   * Is cleared each time `disableIntegrationTracking` is called\n   */\n  trackedDistributions(): Iterator<DistributionId> {\n    return this._grainIntegrationStatuses.keys();\n  }\n\n  /**\n   * Returns the status of a tracked distribution\n   * If the distribution has not been executed by the integration, `false` is\n   * returned.\n   * If the distribution has been executed, `true` is returned.\n   * If the distribution is untracked, `undefined` is returned.\n   */\n  isGrainIntegrationExecuted(id: DistributionId): ?boolean {\n    return this._grainIntegrationStatuses.get(id);\n  }\n\n  /**\n   * Retrieve the log of all actions in the Ledger's history.\n   *\n   * May be used to reconstruct the Ledger after serialization.\n   */\n  eventLog(): LedgerLog {\n    return Array.from(this._ledgerEventLog.values());\n  }\n\n  /**\n   * Reconstruct a Ledger from a LedgerLog.\n   */\n  static fromEventLog(log: LedgerLog): Ledger {\n    const ledger = new Ledger();\n    for (const e of log) {\n      ledger._processEvent(e);\n    }\n    return ledger;\n  }\n\n  /**\n   * Serialize the events as a JsonLog-style newline-delimited JSON\n   * string.\n   */\n  serialize(): string {\n    return this._ledgerEventLog.toString();\n  }\n\n  /**\n   * Parse events serialized as a JsonLog-style newline-delimited JSON\n   * string (e.g., by `serialize`).\n   */\n  static parse(eventLog: string): Ledger {\n    const jsonLog = JsonLog.fromString(eventLog, ledgerEventParser);\n    return Ledger.fromEventLog(Array.from(jsonLog.values()));\n  }\n\n  /**\n   * Return the cred-effective timestamp for the last Grain distribution.\n   *\n   * We provide this because we may want to have a policy that issues one\n   * distribution for each interval in the history of the project.\n   *\n   * If there were never any distributions, then null will be returned.\n   */\n  lastDistributionTimestamp(): TimestampMs | null {\n    return this._lastDistributionTimestamp;\n  }\n\n  _processAction(action: Action) {\n    switch (action.type) {\n      case \"CREATE_IDENTITY\":\n        this._createIdentity(action);\n        break;\n      case \"RENAME_IDENTITY\":\n        this._renameIdentity(action);\n        break;\n      case \"ADD_ALIAS\":\n        this._addAlias(action);\n        break;\n      case \"MERGE_IDENTITIES\":\n        this._mergeIdentities(action);\n        break;\n      case \"TOGGLE_ACTIVATION\":\n        this._toggleActivation(action);\n        break;\n      case \"DISTRIBUTE_GRAIN\":\n        this._distributeGrain(action);\n        break;\n      case \"TRANSFER_GRAIN\":\n        this._transferGrain(action);\n        break;\n      case \"CHANGE_IDENTITY_TYPE\":\n        this._changeIdentityType(action);\n        break;\n      case \"SET_PAYOUT_ADDRESS\":\n        this._setPayoutAddress(action);\n        break;\n      case \"ENABLE_GRAIN_INTEGRATION\":\n        this._enableGrainIntegrationTracking(action);\n        break;\n      case \"DISABLE_GRAIN_INTEGRATION\":\n        this._disableGrainIntegrationTracking(action);\n        break;\n      case \"MARK_DISTRIBUTION_EXECUTED\":\n        this._markDistributionExecuted(action);\n        break;\n      // istanbul ignore next: unreachable per Flow\n      default:\n        throw new Error(`Unknown type: ${(action.type: empty)}`);\n    }\n  }\n\n  _processEvent(e: LedgerEvent) {\n    const {action, ledgerTimestamp} = e;\n    if (ledgerTimestamp == null || !isFinite(ledgerTimestamp)) {\n      throw new Error(`ledger: invalid timestamp ${ledgerTimestamp}`);\n    }\n    if (ledgerTimestamp < this._latestTimestamp) {\n      throw new Error(\n        `ledger: out-of-order timestamp: ${ledgerTimestamp} < ${this._latestTimestamp}`\n      );\n    }\n    this._processAction(action);\n    this._latestTimestamp = ledgerTimestamp;\n    this._ledgerEventLog.append(e);\n  }\n\n  _createAndProcessEvent(action: Action) {\n    const ledgerTimestamp = _getTimestamp();\n    const ledgerEvent = {\n      ledgerTimestamp,\n      action,\n      version: \"1\",\n      uuid: uuid.random(),\n    };\n    this._processEvent(ledgerEvent);\n  }\n\n  // Helper method for recording that Grain was allocated to a identity.\n  // Increases the identity's paid amount and balance in sync.\n  _allocateGrain(params: {|\n    +grainReceipt: GrainReceipt,\n    +allocationId: AllocationId,\n    +credTimestampMs: TimestampMs,\n  |}) {\n    const account = this._mutableAccount(params.grainReceipt.id);\n    account.paid = G.add(params.grainReceipt.amount, account.paid);\n    account.allocationHistory.push(params);\n    account.balance = G.add(params.grainReceipt.amount, account.balance);\n  }\n}\n\nexport type LedgerLog = $ReadOnlyArray<LedgerEvent>;\n\nexport type LedgerEvent = {|\n  +action: Action,\n  +ledgerTimestamp: TimestampMs,\n  +version: \"1\",\n  +uuid: uuid.Uuid,\n|};\n\n/**\n * The Actions are used to store the history of Ledger changes.\n */\ntype Action =\n  | CreateIdentity\n  | RenameIdentity\n  | AddAlias\n  | MergeIdentities\n  | ToggleActivation\n  | DistributeGrain\n  | TransferGrain\n  | ChangeIdentityType\n  | SetPayoutAddress\n  | EnableGrainIntegration\n  | DisableGrainIntegration\n  | MarkDistributionExecuted;\n\ntype CreateIdentity = {|\n  +type: \"CREATE_IDENTITY\",\n  +identity: Identity,\n|};\nconst createIdentityParser: C.Parser<CreateIdentity> = C.object({\n  type: C.exactly([\"CREATE_IDENTITY\"]),\n  identity: identityParser,\n});\n\ntype RenameIdentity = {|\n  +type: \"RENAME_IDENTITY\",\n  +identityId: IdentityId,\n  +newName: Name,\n|};\nconst renameIdentityParser: C.Parser<RenameIdentity> = C.object({\n  type: C.exactly([\"RENAME_IDENTITY\"]),\n  identityId: uuid.parser,\n  newName: nameParser,\n});\n\ntype ChangeIdentityType = {|\n  +type: \"CHANGE_IDENTITY_TYPE\",\n  +identityId: IdentityId,\n  +newType: IdentityType,\n|};\nconst changeIdentityTypeParser = C.object({\n  type: C.exactly([\"CHANGE_IDENTITY_TYPE\"]),\n  identityId: uuid.parser,\n  newType: identityTypeParser,\n});\n\nexport type AddAlias = {|\n  +type: \"ADD_ALIAS\",\n  +identityId: IdentityId,\n  +alias: Alias,\n|};\nconst addAliasParser: C.Parser<AddAlias> = C.object({\n  type: C.exactly([\"ADD_ALIAS\"]),\n  identityId: uuid.parser,\n  alias: aliasParser,\n});\n\ntype MergeIdentities = {|\n  +type: \"MERGE_IDENTITIES\",\n  +base: IdentityId,\n  +target: IdentityId,\n|};\nconst mergeIdentitiesParser: C.Parser<MergeIdentities> = C.object({\n  type: C.exactly([\"MERGE_IDENTITIES\"]),\n  base: uuid.parser,\n  target: uuid.parser,\n});\n\ntype ToggleActivation = {|\n  +type: \"TOGGLE_ACTIVATION\",\n  +identityId: IdentityId,\n|};\nconst toggleActivationParser: C.Parser<ToggleActivation> = C.object({\n  type: C.exactly([\"TOGGLE_ACTIVATION\"]),\n  identityId: uuid.parser,\n});\n\ntype DistributeGrain = {|\n  +type: \"DISTRIBUTE_GRAIN\",\n  +distribution: Distribution,\n|};\nconst distributeGrainParser: C.Parser<DistributeGrain> = C.object({\n  type: C.exactly([\"DISTRIBUTE_GRAIN\"]),\n  distribution: distributionParser,\n});\n\nexport type TransferGrain = {|\n  +type: \"TRANSFER_GRAIN\",\n  +from: IdentityId,\n  +to: IdentityId,\n  +amount: G.Grain,\n  +memo: string | null,\n|};\n\ntype SetPayoutAddress = {|\n  +type: \"SET_PAYOUT_ADDRESS\",\n  +id: IdentityId,\n  +currency: Currency,\n  +payoutAddress: EthAddress | null,\n|};\n\nconst setPayoutAddressParser: C.Parser<SetPayoutAddress> = C.object({\n  type: C.exactly([\"SET_PAYOUT_ADDRESS\"]),\n  id: uuid.parser,\n  currency: currencyParser,\n  payoutAddress: ethAddressParser,\n});\n\nconst transferGrainParser: C.Parser<TransferGrain> = C.object({\n  type: C.exactly([\"TRANSFER_GRAIN\"]),\n  from: uuid.parser,\n  to: uuid.parser,\n  amount: G.parser,\n  memo: C.orElse([C.string, C.null_]),\n});\n\ntype EnableGrainIntegration = {|\n  +type: \"ENABLE_GRAIN_INTEGRATION\",\n|};\n\nconst enableGrainIntegrationParser: C.Parser<EnableGrainIntegration> = C.object(\n  {\n    type: C.exactly([\"ENABLE_GRAIN_INTEGRATION\"]),\n  }\n);\n\ntype DisableGrainIntegration = {|\n  +type: \"DISABLE_GRAIN_INTEGRATION\",\n|};\n\nconst disableGrainIntegrationParser: C.Parser<DisableGrainIntegration> = C.object(\n  {\n    type: C.exactly([\"DISABLE_GRAIN_INTEGRATION\"]),\n  }\n);\n\ntype MarkDistributionExecuted = {|\n  +type: \"MARK_DISTRIBUTION_EXECUTED\",\n  +id: DistributionId,\n|};\n\nconst executeDistributionParser: C.Parser<MarkDistributionExecuted> = C.object({\n  type: C.exactly([\"MARK_DISTRIBUTION_EXECUTED\"]),\n  id: uuid.parser,\n});\n\nconst actionParser: C.Parser<Action> = C.orElse([\n  createIdentityParser,\n  renameIdentityParser,\n  changeIdentityTypeParser,\n  addAliasParser,\n  mergeIdentitiesParser,\n  toggleActivationParser,\n  distributeGrainParser,\n  transferGrainParser,\n  setPayoutAddressParser,\n  enableGrainIntegrationParser,\n  disableGrainIntegrationParser,\n  executeDistributionParser,\n]);\n\nconst ledgerEventParser: C.Parser<LedgerEvent> = C.object({\n  action: actionParser,\n  ledgerTimestamp: C.number,\n  version: C.exactly([\"1\"]),\n  uuid: uuid.parser,\n});\n\nconst _getTimestamp = () => Date.now();\n","// @flow\n\nimport stringify from \"json-stable-stringify\";\nimport * as C from \"../../util/combo\";\nimport {Ledger} from \"./ledger\";\nimport {\n  type Name,\n  nameFromString,\n  nameParser,\n  type Alias,\n  aliasParser,\n  type IdentityType,\n  identityTypeParser,\n} from \"../identity\";\nimport type {IdentityId} from \"../identity\";\n\n/**\n * An IdentityProposal allows a plugin to report a participant identity,\n * for inclusion in the ledger.\n *\n * The proposal has an `alias`, which includes a node address for the identity.\n * If some account already has that address, then the proposal may be ignored.\n *\n * If no account has that address, then the proposal will be added as a new\n * identity in the ledger.\n *\n * The proposal has a proposed name for the identity, and a name for the\n * plugin. The plugin name will be used as a discriminator if there's already a\n * different identity with that name.\n *\n * If the name and discriminator combo is taken, then a further numeric\n * discriminator will be added.\n *\n * When the identity is created, it will have its own identity address, per\n * usual, and then the alias will be added. We give the plugin control over the\n * full alias because aliases include helpful descriptions which are shown in\n * the UI, and the plugin should choose an appropriate description.\n */\nexport type IdentityProposal = {|\n  +name: Name,\n  +pluginName: Name,\n  +alias: Alias,\n  +type: IdentityType,\n|};\n\nexport const parser: C.Parser<IdentityProposal> = C.object({\n  name: nameParser,\n  pluginName: nameParser,\n  alias: aliasParser,\n  type: identityTypeParser,\n});\n\nexport const identityProposalsParser: C.Parser<\n  $ReadOnlyArray<IdentityProposal>\n> = C.array(parser);\n\n/**\n * Given a Ledger and an IdentityProposal, ensure that some Ledger account\n * exists for the proposed identity and return the identity ID.\n *\n * If there is already an account matching the node address of the proposal's\n * alias, then the ledger is unchanged.\n *\n * Otherwise, a new account will be created per the semantics of the\n * IdentityProposal type.\n */\nexport function ensureIdentityExists(\n  ledger: Ledger,\n  proposal: IdentityProposal\n): IdentityId {\n  const existingAccount = ledger.accountByAddress(proposal.alias.address);\n  if (existingAccount != null) {\n    // there is already some account that includes this address; do nothing\n    return existingAccount.identity.id;\n  }\n  const name = _chooseIdentityName(proposal, (n) => ledger.nameAvailable(n));\n  const id = ledger.createIdentity(proposal.type, name);\n  ledger.addAlias(id, proposal.alias);\n  return id;\n}\n\nconst MAX_NUMERIC_DISCRIMINATOR = 100;\nexport function _chooseIdentityName(\n  proposal: IdentityProposal,\n  checkAvailability: (Name) => boolean\n): Name {\n  if (checkAvailability(proposal.name)) {\n    return proposal.name;\n  }\n  const withPluginDiscriminator = nameFromString(\n    proposal.name + \"-\" + proposal.pluginName\n  );\n  if (checkAvailability(withPluginDiscriminator)) {\n    return withPluginDiscriminator;\n  }\n  for (let i = 1; i < MAX_NUMERIC_DISCRIMINATOR; i++) {\n    const withNumericDiscriminator = nameFromString(\n      withPluginDiscriminator + \"-\" + i\n    );\n    if (checkAvailability(withNumericDiscriminator)) {\n      return withNumericDiscriminator;\n    }\n  }\n  throw new Error(`unable to find an identity name for ${stringify(proposal)}`);\n}\n","// @flow\n\nimport {Graph, type GraphJSON} from \"./graph\";\nimport {type WeightsT, type WeightsJSON} from \"./weights\";\nimport * as Weights from \"./weights\";\nimport {toCompat, fromCompat, type Compatible} from \"../util/compat\";\n\n/** The WeightedGraph a Graph alongside associated Weights\n *\n * Any combination of Weights and Graph can make a valid WeightedGraph. If the\n * Weights contains weights for node or edge addresses that are not present in\n * the graph, then those weights will be ignored. If the graph contains nodes\n * or edges which do not correspond to any weights, then default weights will\n * be inferred.\n */\nexport type WeightedGraph = {|+graph: Graph, +weights: WeightsT|};\n\nconst COMPAT_INFO = {type: \"sourcecred/weightedGraph\", version: \"0.1.0\"};\n\nexport type WeightedGraphJSON = Compatible<{|\n  +graphJSON: GraphJSON,\n  +weightsJSON: WeightsJSON,\n|}>;\n\n/**\n * Create a new, empty WeightedGraph.\n */\nexport function empty(): WeightedGraph {\n  return {graph: new Graph(), weights: Weights.empty()};\n}\n\nexport function toJSON(w: WeightedGraph): WeightedGraphJSON {\n  const graphJSON = w.graph.toJSON();\n  const weightsJSON = Weights.toJSON(w.weights);\n  return toCompat(COMPAT_INFO, {graphJSON, weightsJSON});\n}\n\nexport function fromJSON(j: WeightedGraphJSON): WeightedGraph {\n  const {graphJSON, weightsJSON} = fromCompat(COMPAT_INFO, j);\n  const graph = Graph.fromJSON(graphJSON);\n  const weights = Weights.fromJSON(weightsJSON);\n  return {graph, weights};\n}\n\n/**\n * Merge multiple WeightedGraphs together.\n *\n * This delegates to the semantics of Graph.merge and Weights.merge.\n */\nexport function merge(ws: $ReadOnlyArray<WeightedGraph>): WeightedGraph {\n  const graph = Graph.merge(ws.map((w) => w.graph));\n  const weights = Weights.merge(ws.map((w) => w.weights));\n  return {graph, weights};\n}\n\n/**\n * Create a new WeightedGraph where default weights have been overriden.\n *\n * This takes a base WeightedGraph along with a set of \"override\" weights. The\n * new graph has the union of both the base and override weights; wherever\n * there is a conflict, the override weights will replace the base weights.\n * This is useful in situations where we want to let the user manually specify\n * some weights, and ensure that the user's decisions will trump any defaults.\n *\n * This method does not mutuate any of the original arguments. For performance\n * reasons, it is not a full copy; the input and output WeightedGraphs have the\n * exact same underlying Graph, which should not be modified.\n */\nexport function overrideWeights(\n  wg: WeightedGraph,\n  overrides: WeightsT\n): WeightedGraph {\n  const weights = Weights.merge([wg.weights, overrides], {\n    nodeResolver: (a, b) => b,\n    edgeResolver: (a, b) => b,\n  });\n  return {graph: wg.graph, weights};\n}\n","// @flow\n\nimport {\n  // $FlowIssue[missing-export]\n  TextEncoder as importedTextEncoder,\n  TextDecoder as importedTextDecoder,\n} from \"util\";\n\nlet encoder, decoder;\n// ensure jest skips this condition\nif (typeof window !== \"undefined\" && typeof process === \"undefined\") {\n  if (!(window.TextEncoder && window.TextDecoder)) {\n    throw new Error(\"No Encoder classes available.\");\n  }\n  decoder = window.TextDecoder;\n  encoder = window.TextEncoder;\n} else {\n  // load imported libraries or fallback to globals if imports are unavailable\n  /* eslint-disable no-undef */\n  // $FlowIssue[cannot-resolve-name]\n  decoder = importedTextDecoder || globalThis.TextDecoder;\n  /* eslint-disable no-undef */\n  // $FlowIssue[cannot-resolve-name]\n  encoder = importedTextEncoder || globalThis.TextDecoder;\n}\n\n// $FlowIssue[incompatible-call]\nconst decode: (a: Uint8Array) => string = (a) => new decoder().decode(a);\nconst encode: (s: string) => Uint8Array = (s) => new encoder().encode(s);\n\nexport {encode, decode};\n","// @flow\n\nimport {DataStorage} from \"../core/storage\";\nimport {decode} from \"../core/storage/textEncoding\";\nimport * as P from \"./combo\";\n\nconst notFound = (e): boolean => e.code === \"ENOENT\" || e.number === 404;\n\n/**\n * Load and parse a JSON file from DataStorage.\n *\n * If the file cannot be read, then an error is thrown.\n * If parsing fails, an error is thrown.\n */\nexport async function loadJson<T>(\n  storage: DataStorage,\n  path: string,\n  parser: P.Parser<T>\n): Promise<T> {\n  const contents = await storage.get(path);\n  return parser.parseOrThrow(JSON.parse(decode(contents)));\n}\n\n/**\n * Load and parse a JSON file from DataStorage, with a default to use if the\n * file is not found.\n *\n * This is intended as a convenience for situations where the user may\n * optionally provide configuration in a json file.\n *\n * The default must be provided as a function that returns a default, to\n * accommodate situations where the object may be mutable, or where constructing\n * the default may be expensive.\n *\n * If no file is present at that location, then the default constructor is\n * invoked to create a default value, and that is returned.\n *\n * If attempting to load the file fails for any reason other than ENOENT or a\n * 404 (e.g. the path actually is a directory), then the error is thrown.\n *\n * If parsing fails, an error is thrown.\n */\nexport async function loadJsonWithDefault<T>(\n  storage: DataStorage,\n  path: string,\n  parser: P.Parser<T>,\n  def: () => T\n): Promise<T> {\n  try {\n    const contents = await storage.get(path);\n    return parser.parseOrThrow(JSON.parse(decode(contents)));\n  } catch (e) {\n    if (notFound(e)) {\n      console.log(`File not found at path: ${path}. Defaulting.`);\n      return def();\n    } else {\n      throw e;\n    }\n  }\n}\n\n/**\n * Read a text file from DataStorage, with a default string value to use if the\n * file is not found. The file is read in the default encoding, UTF-8.\n *\n * This is intended as a convenience for situations where the user may\n * optionally provide configuration in a non-JSON file saved to disk.\n *\n * The default must be provided as a function that returns a default, in\n * case constructing the default may be expensive.\n *\n * If no file is present at that location, then the default constructor is\n * invoked to create a default value, and that is returned.\n *\n * If attempting to load the file fails for any reason other than ENOENT or a\n * 404 (e.g. the path actually is a directory), then the error is thrown.\n */\nexport async function loadFileWithDefault(\n  storage: DataStorage,\n  path: string,\n  def: () => string\n): Promise<string> {\n  try {\n    return decode(await storage.get(path));\n  } catch (e) {\n    if (notFound(e)) {\n      return def();\n    } else {\n      throw e;\n    }\n  }\n}\n","\n/*! pako 2.0.3 https://github.com/nodeca/pako @license (MIT AND Zlib) */\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n/* eslint-disable space-unary-ops */\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//const Z_FILTERED          = 1;\n//const Z_HUFFMAN_ONLY      = 2;\n//const Z_RLE               = 3;\nconst Z_FIXED               = 4;\n//const Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nconst Z_BINARY              = 0;\nconst Z_TEXT                = 1;\n//const Z_ASCII             = 1; // = Z_TEXT\nconst Z_UNKNOWN             = 2;\n\n/*============================================================================*/\n\n\nfunction zero(buf) { let len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nconst STORED_BLOCK = 0;\nconst STATIC_TREES = 1;\nconst DYN_TREES    = 2;\n/* The three kinds of block type */\n\nconst MIN_MATCH    = 3;\nconst MAX_MATCH    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nconst LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nconst LITERALS      = 256;\n/* number of literal bytes 0..255 */\n\nconst L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nconst D_CODES       = 30;\n/* number of distance codes */\n\nconst BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\n\nconst HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\n\nconst MAX_BITS      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nconst MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nconst END_BLOCK   = 256;\n/* end of block literal code */\n\nconst REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nconst REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nconst REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nconst extra_lbits =   /* extra bits for each length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]);\n\nconst extra_dbits =   /* extra bits for each distance code */\n  new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]);\n\nconst extra_blbits =  /* extra bits for each bit length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]);\n\nconst bl_order =\n  new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nconst DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nconst static_ltree  = new Array((L_CODES + 2) * 2);\nzero(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nconst static_dtree  = new Array(D_CODES * 2);\nzero(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nconst _dist_code    = new Array(DIST_CODE_LEN);\nzero(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nconst _length_code  = new Array(MAX_MATCH - MIN_MATCH + 1);\nzero(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nconst base_length   = new Array(LENGTH_CODES);\nzero(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nconst base_dist     = new Array(D_CODES);\nzero(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n}\n\n\nlet static_l_desc;\nlet static_d_desc;\nlet static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nconst d_code = (dist) => {\n\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n};\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nconst put_short = (s, w) => {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n};\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nconst send_bits = (s, value, length) => {\n\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n};\n\n\nconst send_code = (s, c, tree) => {\n\n  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);\n};\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nconst bi_reverse = (code, len) => {\n\n  let res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nconst bi_flush = (s) => {\n\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n};\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nconst gen_bitlen = (s, desc) =>\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n{\n  const tree            = desc.dyn_tree;\n  const max_code        = desc.max_code;\n  const stree           = desc.stat_desc.static_tree;\n  const has_stree       = desc.stat_desc.has_stree;\n  const extra           = desc.stat_desc.extra_bits;\n  const base            = desc.stat_desc.extra_base;\n  const max_length      = desc.stat_desc.max_length;\n  let h;              /* heap index */\n  let n, m;           /* iterate over the tree elements */\n  let bits;           /* bit length */\n  let xbits;          /* extra bits */\n  let f;              /* frequency */\n  let overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Trace((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n        // Trace((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n        tree[m * 2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nconst gen_codes = (tree, max_code, bl_count) =>\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n{\n  const next_code = new Array(MAX_BITS + 1); /* next code value for each bit length */\n  let code = 0;              /* running code value */\n  let bits;                  /* bit index */\n  let n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS; bits++) {\n    next_code[bits] = code = (code + bl_count[bits - 1]) << 1;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    let len = tree[n * 2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n};\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nconst tr_static_init = () => {\n\n  let n;        /* iterates over tree elements */\n  let bits;     /* bit counter */\n  let length;   /* length value */\n  let code;     /* code value */\n  let dist;     /* distance index */\n  const bl_count = new Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES; n++) {\n    static_dtree[n * 2 + 1]/*.Len*/ = 5;\n    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS + 1, L_CODES, MAX_BITS);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES, MAX_BITS);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES, MAX_BL_BITS);\n\n  //static_init_done = true;\n};\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nconst init_block = (s) => {\n\n  let n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.last_lit = s.matches = 0;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nconst bi_windup = (s) =>\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n};\n\n/* ===========================================================================\n * Copy a stored block, storing first the length and its\n * one's complement if requested.\n */\nconst copy_block = (s, buf, len, header) =>\n//DeflateState *s;\n//charf    *buf;    /* the input data */\n//unsigned len;     /* its length */\n//int      header;  /* true if block header must be written */\n{\n  bi_windup(s);        /* align on byte boundary */\n\n  if (header) {\n    put_short(s, len);\n    put_short(s, ~len);\n  }\n//  while (len--) {\n//    put_byte(s, *buf++);\n//  }\n  s.pending_buf.set(s.window.subarray(buf, buf + len), s.pending);\n  s.pending += len;\n};\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nconst smaller = (tree, n, m, depth) => {\n\n  const _n2 = n * 2;\n  const _m2 = m * 2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n};\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nconst pqdownheap = (s, tree, k) =>\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n{\n  const v = s.heap[k];\n  let j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n};\n\n\n// inlined manually\n// const SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nconst compress_block = (s, ltree, dtree) =>\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n{\n  let dist;           /* distance of matched string */\n  let lc;             /* match length or unmatched char (if dist == 0) */\n  let lx = 0;         /* running index in l_buf */\n  let code;           /* the code to send */\n  let extra;          /* number of extra bits to send */\n\n  if (s.last_lit !== 0) {\n    do {\n      dist = (s.pending_buf[s.d_buf + lx * 2] << 8) | (s.pending_buf[s.d_buf + lx * 2 + 1]);\n      lc = s.pending_buf[s.l_buf + lx];\n      lx++;\n\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and d_buf+l_buf is ok: */\n      //Assert((uInt)(s->pending) < s->lit_bufsize + 2*lx,\n      //       \"pendingBuf overflow\");\n\n    } while (lx < s.last_lit);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n};\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nconst build_tree = (s, desc) =>\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n{\n  const tree     = desc.dyn_tree;\n  const stree    = desc.stat_desc.static_tree;\n  const has_stree = desc.stat_desc.has_stree;\n  const elems    = desc.stat_desc.elems;\n  let n, m;          /* iterate over heap elements */\n  let max_code = -1; /* largest code with non zero frequency */\n  let node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n};\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nconst scan_tree = (s, tree, max_code) =>\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n{\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nconst send_tree = (s, tree, max_code) =>\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n{\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nconst build_bl_tree = (s) => {\n\n  let max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n};\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nconst send_all_trees = (s, lcodes, dcodes, blcodes) =>\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n{\n  let rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1,   5);\n  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n};\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"black list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"white list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nconst detect_data_type = (s) => {\n  /* black_mask is the bit mask of black-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  let black_mask = 0xf3ffc07f;\n  let n;\n\n  /* Check for non-textual (\"black-listed\") bytes. */\n  for (n = 0; n <= 31; n++, black_mask >>>= 1) {\n    if ((black_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"white-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"black-listed\" or \"white-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n};\n\n\nlet static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nconst _tr_init = (s) =>\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n};\n\n\n/* ===========================================================================\n * Send a stored block\n */\nconst _tr_stored_block = (s, buf, stored_len, last) =>\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */\n  copy_block(s, buf, stored_len, true); /* with header */\n};\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nconst _tr_align = (s) => {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n};\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and output the encoded block to the zip file.\n */\nconst _tr_flush_block = (s, buf, stored_len, last) =>\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  let opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  let max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->last_lit));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n};\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nconst _tr_tally = (s, dist, lc) =>\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n{\n  //let out_length, in_length, dcode;\n\n  s.pending_buf[s.d_buf + s.last_lit * 2]     = (dist >>> 8) & 0xff;\n  s.pending_buf[s.d_buf + s.last_lit * 2 + 1] = dist & 0xff;\n\n  s.pending_buf[s.l_buf + s.last_lit] = lc & 0xff;\n  s.last_lit++;\n\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS + 1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n\n//#ifdef TRUNCATE_BLOCK\n//  /* Try to guess if it is profitable to stop the current block here */\n//  if ((s.last_lit & 0x1fff) === 0 && s.level > 2) {\n//    /* Compute an upper bound for the compressed length */\n//    out_length = s.last_lit*8;\n//    in_length = s.strstart - s.block_start;\n//\n//    for (dcode = 0; dcode < D_CODES; dcode++) {\n//      out_length += s.dyn_dtree[dcode*2]/*.Freq*/ * (5 + extra_dbits[dcode]);\n//    }\n//    out_length >>>= 3;\n//    //Tracev((stderr,\"\\nlast_lit %u, in %ld, out ~%ld(%ld%%) \",\n//    //       s->last_lit, in_length, out_length,\n//    //       100L - out_length*100L/in_length));\n//    if (s.matches < (s.last_lit>>1)/*int /2*/ && out_length < (in_length>>1)/*int /2*/) {\n//      return true;\n//    }\n//  }\n//#endif\n\n  return (s.last_lit === s.lit_bufsize - 1);\n  /* We avoid equality with lit_bufsize because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n};\n\nvar _tr_init_1  = _tr_init;\nvar _tr_stored_block_1 = _tr_stored_block;\nvar _tr_flush_block_1  = _tr_flush_block;\nvar _tr_tally_1 = _tr_tally;\nvar _tr_align_1 = _tr_align;\n\nvar trees = {\n\t_tr_init: _tr_init_1,\n\t_tr_stored_block: _tr_stored_block_1,\n\t_tr_flush_block: _tr_flush_block_1,\n\t_tr_tally: _tr_tally_1,\n\t_tr_align: _tr_align_1\n};\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst adler32 = (adler, buf, len, pos) => {\n  let s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n};\n\n\nvar adler32_1 = adler32;\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nconst makeTable = () => {\n  let c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n};\n\n// Create table on load. Just 255 signed longs. Not a problem.\nconst crcTable = new Uint32Array(makeTable());\n\n\nconst crc32 = (crc, buf, len, pos) => {\n  const t = crcTable;\n  const end = pos + len;\n\n  crc ^= -1;\n\n  for (let i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n};\n\n\nvar crc32_1 = crc32;\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar messages = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar constants = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  Z_MEM_ERROR:       -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst { _tr_init: _tr_init$1, _tr_stored_block: _tr_stored_block$1, _tr_flush_block: _tr_flush_block$1, _tr_tally: _tr_tally$1, _tr_align: _tr_align$1 } = trees;\n\n\n\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH, Z_PARTIAL_FLUSH, Z_FULL_FLUSH, Z_FINISH, Z_BLOCK,\n  Z_OK, Z_STREAM_END, Z_STREAM_ERROR, Z_DATA_ERROR, Z_BUF_ERROR,\n  Z_DEFAULT_COMPRESSION,\n  Z_FILTERED, Z_HUFFMAN_ONLY, Z_RLE, Z_FIXED: Z_FIXED$1, Z_DEFAULT_STRATEGY,\n  Z_UNKNOWN: Z_UNKNOWN$1,\n  Z_DEFLATED\n} = constants;\n\n/*============================================================================*/\n\n\nconst MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nconst MAX_WBITS = 15;\n/* 32K LZ77 window */\nconst DEF_MEM_LEVEL = 8;\n\n\nconst LENGTH_CODES$1  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nconst LITERALS$1      = 256;\n/* number of literal bytes 0..255 */\nconst L_CODES$1       = LITERALS$1 + 1 + LENGTH_CODES$1;\n/* number of Literal or Length codes, including the END_BLOCK code */\nconst D_CODES$1       = 30;\n/* number of distance codes */\nconst BL_CODES$1      = 19;\n/* number of codes used to transfer the bit lengths */\nconst HEAP_SIZE$1     = 2 * L_CODES$1 + 1;\n/* maximum heap size */\nconst MAX_BITS$1  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst MIN_MATCH$1 = 3;\nconst MAX_MATCH$1 = 258;\nconst MIN_LOOKAHEAD = (MAX_MATCH$1 + MIN_MATCH$1 + 1);\n\nconst PRESET_DICT = 0x20;\n\nconst INIT_STATE = 42;\nconst EXTRA_STATE = 69;\nconst NAME_STATE = 73;\nconst COMMENT_STATE = 91;\nconst HCRC_STATE = 103;\nconst BUSY_STATE = 113;\nconst FINISH_STATE = 666;\n\nconst BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nconst BS_BLOCK_DONE     = 2; /* block flush performed */\nconst BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nconst BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nconst OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nconst err = (strm, errorCode) => {\n  strm.msg = messages[errorCode];\n  return errorCode;\n};\n\nconst rank = (f) => {\n  return ((f) << 1) - ((f) > 4 ? 9 : 0);\n};\n\nconst zero$1 = (buf) => {\n  let len = buf.length; while (--len >= 0) { buf[len] = 0; }\n};\n\n\n/* eslint-disable new-cap */\nlet HASH_ZLIB = (s, prev, data) => ((prev << s.hash_shift) ^ data) & s.hash_mask;\n// This hash causes less collisions, https://github.com/nodeca/pako/issues/135\n// But breaks binary compatibility\n//let HASH_FAST = (s, prev, data) => ((prev << 8) + (prev >> 8) + (data << 4)) & s.hash_mask;\nlet HASH = HASH_ZLIB;\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output goes\n * through this function so some applications may wish to modify it\n * to avoid allocating a large strm->output buffer and copying into it.\n * (See also read_buf()).\n */\nconst flush_pending = (strm) => {\n  const s = strm.state;\n\n  //_tr_flush_bits(s);\n  let len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  strm.output.set(s.pending_buf.subarray(s.pending_out, s.pending_out + len), strm.next_out);\n  strm.next_out += len;\n  s.pending_out += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n};\n\n\nconst flush_block_only = (s, last) => {\n  _tr_flush_block$1(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n};\n\n\nconst put_byte = (s, b) => {\n  s.pending_buf[s.pending++] = b;\n};\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nconst putShortMSB = (s, b) => {\n\n  //  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n};\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nconst read_buf = (strm, buf, start, size) => {\n\n  let len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  buf.set(strm.input.subarray(strm.next_in, strm.next_in + len), start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32_1(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32_1(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n};\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nconst longest_match = (s, cur_match) => {\n\n  let chain_length = s.max_chain_length;      /* max hash chain length */\n  let scan = s.strstart; /* current string */\n  let match;                       /* matched string */\n  let len;                           /* length of current match */\n  let best_len = s.prev_length;              /* best match length so far */\n  let nice_match = s.nice_match;             /* stop if match long enough */\n  const limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  const _win = s.window; // shortcut\n\n  const wmask = s.w_mask;\n  const prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  const strend = s.strstart + MAX_MATCH$1;\n  let scan_end1  = _win[scan + best_len - 1];\n  let scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH$1 - (strend - scan);\n    scan = strend - MAX_MATCH$1;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n};\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nconst fill_window = (s) => {\n\n  const _w_size = s.w_size;\n  let p, n, m, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      s.window.set(s.window.subarray(_w_size, _w_size + _w_size), 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n\n      /* Slide the hash table (could be avoided with 32 bit values\n       at the expense of memory usage). We slide even when level == 0\n       to keep the hash table consistent if we switch back to level > 0\n       later. (Using level 0 permanently is not an optimal usage of\n       zlib, so we don't care about this pathological case.)\n       */\n\n      n = s.hash_size;\n      p = n;\n\n      do {\n        m = s.head[--p];\n        s.head[p] = (m >= _w_size ? m - _w_size : 0);\n      } while (--n);\n\n      n = _w_size;\n      p = n;\n\n      do {\n        m = s.prev[--p];\n        s.prev[p] = (m >= _w_size ? m - _w_size : 0);\n        /* If n is not on any hash chain, prev[n] is garbage but\n         * its value will never be used.\n         */\n      } while (--n);\n\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH$1) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + 1]);\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH$1 - 1]);\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH$1) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    const curr = s.strstart + s.lookahead;\n//    let init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n};\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n * This function does not insert new strings in the dictionary since\n * uncompressible data is probably not useful. This function is used\n * only for the level=0 compression option.\n * NOTE: this function should be optimized to avoid extra copying from\n * window to pending_buf.\n */\nconst deflate_stored = (s, flush) => {\n\n  /* Stored blocks are limited to 0xffff bytes, pending_buf is limited\n   * to pending_buf_size, and each stored block has a 5 byte header:\n   */\n  let max_block_size = 0xffff;\n\n  if (max_block_size > s.pending_buf_size - 5) {\n    max_block_size = s.pending_buf_size - 5;\n  }\n\n  /* Copy as much as possible from input to output: */\n  for (;;) {\n    /* Fill the window as much as possible: */\n    if (s.lookahead <= 1) {\n\n      //Assert(s->strstart < s->w_size+MAX_DIST(s) ||\n      //  s->block_start >= (long)s->w_size, \"slide too late\");\n//      if (!(s.strstart < s.w_size + (s.w_size - MIN_LOOKAHEAD) ||\n//        s.block_start >= s.w_size)) {\n//        throw  new Error(\"slide too late\");\n//      }\n\n      fill_window(s);\n      if (s.lookahead === 0 && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n\n      if (s.lookahead === 0) {\n        break;\n      }\n      /* flush the current block */\n    }\n    //Assert(s->block_start >= 0L, \"block gone\");\n//    if (s.block_start < 0) throw new Error(\"block gone\");\n\n    s.strstart += s.lookahead;\n    s.lookahead = 0;\n\n    /* Emit a stored block if pending_buf will be full: */\n    const max_start = s.block_start + max_block_size;\n\n    if (s.strstart === 0 || s.strstart >= max_start) {\n      /* strstart == 0 is possible when wraparound on 16-bit machine */\n      s.lookahead = s.strstart - max_start;\n      s.strstart = max_start;\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n\n\n    }\n    /* Flush if we may have to slide, otherwise block_start may become\n     * negative and the data will be gone:\n     */\n    if (s.strstart - s.block_start >= (s.w_size - MIN_LOOKAHEAD)) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n\n  s.insert = 0;\n\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n\n  if (s.strstart > s.block_start) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_NEED_MORE;\n};\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nconst deflate_fast = (s, flush) => {\n\n  let hash_head;        /* head of the hash chain */\n  let bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH$1) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH$1 - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH$1) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally$1(s, s.strstart - s.match_start, s.match_length - MIN_MATCH$1);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH$1) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH$1 - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + 1]);\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally$1(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH$1 - 1)) ? s.strstart : MIN_MATCH$1 - 1);\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nconst deflate_slow = (s, flush) => {\n\n  let hash_head;          /* head of hash chain */\n  let bflush;              /* set if current block must be flushed */\n\n  let max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH$1) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH$1 - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH$1 - 1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH$1 && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH$1 - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH$1 && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH$1;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = _tr_tally$1(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH$1);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH$1 - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH$1 - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = _tr_tally$1(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = _tr_tally$1(s, 0, s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH$1 - 1 ? s.strstart : MIN_MATCH$1 - 1;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n};\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nconst deflate_rle = (s, flush) => {\n\n  let bflush;            /* set if current block must be flushed */\n  let prev;              /* byte at distance one to match */\n  let scan, strend;      /* scan goes up to strend for length of run */\n\n  const _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH$1) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH$1 && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH$1 && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH$1;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH$1 - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH$1) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally$1(s, 1, s.match_length - MIN_MATCH$1);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally$1(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nconst deflate_huff = (s, flush) => {\n\n  let bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = _tr_tally$1(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nconst configuration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nconst lm_init = (s) => {\n\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero$1(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH$1 - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n};\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new Uint16Array(HEAP_SIZE$1 * 2);\n  this.dyn_dtree  = new Uint16Array((2 * D_CODES$1 + 1) * 2);\n  this.bl_tree    = new Uint16Array((2 * BL_CODES$1 + 1) * 2);\n  zero$1(this.dyn_ltree);\n  zero$1(this.dyn_dtree);\n  zero$1(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new Uint16Array(MAX_BITS$1 + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new Uint16Array(2 * L_CODES$1 + 1);  /* heap used to build the Huffman trees */\n  zero$1(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new Uint16Array(2 * L_CODES$1 + 1); //uch depth[2*L_CODES+1];\n  zero$1(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.l_buf = 0;          /* buffer index for literals or lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.last_lit = 0;      /* running index in l_buf */\n\n  this.d_buf = 0;\n  /* Buffer index for distances. To simplify the code, d_buf and l_buf have\n   * the same number of elements. To use different lengths, an extra flag\n   * array would be necessary.\n   */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\nconst deflateResetKeep = (strm) => {\n\n  if (!strm || !strm.state) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN$1;\n\n  const s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status = (s.wrap ? INIT_STATE : BUSY_STATE);\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = Z_NO_FLUSH;\n  _tr_init$1(s);\n  return Z_OK;\n};\n\n\nconst deflateReset = (strm) => {\n\n  const ret = deflateResetKeep(strm);\n  if (ret === Z_OK) {\n    lm_init(strm.state);\n  }\n  return ret;\n};\n\n\nconst deflateSetHeader = (strm, head) => {\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  if (strm.state.wrap !== 2) { return Z_STREAM_ERROR; }\n  strm.state.gzhead = head;\n  return Z_OK;\n};\n\n\nconst deflateInit2 = (strm, level, method, windowBits, memLevel, strategy) => {\n\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR;\n  }\n  let wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED$1) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  const s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH$1 - 1) / MIN_MATCH$1);\n\n  s.window = new Uint8Array(s.w_size * 2);\n  s.head = new Uint16Array(s.hash_size);\n  s.prev = new Uint16Array(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n\n  //overlay = (ushf *) ZALLOC(strm, s->lit_bufsize, sizeof(ush)+2);\n  //s->pending_buf = (uchf *) overlay;\n  s.pending_buf = new Uint8Array(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->d_buf = overlay + s->lit_bufsize/sizeof(ush);\n  s.d_buf = 1 * s.lit_bufsize;\n\n  //s->l_buf = s->pending_buf + (1+sizeof(ush))*s->lit_bufsize;\n  s.l_buf = (1 + 2) * s.lit_bufsize;\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n};\n\nconst deflateInit = (strm, level) => {\n\n  return deflateInit2(strm, level, Z_DEFLATED, MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY);\n};\n\n\nconst deflate = (strm, flush) => {\n\n  let beg, val; // for gzip header write only\n\n  if (!strm || !strm.state ||\n    flush > Z_BLOCK || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR) : Z_STREAM_ERROR;\n  }\n\n  const s = strm.state;\n\n  if (!strm.output ||\n      (!strm.input && strm.avail_in !== 0) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR : Z_STREAM_ERROR);\n  }\n\n  s.strm = strm; /* just in case */\n  const old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Write the header */\n  if (s.status === INIT_STATE) {\n\n    if (s.wrap === 2) { // GZIP header\n      strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n      put_byte(s, 31);\n      put_byte(s, 139);\n      put_byte(s, 8);\n      if (!s.gzhead) { // s->gzhead == Z_NULL\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, OS_CODE);\n        s.status = BUSY_STATE;\n      }\n      else {\n        put_byte(s, (s.gzhead.text ? 1 : 0) +\n                    (s.gzhead.hcrc ? 2 : 0) +\n                    (!s.gzhead.extra ? 0 : 4) +\n                    (!s.gzhead.name ? 0 : 8) +\n                    (!s.gzhead.comment ? 0 : 16)\n        );\n        put_byte(s, s.gzhead.time & 0xff);\n        put_byte(s, (s.gzhead.time >> 8) & 0xff);\n        put_byte(s, (s.gzhead.time >> 16) & 0xff);\n        put_byte(s, (s.gzhead.time >> 24) & 0xff);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, s.gzhead.os & 0xff);\n        if (s.gzhead.extra && s.gzhead.extra.length) {\n          put_byte(s, s.gzhead.extra.length & 0xff);\n          put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n        }\n        if (s.gzhead.hcrc) {\n          strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending, 0);\n        }\n        s.gzindex = 0;\n        s.status = EXTRA_STATE;\n      }\n    }\n    else // DEFLATE header\n    {\n      let header = (Z_DEFLATED + ((s.w_bits - 8) << 4)) << 8;\n      let level_flags = -1;\n\n      if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n        level_flags = 0;\n      } else if (s.level < 6) {\n        level_flags = 1;\n      } else if (s.level === 6) {\n        level_flags = 2;\n      } else {\n        level_flags = 3;\n      }\n      header |= (level_flags << 6);\n      if (s.strstart !== 0) { header |= PRESET_DICT; }\n      header += 31 - (header % 31);\n\n      s.status = BUSY_STATE;\n      putShortMSB(s, header);\n\n      /* Save the adler32 of the preset dictionary: */\n      if (s.strstart !== 0) {\n        putShortMSB(s, strm.adler >>> 16);\n        putShortMSB(s, strm.adler & 0xffff);\n      }\n      strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    }\n  }\n\n//#ifdef GZIP\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n\n      while (s.gzindex < (s.gzhead.extra.length & 0xffff)) {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            break;\n          }\n        }\n        put_byte(s, s.gzhead.extra[s.gzindex] & 0xff);\n        s.gzindex++;\n      }\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (s.gzindex === s.gzhead.extra.length) {\n        s.gzindex = 0;\n        s.status = NAME_STATE;\n      }\n    }\n    else {\n      s.status = NAME_STATE;\n    }\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.gzindex = 0;\n        s.status = COMMENT_STATE;\n      }\n    }\n    else {\n      s.status = COMMENT_STATE;\n    }\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.status = HCRC_STATE;\n      }\n    }\n    else {\n      s.status = HCRC_STATE;\n    }\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n      }\n      if (s.pending + 2 <= s.pending_buf_size) {\n        put_byte(s, strm.adler & 0xff);\n        put_byte(s, (strm.adler >> 8) & 0xff);\n        strm.adler = 0; //crc32(0L, Z_NULL, 0);\n        s.status = BUSY_STATE;\n      }\n    }\n    else {\n      s.status = BUSY_STATE;\n    }\n  }\n//#endif\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH && s.status !== FINISH_STATE)) {\n    let bstate = (s.strategy === Z_HUFFMAN_ONLY) ? deflate_huff(s, flush) :\n      (s.strategy === Z_RLE ? deflate_rle(s, flush) :\n        configuration_table[s.level].func(s, flush));\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        _tr_align$1(s);\n      }\n      else if (flush !== Z_BLOCK) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        _tr_stored_block$1(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero$1(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK;\n      }\n    }\n  }\n  //Assert(strm->avail_out > 0, \"bug2\");\n  //if (strm.avail_out <= 0) { throw new Error(\"bug2\");}\n\n  if (flush !== Z_FINISH) { return Z_OK; }\n  if (s.wrap <= 0) { return Z_STREAM_END; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK : Z_STREAM_END;\n};\n\n\nconst deflateEnd = (strm) => {\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  const status = strm.state.status;\n  if (status !== INIT_STATE &&\n    status !== EXTRA_STATE &&\n    status !== NAME_STATE &&\n    status !== COMMENT_STATE &&\n    status !== HCRC_STATE &&\n    status !== BUSY_STATE &&\n    status !== FINISH_STATE\n  ) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR) : Z_OK;\n};\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nconst deflateSetDictionary = (strm, dictionary) => {\n\n  let dictLength = dictionary.length;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  const s = strm.state;\n  const wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32_1(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {            /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero$1(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    let tmpDict = new Uint8Array(s.w_size);\n    tmpDict.set(dictionary.subarray(dictLength - s.w_size, dictLength), 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  const avail = strm.avail_in;\n  const next = strm.next_in;\n  const input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH$1) {\n    let str = s.strstart;\n    let n = s.lookahead - (MIN_MATCH$1 - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH$1 - 1]);\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH$1 - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH$1 - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK;\n};\n\n\nvar deflateInit_1 = deflateInit;\nvar deflateInit2_1 = deflateInit2;\nvar deflateReset_1 = deflateReset;\nvar deflateResetKeep_1 = deflateResetKeep;\nvar deflateSetHeader_1 = deflateSetHeader;\nvar deflate_2 = deflate;\nvar deflateEnd_1 = deflateEnd;\nvar deflateSetDictionary_1 = deflateSetDictionary;\nvar deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.deflateBound = deflateBound;\nmodule.exports.deflateCopy = deflateCopy;\nmodule.exports.deflateParams = deflateParams;\nmodule.exports.deflatePending = deflatePending;\nmodule.exports.deflatePrime = deflatePrime;\nmodule.exports.deflateTune = deflateTune;\n*/\n\nvar deflate_1 = {\n\tdeflateInit: deflateInit_1,\n\tdeflateInit2: deflateInit2_1,\n\tdeflateReset: deflateReset_1,\n\tdeflateResetKeep: deflateResetKeep_1,\n\tdeflateSetHeader: deflateSetHeader_1,\n\tdeflate: deflate_2,\n\tdeflateEnd: deflateEnd_1,\n\tdeflateSetDictionary: deflateSetDictionary_1,\n\tdeflateInfo: deflateInfo\n};\n\nconst _has = (obj, key) => {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n};\n\nvar assign = function (obj /*from1, from2, from3, ...*/) {\n  const sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    const source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (const p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// Join array of chunks to single array.\nvar flattenChunks = (chunks) => {\n  // calculate data length\n  let len = 0;\n\n  for (let i = 0, l = chunks.length; i < l; i++) {\n    len += chunks[i].length;\n  }\n\n  // join chunks\n  const result = new Uint8Array(len);\n\n  for (let i = 0, pos = 0, l = chunks.length; i < l; i++) {\n    let chunk = chunks[i];\n    result.set(chunk, pos);\n    pos += chunk.length;\n  }\n\n  return result;\n};\n\nvar common = {\n\tassign: assign,\n\tflattenChunks: flattenChunks\n};\n\n// String encode/decode helpers\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\n//\nlet STR_APPLY_UIA_OK = true;\n\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nconst _utf8len = new Uint8Array(256);\nfor (let q = 0; q < 256; q++) {\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\n}\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\n\n\n// convert string to array (typed, when possible)\nvar string2buf = (str) => {\n  let buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n  // count binary size\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n\n  // allocate buffer\n  buf = new Uint8Array(buf_len);\n\n  // convert\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    if (c < 0x80) {\n      /* one byte */\n      buf[i++] = c;\n    } else if (c < 0x800) {\n      /* two bytes */\n      buf[i++] = 0xC0 | (c >>> 6);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else if (c < 0x10000) {\n      /* three bytes */\n      buf[i++] = 0xE0 | (c >>> 12);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else {\n      /* four bytes */\n      buf[i++] = 0xf0 | (c >>> 18);\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    }\n  }\n\n  return buf;\n};\n\n// Helper\nconst buf2binstring = (buf, len) => {\n  // On Chrome, the arguments in a function call that are allowed is `65534`.\n  // If the length of the buffer is smaller than that, we can use this optimization,\n  // otherwise we will take a slower path.\n  if (len < 65534) {\n    if (buf.subarray && STR_APPLY_UIA_OK) {\n      return String.fromCharCode.apply(null, buf.length === len ? buf : buf.subarray(0, len));\n    }\n  }\n\n  let result = '';\n  for (let i = 0; i < len; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n};\n\n\n// convert array to string\nvar buf2string = (buf, max) => {\n  let i, out;\n  const len = max || buf.length;\n\n  // Reserve max possible length (2 words per char)\n  // NB: by unknown reasons, Array is significantly faster for\n  //     String.fromCharCode.apply than Uint16Array.\n  const utf16buf = new Array(len * 2);\n\n  for (out = 0, i = 0; i < len;) {\n    let c = buf[i++];\n    // quick process ascii\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n    let c_len = _utf8len[c];\n    // skip 5 & 6 byte codes\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\n\n    // apply mask on first byte\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n    // join the rest\n    while (c_len > 1 && i < len) {\n      c = (c << 6) | (buf[i++] & 0x3f);\n      c_len--;\n    }\n\n    // terminated by end of string?\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n    if (c < 0x10000) {\n      utf16buf[out++] = c;\n    } else {\n      c -= 0x10000;\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n    }\n  }\n\n  return buf2binstring(utf16buf, out);\n};\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nvar utf8border = (buf, max) => {\n\n  max = max || buf.length;\n  if (max > buf.length) { max = buf.length; }\n\n  // go back from last position, until start of sequence found\n  let pos = max - 1;\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n  // Very small and broken sequence,\n  // return max, because we should return something anyway.\n  if (pos < 0) { return max; }\n\n  // If we came to start of buffer - that means buffer is too small,\n  // return max too.\n  if (pos === 0) { return max; }\n\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n};\n\nvar strings = {\n\tstring2buf: string2buf,\n\tbuf2string: buf2string,\n\tutf8border: utf8border\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nvar zstream = ZStream;\n\nconst toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH: Z_NO_FLUSH$1, Z_SYNC_FLUSH, Z_FULL_FLUSH: Z_FULL_FLUSH$1, Z_FINISH: Z_FINISH$1,\n  Z_OK: Z_OK$1, Z_STREAM_END: Z_STREAM_END$1,\n  Z_DEFAULT_COMPRESSION: Z_DEFAULT_COMPRESSION$1,\n  Z_DEFAULT_STRATEGY: Z_DEFAULT_STRATEGY$1,\n  Z_DEFLATED: Z_DEFLATED$1\n} = constants;\n\n/* ===========================================================================*/\n\n\n/**\n * class Deflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[deflate]],\n * [[deflateRaw]] and [[gzip]].\n **/\n\n/* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data, if [[Deflate#onData]] not overridden.\n **/\n\n/**\n * Deflate.result -> Uint8Array\n *\n * Compressed result, generated by default [[Deflate#onData]]\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Deflate.err -> Number\n *\n * Error code after deflate finished. 0 (Z_OK) on success.\n * You will not need it in real life, because deflate errors\n * are possible only on wrong options or bad `onData` / `onEnd`\n * custom handlers.\n **/\n\n/**\n * Deflate.msg -> String\n *\n * Error message, if [[Deflate.err]] != 0\n **/\n\n\n/**\n * new Deflate(options)\n * - options (Object): zlib deflate options.\n *\n * Creates new deflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `level`\n * - `windowBits`\n * - `memLevel`\n * - `strategy`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw deflate\n * - `gzip` (Boolean) - create gzip wrapper\n * - `header` (Object) - custom header for gzip\n *   - `text` (Boolean) - true if compressed data believed to be text\n *   - `time` (Number) - modification time, unix timestamp\n *   - `os` (Number) - operation system code\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\n *   - `name` (String) - file name (binary string)\n *   - `comment` (String) - comment (binary string)\n *   - `hcrc` (Boolean) - true if header crc should be added\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n *   , chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const deflate = new pako.Deflate({ level: 3});\n *\n * deflate.push(chunk1, false);\n * deflate.push(chunk2, true);  // true -> last chunk\n *\n * if (deflate.err) { throw new Error(deflate.err); }\n *\n * console.log(deflate.result);\n * ```\n **/\nfunction Deflate(options) {\n  this.options = common.assign({\n    level: Z_DEFAULT_COMPRESSION$1,\n    method: Z_DEFLATED$1,\n    chunkSize: 16384,\n    windowBits: 15,\n    memLevel: 8,\n    strategy: Z_DEFAULT_STRATEGY$1\n  }, options || {});\n\n  let opt = this.options;\n\n  if (opt.raw && (opt.windowBits > 0)) {\n    opt.windowBits = -opt.windowBits;\n  }\n\n  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {\n    opt.windowBits += 16;\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm = new zstream();\n  this.strm.avail_out = 0;\n\n  let status = deflate_1.deflateInit2(\n    this.strm,\n    opt.level,\n    opt.method,\n    opt.windowBits,\n    opt.memLevel,\n    opt.strategy\n  );\n\n  if (status !== Z_OK$1) {\n    throw new Error(messages[status]);\n  }\n\n  if (opt.header) {\n    deflate_1.deflateSetHeader(this.strm, opt.header);\n  }\n\n  if (opt.dictionary) {\n    let dict;\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      // If we need to compress text, change encoding to utf8.\n      dict = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      dict = new Uint8Array(opt.dictionary);\n    } else {\n      dict = opt.dictionary;\n    }\n\n    status = deflate_1.deflateSetDictionary(this.strm, dict);\n\n    if (status !== Z_OK$1) {\n      throw new Error(messages[status]);\n    }\n\n    this._dict_set = true;\n  }\n}\n\n/**\n * Deflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer|String): input data. Strings will be\n *   converted to utf8 byte sequence.\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\n * new compressed chunks. Returns `true` on success. The last data block must\n * have `flush_mode` Z_FINISH (or `true`). That will flush internal pending\n * buffers and call [[Deflate#onEnd]].\n *\n * On fail call [[Deflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nDeflate.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  let status, _flush_mode;\n\n  if (this.ended) { return false; }\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH$1 : Z_NO_FLUSH$1;\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // If we need to compress text, change encoding to utf8.\n    strm.input = strings.string2buf(data);\n  } else if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    // Make sure avail_out > 6 to avoid repeating markers\n    if ((_flush_mode === Z_SYNC_FLUSH || _flush_mode === Z_FULL_FLUSH$1) && strm.avail_out <= 6) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    status = deflate_1.deflate(strm, _flush_mode);\n\n    // Ended => flush and finish\n    if (status === Z_STREAM_END$1) {\n      if (strm.next_out > 0) {\n        this.onData(strm.output.subarray(0, strm.next_out));\n      }\n      status = deflate_1.deflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return status === Z_OK$1;\n    }\n\n    // Flush if out buffer full\n    if (strm.avail_out === 0) {\n      this.onData(strm.output);\n      continue;\n    }\n\n    // Flush if requested and has data\n    if (_flush_mode > 0 && strm.next_out > 0) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Deflate#onData(chunk) -> Void\n * - chunk (Uint8Array): output data.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nDeflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Deflate#onEnd(status) -> Void\n * - status (Number): deflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called once after you tell deflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nDeflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK$1) {\n    this.result = common.flattenChunks(this.chunks);\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * deflate(data[, options]) -> Uint8Array\n * - data (Uint8Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * Compress `data` with deflate algorithm and `options`.\n *\n * Supported options are:\n *\n * - level\n * - windowBits\n * - memLevel\n * - strategy\n * - dictionary\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const data = new Uint8Array([1,2,3,4,5,6,7,8,9]);\n *\n * console.log(pako.deflate(data));\n * ```\n **/\nfunction deflate$1(input, options) {\n  const deflator = new Deflate(options);\n\n  deflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (deflator.err) { throw deflator.msg || messages[deflator.err]; }\n\n  return deflator.result;\n}\n\n\n/**\n * deflateRaw(data[, options]) -> Uint8Array\n * - data (Uint8Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction deflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return deflate$1(input, options);\n}\n\n\n/**\n * gzip(data[, options]) -> Uint8Array\n * - data (Uint8Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but create gzip wrapper instead of\n * deflate one.\n **/\nfunction gzip(input, options) {\n  options = options || {};\n  options.gzip = true;\n  return deflate$1(input, options);\n}\n\n\nvar Deflate_1 = Deflate;\nvar deflate_2$1 = deflate$1;\nvar deflateRaw_1 = deflateRaw;\nvar gzip_1 = gzip;\nvar constants$1 = constants;\n\nvar deflate_1$1 = {\n\tDeflate: Deflate_1,\n\tdeflate: deflate_2$1,\n\tdeflateRaw: deflateRaw_1,\n\tgzip: gzip_1,\n\tconstants: constants$1\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nconst BAD = 30;       /* got a data error -- remain here until reset */\nconst TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nvar inffast = function inflate_fast(strm, start) {\n  let _in;                    /* local strm.input */\n  let last;                   /* have enough input while in < last */\n  let _out;                   /* local strm.output */\n  let beg;                    /* inflate()'s initial strm.output */\n  let end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  let dmax;                   /* maximum distance from zlib header */\n//#endif\n  let wsize;                  /* window size or zero if not using window */\n  let whave;                  /* valid bytes in the window */\n  let wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  let s_window;               /* allocated sliding window, if wsize != 0 */\n  let hold;                   /* local strm.hold */\n  let bits;                   /* local strm.bits */\n  let lcode;                  /* local strm.lencode */\n  let dcode;                  /* local strm.distcode */\n  let lmask;                  /* mask for first level of length codes */\n  let dmask;                  /* mask for first level of distance codes */\n  let here;                   /* retrieved table entry */\n  let op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  let len;                    /* match length, unused bytes */\n  let dist;                   /* match distance */\n  let from;                   /* where to copy match from */\n  let from_source;\n\n\n  let input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  const state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst MAXBITS = 15;\nconst ENOUGH_LENS = 852;\nconst ENOUGH_DISTS = 592;\n//const ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst CODES = 0;\nconst LENS = 1;\nconst DISTS = 2;\n\nconst lbase = new Uint16Array([ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n]);\n\nconst lext = new Uint8Array([ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n]);\n\nconst dbase = new Uint16Array([ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n]);\n\nconst dext = new Uint8Array([ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n]);\n\nconst inflate_table = (type, lens, lens_index, codes, table, table_index, work, opts) =>\n{\n  const bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  let len = 0;               /* a code's length in bits */\n  let sym = 0;               /* index of code symbols */\n  let min = 0, max = 0;          /* minimum and maximum code lengths */\n  let root = 0;              /* number of index bits for root table */\n  let curr = 0;              /* number of index bits for current table */\n  let drop = 0;              /* code bits to drop for sub-table */\n  let left = 0;                   /* number of prefix codes available */\n  let used = 0;              /* code entries in table used */\n  let huff = 0;              /* Huffman code */\n  let incr;              /* for incrementing code, index */\n  let fill;              /* index for replicating entries */\n  let low;               /* low bits for current root entry */\n  let mask;              /* mask for low root bits */\n  let next;             /* next available space in table */\n  let base = null;     /* base value table to use */\n  let base_index = 0;\n//  let shoextra;    /* extra bits table to use */\n  let end;                    /* use base and extra for symbol > end */\n  const count = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  const offs = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  let extra = null;\n  let extra_index = 0;\n\n  let here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES) {\n    base = extra = work;    /* dummy value--not used */\n    end = 19;\n\n  } else if (type === LENS) {\n    base = lbase;\n    base_index -= 257;\n    extra = lext;\n    extra_index -= 257;\n    end = 256;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    end = -1;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS && used > ENOUGH_LENS) ||\n    (type === DISTS && used > ENOUGH_DISTS)) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] < end) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] > end) {\n      here_op = extra[extra_index + work[sym]];\n      here_val = base[base_index + work[sym]];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS && used > ENOUGH_LENS) ||\n        (type === DISTS && used > ENOUGH_DISTS)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n\n\nvar inftrees = inflate_table;\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n\n\n\n\n\nconst CODES$1 = 0;\nconst LENS$1 = 1;\nconst DISTS$1 = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_FINISH: Z_FINISH$2, Z_BLOCK: Z_BLOCK$1, Z_TREES,\n  Z_OK: Z_OK$2, Z_STREAM_END: Z_STREAM_END$2, Z_NEED_DICT, Z_STREAM_ERROR: Z_STREAM_ERROR$1, Z_DATA_ERROR: Z_DATA_ERROR$1, Z_MEM_ERROR, Z_BUF_ERROR: Z_BUF_ERROR$1,\n  Z_DEFLATED: Z_DEFLATED$2\n} = constants;\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nconst    HEAD = 1;       /* i: waiting for magic header */\nconst    FLAGS = 2;      /* i: waiting for method and flags (gzip) */\nconst    TIME = 3;       /* i: waiting for modification time (gzip) */\nconst    OS = 4;         /* i: waiting for extra flags and operating system (gzip) */\nconst    EXLEN = 5;      /* i: waiting for extra length (gzip) */\nconst    EXTRA = 6;      /* i: waiting for extra bytes (gzip) */\nconst    NAME = 7;       /* i: waiting for end of file name (gzip) */\nconst    COMMENT = 8;    /* i: waiting for end of comment (gzip) */\nconst    HCRC = 9;       /* i: waiting for header crc (gzip) */\nconst    DICTID = 10;    /* i: waiting for dictionary check value */\nconst    DICT = 11;      /* waiting for inflateSetDictionary() call */\nconst        TYPE$1 = 12;      /* i: waiting for type bits, including last-flag bit */\nconst        TYPEDO = 13;    /* i: same, but skip check to exit inflate on new block */\nconst        STORED = 14;    /* i: waiting for stored size (length and complement) */\nconst        COPY_ = 15;     /* i/o: same as COPY below, but only first time in */\nconst        COPY = 16;      /* i/o: waiting for input or output to copy stored block */\nconst        TABLE = 17;     /* i: waiting for dynamic block table lengths */\nconst        LENLENS = 18;   /* i: waiting for code length code lengths */\nconst        CODELENS = 19;  /* i: waiting for length/lit and distance code lengths */\nconst            LEN_ = 20;      /* i: same as LEN below, but only first time in */\nconst            LEN = 21;       /* i: waiting for length/lit/eob code */\nconst            LENEXT = 22;    /* i: waiting for length extra bits */\nconst            DIST = 23;      /* i: waiting for distance code */\nconst            DISTEXT = 24;   /* i: waiting for distance extra bits */\nconst            MATCH = 25;     /* o: waiting for output space to copy string */\nconst            LIT = 26;       /* o: waiting for output space to write literal */\nconst    CHECK = 27;     /* i: waiting for 32-bit check value */\nconst    LENGTH = 28;    /* i: waiting for 32-bit length (gzip) */\nconst    DONE = 29;      /* finished check, done -- remain here until reset */\nconst    BAD$1 = 30;       /* got a data error -- remain here until reset */\nconst    MEM = 31;       /* got an inflate() memory error -- remain here until reset */\nconst    SYNC = 32;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nconst ENOUGH_LENS$1 = 852;\nconst ENOUGH_DISTS$1 = 592;\n//const ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst MAX_WBITS$1 = 15;\n/* 32K LZ77 window */\nconst DEF_WBITS = MAX_WBITS$1;\n\n\nconst zswap32 = (q) => {\n\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n};\n\n\nfunction InflateState() {\n  this.mode = 0;             /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib) */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new Uint16Array(320); /* temporary storage for code lengths */\n  this.work = new Uint16Array(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new Int32Array(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\n\nconst inflateResetKeep = (strm) => {\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new Int32Array(ENOUGH_LENS$1);\n  state.distcode = state.distdyn = new Int32Array(ENOUGH_DISTS$1);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK$2;\n};\n\n\nconst inflateReset = (strm) => {\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n};\n\n\nconst inflateReset2 = (strm, windowBits) => {\n  let wrap;\n\n  /* get the state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 1;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR$1;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n};\n\n\nconst inflateInit2 = (strm, windowBits) => {\n\n  if (!strm) { return Z_STREAM_ERROR$1; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  const state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.window = null/*Z_NULL*/;\n  const ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK$2) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n};\n\n\nconst inflateInit = (strm) => {\n\n  return inflateInit2(strm, DEF_WBITS);\n};\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nlet virgin = true;\n\nlet lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\n\nconst fixedtables = (state) => {\n\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    lenfix = new Int32Array(512);\n    distfix = new Int32Array(32);\n\n    /* literal/length table */\n    let sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inftrees(LENS$1,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inftrees(DISTS$1, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n};\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nconst updatewindow = (strm, src, end, copy) => {\n\n  let dist;\n  const state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new Uint8Array(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    state.window.set(src.subarray(end - state.wsize, end), 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    state.window.set(src.subarray(end - copy, end - copy + dist), state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      state.window.set(src.subarray(end - copy, end), 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n};\n\n\nconst inflate = (strm, flush) => {\n\n  let state;\n  let input, output;          // input/output buffers\n  let next;                   /* next input INDEX */\n  let put;                    /* next output INDEX */\n  let have, left;             /* available input and output */\n  let hold;                   /* bit buffer */\n  let bits;                   /* bits in bit buffer */\n  let _in, _out;              /* save starting available input and output */\n  let copy;                   /* number of stored or match bytes to copy */\n  let from;                   /* where to copy match bytes from */\n  let from_source;\n  let here = 0;               /* current decoding table entry */\n  let here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //let last;                   /* parent table entry */\n  let last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  let len;                    /* length to copy for repeats, bits to drop */\n  let ret;                    /* return code */\n  const hbuf = new Uint8Array(4);    /* buffer for gzip header crc calculation */\n  let opts;\n\n  let n; // temporary variable for NEED_BITS\n\n  const order = /* permutation of code lengths */\n    new Uint8Array([ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ]);\n\n\n  if (!strm || !strm.state || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE$1) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK$2;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n          state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        state.flags = 0;           /* expect zlib header */\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD$1;\n          break;\n        }\n        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED$2) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD$1;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f)/*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        }\n        else if (len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD$1;\n          break;\n        }\n\n        // !!! pako patch. Force use `options.windowBits` if passed.\n        // Required to always use max window size by default.\n        state.dmax = 1 << state.wbits;\n        //state.dmax = 1 << len;\n\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE$1;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED$2) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD$1;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD$1;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if (state.flags & 0x0200) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32_1(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        else if (state.head) {\n          state.head.extra = null/*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) { copy = have; }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Uint8Array(state.head.extra_len);\n              }\n              state.head.extra.set(\n                input.subarray(\n                  next,\n                  // extra field is limited to 65536 bytes\n                  // - no need for additional size check\n                  next + copy\n                ),\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                len\n              );\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if (state.flags & 0x0200) {\n              state.check = crc32_1(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) { break inf_leave; }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.name_max*/)) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if (state.flags & 0x0200) {\n            state.check = crc32_1(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.comm_max*/)) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if (state.flags & 0x0200) {\n            state.check = crc32_1(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD$1;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE$1;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT;\n        }\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = TYPE$1;\n        /* falls through */\n      case TYPE$1:\n        if (flush === Z_BLOCK$1 || flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01)/*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03)/*BITS(2)*/) {\n          case 0:                             /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n          case 1:                             /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = LEN_;             /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:                             /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD$1;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD$1;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) { copy = have; }\n          if (copy > left) { copy = left; }\n          if (copy === 0) { break inf_leave; }\n          //--- zmemcpy(put, next, copy); ---\n          output.set(input.subarray(next, next + copy), put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE$1;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD$1;\n          break;\n        }\n//#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = { bits: state.lenbits };\n        ret = inftrees(CODES$1, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD$1;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          }\n          else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD$1;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03);//BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            }\n            else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07);//BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            }\n            else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f);//BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD$1;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD$1) { break; }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD$1;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n\n        opts = { bits: state.lenbits };\n        ret = inftrees(LENS$1, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD$1;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = { bits: state.distbits };\n        ret = inftrees(DISTS$1, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD$1;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inffast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE$1) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE$1;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD$1;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD$1;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n//#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD$1;\n          break;\n        }\n//#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) { break inf_leave; }\n        copy = _out - left;\n        if (state.offset > copy) {         /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD$1;\n              break;\n            }\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          }\n          else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) { copy = state.length; }\n          from_source = state.window;\n        }\n        else {                              /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) { copy = left; }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) { state.mode = LEN; }\n        break;\n      case LIT:\n        if (left === 0) { break inf_leave; }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if (_out) {\n            strm.adler = state.check =\n                /*UPDATE(state.check, put - _out, _out);*/\n                (state.flags ? crc32_1(state.check, output, _out, put - _out) : adler32_1(state.check, output, _out, put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD$1;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD$1;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END$2;\n        break inf_leave;\n      case BAD$1:\n        ret = Z_DATA_ERROR$1;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR$1;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD$1 &&\n                      (state.mode < CHECK || flush !== Z_FINISH$2))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) ;\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if (state.wrap && _out) {\n    strm.adler = state.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32_1(state.check, output, _out, strm.next_out - _out) : adler32_1(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE$1 ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH$2) && ret === Z_OK$2) {\n    ret = Z_BUF_ERROR$1;\n  }\n  return ret;\n};\n\n\nconst inflateEnd = (strm) => {\n\n  if (!strm || !strm.state /*|| strm->zfree == (free_func)0*/) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  let state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK$2;\n};\n\n\nconst inflateGetHeader = (strm, head) => {\n\n  /* check state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR$1; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK$2;\n};\n\n\nconst inflateSetDictionary = (strm, dictionary) => {\n  const dictLength = dictionary.length;\n\n  let state;\n  let dictid;\n  let ret;\n\n  /* check state */\n  if (!strm /* == Z_NULL */ || !strm.state /* == Z_NULL */) { return Z_STREAM_ERROR$1; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32_1(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR$1;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK$2;\n};\n\n\nvar inflateReset_1 = inflateReset;\nvar inflateReset2_1 = inflateReset2;\nvar inflateResetKeep_1 = inflateResetKeep;\nvar inflateInit_1 = inflateInit;\nvar inflateInit2_1 = inflateInit2;\nvar inflate_2 = inflate;\nvar inflateEnd_1 = inflateEnd;\nvar inflateGetHeader_1 = inflateGetHeader;\nvar inflateSetDictionary_1 = inflateSetDictionary;\nvar inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.inflateCopy = inflateCopy;\nmodule.exports.inflateGetDictionary = inflateGetDictionary;\nmodule.exports.inflateMark = inflateMark;\nmodule.exports.inflatePrime = inflatePrime;\nmodule.exports.inflateSync = inflateSync;\nmodule.exports.inflateSyncPoint = inflateSyncPoint;\nmodule.exports.inflateUndermine = inflateUndermine;\n*/\n\nvar inflate_1 = {\n\tinflateReset: inflateReset_1,\n\tinflateReset2: inflateReset2_1,\n\tinflateResetKeep: inflateResetKeep_1,\n\tinflateInit: inflateInit_1,\n\tinflateInit2: inflateInit2_1,\n\tinflate: inflate_2,\n\tinflateEnd: inflateEnd_1,\n\tinflateGetHeader: inflateGetHeader_1,\n\tinflateSetDictionary: inflateSetDictionary_1,\n\tinflateInfo: inflateInfo\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction GZheader() {\n  /* true if compressed data believed to be text */\n  this.text       = 0;\n  /* modification time */\n  this.time       = 0;\n  /* extra flags (not used when writing a gzip file) */\n  this.xflags     = 0;\n  /* operating system */\n  this.os         = 0;\n  /* pointer to extra field or Z_NULL if none */\n  this.extra      = null;\n  /* extra field length (valid if extra != Z_NULL) */\n  this.extra_len  = 0; // Actually, we don't need it in JS,\n                       // but leave for few code modifications\n\n  //\n  // Setup limits is not necessary because in js we should not preallocate memory\n  // for inflate use constant limit in 65536 bytes\n  //\n\n  /* space at extra (only when reading header) */\n  // this.extra_max  = 0;\n  /* pointer to zero-terminated file name or Z_NULL */\n  this.name       = '';\n  /* space at name (only when reading header) */\n  // this.name_max   = 0;\n  /* pointer to zero-terminated comment or Z_NULL */\n  this.comment    = '';\n  /* space at comment (only when reading header) */\n  // this.comm_max   = 0;\n  /* true if there was or will be a header crc */\n  this.hcrc       = 0;\n  /* true when done reading gzip header (not used when writing a gzip file) */\n  this.done       = false;\n}\n\nvar gzheader = GZheader;\n\nconst toString$1 = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH: Z_NO_FLUSH$2, Z_FINISH: Z_FINISH$3,\n  Z_OK: Z_OK$3, Z_STREAM_END: Z_STREAM_END$3, Z_NEED_DICT: Z_NEED_DICT$1, Z_STREAM_ERROR: Z_STREAM_ERROR$2, Z_DATA_ERROR: Z_DATA_ERROR$2, Z_MEM_ERROR: Z_MEM_ERROR$1\n} = constants;\n\n/* ===========================================================================*/\n\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overridden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n * const chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nfunction Inflate(options) {\n  this.options = common.assign({\n    chunkSize: 1024 * 64,\n    windowBits: 15,\n    to: ''\n  }, options || {});\n\n  const opt = this.options;\n\n  // Force window size for `raw` data, if not set directly,\n  // because we have no header for autodetect.\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size, we can do autodetect only\n  // for deflate. So, if window size not set, force it to max when gzip possible\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm   = new zstream();\n  this.strm.avail_out = 0;\n\n  let status  = inflate_1.inflateInit2(\n    this.strm,\n    opt.windowBits\n  );\n\n  if (status !== Z_OK$3) {\n    throw new Error(messages[status]);\n  }\n\n  this.header = new gzheader();\n\n  inflate_1.inflateGetHeader(this.strm, this.header);\n\n  // Setup dictionary\n  if (opt.dictionary) {\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      opt.dictionary = strings.string2buf(opt.dictionary);\n    } else if (toString$1.call(opt.dictionary) === '[object ArrayBuffer]') {\n      opt.dictionary = new Uint8Array(opt.dictionary);\n    }\n    if (opt.raw) { //In raw mode we need to set the dictionary early\n      status = inflate_1.inflateSetDictionary(this.strm, opt.dictionary);\n      if (status !== Z_OK$3) {\n        throw new Error(messages[status]);\n      }\n    }\n  }\n}\n\n/**\n * Inflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer): input data\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE\n *   flush modes. See constants. Skipped or `false` means Z_NO_FLUSH,\n *   `true` means Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. If end of stream detected,\n * [[Inflate#onEnd]] will be called.\n *\n * `flush_mode` is not needed for normal operation, because end of stream\n * detected automatically. You may try to use it for advanced things, but\n * this functionality was not tested.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  const dictionary = this.options.dictionary;\n  let status, _flush_mode, last_avail_out;\n\n  if (this.ended) return false;\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH$3 : Z_NO_FLUSH$2;\n\n  // Convert data if needed\n  if (toString$1.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    status = inflate_1.inflate(strm, _flush_mode);\n\n    if (status === Z_NEED_DICT$1 && dictionary) {\n      status = inflate_1.inflateSetDictionary(strm, dictionary);\n\n      if (status === Z_OK$3) {\n        status = inflate_1.inflate(strm, _flush_mode);\n      } else if (status === Z_DATA_ERROR$2) {\n        // Replace code with more verbose\n        status = Z_NEED_DICT$1;\n      }\n    }\n\n    // Skip snyc markers if more data follows and not raw mode\n    while (strm.avail_in > 0 &&\n           status === Z_STREAM_END$3 &&\n           strm.state.wrap > 0 &&\n           data[strm.next_in] !== 0)\n    {\n      inflate_1.inflateReset(strm);\n      status = inflate_1.inflate(strm, _flush_mode);\n    }\n\n    switch (status) {\n      case Z_STREAM_ERROR$2:\n      case Z_DATA_ERROR$2:\n      case Z_NEED_DICT$1:\n      case Z_MEM_ERROR$1:\n        this.onEnd(status);\n        this.ended = true;\n        return false;\n    }\n\n    // Remember real `avail_out` value, because we may patch out buffer content\n    // to align utf8 strings boundaries.\n    last_avail_out = strm.avail_out;\n\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === Z_STREAM_END$3) {\n\n        if (this.options.to === 'string') {\n\n          let next_out_utf8 = strings.utf8border(strm.output, strm.next_out);\n\n          let tail = strm.next_out - next_out_utf8;\n          let utf8str = strings.buf2string(strm.output, next_out_utf8);\n\n          // move tail & realign counters\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) strm.output.set(strm.output.subarray(next_out_utf8, next_out_utf8 + tail), 0);\n\n          this.onData(utf8str);\n\n        } else {\n          this.onData(strm.output.length === strm.next_out ? strm.output : strm.output.subarray(0, strm.next_out));\n        }\n      }\n    }\n\n    // Must repeat iteration if out buffer is full\n    if (status === Z_OK$3 && last_avail_out === 0) continue;\n\n    // Finalize if end of stream reached.\n    if (status === Z_STREAM_END$3) {\n      status = inflate_1.inflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return true;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|String): output data. When string output requested,\n *   each chunk will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK$3) {\n    if (this.options.to === 'string') {\n      this.result = this.chunks.join('');\n    } else {\n      this.result = common.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * inflate(data[, options]) -> Uint8Array|String\n * - data (Uint8Array): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako');\n * const input = pako.deflate(new Uint8Array([1,2,3,4,5,6,7,8,9]));\n * let output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err)\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate$1(input, options) {\n  const inflator = new Inflate(options);\n\n  inflator.push(input);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) throw inflator.msg || messages[inflator.err];\n\n  return inflator.result;\n}\n\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|String\n * - data (Uint8Array): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return inflate$1(input, options);\n}\n\n\n/**\n * ungzip(data[, options]) -> Uint8Array|String\n * - data (Uint8Array): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\n\nvar Inflate_1 = Inflate;\nvar inflate_2$1 = inflate$1;\nvar inflateRaw_1 = inflateRaw;\nvar ungzip = inflate$1;\nvar constants$2 = constants;\n\nvar inflate_1$1 = {\n\tInflate: Inflate_1,\n\tinflate: inflate_2$1,\n\tinflateRaw: inflateRaw_1,\n\tungzip: ungzip,\n\tconstants: constants$2\n};\n\nconst { Deflate: Deflate$1, deflate: deflate$2, deflateRaw: deflateRaw$1, gzip: gzip$1 } = deflate_1$1;\n\nconst { Inflate: Inflate$1, inflate: inflate$2, inflateRaw: inflateRaw$1, ungzip: ungzip$1 } = inflate_1$1;\n\n\n\nvar Deflate_1$1 = Deflate$1;\nvar deflate_1$2 = deflate$2;\nvar deflateRaw_1$1 = deflateRaw$1;\nvar gzip_1$1 = gzip$1;\nvar Inflate_1$1 = Inflate$1;\nvar inflate_1$2 = inflate$2;\nvar inflateRaw_1$1 = inflateRaw$1;\nvar ungzip_1 = ungzip$1;\nvar constants_1 = constants;\n\nvar pako = {\n\tDeflate: Deflate_1$1,\n\tdeflate: deflate_1$2,\n\tdeflateRaw: deflateRaw_1$1,\n\tgzip: gzip_1$1,\n\tInflate: Inflate_1$1,\n\tinflate: inflate_1$2,\n\tinflateRaw: inflateRaw_1$1,\n\tungzip: ungzip_1,\n\tconstants: constants_1\n};\n\nexport default pako;\nexport { Deflate_1$1 as Deflate, Inflate_1$1 as Inflate, constants_1 as constants, deflate_1$2 as deflate, deflateRaw_1$1 as deflateRaw, gzip_1$1 as gzip, inflate_1$2 as inflate, inflateRaw_1$1 as inflateRaw, ungzip_1 as ungzip };\n","// @flow\n\nimport {WritableDataStorage, DataStorage} from \"./index\";\nimport {inflate, deflate} from \"pako\";\n/**\n * The ZipStorage class composes with other WritableDataStorage implementations.\n * It compresses `value`s before passing them into the underlying `baseStorage`\n * implementation, and decompresses them upon receit  from `baseStorage`.\n */\nexport class ZipStorage implements DataStorage {\n  +_baseStorage: DataStorage;\n\n  constructor(baseStorage: DataStorage) {\n    this._baseStorage = baseStorage;\n  }\n\n  async get(key: string): Promise<Uint8Array> {\n    const data = await this._baseStorage.get(key);\n    return inflate(data, {to: \"Uint8Array\"});\n  }\n}\n\nexport class WritableZipStorage\n  extends ZipStorage\n  implements WritableDataStorage {\n  +_baseStorage: WritableDataStorage;\n\n  constructor(baseStorage: WritableDataStorage) {\n    super(baseStorage);\n    this._baseStorage = baseStorage;\n  }\n\n  async set(key: string, value: Uint8Array): Promise<void> {\n    this._baseStorage.set(key, deflate(value));\n  }\n}\n","// @flow\n\nimport {DataStorage} from \"./index\";\nimport fetch from \"cross-fetch\";\n\n/**\n * This class serves as a simple wrapper for http GET requests using fetch.\n * If an empty string is passed as the base, the base will be interpretted\n * as '.'\n */\nexport class NetworkStorage implements DataStorage {\n  _base: string;\n\n  constructor(base: string) {\n    this._base = base;\n  }\n\n  /**\n   * This get method will error if a non-200 or 300-level status was returned,\n   * or if the resource traverses above the base path.\n   */\n  async get(resource: string): Promise<Uint8Array> {\n    const path = new URL(resource, this._base).href;\n    if (!path.startsWith(this._base))\n      throw new Error(\n        `Path traversal is not allowed. ${path} does not begin with ${this._base} -- try adding trailing / to base`\n      );\n    const result = await fetch(path);\n    if (!result.ok) {\n      const error = new Error(\n        `Error fetching ${resource}: ${result.status} ${result.statusText}`\n      );\n      error.number = result.status;\n      throw error;\n    }\n\n    return new Uint8Array(await result.arrayBuffer());\n  }\n}\n","// @flow\n\nimport * as P from \"../util/combo\";\n\n/**\n * A PluginId uniquely identifies a Plugin.\n *\n * Each PluginId takes a `owner/name` format, as in\n * `sourcecred/github`.\n *\n * PluginIds are canonically lower-case.\n */\nexport opaque type PluginId: string = string;\n\nconst regex = /^[a-z0-9-]+$/;\n\nexport function fromString(s: string): PluginId {\n  s = s.toLowerCase();\n  const pieces = s.split(\"/\");\n  if (pieces.length !== 2) {\n    throw new Error(`PluginId must have exactly one \"/\" separator; got \"${s}\"`);\n  }\n  if (!pieces[0].match(regex)) {\n    throw new Error(`plugin owner not valid: \"${pieces[0]}\"`);\n  }\n  if (!pieces[1].match(regex)) {\n    throw new Error(`plugin name not valid: \"${pieces[1]}\"`);\n  }\n  return s;\n}\n\nexport function getPluginOwner(id: PluginId): string {\n  return id.split(\"/\")[0];\n}\n\nexport function getPluginName(id: PluginId): string {\n  return id.split(\"/\")[1];\n}\n\nexport const parser: P.Parser<PluginId> = P.fmap(P.string, fromString);\n","// @flow\n\nimport deepFreeze from \"deep-freeze\";\nimport type {PluginDeclaration} from \"../../analysis/pluginDeclaration\";\nimport {type PluginId, getPluginName, getPluginOwner} from \"../../api/pluginId\";\nimport {NodeAddress, EdgeAddress, type NodeAddressT} from \"../../core/graph\";\n\nexport function contributionNodeType(\n  id: PluginId\n): {|\n  +defaultWeight: number,\n  +description: string,\n  +name: string,\n  +pluralName: string,\n  +prefix: NodeAddressT,\n|} {\n  return deepFreeze({\n    name: \"Contribution\",\n    pluralName: \"Contributions\",\n    prefix: NodeAddress.fromParts([\n      getPluginOwner(id),\n      getPluginName(id),\n      \"CONTRIBUTION\",\n    ]),\n    defaultWeight: 1,\n    description: \"NodeType for a generic contribution\",\n  });\n}\n\nexport function participantNodeType(\n  id: PluginId\n): {|\n  +defaultWeight: number,\n  +description: string,\n  +name: string,\n  +pluralName: string,\n  +prefix: NodeAddressT,\n|} {\n  return deepFreeze({\n    name: \"Participant\",\n    pluralName: \"Participant\",\n    prefix: NodeAddress.fromParts([\n      getPluginOwner(id),\n      getPluginName(id),\n      \"PARTICIPANT\",\n    ]),\n    defaultWeight: 1,\n    description: \"NodeType for a generic participant\",\n  });\n}\n\nfunction participatedInEdgeType(id: PluginId) {\n  return deepFreeze({\n    forwardName: \"participated in\",\n    backwardName: \"had participation from\",\n    defaultWeight: {forwards: 1 / 2, backwards: 1},\n    prefix: EdgeAddress.fromParts([\n      getPluginOwner(id),\n      getPluginName(id),\n      \"PARTICIPATES_IN\",\n    ]),\n    description: \"NodeType for a generic participant-contribution relationship\",\n  });\n}\n\nexport function declaration(id: PluginId): PluginDeclaration {\n  return deepFreeze({\n    name: getPluginName(id),\n    nodePrefix: NodeAddress.fromParts([getPluginOwner(id), getPluginName(id)]),\n    edgePrefix: EdgeAddress.fromParts([getPluginOwner(id), getPluginName(id)]),\n    nodeTypes: [participantNodeType(id), contributionNodeType(id)],\n    edgeTypes: [participatedInEdgeType(id)],\n    userTypes: [participantNodeType(id)],\n  });\n}\n","// @flow\n\nimport type {Plugin, PluginDirectoryContext} from \"../../api/plugin\";\nimport {\n  type PluginDeclaration,\n  declarationParser,\n} from \"../../analysis/pluginDeclaration\";\nimport {join as pathJoin} from \"path\";\nimport type {TaskReporter} from \"../../util/taskReporter\";\nimport type {ReferenceDetector} from \"../../core/references\";\nimport {\n  type WeightedGraph,\n  fromJSON as weightedGraphFromJSON,\n  type WeightedGraphJSON,\n  empty as emptyWeightedGraph,\n} from \"../../core/weightedGraph\";\nimport {loadJson, loadJsonWithDefault} from \"../../util/storage\";\nimport {merge as mergeWeights} from \"../../core/weights\";\nimport {weightsForDeclaration} from \"../../analysis/pluginDeclaration\";\nimport type {PluginId} from \"../../api/pluginId\";\nimport {ZipStorage} from \"../../core/storage/zip\";\nimport {\n  type IdentityProposal,\n  identityProposalsParser,\n} from \"../../core/ledger/identityProposal\";\nimport * as Combo from \"../../util/combo\";\nimport type {DataStorage} from \"../../core/storage\";\nimport {NetworkStorage} from \"../../core/storage/networkStorage\";\nimport {declaration as defaultDeclaration} from \"./defaultDeclaration\";\nimport * as C from \"../../util/combo\";\n\nexport const ExternalPluginIdOwner = \"external\";\n\nconst FileNames = {\n  GRAPH: \"graph.json\",\n  GRAPH_ZIP: \"graph\",\n  DECLARATION: \"declaration.json\",\n  IDENTITIES: \"identityProposals.json\",\n};\ntype FileType = $Keys<typeof FileNames>;\n\ntype ExternalPluginConfig = {|\n  +graphUrl: string,\n  +declarationUrl?: string,\n  +identityProposalsUrl?: string,\n|};\n\nconst configParser: C.Parser<ExternalPluginConfig> = C.object(\n  {\n    graphUrl: C.string,\n  },\n  {\n    declarationUrl: C.string,\n    identityProposalsUrl: C.string,\n  }\n);\n\n/**\nA dynamic plugin that allows 3rd parties to rapidly pipe data into an instance.\n\nThe External plugin can be used multiple times, because it simply uses the \nPluginId pattern \"external/X\" where X can be any name (but preferably an agreed \nupon name between the 3rd-party software and the instance maintainer).\n\nThe External plugin loads its graph and optionally its declaration and \nidentityProposals from either:\n1. the plugin config folder on disk\n    - To use this method, simply place the files into the \n      `config/plugins/external/X` folder.\n2. a base url that statically serves the files\n    - To use this method, simply serve the files statically with cross-origin \n      enabled in the same directory, and add a `config.json` file in the \n      instance's `config/plugins/external/X` folder with form: \n      `{ \"Url\": \"https://www.myhost.com/path/to/directory\" }`\n\nSupported files for either method are:\n1. `graph.json`/`graph.json.gzip` (required) - works whether or not it is \n    compressed using our library\n2. `declaration.json` (optional) - if omitted, a default declaration with\n    minimal node/edge types is used, but also graphs don't have to adhere to the\n    declaration if they don't desire to be configured using our \n    Weight Configuration UI.\n3. `identityProposals.json` (optional) - if omitted, no identities are proposed\n\n*/\nexport class ExternalPlugin implements Plugin {\n  id: PluginId;\n  storage: ?DataStorage;\n  defaultConfigDirectory: PluginDirectoryContext;\n  config: ?ExternalPluginConfig;\n\n  constructor(options: {|\n    +pluginId: PluginId,\n    +storage?: DataStorage,\n    +config?: ExternalPluginConfig,\n  |}) {\n    if (!options.storage && !options.config)\n      throw new Error(\n        \"Must provide either config or storage parameter to construct ExternalPlugin.\"\n      );\n    this.id = options.pluginId;\n    this.storage = options.storage;\n    this.defaultConfigDirectory = {\n      configDirectory: () => pathJoin(\"config/plugins/\", options.pluginId),\n      cacheDirectory: () => pathJoin(\"cache/\", options.pluginId),\n    };\n    this.config = options.config;\n  }\n\n  async getConfig(\n    ctx: PluginDirectoryContext\n  ): Promise<ExternalPluginConfig | void> {\n    if (this.config) return this.config;\n    const path = pathJoin(ctx.configDirectory(), \"config.json\");\n    if (!this.storage)\n      throw \"Something is wrong. Either storage or config should exist.\";\n    return loadJsonWithDefault(\n      this.storage,\n      path,\n      configParser,\n      () => undefined\n    );\n  }\n\n  async getStorage(\n    ctx: PluginDirectoryContext,\n    file: FileType\n  ): Promise<{\n    storage: DataStorage,\n    path: string,\n  } | void> {\n    const config = await this.getConfig(ctx);\n    if (config) {\n      switch (file) {\n        case \"GRAPH\":\n        case \"GRAPH_ZIP\":\n          return {storage: new NetworkStorage(config.graphUrl), path: \"\"};\n        case \"DECLARATION\":\n          return config.declarationUrl\n            ? {\n                storage: new NetworkStorage(config.declarationUrl),\n                path: \"\",\n              }\n            : undefined;\n        case \"IDENTITIES\":\n          return config.identityProposalsUrl\n            ? {\n                storage: new NetworkStorage(config.identityProposalsUrl),\n                path: \"\",\n              }\n            : undefined;\n      }\n    }\n    if (!this.storage)\n      throw \"Something is wrong. Either storage or config should exist.\";\n    return {\n      storage: this.storage,\n      path: pathJoin(ctx.configDirectory(), FileNames[file]),\n    };\n  }\n\n  async declaration(): Promise<PluginDeclaration> {\n    const result = await this.getStorage(\n      this.defaultConfigDirectory,\n      \"DECLARATION\"\n    );\n    const json = result\n      ? await loadJsonWithDefault(\n          result.storage,\n          result.path,\n          declarationParser,\n          () => null\n        )\n      : null;\n    return json ? json : defaultDeclaration(this.id);\n  }\n\n  async load(\n    _unused_ctx: PluginDirectoryContext,\n    _unused_reporter: TaskReporter\n  ): Promise<void> {\n    return;\n  }\n\n  async graph(\n    ctx: PluginDirectoryContext,\n    _unused_rd: ReferenceDetector\n  ): Promise<WeightedGraph> {\n    const result = await this.getStorage(ctx, \"GRAPH\");\n    const zipResult = await this.getStorage(ctx, \"GRAPH_ZIP\");\n    if (!result || !zipResult)\n      throw \"Something is wrong. Graph must have storage or config.\";\n    const graphJSON = await loadJson(\n      result.storage,\n      result.path,\n      ((Combo.raw: any): Combo.Parser<WeightedGraphJSON>)\n    ).catch(() => {\n      return loadJson(\n        new ZipStorage(zipResult.storage),\n        zipResult.path,\n        ((Combo.raw: any): Combo.Parser<WeightedGraphJSON>)\n      );\n    });\n    const wg = weightedGraphFromJSON(graphJSON);\n    const declarationWeights = weightsForDeclaration(await this.declaration());\n    return {\n      graph: wg.graph,\n      weights: mergeWeights([wg.weights, declarationWeights]),\n    };\n  }\n\n  async referenceDetector(\n    _unused_ctx: PluginDirectoryContext\n  ): Promise<ReferenceDetector> {\n    return {addressFromUrl: () => undefined};\n  }\n\n  async identities(\n    ctx: PluginDirectoryContext\n  ): Promise<$ReadOnlyArray<IdentityProposal>> {\n    const result = await this.getStorage(ctx, \"IDENTITIES\");\n    return result\n      ? await loadJsonWithDefault(\n          result.storage,\n          result.path,\n          identityProposalsParser,\n          () => []\n        )\n      : [];\n  }\n}\n\n/**\nA way for 3rd-party developers to easily test their External Plugin.\nAfter generating a WeightedGraph, a Declaration, and IdentityProposals,\na developer could instantiate a ConstructorPlugin and pass it into our\n`graph` API using our library in environments such as Observable.\nThis is a prerequisite for testing using `credrank` because of the \nIdentityProposals. Once satisfied with the result, they can serve their files\nfor consumption by an ExternalPlugin configuration.\n */\nexport class ConstructorPlugin {\n  _weightedGraph: WeightedGraph;\n  _identityProposals: $ReadOnlyArray<IdentityProposal>;\n  _declaration: PluginDeclaration;\n\n  constructor(options: {|\n    +weightedGraph?: WeightedGraph,\n    +identityProposals?: $ReadOnlyArray<IdentityProposal>,\n    +declaration?: PluginDeclaration,\n    +pluginId?: PluginId,\n  |}) {\n    this._weightedGraph = options.weightedGraph || emptyWeightedGraph();\n    this._identityProposals = options.identityProposals || [];\n    if (options.declaration) this._declaration = options.declaration;\n    else if (options.pluginId)\n      this._declaration = defaultDeclaration(options.pluginId);\n    else throw new Error(\"Must provide either a declaration or a pluginId\");\n  }\n\n  async declaration(): Promise<PluginDeclaration> {\n    return this._declaration;\n  }\n\n  async load(\n    _unused_ctx: PluginDirectoryContext,\n    _unused_reporter: TaskReporter\n  ): Promise<void> {}\n\n  async graph(\n    _unused_ctx: PluginDirectoryContext,\n    _unused_rd: ReferenceDetector\n  ): Promise<WeightedGraph> {\n    return this._weightedGraph;\n  }\n\n  async referenceDetector(\n    _unused_ctx: PluginDirectoryContext\n  ): Promise<ReferenceDetector> {\n    return {addressFromUrl: () => undefined};\n  }\n\n  async identities(\n    _unused_ctx: PluginDirectoryContext\n  ): Promise<$ReadOnlyArray<IdentityProposal>> {\n    return this._identityProposals;\n  }\n}\n","// @flow\n\nimport {type Edge, type Graph, type NodeAddressT} from \"../graph\";\nimport {type Distribution} from \"./distribution\";\nimport {type Probability, type NodeDistribution} from \"./nodeDistribution\";\nimport {type SparseMarkovChain} from \"./markovChain\";\nimport * as MapUtil from \"../../util/map\";\nimport * as NullUtil from \"../../util/null\";\n\nexport type Adjacency =\n  | {|+type: \"SYNTHETIC_LOOP\"|}\n  | {|+type: \"IN_EDGE\", +edge: Edge|}\n  | {|+type: \"OUT_EDGE\", +edge: Edge|};\nexport type Connection = {|\n  +adjacency: Adjacency,\n  // This `weight` is a conditional probability: given that you're at\n  // the source of this connection's adjacency, what's the\n  // probability that you travel along this connection to the target?\n  +weight: Probability,\n|};\n\nexport function adjacencySource(\n  target: NodeAddressT,\n  adjacency: Adjacency\n): NodeAddressT {\n  switch (adjacency.type) {\n    case \"SYNTHETIC_LOOP\":\n      return target;\n    case \"IN_EDGE\":\n      return adjacency.edge.src;\n    case \"OUT_EDGE\":\n      return adjacency.edge.dst;\n    default:\n      throw new Error((adjacency.type: empty));\n  }\n}\n\nexport type NodeToConnections = Map<NodeAddressT, $ReadOnlyArray<Connection>>;\n\ntype NodeAddressMarkovChain = Map<\n  NodeAddressT,\n  /* in-neighbors */ Map<NodeAddressT, Probability>\n>;\n\nexport type OrderedSparseMarkovChain = {|\n  +nodeOrder: $ReadOnlyArray<NodeAddressT>,\n  +chain: SparseMarkovChain,\n|};\n\nexport type EdgeWeight = {|\n  +forwards: number, // weight from src to dst\n  +backwards: number, // weight from dst to src\n|};\n\nexport function createConnections(\n  graph: Graph,\n  edgeWeight: (Edge) => EdgeWeight,\n  syntheticLoopWeight: number\n): NodeToConnections {\n  const result = new Map();\n  const totalOutWeight: Map<NodeAddressT, number> = new Map();\n  for (const node of graph.nodes()) {\n    result.set(node.address, []);\n    totalOutWeight.set(node.address, 0);\n  }\n\n  function processConnection(target: NodeAddressT, connection: Connection) {\n    const connections = NullUtil.get(result.get(target));\n    (((connections: $ReadOnlyArray<Connection>): any): Connection[]).push(\n      connection\n    );\n    const source = adjacencySource(target, connection.adjacency);\n    const priorOutWeight = NullUtil.get(totalOutWeight.get(source));\n    totalOutWeight.set(source, priorOutWeight + connection.weight);\n  }\n\n  // Add self-loops.\n  for (const node of graph.nodes()) {\n    processConnection(node.address, {\n      adjacency: {type: \"SYNTHETIC_LOOP\"},\n      weight: syntheticLoopWeight,\n    });\n  }\n\n  // Process edges.\n  for (const edge of graph.edges({showDangling: false})) {\n    const {forwards, backwards} = edgeWeight(edge);\n    const {src, dst} = edge;\n    processConnection(dst, {\n      adjacency: {type: \"IN_EDGE\", edge},\n      weight: forwards,\n    });\n    processConnection(src, {\n      adjacency: {type: \"OUT_EDGE\", edge},\n      weight: backwards,\n    });\n  }\n\n  // Normalize in-weights.\n  for (const [target, connections] of result.entries()) {\n    for (const connection of connections) {\n      const source = adjacencySource(target, connection.adjacency);\n      const normalization = NullUtil.get(totalOutWeight.get(source));\n      const newWeight: typeof connection.weight =\n        connection.weight / normalization;\n      // (any-cast because property is not writable)\n      (connection: any).weight = newWeight;\n    }\n  }\n\n  return result;\n}\n\nfunction createNodeAddressMarkovChain(\n  ntc: NodeToConnections\n): NodeAddressMarkovChain {\n  return MapUtil.mapValues(ntc, (target, connections) => {\n    const inNeighbors = new Map();\n    for (const connection of connections) {\n      const source = adjacencySource(target, connection.adjacency);\n      inNeighbors.set(\n        source,\n        connection.weight + NullUtil.orElse(inNeighbors.get(source), 0)\n      );\n    }\n    return inNeighbors;\n  });\n}\n\nfunction nodeAddressMarkovChainToOrderedSparseMarkovChain(\n  chain: NodeAddressMarkovChain\n): OrderedSparseMarkovChain {\n  const nodeOrder = Array.from(chain.keys());\n  const addressToIndex: Map<NodeAddressT, number> = new Map();\n  nodeOrder.forEach((node, index) => {\n    addressToIndex.set(node, index);\n  });\n  return {\n    nodeOrder,\n    chain: nodeOrder.map((dst) => {\n      const theseNeighbors = NullUtil.get(chain.get(dst));\n      const result = {\n        neighbor: new Uint32Array(theseNeighbors.size),\n        weight: new Float64Array(theseNeighbors.size),\n      };\n      let i = 0;\n      for (const [src, weight] of theseNeighbors.entries()) {\n        const srcIndex = NullUtil.get(addressToIndex.get(src));\n        result.neighbor[i] = srcIndex;\n        result.weight[i] = weight;\n        i++;\n      }\n      return result;\n    }),\n  };\n}\n\nexport function createOrderedSparseMarkovChain(\n  connections: NodeToConnections\n): OrderedSparseMarkovChain {\n  const chain = createNodeAddressMarkovChain(connections);\n  return nodeAddressMarkovChainToOrderedSparseMarkovChain(chain);\n}\n\n/**\n * Return an equivalent form of the given chain whose `nodeOrder` is the\n * provided array, which must be a permutation of the node order of the\n * original chain.\n */\nexport function permute(\n  old: OrderedSparseMarkovChain,\n  newOrder: $ReadOnlyArray<NodeAddressT>\n): OrderedSparseMarkovChain {\n  const newIndices: {[NodeAddressT]: number} = {};\n  const oldIndices: {[NodeAddressT]: number} = {};\n  newOrder.forEach((node, i) => {\n    newIndices[node] = i;\n  });\n  old.nodeOrder.forEach((node, i) => {\n    oldIndices[node] = i;\n  });\n  const newChain = [];\n  for (const node of newOrder) {\n    const {neighbor: oldNeighbors, weight} = old.chain[oldIndices[node]];\n    const newNeighbors = oldNeighbors.map(\n      (oldIndex) => newIndices[old.nodeOrder[oldIndex]]\n    );\n    newChain.push({neighbor: newNeighbors, weight});\n  }\n  return {\n    nodeOrder: newOrder,\n    chain: newChain,\n  };\n}\n\n/**\n * Return an equivalent form of the given chain such that for for each\n * node, the entries in `chain[node].neighbors` are sorted.\n */\nexport function normalizeNeighbors(\n  old: OrderedSparseMarkovChain\n): OrderedSparseMarkovChain {\n  return {\n    nodeOrder: old.nodeOrder,\n    chain: old.chain.map(({neighbor, weight}) => {\n      if (neighbor.length !== weight.length) {\n        throw new Error(`${neighbor.length} !== ${weight.length}`);\n      }\n      const entries = Array(neighbor.length)\n        .fill(null)\n        .map((_, i) => ({neighbor: neighbor[i], weight: weight[i]}));\n      entries.sort((a, b) => a.neighbor - b.neighbor);\n      return {\n        neighbor: new Uint32Array(entries.map((x) => x.neighbor)),\n        weight: new Float64Array(entries.map((x) => x.weight)),\n      };\n    }),\n  };\n}\n\nexport function normalize(\n  old: OrderedSparseMarkovChain\n): OrderedSparseMarkovChain {\n  return normalizeNeighbors(permute(old, old.nodeOrder.slice().sort()));\n}\n\nexport function distributionToNodeDistribution(\n  nodeOrder: $ReadOnlyArray<NodeAddressT>,\n  pi: Distribution\n): NodeDistribution {\n  const result = new Map();\n  nodeOrder.forEach((node, i) => {\n    const probability = pi[i];\n    result.set(node, probability);\n  });\n  return result;\n}\n","// @flow\n\n/**\n * A distribution over the integers `0` through `n - 1`, where `n` is\n * the length of the array. The value at index `i` is the probability of\n * `i` in the distribution. The values should sum to 1.\n */\nexport type Distribution = Float64Array;\n\nexport function uniformDistribution(n: number): Distribution {\n  if (isNaN(n) || !isFinite(n) || n !== Math.floor(n) || n <= 0) {\n    throw new Error(\"expected positive integer, but got: \" + n);\n  }\n  return new Float64Array(n).fill(1 / n);\n}\n\n/**\n * Compute the maximum difference (in absolute value) between components in two\n * distributions.\n *\n * Equivalent to $\\norm{pi0 - pi1}_\\infty$.\n */\nexport function computeDelta(pi0: Distribution, pi1: Distribution): number {\n  if (pi0.length === 0 || pi0.length !== pi1.length) {\n    throw new Error(\"invalid input\");\n  }\n  let maxDelta = -Infinity;\n  // Here, we assume that `pi0.nodeOrder` and `pi1.nodeOrder` are the\n  // same (i.e., there has been no permutation).\n  pi0.forEach((x, i) => {\n    const delta = Math.abs(x - pi1[i]);\n    maxDelta = Math.max(delta, maxDelta);\n  });\n  return maxDelta;\n}\n","// @flow\n\nimport {computeDelta, type Distribution} from \"./distribution\";\n/**\n * The data inputs to running PageRank.\n *\n * We keep these separate from the PagerankOptions below,\n * because we expect that within a given context, every call to\n * findStationaryDistribution (or other Pagerank functions) will\n * have different PagerankParams, but often have the same PagerankOptions.\n */\nexport type PagerankParams = {|\n  // The Markov Chain to run PageRank on.\n  +chain: SparseMarkovChain,\n  // The initial distribution to start from.\n  +pi0: Distribution,\n  // The seed vector that PageRank 'teleports' back to.\n  +seed: Distribution,\n  // The probability of teleporting back to the seed vector.\n  // If alpha=0, then the seed vector is irrelevant.\n  // If alpha=1, then it trivially converges to the seed vector.\n  +alpha: number,\n|};\n\n/**\n * PagerankOptions allows the user to tweak PageRank's behavior, especially around\n * convergence.\n */\nexport type PagerankOptions = {|\n  // Causes runtime information to get logged to console.\n  +verbose: boolean,\n  // A distribution is considered stationary if the action of the Markov\n  // chain on the distribution does not change any component by more than\n  // `convergenceThreshold` in absolute value.\n  +convergenceThreshold: number,\n  // We will run maxIterations markov chain steps at most.\n  +maxIterations: number,\n  // To prevent locking the rest of the application, PageRank will yield control\n  // after this many miliseconds, allowing UI updates, etc.\n  +yieldAfterMs: number,\n|};\n\nexport type StationaryDistributionResult = {|\n  // The final distribution after attempting to find the stationary distribution\n  // of the Markov chain.\n  +pi: Distribution,\n\n  // Reports how close the returned distribution is to being converged.\n  //\n  // If the convergenceDelta is near zero, then the distribution is well-converged\n  // (stationary).\n  //\n  // Specifically: let `x` be the distribution being returned, and let `x'` be the\n  // distribution after one additional Markov action, i.e.\n  // `x' = sparseMarkovChainAction(chain, x)`\n  // Then the convergence delta is the maximum difference in absolute value between components\n  // in `x` and `x'`.\n  +convergenceDelta: number,\n|};\n\n/**\n * A representation of a sparse transition matrix that is convenient for\n * computations on Markov chains.\n *\n * A Markov chain has nodes indexed from `0` to `n - 1`, where `n` is\n * the length of the chain. The elements of the chain represent the\n * incoming edges to each node. Specifically, for each node `v`, the\n * in-degree of `v` equals the length of both `chain[v].neighbor` and\n * `chain[v].weight`. For each `i` from `0` to the degree of `v`\n * (exclusive), there is an edge to `v` from `chain[v].neighbor[i]` with\n * weight `chain[v].weight[i]`.\n *\n * In other words, `chain[v]` is a sparse-vector representation of\n * column `v` of the transition matrix of the Markov chain.\n */\nexport type SparseMarkovChain = $ReadOnlyArray<{|\n  +neighbor: Uint32Array,\n  +weight: Float64Array,\n|}>;\n\nexport function sparseMarkovChainFromTransitionMatrix(\n  matrix: $ReadOnlyArray<$ReadOnlyArray<number>>\n): SparseMarkovChain {\n  const n = matrix.length;\n  matrix.forEach((row, i) => {\n    if (row.length !== n) {\n      throw new Error(\n        `expected rows to have length ${n}, but row ${i} has ${row.length}`\n      );\n    }\n  });\n  matrix.forEach((row, i) => {\n    row.forEach((value, j) => {\n      if (isNaN(value) || !isFinite(value) || value < 0) {\n        throw new Error(\n          `expected positive real entries, but [${i}][${j}] is ${value}`\n        );\n      }\n    });\n  });\n  matrix.forEach((row, i) => {\n    const rowsum = row.reduce((a, b) => a + b, 0);\n    if (Math.abs(rowsum - 1) > 1e-6) {\n      throw new Error(\n        `expected rows to sum to 1, but row ${i} sums to ${rowsum}`\n      );\n    }\n  });\n  return matrix.map((_, j) => {\n    const column = matrix\n      .map((row, i) => [i, row[j]])\n      .filter(([_, p]) => p > 0);\n    return {\n      neighbor: new Uint32Array(column.map(([i, _]) => i)),\n      weight: new Float64Array(column.map(([_, p]) => p)),\n    };\n  });\n}\n\nfunction sparseMarkovChainActionInto(\n  chain: SparseMarkovChain,\n  seed: Distribution,\n  alpha: number,\n  input: Distribution,\n  output: Distribution\n): void {\n  chain.forEach(({neighbor, weight}, dst) => {\n    const inDegree = neighbor.length; // (also `weight.length`)\n    let probability = alpha * seed[dst];\n    for (let i = 0; i < inDegree; i++) {\n      const src = neighbor[i];\n      probability += (1 - alpha) * input[src] * weight[i];\n    }\n    output[dst] = probability;\n  });\n}\n\nexport function sparseMarkovChainAction(\n  chain: SparseMarkovChain,\n  seed: Distribution,\n  alpha: number,\n  pi: Distribution\n): Distribution {\n  const result = new Float64Array(pi.length);\n  sparseMarkovChainActionInto(chain, seed, alpha, pi, result);\n  return result;\n}\n\nfunction* findStationaryDistributionGenerator(\n  params: PagerankParams,\n  options: {|\n    +verbose: boolean,\n    // A distribution is considered stationary if the action of the Markov\n    // chain on the distribution does not change any component by more than\n    // `convergenceThreshold` in absolute value.\n    +convergenceThreshold: number,\n    // We will run maxIterations markov chain steps at most.\n    +maxIterations: number,\n  |}\n): Generator<void, StationaryDistributionResult, void> {\n  const {chain, pi0, seed, alpha} = params;\n  let pi = new Float64Array(pi0);\n  let scratch = new Float64Array(pi.length);\n\n  let nIterations = 0;\n  while (true) {\n    if (nIterations >= options.maxIterations) {\n      if (options.verbose) {\n        console.log(`[${nIterations}] FAILED to converge`);\n      }\n      // We need to do one more step so that we can compute the empirical convergence\n      // delta for the returned distribution.\n      sparseMarkovChainActionInto(chain, seed, alpha, pi, scratch);\n      const convergenceDelta = computeDelta(pi, scratch);\n      return {pi, convergenceDelta};\n    }\n    nIterations++;\n    sparseMarkovChainActionInto(chain, seed, alpha, pi, scratch);\n    // We compute the convergenceDelta between 'scratch' (the newest\n    // distribution) and 'pi' (the distribution from the previous step). If the\n    // delta is below threshold, then the distribution from the last step was\n    // already converged and we return it (not scratch). Otherwise, we assign\n    // `scratch` to `distribution` and try again.\n    const convergenceDelta = computeDelta(pi, scratch);\n    if (options.verbose) {\n      console.log(`[${nIterations}] delta = ${convergenceDelta}`);\n    }\n    if (convergenceDelta < options.convergenceThreshold) {\n      if (options.verbose) {\n        console.log(`[${nIterations}] CONVERGED`);\n      }\n      return {pi, convergenceDelta};\n    }\n    [scratch, pi] = [pi, scratch];\n    yield;\n  }\n  // ESLint knows that this next line is unreachable, but Flow doesn't. :-)\n  // eslint-disable-next-line no-unreachable\n  throw new Error(\"Unreachable.\");\n}\n\nexport function findStationaryDistribution(\n  params: PagerankParams,\n  options: PagerankOptions\n): Promise<StationaryDistributionResult> {\n  const gen = findStationaryDistributionGenerator(params, {\n    verbose: options.verbose,\n    convergenceThreshold: options.convergenceThreshold,\n    maxIterations: options.maxIterations,\n  });\n  return new Promise((resolve, _unused_reject) => {\n    const {yieldAfterMs} = options;\n    const tick = () => {\n      const start = Date.now();\n      do {\n        const result = gen.next();\n        if (result.done) {\n          if (result.value == null) {\n            // Should never happen.\n            throw new Error(String(result.value));\n          }\n          resolve(result.value);\n          return;\n        }\n      } while (Date.now() - start < yieldAfterMs);\n      setTimeout(tick, 0);\n    };\n    tick();\n  });\n}\n","// @flow\n\nimport {type AddressModule} from \"./address\";\nimport {\n  NodeAddress,\n  type NodeAddressT,\n  EdgeAddress,\n  type EdgeAddressT,\n} from \"./graph\";\nimport * as NullUtil from \"../util/null\";\n\nconst EMPTY_ENTRY_SYMBOL: symbol = Symbol(\"EMPTY\");\n\ntype Entry<V> = {|+map: RecursiveMap<V>, value: V | typeof EMPTY_ENTRY_SYMBOL|};\ntype RecursiveMap<V> = Map<string, Entry<V>>;\nclass BaseTrie<K: string, V> {\n  addressModule: AddressModule<K>;\n  entry: Entry<V>;\n\n  /**\n   * Create an empty trie backed by the given address module.\n   */\n  constructor(m: AddressModule<K>) {\n    this.addressModule = m;\n    this.entry = {value: EMPTY_ENTRY_SYMBOL, map: new Map()};\n  }\n\n  /**\n   * Add key `k` to this trie with value `v`. Return `this`.\n   */\n  add(k: K, val: V): this {\n    const parts = this.addressModule.toParts(k);\n    let entry = this.entry;\n    for (const part of parts) {\n      if (!entry.map.has(part)) {\n        entry.map.set(part, {map: new Map(), value: EMPTY_ENTRY_SYMBOL});\n      }\n      entry = NullUtil.get(entry.map.get(part));\n    }\n    if (entry.value !== EMPTY_ENTRY_SYMBOL) {\n      throw new Error(\n        `Tried to overwrite entry at ${this.addressModule.toString(k)}`\n      );\n    }\n    entry.value = val;\n    return this;\n  }\n\n  /**\n   * Get the values in this trie along the path to `k`.\n   *\n   * More specifically, this method has the following observable\n   * behavior. Let `inits` be the list of all prefixes of `k`, ordered\n   * by length (shortest to longest). Observe that the length of `inits`\n   * is `n + 1`, where `n` is the number of parts of `k`; `inits` begins\n   * with the empty address and ends with `k` itself. Initialize the\n   * result to an empty array. For each prefix `p` in `inits`, if `p`\n   * was added to this trie with value `v`, then append `v` to\n   * `result`. Return `result`.\n   */\n  get(k: K): V[] {\n    const parts = this.addressModule.toParts(k);\n    const result: V[] = [];\n    let entry: Entry<V> = this.entry;\n    // nb: if parts has length `n`, there are `n+1` opportunities to add a\n    // value to the resultant array, which is correct as there may be `n+1`\n    // appropriate values to return: one for each part, and another for the\n    // empty address.\n    for (const part of parts) {\n      if (entry.value !== EMPTY_ENTRY_SYMBOL) {\n        const value: V = (entry.value: any);\n        result.push(value);\n      }\n      const tmpEntry = entry.map.get(part);\n      if (tmpEntry == null) {\n        return result;\n      } else {\n        entry = tmpEntry;\n      }\n    }\n    if (entry.value !== EMPTY_ENTRY_SYMBOL) {\n      const value: V = (entry.value: any);\n      result.push(value);\n    }\n    return result;\n  }\n\n  /**\n   * Get the last stored value `v` in the path to key `k`.\n   * Returns undefined if no value is available.\n   */\n  getLast(k: K): ?V {\n    const path = this.get(k);\n    return path[path.length - 1];\n  }\n}\n\nexport class NodeTrie<V> extends BaseTrie<NodeAddressT, V> {\n  constructor() {\n    super(NodeAddress);\n  }\n}\n\nexport class EdgeTrie<V> extends BaseTrie<EdgeAddressT, V> {\n  constructor() {\n    super(EdgeAddress);\n  }\n}\n","// @flow\n\nimport type {NodeAddressT, EdgeAddressT} from \"../graph\";\nimport type {WeightsT, EdgeWeight, NodeWeight} from \"../weights\";\nimport {NodeTrie, EdgeTrie} from \"../trie\";\n\nexport type NodeWeightEvaluator = (NodeAddressT) => NodeWeight;\nexport type EdgeWeightEvaluator = (EdgeAddressT) => EdgeWeight;\n\n/**\n * Given the weights and types, produce a NodeWeightEvaluator, which assigns a\n * numerical weight to any node.\n *\n * The weights are interpreted as prefixes, i.e. a given address may match\n * multiple weights. When this is the case, the matching weights are multiplied\n * together. When no weights match, a default weight of 1 is returned.\n *\n * We currently take the NodeTypes and use them to 'fill in' default type\n * weights if no weight for the type's prefix is explicitly set. This is a\n * legacy affordance; shortly we will remove the NodeTypes and require that the\n * plugins provide the type weights when the Weights object is constructed.\n */\nexport function nodeWeightEvaluator(weights: WeightsT): NodeWeightEvaluator {\n  const nodeTrie: NodeTrie<NodeWeight> = new NodeTrie();\n  for (const [prefix, weight] of weights.nodeWeights.entries()) {\n    nodeTrie.add(prefix, weight);\n  }\n  return function nodeWeight(a: NodeAddressT): NodeWeight {\n    const matchingWeights = nodeTrie.get(a);\n    return matchingWeights.reduce((a, b) => a * b, 1);\n  };\n}\n\n/**\n * Given the weights and the types, produce an EdgeWeightEvaluator,\n * which will assign an EdgeWeight to any edge.\n *\n * The edge weights are interpreted as prefix matchers, so a single edge may\n * match zero or more EdgeWeights. The weight for the edge will be the product\n * of all matching EdgeWeights (with 1 as the default forwards and backwards\n * weight.)\n *\n * The types are used to 'fill in' extra type weights. This is a temporary\n * state of affairs; we will change plugins to include the type weights\n * directly in the weights object, so that producing weight evaluators will no\n * longer depend on having plugin declarations on hand.\n */\nexport function edgeWeightEvaluator(weights: WeightsT): EdgeWeightEvaluator {\n  const edgeTrie: EdgeTrie<EdgeWeight> = new EdgeTrie();\n  for (const [prefix, weight] of weights.edgeWeights.entries()) {\n    edgeTrie.add(prefix, weight);\n  }\n  return function evaluator(address: EdgeAddressT): EdgeWeight {\n    const weights = edgeTrie.get(address);\n    return weights.reduce(\n      (a: EdgeWeight, b: EdgeWeight) => ({\n        forwards: a.forwards * b.forwards,\n        backwards: a.backwards * b.backwards,\n      }),\n      {forwards: 1, backwards: 1}\n    );\n  };\n}\n","//@flow\n\nexport type PluckFn<T> = (T) => any;\n\nconst identity = (x) => x;\n\n/**\n * Sorting utility. Accepts an array and optionally any number of \"pluck\"\n * functions to get the value to sort by. Will create a shallow copy, and sort in ascending order.\n * - `arr`: The input array to sort\n * - `pluckArgs`: (0...n) Functions to get the value to sort by. Defaults to identity.\n */\nexport default function sortBy<T>(\n  arr: $ReadOnlyArray<T>,\n  ...pluckArgs: PluckFn<T>[]\n): T[] {\n  const plucks: PluckFn<T>[] = pluckArgs.length === 0 ? [identity] : pluckArgs;\n\n  function sortByCompare(a: T, b: T) {\n    for (const pluck of plucks) {\n      const valA = pluck(a);\n      const valB = pluck(b);\n      if (valA > valB) return 1;\n      if (valA < valB) return -1;\n    }\n    return 0;\n  }\n\n  return [...arr].sort(sortByCompare);\n}\n","var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = arguments.length === 0 ? new Date : new Date(+date)), date;\n  }\n\n  interval.floor = function(date) {\n    return floori(date = new Date(+date)), date;\n  };\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n","import interval from \"./interval.js\";\nimport {durationWeek} from \"./duration.js\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n","export const durationSecond = 1000;\nexport const durationMinute = durationSecond * 60;\nexport const durationHour = durationMinute * 60;\nexport const durationDay = durationHour * 24;\nexport const durationWeek = durationDay * 7;\nexport const durationMonth = durationDay * 30;\nexport const durationYear = durationDay * 365;\n","// @flow\n\nimport {max, min} from \"d3-array\";\nimport sortBy from \"../util/sortBy\";\nimport {utcWeek} from \"d3-time\";\nimport * as NullUtil from \"../util/null\";\nimport type {TimestampMs} from \"../util/timestamp\";\nimport type {Node, Edge, Graph} from \"./graph\";\nimport * as C from \"../util/combo\";\n\n/**\n * Represents a time interval\n * The interval is half open [startTimeMs, endTimeMs),\n * i.e. if a timestamp is exactly on the interval boundary, it will fall at the\n * start of the older interval.\n */\nexport type Interval = {|\n  +startTimeMs: TimestampMs,\n  +endTimeMs: TimestampMs,\n|};\n\n/**\n * An interval sequence is an array of intervals with the following guarantees:\n * - Every interval has positive time span (i.e. the end time is greater\n *   than the start time).\n * - Every interval except for the first starts at the same time that the\n *   previous interval ended.\n * - No interval may have a NaN start or end time. (Infinity is OK.)\n */\nexport opaque type IntervalSequence: $ReadOnlyArray<Interval> = $ReadOnlyArray<Interval>;\n\nexport function intervalSequence(\n  intervals: $ReadOnlyArray<Interval>\n): IntervalSequence {\n  let lastEndTime = null;\n  for (const {startTimeMs, endTimeMs} of intervals) {\n    if (isNaN(startTimeMs) || isNaN(endTimeMs)) {\n      throw new Error(`NaN in interval [${startTimeMs}, ${endTimeMs}]`);\n    }\n    if (lastEndTime != null && startTimeMs !== lastEndTime) {\n      throw new Error(\n        `last interval ended at ${lastEndTime} but this interval starts at ${startTimeMs}`\n      );\n    }\n    if (endTimeMs <= startTimeMs) {\n      throw new Error(\n        `interval must have positive length, but got [${startTimeMs}, ${endTimeMs}]`\n      );\n    }\n    lastEndTime = endTimeMs;\n  }\n  // Reconstruct the objects so mutating the input won't break the IntervalSequence\n  return intervals.map(({startTimeMs, endTimeMs}) => ({\n    startTimeMs,\n    endTimeMs,\n  }));\n}\n\nexport const intervalSequenceParser: C.Parser<IntervalSequence> = C.fmap(\n  C.array(\n    C.object({\n      startTimeMs: C.number,\n      endTimeMs: C.number,\n    })\n  ),\n  (arr) => intervalSequence(arr)\n);\n\n/**\n * Represents a slice of a time-partitioned graph\n * Includes the interval, as well as all of the nodes and edges whose timestamps\n * are within the interval.\n */\nexport type GraphInterval = {|\n  +interval: Interval,\n  +nodes: $ReadOnlyArray<Node>,\n  +edges: $ReadOnlyArray<Edge>,\n|};\n\nexport type GraphIntervalPartition = $ReadOnlyArray<GraphInterval>;\n\ntype TimefulNode = {|...Node, timestampMs: TimestampMs|};\n\n/**\n * Partition a graph based on time intervals.\n *\n * The intervals are always one week long, as calculated using d3.utcWeek.\n * The result may contain empty intervals.\n * If the graph is empty, no intervals are returned.\n * Timeless nodes are not included in the partition, nor are dangling edges.\n */\nexport function partitionGraph(graph: Graph): GraphIntervalPartition {\n  const nodes = Array.from(graph.nodes());\n  const timefulNodes: $ReadOnlyArray<TimefulNode> = (nodes.filter(\n    (x) => x.timestampMs != null\n  ): any);\n  const sortedNodes = sortBy(timefulNodes, (x) => x.timestampMs);\n  const edges = Array.from(graph.edges({showDangling: false}));\n  const sortedEdges = sortBy(edges, (x) => x.timestampMs);\n  const intervals = graphIntervals(graph);\n  let nodeIndex = 0;\n  let edgeIndex = 0;\n  return intervals.map((interval) => {\n    const nodes = [];\n    const edges = [];\n    while (\n      nodeIndex < sortedNodes.length &&\n      sortedNodes[nodeIndex].timestampMs < interval.endTimeMs\n    ) {\n      nodes.push(sortedNodes[nodeIndex++]);\n    }\n    while (\n      edgeIndex < sortedEdges.length &&\n      sortedEdges[edgeIndex].timestampMs < interval.endTimeMs\n    ) {\n      edges.push(sortedEdges[edgeIndex++]);\n    }\n    return {interval, nodes, edges};\n  });\n}\n\n/**\n * Produce an array of Intervals which cover all the node and edge timestamps\n * for a graph.\n *\n * The intervals are one week long, and are aligned on clean week boundaries.\n *\n * This function is basically a wrapper around weekIntervals that makes sure\n * the graph's nodes and edges are all accounted for properly.\n */\nexport function graphIntervals(graph: Graph): IntervalSequence {\n  const nodeTimestamps = Array.from(graph.nodes())\n    .map((x) => x.timestampMs)\n    .filter((x) => x != null)\n    // Unnecessary map is to satisfy flow that the array doesn't contain null.\n    .map((x) => NullUtil.get(x));\n  const edgeTimestamps = Array.from(graph.edges({showDangling: false})).map(\n    (x) => x.timestampMs\n  );\n  if (nodeTimestamps.length === 0 && edgeTimestamps.length === 0) {\n    return [];\n  }\n  const allTimestamps = nodeTimestamps.concat(edgeTimestamps);\n  const start = min(allTimestamps);\n  const end = max(allTimestamps);\n  return weekIntervals(start, end);\n}\n\n/**\n * Produce an array of week-long intervals to cover the startTime and endTime.\n *\n * Each interval is one week long and aligned on week boundaries, as produced\n * by d3.utcWeek. The weeks always use UTC boundaries to ensure consistent\n * output regardless of which timezone the user is in.\n *\n * Assuming that the inputs are valid, there will always be at least one\n * interval, so that that interval can cover the input timestamps. (E.g. if\n * startMs and endMs are the same value, then the produced interval will be the\n * start and end of the last week that starts on or before startMs.)\n */\nexport function weekIntervals(\n  startMs: number,\n  endMs: number\n): IntervalSequence {\n  if (!isFinite(startMs) || !isFinite(endMs)) {\n    throw new Error(\"invalid non-finite input\");\n  }\n  if (typeof startMs !== \"number\" || typeof endMs !== \"number\") {\n    throw new Error(\"start or end are not numbers\");\n  }\n  if (startMs > endMs) {\n    throw new Error(\"start time after end time\");\n  }\n  // Promote the window to the nearest week boundaries, to ensure that\n  // utcWeek.range will not return an empty array.\n  // We add one to the endTime so that just in case we're exactly on a week\n  // boundary, we still get at least one interval.\n  startMs = utcWeek.floor(startMs);\n  endMs = utcWeek.ceil(endMs + 1);\n  const boundaries = utcWeek.range(startMs, endMs);\n  boundaries.push(endMs);\n  const intervals = [];\n  for (let i = 0; i < boundaries.length - 1; i++) {\n    intervals.push({\n      startTimeMs: +boundaries[i],\n      endTimeMs: +boundaries[i + 1],\n    });\n  }\n  return intervalSequence(intervals);\n}\n","export default function min(values, valueof) {\n  let min;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  }\n  return min;\n}\n","export default function max(values, valueof) {\n  let max;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  }\n  return max;\n}\n","// @flow\n\nimport findLast from \"lodash.findlast\";\nimport {type IdentityId, identityIdParser} from \"../identity/id\";\nimport type {TimestampMs} from \"../../util/timestamp\";\nimport * as C from \"../../util/combo\";\n\n/**\n  This module allows participants to attribute their cred to other participants.\n  This feature should not be used to make cred sellable/transferable, but\n  instead is intended to allow participants to acknowledge that a portion of\n  their creditted outputs are directly generated/supported by the labor of\n  others. (e.g. when a contributor has a personal assistant working behind the \n  scenes)\n*/\n\n/** \n  A timestamped configuration representing a decimal proportion of cred flow,\n  which can be applied to a participant pair.\n*/\nexport type PersonalAttributionProportion = {|\n  // The start time from which epochs should begin using the proportion\n  +timestampMs: TimestampMs,\n  // decimal proportion (0-1) of cred that should flow between 2 participants\n  +proportionValue: number,\n|};\n/**\n  A recipient of cred attribution and a chronological log of proportion\n  configurations.\n */\nexport type AttributionRecipient = {|\n  +toParticipantId: IdentityId,\n  +proportions: $ReadOnlyArray<PersonalAttributionProportion>,\n|};\n/**\n  A participant that is attributing their cred, and a log of how they are\n  attributing it.\n */\nexport type PersonalAttribution = {|\n  +fromParticipantId: IdentityId,\n  +recipients: $ReadOnlyArray<AttributionRecipient>,\n|};\n/**\n  A list of participants who are attributing their cred, with logs of how\n  they are attributing it.\n */\nexport type PersonalAttributions = $ReadOnlyArray<PersonalAttribution>;\nexport const personalAttributionsParser: C.Parser<PersonalAttributions> = C.array(\n  C.object({\n    fromParticipantId: identityIdParser,\n    recipients: C.array(\n      C.object({\n        toParticipantId: identityIdParser,\n        proportions: C.array(\n          C.object({timestampMs: C.number, proportionValue: C.number})\n        ),\n      })\n    ),\n  })\n);\n\n/**\n  Validates that:\n  1. There is only 1 entry per fromParticipantId.\n  1. Each fromParticipantId only has 1 entry per toParticipantId.\n  2. Proportions are in chronological order.\n  3. Proportions are a number between 0 and 1.\n*/\nexport function validatePersonalAttributions(\n  personalAttributions: PersonalAttributions\n) {\n  personalAttributions.forEach((pa, index) => {\n    if (\n      personalAttributions.findIndex(\n        (x) => x.fromParticipantId === pa.fromParticipantId\n      ) !== index\n    )\n      throw `More than one PersonalAttribution object found with fromParticipantId [${pa.fromParticipantId}]`;\n    pa.recipients.forEach((ar, index) => {\n      if (\n        pa.recipients.findIndex(\n          (x) => x.toParticipantId === ar.toParticipantId\n        ) !== index\n      )\n        throw `More than one AttributionRecipient object found with toParticipantId [${ar.toParticipantId}] for fromParticipantId [${pa.fromParticipantId}] `;\n      ar.proportions.forEach((proportion, index) => {\n        if (\n          index > 0 &&\n          proportion.timestampMs < ar.proportions[index - 1].timestampMs\n        )\n          throw `Personal Attribution proportions not in chronological order for [${pa.fromParticipantId}] to [${ar.toParticipantId}]`;\n        if (proportion.proportionValue < 0 || 1 < proportion.proportionValue)\n          throw `Personal Attribution proportion value must be between 0 and 1, inclusive. Found [${proportion.proportionValue}].`;\n      });\n    });\n  });\n}\n\n/**\n  This is the intermediary data structure used to index personal attributions\n  data, making lookups faster. It can be interpreted as:\n\n  $ReadOnlyMap<\n    fromParticipantId,\n    $ReadOnlyMap<toParticipantId, AttributionRecipient>\n  >\n */\ntype Index = $ReadOnlyMap<\n  IdentityId,\n  $ReadOnlyMap<IdentityId, AttributionRecipient>\n>;\n\n/**\n  An indexed store of PersonalAttributions that includes optimized queries\n  needed by credrank.\n */\nexport class IndexedPersonalAttributions {\n  _index: Index;\n\n  /**\n    Validates and indexes the input.\n  */\n  constructor(\n    personalAttributions: PersonalAttributions,\n    epochStarts: $ReadOnlyArray<TimestampMs>\n  ) {\n    validatePersonalAttributions(personalAttributions);\n    this._index = this._getIndexFromList(personalAttributions);\n    this._validateIndex(this._index, epochStarts);\n  }\n\n  _getIndexFromList(personalAttributions: PersonalAttributions): Index {\n    const index = new Map();\n    for (const personalAttribution of personalAttributions) {\n      const recipientsIndex = new Map();\n      for (const attributionRecipient of personalAttribution.recipients) {\n        recipientsIndex.set(\n          attributionRecipient.toParticipantId,\n          attributionRecipient\n        );\n      }\n      index.set(personalAttribution.fromParticipantId, recipientsIndex);\n    }\n    return index;\n  }\n\n  /**\n    Validates that:\n    1. No participant is attributing more than 100% of their cred in any epoch.\n  */\n  _validateIndex(index: Index, epochStarts: $ReadOnlyArray<TimestampMs>) {\n    for (const recipientsIndex of index.values()) {\n      for (const epochStart of epochStarts) {\n        const sum = this._getSumProportionValue(\n          epochStart,\n          Array.from(recipientsIndex.values())\n        );\n        if (sum && sum > 1)\n          throw `Sum of Personal Attributions for epoch [${epochStart}] is greater than 1. Found: [${sum}].`;\n      }\n    }\n  }\n\n  /**\n    Returns a non-indexed, json-friendly PersonalAttributions. The order\n    may be changed from the original PersonalAttributions that was used to\n    construct this object, but the elements are the same and the order is\n    generated consistently.\n   */\n  toPersonalAttributions(): PersonalAttributions {\n    return Array.from(this._index.entries()).map(\n      ([fromParticipantId, recipientsIndex]) => {\n        return {\n          fromParticipantId,\n          recipients: Array.from(recipientsIndex.values()),\n        };\n      }\n    );\n  }\n\n  /**\n    Return the IDs of all of the recipients that receive a non-zero proportion\n    of the given participant's cred in the given epoch.\n   */\n  recipientsForEpochAndParticipant(\n    epochStart: TimestampMs,\n    fromParticipantId: IdentityId\n  ): $ReadOnlyArray<IdentityId> {\n    const recipientsIndex = this._index.get(fromParticipantId);\n    if (!recipientsIndex) return [];\n    return Array.from(recipientsIndex.values())\n      .filter(({proportions}) =>\n        this._getProportionValue(epochStart, proportions)\n      )\n      .map(({toParticipantId}) => toParticipantId);\n  }\n\n  /**\n    Returns the decimal proportion of the fromParticipant's cred that should \n    flow to the toParticipant in the given epoch.\n   */\n  getProportionValue(\n    epochStart: TimestampMs,\n    fromParticipantId: IdentityId,\n    toParticipantId: IdentityId\n  ): number | null {\n    const recipientsIndex = this._index.get(fromParticipantId);\n    if (!recipientsIndex)\n      throw `Could not find PersonalAttribution from [${fromParticipantId}]`;\n\n    const attributionRecipient = recipientsIndex.get(toParticipantId);\n    if (!attributionRecipient)\n      throw `Could not find AttributionRecipient from [${fromParticipantId}] to [${toParticipantId}]`;\n\n    return this._getProportionValue(\n      epochStart,\n      attributionRecipient.proportions\n    );\n  }\n\n  _getProportionValue(\n    epochStart: TimestampMs,\n    proportions: $ReadOnlyArray<PersonalAttributionProportion>\n  ): number | null {\n    if (proportions.length && epochStart < proportions[0].timestampMs)\n      return null;\n    const relevantProportion = findLast(\n      proportions,\n      (proportion) => proportion.timestampMs <= epochStart\n    );\n    return relevantProportion ? relevantProportion.proportionValue : null;\n  }\n\n  /**\n    Returns the total decimal proportion of the fromParticipant's cred that \n    should flow to other participants in the given epoch.\n   */\n  getSumProportionValue(\n    epochStart: TimestampMs,\n    fromParticipantId: IdentityId\n  ): number | null {\n    const recipientsIndex = this._index.get(fromParticipantId);\n    if (!recipientsIndex) return null;\n    return this._getSumProportionValue(\n      epochStart,\n      Array.from(recipientsIndex.values())\n    );\n  }\n\n  _getSumProportionValue(\n    epochStart: TimestampMs,\n    attributionRecipients: $ReadOnlyArray<AttributionRecipient>\n  ): number | null {\n    const proportionValues = attributionRecipients\n      .map(({proportions}) => this._getProportionValue(epochStart, proportions))\n      .filter((proportionValue) => proportionValue !== null);\n    if (proportionValues.length === 0) return null;\n    return proportionValues.reduce((a, b) => (b ? a + b : a), 0);\n  }\n}\n","// @flow\n\nimport * as C from \"../../util/combo\";\nimport {type NodeAddressT, NodeAddress} from \"../graph\";\n\nexport type MarkovNode = {|\n  // Node address, unique within a Markov process graph. This is either\n  // the address of a contribution node or an address under the\n  // `sourcecred/core` namespace.\n  +address: NodeAddressT,\n  // Markdown source description, as in `Node` from `core/graph`.\n  +description: string,\n  // Amount of cred to mint at this node.\n  +mint: number,\n|};\n\nexport const parser: C.Parser<MarkovNode> = C.object({\n  address: NodeAddress.parser,\n  description: C.string,\n  mint: C.number,\n});\n","// @flow\n\nimport {makeAddressModule, type AddressModule} from \"../address\";\nimport {type NodeAddressT, type EdgeAddressT, EdgeAddress} from \"../graph\";\nexport type TransitionProbability = number;\nexport type MarkovEdge = {|\n  // Address of the underlying edge. Note that this attribute alone does\n  // not uniquely identify an edge in the Markov process graph; the\n  // primary key is `(address, reversed)`, not just `address`. For edges\n  // not in the underlying graph (e.g., fibration edges), this will be\n  // an address under the `sourcecred/core` namespace.\n  +address: EdgeAddressT,\n  // If this came from an underlying graph edge or an epoch webbing\n  // edge, have its `src` and `dst` been swapped in the process of\n  // handling the reverse component of a bidirectional edge?\n  +reversed: boolean,\n  // Source node at the Markov chain level.\n  +src: NodeAddressT,\n  // Destination node at the Markov chain level.\n  +dst: NodeAddressT,\n  // Transition probability: $Pr[X_{n+1} = dst | X_{n} = src]$. Must sum\n  // to 1.0 for a given `src`.\n  +transitionProbability: TransitionProbability,\n|};\n\nexport opaque type MarkovEdgeAddressT: string = string;\nexport const MarkovEdgeAddress: AddressModule<MarkovEdgeAddressT> = (makeAddressModule(\n  {\n    name: \"MarkovEdgeAddress\",\n    nonce: \"ME\",\n    otherNonces: new Map().set(\"N\", \"NodeAddress\").set(\"E\", \"EdgeAddress\"),\n  }\n): AddressModule<string>);\n\nexport function markovEdgeAddress(\n  edgeAddress: EdgeAddressT,\n  direction: \"B\" | /* Backward */ \"F\" /* Forward */\n): MarkovEdgeAddressT {\n  return MarkovEdgeAddress.fromParts([\n    direction,\n    ...EdgeAddress.toParts(edgeAddress),\n  ]);\n}\n\nexport function markovEdgeAddressFromMarkovEdge(\n  edge: MarkovEdge\n): MarkovEdgeAddressT {\n  return markovEdgeAddress(\n    edge.address,\n    edge.reversed ? \"B\" /* Backward */ : \"F\" /* Forward */\n  );\n}\n","// @flow\n/**\n * This module contains logic for creating nodes and edges that act as \"gadgets\" in CredRank.\n * They are most directly used by markovProcessGraph.js\n */\n\nimport {type Uuid, fromString as uuidFromString} from \"../../util/uuid\";\nimport {type NodeAddressT, NodeAddress} from \"../graph\";\nimport type {TimestampMs} from \"../../util/timestamp\";\nimport type {MarkovNode} from \"./markovNode\";\nimport stringify from \"json-stable-stringify\";\n\nexport const GADGET_NODE_PREFIX: NodeAddressT = NodeAddress.fromParts([\n  \"sourcecred\",\n  \"core\",\n  \"gadget\",\n]);\n\nexport interface NodeGadget<T> {\n  // Prefix shared by all nodes generated by this gadget.\n  prefix: NodeAddressT;\n  // Convert a \"structured address\" for nodes of this gadget into raw node addresses.\n  toRaw: (T) => NodeAddressT;\n  // Convert an address generated by this gadget into a structured address. Should\n  // error if the address was not generated by this gadget.\n  fromRaw(NodeAddressT): T;\n  // Generate a full node for this gadget from the structured address.\n  node: (T) => MarkovNode;\n}\n\nexport const seedGadget: NodeGadget<void> = (() => {\n  const description: string = \"\\u{1f331}\"; // U+1F331 SEEDLING\n  const prefix = NodeAddress.append(GADGET_NODE_PREFIX, \"SEED\");\n  const toRaw = () => prefix;\n  const fromRaw = (address) => {\n    if (address !== prefix) {\n      throw new Error(`not seed node: ${address}`);\n    }\n    return;\n  };\n  const node = () => ({address: prefix, description, mint: 0});\n  return Object.freeze({prefix, toRaw, fromRaw, node});\n})();\n\nexport type EpochAccumulatorAddress = {|\n  +epochStart: TimestampMs,\n|};\nexport const accumulatorGadget: NodeGadget<EpochAccumulatorAddress> = (() => {\n  const prefix = NodeAddress.append(GADGET_NODE_PREFIX, \"EPOCH_ACCUMULATOR\");\n  const prefixLength = NodeAddress.toParts(prefix).length;\n  function toRaw(addr) {\n    return NodeAddress.append(prefix, String(addr.epochStart));\n  }\n  function fromRaw(addr) {\n    if (!NodeAddress.hasPrefix(addr, prefix)) {\n      throw new Error(\n        \"Not an accumulator node address: \" + NodeAddress.toString(addr)\n      );\n    }\n    const parts = NodeAddress.toParts(addr).slice(prefixLength);\n    if (parts.length !== 1) {\n      throw new Error(`extra parts: ${stringify(parts)}`);\n    }\n    const epochStart = +parts[0];\n    if (String(epochStart) !== parts[0]) {\n      throw new Error(`bad epoch representation: ${parts[0]}`);\n    }\n    return {\n      epochStart,\n    };\n  }\n  function node(addr) {\n    return {\n      address: toRaw(addr),\n      description: `Epoch accumulator starting ${addr.epochStart} ms past epoch`,\n      mint: 0,\n    };\n  }\n  return Object.freeze({prefix, toRaw, fromRaw, node});\n})();\n\nexport type ParticipantEpochAddress = {|\n  +owner: Uuid,\n  +epochStart: TimestampMs,\n|};\nexport const epochGadget: NodeGadget<ParticipantEpochAddress> = (() => {\n  const prefix = NodeAddress.append(GADGET_NODE_PREFIX, \"USER_EPOCH\");\n  const epochPrefixLength = NodeAddress.toParts(prefix).length;\n  function toRaw(addr: ParticipantEpochAddress): NodeAddressT {\n    return NodeAddress.append(prefix, String(addr.epochStart), addr.owner);\n  }\n  function fromRaw(addr: NodeAddressT): ParticipantEpochAddress {\n    if (!NodeAddress.hasPrefix(addr, prefix)) {\n      throw new Error(\n        \"Not an epoch node address: \" + NodeAddress.toString(addr)\n      );\n    }\n    const parts = NodeAddress.toParts(addr).slice(epochPrefixLength);\n    const epochStart = +parts[0];\n    const owner = uuidFromString(parts[1]);\n    return {\n      owner,\n      epochStart,\n    };\n  }\n  function node(addr) {\n    return {\n      address: toRaw(addr),\n      description: `Participant epoch for ${addr.owner} starting ${addr.epochStart} ms past epoch`,\n      mint: 0,\n    };\n  }\n  return Object.freeze({prefix, toRaw, fromRaw, node});\n})();\n","// @flow\n\nimport type {TimestampMs} from \"../../util/timestamp\";\nimport {fromString as uuidFromString, type Uuid} from \"../../util/uuid\";\nimport {\n  NodeAddress,\n  type NodeAddressT,\n  EdgeAddress,\n  type EdgeAddressT,\n} from \"../graph\";\nimport {\n  type MarkovEdge,\n  type MarkovEdgeAddressT,\n  type TransitionProbability,\n  MarkovEdgeAddress,\n  markovEdgeAddress,\n} from \"./markovEdge\";\nimport {\n  seedGadget,\n  accumulatorGadget,\n  type ParticipantEpochAddress,\n  epochGadget,\n} from \"./nodeGadgets\";\nimport {type IdentityId} from \"../identity/id\";\n\nexport interface EdgeGadget<T> {\n  prefix: MarkovEdgeAddressT;\n  toRaw: (T) => MarkovEdgeAddressT;\n  fromRaw: (MarkovEdgeAddressT) => T;\n  markovEdge: (T, TransitionProbability) => MarkovEdge;\n}\n\ntype MakeSeedGadgetArgs<T> = {|\n  +edgePrefix: EdgeAddressT,\n  +seedIsSrc: boolean,\n  +toParts: (T) => string[],\n  +fromParts: (string[]) => T,\n|};\n/**\n * A helper function for creating a gadget only produces edges incident to seed.\n * We assume that it has a function for converting from the target type into node address parts, which will\n * be used to produce a unique edge address, and which are the address parts for the src or dst.\n * If seedIsSrc is true, then the seed is the src and the dst will be the target. Otherwise, the seed is the dst\n * and the target will be the src.\n * These markov edges are never reversed.\n */\nfunction makeSeedGadget<T>({\n  edgePrefix,\n  seedIsSrc,\n  toParts,\n  fromParts,\n}: MakeSeedGadgetArgs<T>): EdgeGadget<T> {\n  const prefix = markovEdgeAddress(edgePrefix, \"F\");\n  const prefixLength = MarkovEdgeAddress.toParts(prefix).length;\n  const toRaw = (target) =>\n    MarkovEdgeAddress.append(prefix, ...toParts(target));\n  const fromRaw = (addr) =>\n    fromParts(MarkovEdgeAddress.toParts(addr).slice(prefixLength));\n  const markovEdge = (target, transitionProbability) => {\n    const seed = seedGadget.prefix;\n    const targetAddress = NodeAddress.fromParts(toParts(target));\n    return {\n      address: EdgeAddress.append(edgePrefix, ...toParts(target)),\n      reversed: false,\n      src: seedIsSrc ? seed : targetAddress,\n      dst: seedIsSrc ? targetAddress : seed,\n      transitionProbability,\n    };\n  };\n  return Object.freeze({prefix, toRaw, fromRaw, markovEdge});\n}\n\nexport const GADGET_EDGE_PREFIX: EdgeAddressT = EdgeAddress.fromParts([\n  \"sourcecred\",\n  \"core\",\n  \"gadget\",\n]);\n\nexport const radiationGadget: EdgeGadget<NodeAddressT> = makeSeedGadget({\n  edgePrefix: EdgeAddress.append(GADGET_EDGE_PREFIX, \"RADIATION\"),\n  seedIsSrc: false,\n  toParts: (x) => NodeAddress.toParts(x),\n  fromParts: (x) => NodeAddress.fromParts(x),\n});\n\nexport const seedMintGadget: EdgeGadget<NodeAddressT> = makeSeedGadget({\n  edgePrefix: EdgeAddress.append(GADGET_EDGE_PREFIX, \"SEED_MINT\"),\n  seedIsSrc: true,\n  toParts: (x) => NodeAddress.toParts(x),\n  fromParts: (x) => NodeAddress.fromParts(x),\n});\n\n/**\n * The payout gadget creates edges that connect participant epoch nodes to the\n * epoch accumulator nodes. Each payout edge represents the flow of Cred from a\n * participant's epoch back to the seed (by means of the accumulator). Thus,\n * the Cred flow on this edge actually represents Cred score for the\n * participant. (The Cred score of the epoch node can't be seen as the user's\n * score, because some of it flows to other contributions, to other epoch\n * nodes, etc.)\n */\nexport const payoutGadget: EdgeGadget<ParticipantEpochAddress> = (() => {\n  const edgePrefix = EdgeAddress.append(GADGET_EDGE_PREFIX, \"PAYOUT\");\n  const prefix = markovEdgeAddress(edgePrefix, \"F\");\n  const prefixLength = MarkovEdgeAddress.toParts(prefix).length;\n  const toRaw = ({epochStart, owner}) =>\n    MarkovEdgeAddress.append(prefix, String(epochStart), owner);\n  const fromRaw = (addr) => {\n    const parts = MarkovEdgeAddress.toParts(addr).slice(prefixLength);\n    const epochStart = +parts[0];\n    const owner = uuidFromString(parts[1]);\n    return {epochStart, owner};\n  };\n  const markovEdge = ({owner, epochStart}, transitionProbability) => ({\n    address: EdgeAddress.append(edgePrefix, String(epochStart), owner),\n    reversed: false,\n    src: epochGadget.toRaw({owner, epochStart}),\n    dst: accumulatorGadget.toRaw({epochStart}),\n    transitionProbability,\n  });\n  return Object.freeze({prefix, toRaw, fromRaw, markovEdge});\n})();\n\nexport type WebbingAddress = {|\n  +thisStart: TimestampMs,\n  +lastStart: TimestampMs,\n  +owner: Uuid,\n|};\nconst webbingEdgePrefix = EdgeAddress.append(\n  GADGET_EDGE_PREFIX,\n  \"EPOCH_WEBBING\"\n);\n\n/**\n * The forward webbing edges flow Cred forwards from participant epoch nodes to\n * the temporally next epoch node from the same participant. The intention is\n * to \"smooth out\" Cred over time by having some of it flow forwards in time.\n */\nexport const forwardWebbingGadget: EdgeGadget<WebbingAddress> = (() => {\n  const prefix = markovEdgeAddress(webbingEdgePrefix, \"F\");\n  const prefixLength = MarkovEdgeAddress.toParts(prefix).length;\n  const toRaw = ({thisStart, lastStart, owner}) =>\n    MarkovEdgeAddress.append(\n      prefix,\n      String(lastStart),\n      String(thisStart),\n      owner\n    );\n  const fromRaw = (address) => {\n    const parts = MarkovEdgeAddress.toParts(address).slice(prefixLength);\n    const lastStart = +parts[0];\n    const thisStart = +parts[1];\n    const owner = uuidFromString(parts[2]);\n    return {lastStart, thisStart, owner};\n  };\n  const markovEdge = ({thisStart, lastStart, owner}, transitionProbability) => {\n    const thisEpoch = {epochStart: thisStart, owner};\n    const lastEpoch = {epochStart: lastStart, owner};\n    return {\n      address: EdgeAddress.append(\n        webbingEdgePrefix,\n        String(lastStart),\n        String(thisStart),\n        owner\n      ),\n      reversed: false,\n      src: epochGadget.toRaw(lastEpoch),\n      dst: epochGadget.toRaw(thisEpoch),\n      transitionProbability,\n    };\n  };\n  return {prefix, toRaw, fromRaw, markovEdge};\n})();\n\n/**\n * The backward webbing edges flow Cred backwards from participant epoch nodes\n * to the temporally previous epoch node from the same participant. The\n * intention is to \"smooth out\" Cred over time by having some of it flow\n * backwards in time.\n */\nexport const backwardWebbingGadget: EdgeGadget<WebbingAddress> = (() => {\n  const prefix = markovEdgeAddress(webbingEdgePrefix, \"B\");\n  const prefixLength = MarkovEdgeAddress.toParts(prefix).length;\n  const toRaw = ({thisStart, lastStart, owner}) =>\n    MarkovEdgeAddress.append(\n      prefix,\n      String(lastStart),\n      String(thisStart),\n      owner\n    );\n  const fromRaw = (address) => {\n    const parts = MarkovEdgeAddress.toParts(address).slice(prefixLength);\n    const lastStart = +parts[0];\n    const thisStart = +parts[1];\n    const owner = uuidFromString(parts[2]);\n    return {lastStart, thisStart, owner};\n  };\n  const markovEdge = ({thisStart, lastStart, owner}, transitionProbability) => {\n    const thisEpoch = {epochStart: thisStart, owner};\n    const lastEpoch = {epochStart: lastStart, owner};\n    return {\n      address: EdgeAddress.append(\n        webbingEdgePrefix,\n        String(lastStart),\n        String(thisStart),\n        owner\n      ),\n      reversed: true,\n      src: epochGadget.toRaw(thisEpoch),\n      dst: epochGadget.toRaw(lastEpoch),\n      transitionProbability,\n    };\n  };\n  return {prefix, toRaw, fromRaw, markovEdge};\n})();\n\nexport type PersonalAttributionAddress = {|\n  +epochStart: TimestampMs,\n  +fromParticipantId: IdentityId,\n  +toParticipantId: IdentityId,\n|};\n\nexport const personalAttributionGadget: EdgeGadget<PersonalAttributionAddress> = (() => {\n  const edgePrefix = EdgeAddress.append(GADGET_EDGE_PREFIX, \"ATTRIBUTION\");\n  const prefix = markovEdgeAddress(edgePrefix, \"F\");\n  const prefixLength = MarkovEdgeAddress.toParts(prefix).length;\n  const toRaw = ({epochStart, fromParticipantId, toParticipantId}) =>\n    MarkovEdgeAddress.append(\n      prefix,\n      String(epochStart),\n      fromParticipantId,\n      toParticipantId\n    );\n  const fromRaw = (addr) => {\n    const parts = MarkovEdgeAddress.toParts(addr).slice(prefixLength);\n    const epochStart = +parts[0];\n    const fromParticipantId = uuidFromString(parts[1]);\n    const toParticipantId = uuidFromString(parts[2]);\n    return {epochStart, fromParticipantId, toParticipantId};\n  };\n  const markovEdge = (\n    {epochStart, fromParticipantId, toParticipantId},\n    transitionProbability\n  ) => ({\n    address: EdgeAddress.append(\n      edgePrefix,\n      String(epochStart),\n      fromParticipantId,\n      toParticipantId\n    ),\n    reversed: false,\n    src: epochGadget.toRaw({owner: fromParticipantId, epochStart}),\n    dst: epochGadget.toRaw({owner: toParticipantId, epochStart}),\n    transitionProbability,\n  });\n  return Object.freeze({prefix, toRaw, fromRaw, markovEdge});\n})();\n","// @flow\n\n/**\n * Data structure representing a particular kind of Markov process, as\n * kind of a middle ground between the semantic SourceCred graph (in the\n * `core/graph` module) and a literal transition matrix. Unlike the core\n * graph, edges in a Markov process graph are unidirectional, edge\n * weights are raw transition probabilities (which must sum to 1) rather\n * than unnormalized weights, and there are no dangling edges. Unlike a\n * fully general transition matrix, parallel edges are still reified,\n * not collapsed; nodes have weights, representing sources of flow; and\n * a few SourceCred-specific concepts are made first-class:\n * specifically, cred minting and time period fibration. The\n * \"teleportation vector\" from PageRank is also made explicit via the\n * \"adjoined seed node\" graph transformation strategy, so this data\n * structure can form well-defined Markov processes even from graphs\n * with nodes with no out-weight. Because the graph reifies the\n * teleportation and temporal fibration, the associated parameters are\n * \"baked in\" to weights of the Markov process graph.\n *\n * We use the term \"fibration\" to refer to a graph transformation where\n * each scoring node is split into one node per epoch, and incident\n * edges are rewritten to point to the appropriate epoch nodes. The term\n * is vaguely inspired from the notion of a fiber bundle, though the\n * analogy is not precise.\n *\n * The Markov process graphs in this module have three kinds of nodes:\n *\n *   - *base nodes*, which are in 1-to-1 correspondence with the nodes\n *     in the underlying core graph that are not scoring nodes;\n *   - *user-epoch nodes*, which are created for each time period for\n *     each scoring node; and\n *   - *epoch accumulators*, which are created once for each epoch to\n *     aggregate over the epoch nodes,\n *   - the *seed node*, which reifies the teleportation vector and\n *     forces well-definedness and ergodicity of the Markov process (for\n *     nonzero alpha, and assuming that there is at least one edge in\n *     the underlying graph).\n *\n * The edges include:\n *\n *   - *base edges* due to edges in the underlying graph, whose\n *     endpoints are lifted to the corresponding base nodes or to\n *     user-epoch nodes for endpoints that have been fibrated;\n *   - *radiation edges* edges from nodes to the seed node;\n *   - *minting edges* from the seed node to cred-minting nodes;\n *   - *webbing edges* between temporally adjacent user-epoch nodes; and\n *   - *payout edges* from a user-epoch node to the accumulator for its\n *     epoch.\n *\n * A Markov process graph can be converted to a pure Markov chain for\n * spectral analysis via the `toMarkovChain` method.\n */\n\nimport deepFreeze from \"deep-freeze\";\nimport {type Uuid, parser as uuidParser} from \"../../util/uuid\";\nimport * as C from \"../../util/combo\";\nimport sortedIndex from \"lodash.sortedindex\";\nimport {\n  type NodeAddressT,\n  NodeAddress,\n  type EdgeAddressT,\n  EdgeAddress,\n} from \"../graph\";\nimport {type WeightedGraph as WeightedGraphT} from \"../weightedGraph\";\nimport {\n  nodeWeightEvaluator,\n  edgeWeightEvaluator,\n} from \"../algorithm/weightEvaluator\";\nimport * as NullUtil from \"../../util/null\";\nimport * as MapUtil from \"../../util/map\";\nimport type {TimestampMs} from \"../../util/timestamp\";\nimport {type SparseMarkovChain} from \"../algorithm/markovChain\";\nimport {type IntervalSequence, intervalSequence} from \"../interval\";\nimport {\n  personalAttributionsParser,\n  type PersonalAttributions,\n  IndexedPersonalAttributions,\n} from \"./personalAttribution\";\n\nimport {type MarkovNode, parser as markovNodeParser} from \"./markovNode\";\n\nimport {\n  type MarkovEdge,\n  type MarkovEdgeAddressT,\n  type TransitionProbability,\n  MarkovEdgeAddress,\n  markovEdgeAddressFromMarkovEdge,\n} from \"./markovEdge\";\n\nimport {\n  seedGadget,\n  accumulatorGadget,\n  epochGadget,\n  GADGET_NODE_PREFIX,\n} from \"./nodeGadgets\";\n\nimport {\n  radiationGadget,\n  seedMintGadget,\n  payoutGadget,\n  forwardWebbingGadget,\n  backwardWebbingGadget,\n  personalAttributionGadget,\n} from \"./edgeGadgets\";\n\nexport type Participant = {|\n  +address: NodeAddressT,\n  +description: string,\n  +id: Uuid,\n|};\n\nexport const participantParser: C.Parser<Participant> = C.object({\n  address: NodeAddress.parser,\n  description: C.string,\n  id: uuidParser,\n});\n\nexport type OrderedSparseMarkovChain = {|\n  +nodeOrder: $ReadOnlyArray<NodeAddressT>,\n  +chain: SparseMarkovChain,\n|};\n\nexport type Arguments = {|\n  +weightedGraph: WeightedGraphT,\n  +participants: $ReadOnlyArray<Participant>,\n  +intervals: IntervalSequence,\n  +parameters: Parameters,\n  +personalAttributions: PersonalAttributions,\n|};\n\nexport type Parameters = {|\n  // Transition probability from every organic node back to the seed node.\n  +alpha: TransitionProbability,\n  // Transition probability for payout edges from epoch nodes to their\n  // owners.\n  +beta: TransitionProbability,\n  // Transition probability for webbing edges from an epoch node to the\n  // next epoch node for the same owner.\n  +gammaForward: TransitionProbability,\n  +gammaBackward: TransitionProbability,\n|};\n\nexport const parametersParser: C.Parser<Parameters> = C.object({\n  alpha: C.number,\n  beta: C.number,\n  gammaForward: C.number,\n  gammaBackward: C.number,\n});\n\n// A MarkovEdge in which the src and dst have been replaced with indices instead\n// of full addresses. The indexing is based on the order of nodes in the MarkovProcessGraphJSON.\nexport type IndexedMarkovEdge = {|\n  +address: EdgeAddressT,\n  +reversed: boolean,\n  +src: number,\n  +dst: number,\n  +transitionProbability: TransitionProbability,\n|};\n\nconst indexedEdgeParser: C.Parser<IndexedMarkovEdge> = C.object({\n  address: EdgeAddress.parser,\n  reversed: C.boolean,\n  src: C.number,\n  dst: C.number,\n  transitionProbability: C.number,\n});\n\nexport type MarkovProcessGraphJSON = {|\n  +nodes: $ReadOnlyArray<MarkovNode>,\n  +indexedEdges: $ReadOnlyArray<IndexedMarkovEdge>,\n  +participants: $ReadOnlyArray<Participant>,\n  +epochStarts: $ReadOnlyArray<number>,\n  +lastEpochEndMs: number,\n  +parameters: Parameters,\n  +radiationTransitionProbabilities: $ReadOnlyArray<number>,\n  // Array of [nodeIndex, transitionProbability] tuples representing all of the\n  // connections from the seed node to nodes minting Cred.\n  +indexedMints: $ReadOnlyArray<[number, number]>,\n  +personalAttributions: PersonalAttributions,\n|};\n\nexport class MarkovProcessGraph {\n  _nodes: $ReadOnlyMap<NodeAddressT, MarkovNode>;\n  _edges: $ReadOnlyMap<MarkovEdgeAddressT, MarkovEdge>;\n  _participants: $ReadOnlyArray<Participant>;\n  _epochStarts: $ReadOnlyArray<number>;\n  +_lastEpochEndMs: number;\n  _parameters: Parameters;\n  _mintTransitionProbabilties: $ReadOnlyMap<NodeAddressT, number>;\n  _radiationTransitionProbabilties: $ReadOnlyArray<number>;\n  _nodeIndex: $ReadOnlyMap<NodeAddressT, number>;\n  _edgeIndex: $ReadOnlyMap<MarkovEdgeAddressT, number>;\n  _indexedPersonalAttributions: IndexedPersonalAttributions;\n\n  constructor(\n    nodes: Map<NodeAddressT, MarkovNode>,\n    edges: Map<MarkovEdgeAddressT, MarkovEdge>,\n    participants: $ReadOnlyArray<Participant>,\n    epochStarts: $ReadOnlyArray<number>,\n    lastEpochEndMs: number,\n    parameters: Parameters,\n    // Map from each node address to the proportion of total minting (i.e. its\n    // transition probability from the seed node). Must sum to about 1.\n    mintTransitionProbabilities: $ReadOnlyMap<NodeAddressT, number>,\n    // Transition probabilities for radiation edges, in node order\n    radiationTransitionProbabilities: $ReadOnlyArray<number>,\n    indexedPersonalAttributions: IndexedPersonalAttributions\n  ) {\n    this._nodes = nodes;\n    this._edges = edges;\n    this._epochStarts = deepFreeze(epochStarts);\n    this._lastEpochEndMs = lastEpochEndMs;\n    this._participants = deepFreeze(participants);\n    this._parameters = deepFreeze(parameters);\n    this._radiationTransitionProbabilties = deepFreeze(\n      radiationTransitionProbabilities\n    );\n    this._mintTransitionProbabilties = mintTransitionProbabilities;\n    // Precompute the index maps\n    this._nodeIndex = new Map(\n      [..._nodeOrder(nodes, epochStarts, participants)].map((a, i) => [a, i])\n    );\n    this._edgeIndex = new Map(\n      [\n        ...edges.keys(),\n        ...virtualizedMarkovEdgeAddresses(\n          epochStarts,\n          participants,\n          mintTransitionProbabilities,\n          _nodeOrder(nodes, epochStarts, participants),\n          indexedPersonalAttributions\n        ),\n      ].map((a, i) => [a, i])\n    );\n    this._indexedPersonalAttributions = indexedPersonalAttributions;\n  }\n\n  static new(args: Arguments): MarkovProcessGraph {\n    const {\n      weightedGraph,\n      participants,\n      parameters,\n      intervals,\n      personalAttributions,\n    } = args;\n    const {alpha, beta, gammaForward, gammaBackward} = parameters;\n    const _nodes = new Map();\n    const _edges = new Map();\n\n    const _scoringAddressToId = new Map(\n      participants.map((p) => [p.address, p.id])\n    );\n    const _scoringAddresses = new Set(participants.map((p) => p.address));\n\n    // _nodeOutMasses[a] = sum(e.pr for e in edges if e.src == a)\n    // Used for computing remainder-to-seed edges.\n    const _nodeOutMasses = new Map();\n\n    // Amount of mass allocated to contribution edges flowing from epoch\n    // nodes.\n    const epochTransitionRemainder: number = (() => {\n      const valid = (x) => x >= 0 && x <= 1;\n      if (\n        !valid(beta) ||\n        !valid(gammaForward) ||\n        !valid(gammaBackward) ||\n        !valid(alpha)\n      ) {\n        throw new Error(\n          \"Invalid transition probability: \" +\n            [beta, gammaForward, gammaBackward, alpha].join(\" or \")\n        );\n      }\n      const result = 1 - (alpha + beta + gammaForward + gammaBackward);\n      if (result < 0) {\n        throw new Error(\"Overlarge transition probability: \" + (1 - result));\n      }\n      return result;\n    })();\n\n    if (intervals.length === 0) {\n      throw new Error(\"need at least one interval\");\n    }\n    const epochStarts = intervals.map((x) => x.startTimeMs);\n    const lastEpochEndMs = intervals[intervals.length - 1].endTimeMs;\n    const addNode = (node: MarkovNode) => {\n      if (_nodes.has(node.address)) {\n        throw new Error(\"Node conflict: \" + node.address);\n      }\n      _nodes.set(node.address, node);\n    };\n    const addEdge = (edge: MarkovEdge) => {\n      const mae = markovEdgeAddressFromMarkovEdge(edge);\n      if (_edges.has(mae)) {\n        throw new Error(\"Edge conflict: \" + mae);\n      }\n      _edges.set(mae, edge);\n      recordTransitionProbability(edge);\n    };\n    const recordTransitionProbability = (edge: MarkovEdge) => {\n      const pr = edge.transitionProbability;\n      if (pr < 0 || pr > 1) {\n        const mae = markovEdgeAddressFromMarkovEdge(edge);\n        const name = MarkovEdgeAddress.toString(mae);\n        throw new Error(`Invalid transition probability for ${name}: ${pr}`);\n      }\n      _nodeOutMasses.set(edge.src, (_nodeOutMasses.get(edge.src) || 0) + pr);\n    };\n\n    const indexedPersonalAttributions = new IndexedPersonalAttributions(\n      personalAttributions,\n      epochStarts\n    );\n\n    // Add graph nodes\n    const nwe = nodeWeightEvaluator(weightedGraph.weights);\n    for (const node of weightedGraph.graph.nodes()) {\n      if (_scoringAddresses.has(node.address)) {\n        // Scoring nodes are not included in the Markov process graph:\n        // the cred for a scoring node is given implicitly by the\n        // weight-sum of its epoch accumulation edges.\n        continue;\n      }\n      const weight = nwe(node.address);\n      if (weight < 0 || !Number.isFinite(weight)) {\n        const name = NodeAddress.toString(node.address);\n        throw new Error(`Bad node weight for ${name}: ${weight}`);\n      }\n      if (NodeAddress.hasPrefix(node.address, GADGET_NODE_PREFIX)) {\n        throw new Error(\n          \"Unexpected core node in underlying graph: \" +\n            NodeAddress.toString(node.address)\n        );\n      }\n      addNode({\n        address: node.address,\n        description: node.description,\n        mint: weight,\n      });\n    }\n\n    // Add epoch nodes, epoch accumulators, payout edges, and epoch webbing\n    let lastEpochStart = null;\n    for (const epochStart of epochStarts) {\n      for (const participant of participants) {\n        const thisEpoch = {\n          owner: participant.id,\n          epochStart,\n        };\n        recordTransitionProbability(payoutGadget.markovEdge(thisEpoch, beta));\n        if (lastEpochStart != null) {\n          const webbingAddress = {\n            thisStart: epochStart,\n            lastStart: lastEpochStart,\n            owner: participant.id,\n          };\n          recordTransitionProbability(\n            forwardWebbingGadget.markovEdge(webbingAddress, gammaForward)\n          );\n          recordTransitionProbability(\n            backwardWebbingGadget.markovEdge(webbingAddress, gammaBackward)\n          );\n        } else {\n          // There is no lastEpochStart, which means this is the first epoch. We will instead create a \"backwards\"\n          // edge which is actually a loop, so as to avoid Cred distortion where scores are biased downward\n          // for the first epoch.\n          const webbingAddress = {\n            thisStart: epochStart,\n            lastStart: epochStart,\n            owner: participant.id,\n          };\n          const edge = backwardWebbingGadget.markovEdge(\n            webbingAddress,\n            gammaBackward\n          );\n          recordTransitionProbability(edge);\n        }\n      }\n      lastEpochStart = epochStart;\n    }\n    if (lastEpochStart == null) {\n      // Just to satisfy flow when adding the final \"forward\" webbing edges (which are loops).\n      throw new Error(`invariant violation: there were no epochs`);\n    }\n    // Now for the last epochStart, we create a \"forwards\" webbing edge which is actually a loop, as as to\n    // avoid Cred distortion where the scores are biased downward for the last epoch.\n    for (const participant of participants) {\n      const webbingAddress = {\n        thisStart: lastEpochStart,\n        lastStart: lastEpochStart,\n        owner: participant.id,\n      };\n      const edge = forwardWebbingGadget.markovEdge(\n        webbingAddress,\n        gammaForward\n      );\n      recordTransitionProbability(edge);\n    }\n\n    const mintTransitionProbabilities = new Map();\n    // Add minting edges, from the seed to positive-weight graph nodes\n    {\n      let totalNodeWeight = 0.0;\n      const positiveNodeWeights: Map<NodeAddressT, number> = new Map();\n      for (const {address, mint} of _nodes.values()) {\n        if (mint > 0) {\n          totalNodeWeight += mint;\n          positiveNodeWeights.set(address, mint);\n        }\n      }\n      if (!(totalNodeWeight > 0)) {\n        throw new Error(\"No outflow from seed; add cred-minting nodes\");\n      }\n      for (const [address, weight] of positiveNodeWeights) {\n        mintTransitionProbabilities.set(address, weight / totalNodeWeight);\n      }\n    }\n\n    /**\n     * Find an epoch node, or just the original node if it's not a\n     * scoring address.\n     */\n    const rewriteEpochNode = (\n      address: NodeAddressT,\n      edgeTimestampMs: TimestampMs\n    ): NodeAddressT => {\n      const owner = _scoringAddressToId.get(address);\n      if (owner == null) {\n        return address;\n      }\n      const epochEndIndex = sortedIndex(epochStarts, edgeTimestampMs);\n      const epochStartIndex = epochEndIndex - 1;\n      const epochTimestampMs = epochStarts[epochStartIndex];\n      return epochGadget.toRaw({\n        owner,\n        epochStart: epochTimestampMs,\n      });\n    };\n\n    // Add graph edges. First, split by direction.\n    type _UnidirectionalGraphEdge = {|\n      +address: EdgeAddressT,\n      +reversed: boolean,\n      +src: NodeAddressT,\n      +dst: NodeAddressT,\n      +timestamp: TimestampMs,\n      +weight: number,\n    |};\n    const unidirectionalGraphEdges = function* (): Iterator<_UnidirectionalGraphEdge> {\n      const ewe = edgeWeightEvaluator(weightedGraph.weights);\n      for (const edge of (function* () {\n        for (const edge of weightedGraph.graph.edges({showDangling: false})) {\n          const weight = ewe(edge.address);\n          yield {\n            address: edge.address,\n            reversed: false,\n            src: edge.src,\n            dst: edge.dst,\n            timestamp: edge.timestampMs,\n            weight: weight.forwards,\n          };\n          yield {\n            address: edge.address,\n            reversed: true,\n            src: edge.dst,\n            dst: edge.src,\n            timestamp: edge.timestampMs,\n            weight: weight.backwards,\n          };\n        }\n      })()) {\n        if (edge.weight > 0) {\n          yield edge;\n        }\n      }\n    };\n\n    const srcNodes: Map<\n      NodeAddressT /* domain: nodes with positive weight from base edges */,\n      {totalOutWeight: number, outEdges: _UnidirectionalGraphEdge[]}\n    > = new Map();\n    for (const graphEdge of unidirectionalGraphEdges()) {\n      const src = rewriteEpochNode(graphEdge.src, graphEdge.timestamp);\n      let datum = srcNodes.get(src);\n      if (datum == null) {\n        datum = {totalOutWeight: 0, outEdges: []};\n        srcNodes.set(src, datum);\n      }\n      datum.totalOutWeight += graphEdge.weight;\n      datum.outEdges.push(graphEdge);\n    }\n    for (const [src, {totalOutWeight, outEdges}] of srcNodes) {\n      const totalOutPr = NodeAddress.hasPrefix(src, epochGadget.prefix)\n        ? epochTransitionRemainder\n        : 1 - alpha;\n      for (const outEdge of outEdges) {\n        const pr = (outEdge.weight / totalOutWeight) * totalOutPr;\n        addEdge({\n          address: outEdge.address,\n          reversed: outEdge.reversed,\n          src: rewriteEpochNode(outEdge.src, outEdge.timestamp),\n          dst: rewriteEpochNode(outEdge.dst, outEdge.timestamp),\n          transitionProbability: pr,\n        });\n      }\n    }\n\n    function* realAndVirtualNodes(): Iterator<MarkovNode> {\n      yield* _nodes.values();\n      for (const nodeAddress of virtualizedNodeAddresses(\n        epochStarts,\n        participants\n      )) {\n        yield NullUtil.get(virtualizedNode(nodeAddress));\n      }\n    }\n\n    const radiationTransitionProbabilities = [...realAndVirtualNodes()].map(\n      (node) => {\n        return 1 - NullUtil.orElse(_nodeOutMasses.get(node.address), 0);\n      }\n    );\n\n    return new MarkovProcessGraph(\n      _nodes,\n      _edges,\n      participants,\n      epochStarts,\n      lastEpochEndMs,\n      parameters,\n      mintTransitionProbabilities,\n      radiationTransitionProbabilities,\n      indexedPersonalAttributions\n    );\n  }\n\n  epochStarts(): $ReadOnlyArray<number> {\n    return this._epochStarts;\n  }\n\n  intervals(): IntervalSequence {\n    const es = this._epochStarts;\n    const intervals = [];\n    for (let i = 0; i < es.length; i++) {\n      const startTimeMs = es[i];\n      const endTimeMs = i + 1 < es.length ? es[i + 1] : this._lastEpochEndMs;\n      intervals.push({startTimeMs, endTimeMs});\n    }\n    return intervalSequence(intervals);\n  }\n\n  participants(): $ReadOnlyArray<Participant> {\n    return this._participants;\n  }\n\n  parameters(): Parameters {\n    return this._parameters;\n  }\n\n  /**\n   * Return the node address's canonical index in the\n   * node order, if it is present.\n   */\n  nodeIndex(address: NodeAddressT): number | null {\n    return NullUtil.orElse(this._nodeIndex.get(address), null);\n  }\n\n  /**\n   * Returns a canonical ordering of the nodes in the graph.\n   *\n   * No assumptions should be made about the node order, other than\n   * that it is stable for any given MarkovProcessGraph.\n   */\n  *nodeOrder(): Iterator<NodeAddressT> {\n    yield* _nodeOrder(this._nodes, this._epochStarts, this._participants);\n  }\n\n  node(address: NodeAddressT): MarkovNode | null {\n    NodeAddress.assertValid(address);\n    return this._nodes.get(address) || virtualizedNode(address);\n  }\n\n  /**\n   * Iterate over the nodes in the graph. If a prefix is provided,\n   * only nodes matching that prefix will be returned.\n   *\n   * The nodes are always iterated over in the node order.\n   */\n  *nodes(options?: {|+prefix: NodeAddressT|}): Iterator<MarkovNode> {\n    const prefix = options ? options.prefix : NodeAddress.empty;\n    for (const [address, markovNode] of this._nodes) {\n      if (NodeAddress.hasPrefix(address, prefix)) {\n        yield markovNode;\n      }\n    }\n    for (const address of virtualizedNodeAddresses(\n      this._epochStarts,\n      this._participants\n    )) {\n      if (NodeAddress.hasPrefix(address, prefix)) {\n        yield NullUtil.get(virtualizedNode(address));\n      }\n    }\n  }\n\n  /**\n   * Return the edge address's canonical index in the\n   * edge order, if it is present.\n   */\n  edgeIndex(address: MarkovEdgeAddressT): number | null {\n    return NullUtil.orElse(this._edgeIndex.get(address), null);\n  }\n\n  /**\n   * Returns a canonical ordering of the edges in the graph.\n   *\n   * No assumptions should be made about the edge order, other than\n   * that it is stable for any given MarkovProcessGraph.\n   */\n  *edgeOrder(): Iterator<MarkovEdgeAddressT> {\n    yield* this._edges.keys();\n    yield* virtualizedMarkovEdgeAddresses(\n      this._epochStarts,\n      this._participants,\n      this._mintTransitionProbabilties,\n      this.nodeOrder(),\n      this._indexedPersonalAttributions\n    );\n  }\n\n  edge(address: MarkovEdgeAddressT): MarkovEdge | null {\n    MarkovEdgeAddress.assertValid(address);\n    return (\n      this._edges.get(address) ||\n      virtualizedMarkovEdge(\n        address,\n        this._parameters,\n        this._nodeIndex,\n        this._mintTransitionProbabilties,\n        this._radiationTransitionProbabilties,\n        this._indexedPersonalAttributions\n      )\n    );\n  }\n\n  /**\n   * Iterate over the edges in the graph.\n   *\n   * The edges are always iterated over in the edge order.\n   */\n  *edges(): Iterator<MarkovEdge> {\n    yield* this._edges.values();\n    for (const addr of virtualizedMarkovEdgeAddresses(\n      this._epochStarts,\n      this._participants,\n      this._mintTransitionProbabilties,\n      this.nodeOrder(),\n      this._indexedPersonalAttributions\n    )) {\n      yield NullUtil.get(\n        virtualizedMarkovEdge(\n          addr,\n          this._parameters,\n          this._nodeIndex,\n          this._mintTransitionProbabilties,\n          this._radiationTransitionProbabilties,\n          this._indexedPersonalAttributions\n        )\n      );\n    }\n  }\n\n  *inNeighbors(nodeAddress: NodeAddressT): Iterator<MarkovEdge> {\n    for (const edge of this.edges()) {\n      if (edge.dst !== nodeAddress) {\n        continue;\n      }\n      yield edge;\n    }\n  }\n\n  toMarkovChain(): OrderedSparseMarkovChain {\n    // We will need to map over the nodes, so we array-ify it upfront\n    const nodes = Array.from(this.nodes());\n\n    // Check that out-edges sum to about 1.\n    const nodeOutMasses = new Map();\n    for (const {address} of nodes) {\n      nodeOutMasses.set(address, 0);\n    }\n    for (const edge of this.edges()) {\n      const a = edge.src;\n      nodeOutMasses.set(\n        a,\n        NullUtil.get(nodeOutMasses.get(a)) + edge.transitionProbability\n      );\n    }\n    for (const [node, outMass] of nodeOutMasses) {\n      const discrepancy = outMass - 1;\n      if (Math.abs(discrepancy) > 1e-3) {\n        const name = NodeAddress.toString(node);\n        throw new Error(\n          `Transition weights for ${name} do not sum to 1.0: ${outMass}`\n        );\n      }\n    }\n\n    const inNeighbors: Map<NodeAddressT, MarkovEdge[]> = new Map();\n    for (const edge of this.edges()) {\n      MapUtil.pushValue(inNeighbors, edge.dst, edge);\n    }\n\n    const chain = nodes.map(({address}) => {\n      const inEdges = NullUtil.orElse(inNeighbors.get(address), []);\n      const inDegree = inEdges.length;\n      const neighbor = new Uint32Array(inDegree);\n      const weight = new Float64Array(inDegree);\n      inEdges.forEach((e, i) => {\n        // Note: We don't group-by src, so there may be multiple `j`\n        // such that `neighbor[j] === k` for a given `k` when there are\n        // parallel edges in the source graph. This should just work\n        // down the stack.\n        const srcIndex = this.nodeIndex(e.src);\n        if (srcIndex == null) {\n          throw new Error(e.src);\n        }\n        neighbor[i] = srcIndex;\n        weight[i] = e.transitionProbability;\n      });\n      return {neighbor, weight};\n    });\n\n    return {nodeOrder: nodes.map((x) => x.address), chain};\n  }\n\n  toJSON(): MarkovProcessGraphJSON {\n    const indexedEdges = Array.from(this._edges.values()).map((e) => ({\n      address: e.address,\n      reversed: e.reversed,\n      src: NullUtil.get(this.nodeIndex(e.src)),\n      dst: NullUtil.get(this.nodeIndex(e.dst)),\n      transitionProbability: e.transitionProbability,\n    }));\n    const indexedMints = Array.from(\n      this._mintTransitionProbabilties\n    ).map(([addr, pr]) => [NullUtil.get(this.nodeIndex(addr)), pr]);\n    return {\n      nodes: [...this._nodes.values()],\n      indexedEdges,\n      participants: this._participants,\n      epochStarts: this._epochStarts,\n      lastEpochEndMs: this._lastEpochEndMs,\n      parameters: this._parameters,\n      radiationTransitionProbabilities: this._radiationTransitionProbabilties,\n      indexedMints,\n      personalAttributions: this._indexedPersonalAttributions.toPersonalAttributions(),\n    };\n  }\n\n  static fromJSON(j: MarkovProcessGraphJSON): MarkovProcessGraph {\n    const {\n      nodes,\n      indexedEdges,\n      participants,\n      epochStarts,\n      lastEpochEndMs,\n      parameters,\n      radiationTransitionProbabilities,\n      indexedMints,\n      personalAttributions,\n    } = j;\n    const nodeOrder = [\n      ...nodes.map((n) => n.address),\n      ...virtualizedNodeAddresses(epochStarts, participants),\n    ];\n    const edges = indexedEdges.map((e) => ({\n      address: e.address,\n      reversed: e.reversed,\n      src: nodeOrder[e.src],\n      dst: nodeOrder[e.dst],\n      transitionProbability: e.transitionProbability,\n    }));\n    const mintTransitionProbabilities = new Map(\n      indexedMints.map(([i, pr]) => [nodeOrder[i], pr])\n    );\n    const indexedPersonalAttributions = new IndexedPersonalAttributions(\n      personalAttributions,\n      epochStarts\n    );\n\n    return new MarkovProcessGraph(\n      new Map(nodes.map((n) => [n.address, n])),\n      new Map(edges.map((e) => [markovEdgeAddressFromMarkovEdge(e), e])),\n      participants,\n      epochStarts,\n      lastEpochEndMs,\n      parameters,\n      mintTransitionProbabilities,\n      radiationTransitionProbabilities,\n      indexedPersonalAttributions\n    );\n  }\n}\n\n/**\n * Yield the canonical node order.\n * This has been separated from the class because we need it at construction time, etc.\n */\nfunction* _nodeOrder(\n  nodes: $ReadOnlyMap<NodeAddressT, MarkovNode>,\n  epochStarts: $ReadOnlyArray<TimestampMs>,\n  participants: $ReadOnlyArray<Participant>\n): Iterable<NodeAddressT> {\n  yield* nodes.keys();\n  yield* virtualizedNodeAddresses(epochStarts, participants);\n}\n\n/**\n * Return an array containing the node addresses for every\n * virtualized node. The order must be stable.\n */\nfunction* virtualizedNodeAddresses(\n  epochStarts: $ReadOnlyArray<TimestampMs>,\n  participants: $ReadOnlyArray<Participant>\n): Iterable<NodeAddressT> {\n  yield seedGadget.prefix;\n  for (const epochStart of epochStarts) {\n    yield accumulatorGadget.toRaw({epochStart});\n    for (const {id} of participants) {\n      yield epochGadget.toRaw({owner: id, epochStart});\n    }\n  }\n}\n\nfunction virtualizedNode(address: NodeAddressT): MarkovNode | null {\n  // Perf tweak: Check the most common node types first, and rarest\n  // last.\n  if (NodeAddress.hasPrefix(address, epochGadget.prefix)) {\n    return epochGadget.node(epochGadget.fromRaw(address));\n  }\n  if (NodeAddress.hasPrefix(address, accumulatorGadget.prefix)) {\n    return accumulatorGadget.node(accumulatorGadget.fromRaw(address));\n  }\n  if (NodeAddress.hasPrefix(address, seedGadget.prefix)) {\n    return seedGadget.node();\n  }\n  return null;\n}\n\nfunction* virtualizedMarkovEdgeAddresses(\n  epochStarts: $ReadOnlyArray<TimestampMs>,\n  participants: $ReadOnlyArray<Participant>,\n  mintTransitionProbabilities: $ReadOnlyMap<NodeAddressT, number>,\n  nodeOrder: Iterable<NodeAddressT>,\n  indexedPersonalAttributions: IndexedPersonalAttributions\n): Iterable<MarkovEdgeAddressT> {\n  let lastStart = null;\n  for (const epochStart of epochStarts) {\n    for (const {id} of participants) {\n      yield payoutGadget.toRaw({owner: id, epochStart});\n      for (const toParticipantId of indexedPersonalAttributions.recipientsForEpochAndParticipant(\n        epochStart,\n        id\n      )) {\n        yield personalAttributionGadget.toRaw({\n          epochStart,\n          fromParticipantId: id,\n          toParticipantId,\n        });\n      }\n      if (lastStart != null) {\n        const webbingAddress = {thisStart: epochStart, lastStart, owner: id};\n        yield forwardWebbingGadget.toRaw(webbingAddress);\n        yield backwardWebbingGadget.toRaw(webbingAddress);\n      } else {\n        const webbingAddress = {\n          thisStart: epochStart,\n          lastStart: epochStart,\n          owner: id,\n        };\n        yield backwardWebbingGadget.toRaw(webbingAddress);\n      }\n    }\n    lastStart = epochStart;\n  }\n  if (lastStart == null) {\n    // Needed to satisfy flow when adding the final \"forward\" webbing edges (which are loops).\n    throw new Error(`invariant violation: there were no epochs`);\n  }\n  for (const {id} of participants) {\n    const webbingAddress = {thisStart: lastStart, lastStart, owner: id};\n    yield forwardWebbingGadget.toRaw(webbingAddress);\n  }\n  for (const addr of mintTransitionProbabilities.keys()) {\n    yield seedMintGadget.toRaw(addr);\n  }\n  for (const addr of nodeOrder) {\n    if (addr === seedGadget.prefix) {\n      continue;\n    }\n    yield radiationGadget.toRaw(addr);\n  }\n}\n\nfunction virtualizedMarkovEdge(\n  address: MarkovEdgeAddressT,\n  parameters: Parameters,\n  nodeIndex: $ReadOnlyMap<NodeAddressT, number>,\n  mintTransitionProbabilities: $ReadOnlyMap<NodeAddressT, number>,\n  radiationTransitionProbabilities: $ReadOnlyArray<number>,\n  indexedPersonalAttributions: IndexedPersonalAttributions\n): MarkovEdge | null {\n  if (MarkovEdgeAddress.hasPrefix(address, radiationGadget.prefix)) {\n    const nodeAddress = radiationGadget.fromRaw(address);\n    const index = NullUtil.get(nodeIndex.get(nodeAddress));\n    const probability = radiationTransitionProbabilities[index];\n    return radiationGadget.markovEdge(nodeAddress, probability);\n  }\n  if (MarkovEdgeAddress.hasPrefix(address, seedMintGadget.prefix)) {\n    const nodeAddress = seedMintGadget.fromRaw(address);\n    const probability = NullUtil.get(\n      mintTransitionProbabilities.get(nodeAddress)\n    );\n    return seedMintGadget.markovEdge(nodeAddress, probability);\n  }\n  if (MarkovEdgeAddress.hasPrefix(address, payoutGadget.prefix)) {\n    const payoutAddress = payoutGadget.fromRaw(address);\n    const sumOfPersonalAttributions =\n      indexedPersonalAttributions.getSumProportionValue(\n        payoutAddress.epochStart,\n        payoutAddress.owner\n      ) || 0;\n    return payoutGadget.markovEdge(\n      payoutGadget.fromRaw(address),\n      parameters.beta - sumOfPersonalAttributions * parameters.beta\n    );\n  }\n  if (MarkovEdgeAddress.hasPrefix(address, forwardWebbingGadget.prefix)) {\n    return forwardWebbingGadget.markovEdge(\n      forwardWebbingGadget.fromRaw(address),\n      parameters.gammaForward\n    );\n  }\n  if (MarkovEdgeAddress.hasPrefix(address, backwardWebbingGadget.prefix)) {\n    return backwardWebbingGadget.markovEdge(\n      backwardWebbingGadget.fromRaw(address),\n      parameters.gammaBackward\n    );\n  }\n  if (MarkovEdgeAddress.hasPrefix(address, personalAttributionGadget.prefix)) {\n    const personalAttributionAddress = personalAttributionGadget.fromRaw(\n      address\n    );\n    const proportionValue =\n      indexedPersonalAttributions.getProportionValue(\n        personalAttributionAddress.epochStart,\n        personalAttributionAddress.fromParticipantId,\n        personalAttributionAddress.toParticipantId\n      ) || 0;\n    if (proportionValue === 0) return null;\n    return personalAttributionGadget.markovEdge(\n      personalAttributionGadget.fromRaw(address),\n      parameters.beta * proportionValue\n    );\n  }\n  return null;\n}\n\nexport const jsonParser: C.Parser<MarkovProcessGraphJSON> = C.object({\n  nodes: C.array(markovNodeParser),\n  indexedEdges: C.array(indexedEdgeParser),\n  participants: C.array(participantParser),\n  epochStarts: C.array(C.number),\n  lastEpochEndMs: C.number,\n  parameters: parametersParser,\n  radiationTransitionProbabilities: C.array(C.number),\n  indexedMints: C.array(C.tuple([C.number, C.number])),\n  personalAttributions: personalAttributionsParser,\n});\n\nexport const parser: C.Parser<MarkovProcessGraph> = C.fmap(\n  jsonParser,\n  MarkovProcessGraph.fromJSON\n);\n","// @flow\n\nimport * as C from \"../../util/combo\";\nimport * as NullUtil from \"../../util/null\";\nimport {type Uuid} from \"../../util/uuid\";\nimport {type NodeAddressT, type EdgeAddressT} from \"../graph\";\nimport {\n  MarkovProcessGraph,\n  type MarkovProcessGraphJSON,\n  jsonParser as markovProcessGraphJSONParser,\n} from \"./markovProcessGraph\";\nimport {type MarkovEdge, type TransitionProbability} from \"./markovEdge\";\nimport {payoutGadget} from \"./edgeGadgets\";\nimport {type IntervalSequence} from \"../interval\";\n\nexport type Node = {|\n  +address: NodeAddressT,\n  +description: string,\n  +cred: number,\n  +mint: number,\n|};\n\nexport type Edge = {|\n  +address: EdgeAddressT,\n  +reversed: boolean,\n  +src: NodeAddressT,\n  +dst: NodeAddressT,\n  +transitionProbability: TransitionProbability,\n  +credFlow: number,\n|};\n\nexport type Participant = {|\n  +address: NodeAddressT,\n  +description: string,\n  +cred: number,\n  +credPerInterval: $ReadOnlyArray<number>,\n  +id: Uuid,\n|};\n\nexport type CredGraphJSON = {|\n  +mpg: MarkovProcessGraphJSON,\n  // scores for each node in the same node order used by the markov process graph\n  +scores: $ReadOnlyArray<number>,\n|};\n\nexport class CredGraph {\n  _mpg: MarkovProcessGraph;\n  // Scores for each node, tracked in the MPG node order\n  _scores: $ReadOnlyArray<number>;\n\n  constructor(\n    markovProcessGraph: MarkovProcessGraph,\n    scores: $ReadOnlyArray<number>\n  ) {\n    this._mpg = markovProcessGraph;\n    this._scores = scores;\n  }\n\n  _cred(addr: NodeAddressT): number {\n    const index = NullUtil.get(this._mpg.nodeIndex(addr));\n    return this._scores[index];\n  }\n\n  _credFlow(edge: MarkovEdge): number {\n    const srcCred /* heh */ = this._cred(edge.src);\n    return srcCred * edge.transitionProbability;\n  }\n\n  node(addr: NodeAddressT): ?Node {\n    const node = this._mpg.node(addr);\n    if (node == null) return undefined;\n    return {...node, cred: this._cred(addr)};\n  }\n\n  *nodes(): Iterator<Node> {\n    for (const node of this._mpg.nodes()) {\n      yield {...node, cred: this._cred(node.address)};\n    }\n  }\n\n  *edges(): Iterator<Edge> {\n    for (const edge of this._mpg.edges()) {\n      yield {...edge, credFlow: this._credFlow(edge)};\n    }\n  }\n\n  *participants(): Iterator<Participant> {\n    for (const {address, description, id} of this._mpg.participants()) {\n      const epochs = this._mpg.epochStarts().map((epochStart) => ({\n        owner: id,\n        epochStart,\n      }));\n      let totalCred = 0;\n      const credPerInterval = epochs.map((e) => {\n        const payoutAddress = payoutGadget.toRaw(e);\n        const payoutMarkovEdge = NullUtil.get(this._mpg.edge(payoutAddress));\n        const cred = this._credFlow(payoutMarkovEdge);\n        totalCred += cred;\n        return cred;\n      });\n      yield {address, description, credPerInterval, cred: totalCred, id};\n    }\n  }\n\n  intervals(): IntervalSequence {\n    return this._mpg.intervals();\n  }\n\n  *inNeighbors(addr: NodeAddressT): Iterator<Edge> {\n    for (const edge of this._mpg.inNeighbors(addr)) {\n      yield {...edge, credFlow: this._credFlow(edge)};\n    }\n  }\n\n  toJSON(): CredGraphJSON {\n    const mpgJson = this._mpg.toJSON();\n    return {\n      mpg: mpgJson,\n      scores: this._scores,\n    };\n  }\n\n  static fromJSON(j: CredGraphJSON): CredGraph {\n    return new CredGraph(MarkovProcessGraph.fromJSON(j.mpg), j.scores);\n  }\n}\n\nexport const jsonParser: C.Parser<CredGraphJSON> = C.object({\n  mpg: markovProcessGraphJSONParser,\n  scores: C.array(C.number),\n});\n\nexport const parser: C.Parser<CredGraph> = C.fmap(\n  jsonParser,\n  CredGraph.fromJSON\n);\n","// @flow\n\n/**\n * This module exposes a class that accesses participant data, aggregating\n * between a CredGraph and a Ledger.\n *\n * It is useful for cases where you want to view a participant's Cred and Grain\n * data simultaneously, for example for creating summary dashboards.\n */\nimport {sum} from \"d3-array\";\nimport deepFreeze from \"deep-freeze\";\nimport {\n  CredGraph,\n  type Participant as GraphParticipant,\n} from \"./credrank/credGraph\";\nimport {type Identity, type IdentityId, identityParser} from \"./identity\";\nimport * as G from \"./ledger/grain\";\nimport {type Grain, add, ZERO} from \"./ledger/grain\";\nimport {Ledger, type Account} from \"./ledger/ledger\";\nimport {type TimestampMs} from \"../util/timestamp\";\nimport findLastIndex from \"lodash.findlastindex\";\nimport {\n  type IntervalSequence,\n  intervalSequence,\n  intervalSequenceParser,\n} from \"./interval\";\nimport * as C from \"../util/combo\";\n\n/**\n * Cred and Grain data for a given participant.\n *\n * Implicitly has an associated time scope, which will\n * be the time scope of the CredGrainView or TimeScopedCredGrainView that\n * generated this.\n *\n * The indices of credPerInterval/grainEarnedPerInterval correspond to the\n * same indices in the IntervalSequence of the CredGrainView or\n * TimeScopedCredGrainView that generated this.\n */\nexport type ParticipantCredGrain = {|\n  // Is the user active\n  +active: boolean,\n  +identity: Identity,\n  // Total Cred earned during the time scope.\n  +cred: number,\n  // Cred earned in each interval within the time scope.\n  +credPerInterval: $ReadOnlyArray<number>,\n  // Total Grain earned during the time scope.\n  +grainEarned: Grain,\n  // Grain earned in each interval within the time scope.\n  +grainEarnedPerInterval: $ReadOnlyArray<Grain>,\n|};\n\nexport type CredGrainViewJSON = {|\n  +participants: $ReadOnlyArray<ParticipantCredGrain>,\n  +intervals: IntervalSequence,\n|};\nexport const credGrainViewParser: C.Parser<CredGrainView> = C.fmap(\n  C.object({\n    participants: C.array(\n      C.object({\n        active: C.boolean,\n        identity: identityParser,\n        cred: C.number,\n        credPerInterval: C.array(C.number),\n        grainEarned: G.parser,\n        grainEarnedPerInterval: C.array(G.parser),\n      })\n    ),\n    intervals: intervalSequenceParser,\n  }),\n  (json) => CredGrainView.fromJSON(json)\n);\n\n/**\n * Aggregates data across a CredGraph and Ledger.\n *\n * By default, it includes data across all time present in the instance.\n * Callers can call `withTimeScope` to get a `TimeScopedCredGrainView` which\n * returns data that only includes a continuous subset of cred and grain data\n * across time.\n */\nexport class CredGrainView {\n  _participants: $ReadOnlyArray<ParticipantCredGrain>;\n  _intervals: IntervalSequence;\n  _credTotals: Array<number>;\n  _grainTotals: Array<Grain>;\n\n  constructor(\n    participants: $ReadOnlyArray<ParticipantCredGrain>,\n    intervals: IntervalSequence\n  ) {\n    this._participants = participants;\n    this._intervals = intervals;\n    this._credTotals = [];\n    this._grainTotals = [];\n    participants.forEach((participant) => {\n      for (let i = 0; i < this._intervals.length; i++) {\n        this._credTotals[i] =\n          participant.credPerInterval[i] + (this._credTotals[i] || 0);\n        this._grainTotals[i] = add(\n          participant.grainEarnedPerInterval[i],\n          this._grainTotals[i] || ZERO\n        );\n      }\n    });\n  }\n\n  static _calculateGrainEarnedPerInterval(\n    account: Account,\n    intervals: IntervalSequence\n  ): $ReadOnlyArray<Grain> {\n    let allocationIndex = 0;\n    return intervals.map((interval) => {\n      let grain = G.ZERO;\n      while (\n        account.allocationHistory.length - 1 >= allocationIndex &&\n        interval.startTimeMs <\n          account.allocationHistory[allocationIndex].credTimestampMs &&\n        account.allocationHistory[allocationIndex].credTimestampMs <=\n          interval.endTimeMs\n      ) {\n        grain = G.add(\n          grain,\n          account.allocationHistory[allocationIndex].grainReceipt.amount\n        );\n        allocationIndex++;\n      }\n      return grain;\n    });\n  }\n\n  validateForGrainAllocation() {\n    if (this.activeParticipants().length === 0) {\n      throw new Error(`must have at least one identity to allocate grain to`);\n    }\n\n    this.activeParticipants().forEach((p) => {\n      p.credPerInterval.forEach((c) => {\n        if (typeof c !== \"number\") {\n          throw new Error(`Non numeric cred value found`);\n        }\n        if (c < 0) {\n          throw new Error(`negative cred in interval data`);\n        }\n      });\n\n      if (typeof p.cred !== \"number\") {\n        throw new Error(`Non numeric cred value found`);\n      }\n\n      if (p.credPerInterval.length !== this.intervals().length) {\n        throw new Error(`participant cred per interval length mismatch`);\n      }\n\n      if (p.grainEarnedPerInterval.length !== this.intervals().length) {\n        throw new Error(`participant grain per interval length mismatch`);\n      }\n\n      if (sum(p.credPerInterval) !== p.cred) {\n        throw new Error(\n          `participant cred per interval mismatched with participant cred total`\n        );\n      }\n\n      if (!G.eq(G.sum(p.grainEarnedPerInterval), p.grainEarned)) {\n        throw new Error(\n          `participant grain per interval mismatched with participant grain total:`\n        );\n      }\n\n      p.grainEarnedPerInterval.forEach((g) => {\n        if (g < G.ZERO) {\n          throw new Error(`negative grain paid in interval data`);\n        }\n      });\n    });\n\n    if (sum(this.totalCredPerInterval()) < 1)\n      throw new Error(\n        \"cred is zero. Make sure your plugins are configured correctly and remember to run 'yarn go' to calculate the cred scores.\"\n      );\n  }\n\n  withTimeScope(\n    startTimeMs: TimestampMs,\n    endTimeMs: TimestampMs\n  ): TimeScopedCredGrainView {\n    return new TimeScopedCredGrainView(this, startTimeMs, endTimeMs);\n  }\n\n  withTimeScopeFromLookback(\n    effectiveTimestamp: TimestampMs,\n    numIntervalsLookback: number\n  ): TimeScopedCredGrainView {\n    const intervalsBeforeEffective = this._intervals.filter(\n      (interval) => interval.endTimeMs <= effectiveTimestamp\n    );\n\n    if (!numIntervalsLookback)\n      return new TimeScopedCredGrainView(this, -Infinity, effectiveTimestamp);\n\n    if (\n      !intervalsBeforeEffective ||\n      intervalsBeforeEffective.length <= numIntervalsLookback\n    )\n      return new TimeScopedCredGrainView(this, -Infinity, effectiveTimestamp);\n\n    return new TimeScopedCredGrainView(\n      this,\n      intervalsBeforeEffective[\n        intervalsBeforeEffective.length - numIntervalsLookback\n      ].startTimeMs,\n      effectiveTimestamp\n    );\n  }\n\n  intervals(): IntervalSequence {\n    return this._intervals;\n  }\n\n  participants(): $ReadOnlyArray<ParticipantCredGrain> {\n    return this._participants;\n  }\n\n  activeParticipants(): $ReadOnlyArray<ParticipantCredGrain> {\n    return this._participants.filter((participant) => participant.active);\n  }\n\n  // This is imprecise, due to floating point rounding.\n  totalCredPerInterval(): $ReadOnlyArray<number> {\n    return this._credTotals;\n  }\n\n  totalGrainPerInterval(): $ReadOnlyArray<Grain> {\n    return this._grainTotals;\n  }\n\n  toJSON(): CredGrainViewJSON {\n    return {\n      participants: this._participants,\n      intervals: this._intervals,\n    };\n  }\n\n  static fromJSON(json: CredGrainViewJSON): CredGrainView {\n    return new CredGrainView(json.participants, json.intervals);\n  }\n\n  static fromCredGraphAndLedger(\n    credGraph: CredGraph,\n    ledger: Ledger\n  ): CredGrainView {\n    const intervals = deepFreeze(credGraph.intervals());\n\n    const graphParticipants = new Map<IdentityId, GraphParticipant>();\n    for (const participant of credGraph.participants()) {\n      graphParticipants.set(participant.id, participant);\n    }\n\n    const participants = deepFreeze(\n      ledger.accounts().map((account) => {\n        const graphParticipant = graphParticipants.get(account.identity.id);\n        if (!graphParticipant)\n          throw new Error(\n            `The graph is missing account [${account.identity.name}: ${account.identity.id}] that exists in the ledger. Try recalculating the scores.`\n          );\n\n        const grainEarnedPerInterval = this._calculateGrainEarnedPerInterval(\n          account,\n          intervals\n        );\n        return {\n          active: account.active,\n          identity: account.identity,\n          cred: graphParticipant.cred,\n          credPerInterval: graphParticipant.credPerInterval,\n          grainEarned: account.paid,\n          grainEarnedPerInterval,\n        };\n      })\n    );\n    return new CredGrainView(participants, intervals);\n  }\n}\n\n/**\n * This class's contructor stores a continuous subset of the originalIntervals\n * and participant cred/grain data where intervals are only included if their\n * start and end times are both within the provided startTimeMs and endTimeMs,\n * inclusively.\n */\nexport class TimeScopedCredGrainView {\n  _participants: $ReadOnlyArray<ParticipantCredGrain>;\n  _intervals: IntervalSequence;\n  _credTotals: $ReadOnlyArray<number>;\n  _grainTotals: $ReadOnlyArray<Grain>;\n\n  constructor(\n    credGrainView: CredGrainView,\n    startTimeMs: TimestampMs,\n    endTimeMs: TimestampMs\n  ) {\n    const originalIntervals = credGrainView.intervals();\n    let inclusiveStartIndex = originalIntervals.findIndex(\n      (interval) => startTimeMs <= interval.startTimeMs\n    );\n    if (inclusiveStartIndex === -1)\n      inclusiveStartIndex = originalIntervals.length;\n\n    const exclusiveEndIndex =\n      findLastIndex(\n        originalIntervals,\n        (interval) => interval.endTimeMs <= endTimeMs\n      ) + 1;\n\n    this._intervals = deepFreeze(\n      intervalSequence(\n        originalIntervals.slice(inclusiveStartIndex, exclusiveEndIndex)\n      )\n    );\n    this._participants = deepFreeze(\n      credGrainView.participants().map((participant) => {\n        const credPerInterval = participant.credPerInterval.slice(\n          inclusiveStartIndex,\n          exclusiveEndIndex\n        );\n        const grainEarnedPerInterval = participant.grainEarnedPerInterval.slice(\n          inclusiveStartIndex,\n          exclusiveEndIndex\n        );\n        return {\n          active: participant.active,\n          identity: participant.identity,\n          cred: credPerInterval.reduce((a, b) => a + b, 0),\n          credPerInterval,\n          grainEarned: grainEarnedPerInterval.reduce(\n            (a, b) => G.add(a, b || G.ZERO),\n            G.ZERO\n          ),\n          grainEarnedPerInterval,\n        };\n      })\n    );\n    this._credTotals = credGrainView\n      .totalCredPerInterval()\n      .slice(inclusiveStartIndex, exclusiveEndIndex);\n    this._grainTotals = credGrainView\n      .totalGrainPerInterval()\n      .slice(inclusiveStartIndex, exclusiveEndIndex);\n  }\n\n  intervals(): IntervalSequence {\n    return this._intervals;\n  }\n\n  participants(): $ReadOnlyArray<ParticipantCredGrain> {\n    return this._participants;\n  }\n\n  activeParticipants(): $ReadOnlyArray<ParticipantCredGrain> {\n    return this._participants.filter((participant) => participant.active);\n  }\n\n  // This is imprecise, due to floating point rounding.\n  totalCredPerInterval(): $ReadOnlyArray<number> {\n    return this._credTotals;\n  }\n\n  totalGrainPerInterval(): $ReadOnlyArray<Grain> {\n    return this._grainTotals;\n  }\n}\n","// @flow\n\nimport * as uuid from \"../../util/uuid\";\nimport {type TimestampMs} from \"../../util/timestamp\";\nimport {computeAllocation} from \"./grainAllocation\";\nimport {type AllocationPolicy} from \"./policies\";\nimport {type CredGrainView} from \"../credGrainView\";\nimport {type Distribution} from \"./distribution\";\n\n/**\n * Compute a single Distribution using CredAccountData.\n *\n * The distribution will include the provided policies.\n * It will be computed using only Cred intervals that are finished as of the\n * effectiveTimestamp.\n *\n * Note: This method is untested as it is just a bit of plubming; flow gives me\n * confidence that the semantics are correct.\n **/\nexport function computeDistribution(\n  policies: $ReadOnlyArray<AllocationPolicy>,\n  credGrainView: CredGrainView,\n  effectiveTimestamp: TimestampMs\n): Distribution {\n  const allocations = policies.map((p) =>\n    computeAllocation(p, credGrainView, effectiveTimestamp)\n  );\n  const distribution = {\n    id: uuid.random(),\n    allocations,\n    credTimestamp: effectiveTimestamp,\n  };\n  return distribution;\n}\n","// @flow\n\nimport {type TimestampMs} from \"../../util/timestamp\";\nimport * as NullUtil from \"../../util/null\";\nimport {type IntervalSequence, intervalSequence} from \"../interval\";\nimport {Ledger} from \"./ledger\";\nimport {type AllocationPolicy} from \"./policies\";\nimport {CredGraph} from \"../credrank/credGraph\";\nimport {computeDistribution} from \"./computeDistribution\";\nimport {type Distribution} from \"./distribution\";\nimport {CredGrainView} from \"../credGrainView\";\n\nexport type DistributionPolicy = {|\n  // Each distribution will include each of the specified allocation policies\n  +allocationPolicies: $ReadOnlyArray<AllocationPolicy>,\n  // How many old distributions we may create (e.g. if the project has never\n  // had a Grain distribution in the past, do you want to create distributions\n  // going back the whole history, or limit to only 1 or 2 recent distributions).\n  +maxSimultaneousDistributions: number,\n|};\n\n/**\n * Iteratively compute and distribute Grain, based on the provided CredGraph,\n * into the provided Ledger, according to the specified DistributionPolicy.\n *\n * Here are some examples of how it works:\n *\n * - The last time there was a distribution was two days ago. Since then,\n *   no new Cred Intervals have been completed. This method will no-op.\n *\n * - The last time there was a distribution was last week. Since then, one new\n *   Cred Interval has been completed. The method will apply one Distribution.\n *\n * - The last time there was a distribution was a month ago. Since then, four\n *   Cred Intervals have been completed. The method will apply four Distributions,\n *   unless maxOldDistributions is set to a lower number (e.g. 2), in which case\n *   that maximum number of distributions will be applied.\n *\n * It returns the list of applied distributions, which may be helpful for\n * diagnostics, printing a summary, etc.\n */\nexport function applyDistributions(\n  policy: DistributionPolicy,\n  credGraph: CredGraph,\n  ledger: Ledger,\n  currentTimestamp: TimestampMs,\n  allowMultipleDistributionsPerInterval: boolean\n): $ReadOnlyArray<Distribution> {\n  const credIntervals = credGraph.intervals();\n  const distributionIntervals = _chooseDistributionIntervals(\n    credIntervals,\n    NullUtil.orElse(ledger.lastDistributionTimestamp(), -Infinity),\n    currentTimestamp,\n    policy.maxSimultaneousDistributions,\n    allowMultipleDistributionsPerInterval\n  );\n  return distributionIntervals.map((interval) => {\n    // Recompute for every endpoint because the Ledger will be in a different state\n    // (wrt paid balances)\n\n    const credGrainView = CredGrainView.fromCredGraphAndLedger(\n      credGraph,\n      ledger\n    );\n    const distribution = computeDistribution(\n      policy.allocationPolicies,\n      credGrainView,\n      interval.endTimeMs\n    );\n    ledger.distributeGrain(distribution);\n    return distribution;\n  });\n}\n\nexport function _chooseDistributionIntervals(\n  credIntervals: IntervalSequence,\n  lastDistributionTimestamp: TimestampMs,\n  currentTimestamp: TimestampMs,\n  maxSimultaneousDistributions: number,\n  allowMultipleDistributionsPerInterval: boolean\n): IntervalSequence {\n  // Slice off the final interval--we may assume that it is not yet finished.\n  const completeIntervals = credIntervals.filter(\n    (x) => x.endTimeMs <= currentTimestamp\n  );\n  const undistributedIntervals = completeIntervals.filter(\n    (i) => i.endTimeMs > lastDistributionTimestamp\n  );\n  const sequence = undistributedIntervals.slice(\n    undistributedIntervals.length - maxSimultaneousDistributions,\n    undistributedIntervals.length\n  );\n  if (allowMultipleDistributionsPerInterval && !sequence.length)\n    return intervalSequence(\n      completeIntervals.slice(completeIntervals.length - 1)\n    );\n  return intervalSequence(sequence);\n}\n","// @flow\n\nimport {Ledger} from \"./ledger\";\nimport type {LedgerEvent} from \"./ledger\";\nimport diffBy from \"lodash.differenceby\";\n\nexport type LedgerDiff = $ReadOnlyArray<LedgerEvent>;\n\n/**\n * Returns an array of ledger events that exist in ledger \"a\" but not in \"b\".\n * An event is considered equal to another if it has the same uuid.\n *\n * This will not return any events from \"b\" that don't exist in \"a\", so the\n * order of the params matters.\n *\n * Example 1:\n *  - Ledger A: [1, 2, 3]\n *  - Ledger B: [1, 3, 4, 5]\n *  - Returns: [2]\n *\n * Example 2:\n *  - Ledger A: [1, 3, 4, 5]\n *  - Ledger B: [1, 2, 3]\n *  - Returns: [4, 5]\n */\nexport function diffLedger(a: Ledger, b: Ledger): LedgerDiff {\n  return diffBy(a.eventLog(), b.eventLog(), \"uuid\");\n}\n","// @flow\n\nimport {applyDistributions} from \"./applyDistributions\";\nimport {computeDistribution} from \"./computeDistribution\";\nimport {computeCredAccounts} from \"./credAccounts\";\n\nexport {diffLedger} from \"./diffLedger\";\nexport {ensureIdentityExists} from \"./identityProposal\";\n\nexport const distributions = {\n  applyDistributions,\n  computeDistribution,\n  computeCredAccounts,\n};\n","// @flow\n\n/**\n * This module outputs aggregated data that combines Cred Scores with Ledger\n * Account data.\n *\n * We use this internally when creating Grain distributions using a Ledger and\n * a Cred View. It's also an experimental output format which gives overall\n * information on the cred in an instance. We may remove it or make breaking\n * changes to it in the future.\n */\nimport {sum} from \"d3-array\";\nimport {Ledger, type Account} from \"./ledger\";\nimport {NodeAddress, type NodeAddressT} from \"../graph\";\nimport {type IntervalSequence} from \"../interval\";\nimport {type Alias} from \"../identity\";\nimport {CredGraph} from \"../credrank/credGraph\";\n\nexport type Cred = $ReadOnlyArray<number>;\n\nexport type CredAccount = {|\n  +cred: Cred,\n  +totalCred: number,\n  +account: Account,\n|};\n\nexport type UnclaimedAlias = {|\n  +alias: Alias,\n  +totalCred: number,\n  +cred: Cred,\n|};\n\nexport type CredAccountData = {|\n  // Regular accounts: an identity with Cred, and potentially Grain\n  +accounts: $ReadOnlyArray<CredAccount>,\n  // Unclaimed aliases: An account on some platform that hasn't yet been\n  // connected to any SourceCred identity\n  +unclaimedAliases: $ReadOnlyArray<UnclaimedAlias>,\n  // For interpreting the Cred data associated with cred accounts and\n  // unclaimed accounts.\n  +intervals: IntervalSequence,\n|};\n\nexport function computeCredAccounts(\n  ledger: Ledger,\n  credGraph: CredGraph\n): CredAccountData {\n  const grainAccounts = ledger.accounts();\n  const userlikeInfo = new Map();\n  const intervals = credGraph.intervals();\n  const noIntervals = intervals.length === 0;\n  for (const {\n    address,\n    description,\n    credPerInterval,\n  } of credGraph.participants()) {\n    if (noIntervals) {\n      userlikeInfo.set(address, {cred: [], description});\n    } else if (credPerInterval === null) {\n      throw new Error(\n        `userlike ${NodeAddress.toString(address)} does not have detailed cred`\n      );\n    } else {\n      userlikeInfo.set(address, {cred: credPerInterval, description});\n    }\n  }\n  return _computeCredAccounts(grainAccounts, userlikeInfo, intervals);\n}\n\nexport function _computeCredAccounts(\n  grainAccounts: $ReadOnlyArray<Account>,\n  userlikeInfo: Map<NodeAddressT, {|+cred: Cred, +description: string|}>,\n  intervals: IntervalSequence\n): CredAccountData {\n  const aliasAddresses: Set<NodeAddressT> = new Set();\n  const accountAddresses: Set<NodeAddressT> = new Set();\n\n  const accounts = [];\n  const unclaimedAliases = [];\n\n  for (const account of grainAccounts) {\n    accountAddresses.add(account.identity.address);\n    for (const alias of account.identity.aliases) {\n      aliasAddresses.add(alias.address);\n    }\n    const info = userlikeInfo.get(account.identity.address);\n    if (info == null) {\n      throw new Error(\n        `cred sync error: no info for account ${account.identity.name}`\n      );\n    }\n    const {cred} = info;\n    const credAccount = {account, cred, totalCred: sum(cred)};\n    accounts.push(credAccount);\n  }\n\n  for (const [address, info] of userlikeInfo.entries()) {\n    if (accountAddresses.has(address)) {\n      // This userlike actually has an explicit account\n      continue;\n    }\n    const {cred, description} = info;\n    if (aliasAddresses.has(address)) {\n      throw new Error(\n        `cred sync error: alias ${NodeAddress.toString(\n          address\n        )} (aka ${description}) included in Cred scores`\n      );\n    }\n    unclaimedAliases.push({\n      alias: {address, description},\n      cred,\n      totalCred: sum(cred),\n    });\n  }\n  return {accounts, unclaimedAliases, intervals};\n}\n","// @flow\n\nimport {Ledger, type LedgerLog} from \"../core/ledger/ledger\";\nimport {diffLedger, type LedgerDiff} from \"../core/ledger/diffLedger\";\n\n/**\n * Generic adaptor for persisting a Ledger to some storage backend\n * (e.g. GitHub, local filesystem, a database, etc)\n */\nexport interface LedgerStorage {\n  read(): Promise<Ledger>;\n  write(ledger: Ledger): Promise<void>;\n}\n\ntype LedgerManagerConfig = {|\n  +storage: LedgerStorage,\n  +initLogs?: LedgerLog,\n|};\n\ntype ReloadResult = {|\n  +error: string | null,\n  +localChanges: LedgerDiff,\n  +remoteChanges: LedgerDiff,\n|};\n\nexport class LedgerManager {\n  _ledger: Ledger;\n  +_storage: LedgerStorage;\n\n  constructor(config: LedgerManagerConfig) {\n    this._storage = config.storage;\n    this._ledger = config.initLogs\n      ? Ledger.fromEventLog(config.initLogs)\n      : new Ledger();\n  }\n\n  get ledger(): Ledger {\n    return this._ledger;\n  }\n\n  /**\n   * Returns a list of LedgerEvents that have not been persisted to storage yet\n   */\n  _getLocalChanges(remoteLedger: Ledger): LedgerDiff {\n    return diffLedger(this._ledger, remoteLedger);\n  }\n\n  /**\n   * Returns a list of LedgerEvents in the persisted ledger that have not been\n   * applied to the local ledger.\n   */\n  _getRemoteChanges(remoteLedger: Ledger): LedgerDiff {\n    return diffLedger(remoteLedger, this._ledger);\n  }\n\n  /**\n   * Persists the local (in-memory) Ledger to the ledger storage. Reloads the\n   * remote ledger from storage right before persisting it to minimize the\n   * possibility of overwriting remote changes that were not synced to the local\n   * ledger and ensure consistency of the ledger events (e.g. no double spends).\n   *\n   * A race condition is present in this function: if client A runs reloadLedger\n   * and then client B writes to the remote ledger before client A finishes writing,\n   * then the changes to the ledger that client B made would be overwritten by the\n   * changes from client A. The correctness and consistency of the ledger will still\n   * be maintained, its just that client B might experience data loss of whatever\n   * events they were trying to sync. To detect if this has occurred, we reload\n   * the ledger again after writing the data to ensure the local changes were\n   * not overwritten. If they were, we can show an error message to client B with\n   * a list of changes that failed to sync.\n   */\n  async persist(): Promise<ReloadResult> {\n    // START RACE CONDITION\n    const preWriteReloadRes = await this.reloadLedger();\n    if (preWriteReloadRes.error) {\n      return preWriteReloadRes;\n    }\n    await this._storage.write(this._ledger);\n    // END RACE CONDITION\n\n    // Reload ledger again to ensure all the changes were persisted into storage\n    const postWriteReloadRes = await this.reloadLedger();\n    if (postWriteReloadRes.error) {\n      return postWriteReloadRes;\n    }\n\n    if (postWriteReloadRes.localChanges.length !== 0) {\n      return {\n        ...postWriteReloadRes,\n        error: \"Some local changes have not been persisted\",\n      };\n    }\n\n    return postWriteReloadRes;\n  }\n\n  /** Reloads the persisted Ledger from storage and replays any local changes\n   *  on top of any new remote changes, if they exist.\n   *\n   *  Will return the list of new remote changes as well as a list of local\n   *  changes that have not been persisted yet. This data is useful for the\n   *  end user to know:\n   *  - what changes they have yet to save\n   *  - what new remote changes have been applied\n   *  - if there are any inconsistencies as a result of new remote changes that\n   *    conflict with the local changes (e.g. double spend)\n   */\n  async reloadLedger(): Promise<ReloadResult> {\n    let remoteLedger: Ledger;\n    try {\n      remoteLedger = await this._storage.read();\n    } catch (e) {\n      return {\n        error: e.message,\n        remoteChanges: [],\n        localChanges: [],\n      };\n    }\n\n    const localChanges = this._getLocalChanges(remoteLedger);\n    const remoteChanges = this._getRemoteChanges(remoteLedger);\n\n    if (!remoteChanges.length) {\n      return {error: null, remoteChanges: [], localChanges};\n    }\n\n    try {\n      // Replay local actions, will throw if any local changes break ledger consistency\n      for (const event of localChanges) {\n        remoteLedger._createAndProcessEvent(event.action);\n      }\n\n      this._ledger = remoteLedger;\n      return {\n        error: null,\n        remoteChanges,\n        localChanges,\n      };\n    } catch (e) {\n      // Reset local ledger to the remote state\n      this._ledger = await this._storage.read();\n      return {\n        error: `Unable to apply local changes: ${e.message}, resetting to remote ledger`,\n        remoteChanges,\n        localChanges,\n      };\n    }\n  }\n}\n","// @flow\n\n// Right now all RepoIds are assumed to refer to GitHub repos.\n// In the future, we may support other identifiers.\nexport opaque type RepoId: {|\n  +name: string,\n  +owner: string,\n|} = {|\n  +name: string,\n  +owner: string,\n|};\n\nexport opaque type RepoIdString: string = string;\n\nexport const githubOwnerPattern = \"[A-Za-z0-9-]+\";\nexport const githubRepoPattern = \"[A-Za-z0-9-._]+\";\n\nexport function makeRepoId(owner: string, name: string): RepoId {\n  const validOwner = new RegExp(`^${githubOwnerPattern}$`);\n  const validRepo = new RegExp(`^${githubRepoPattern}$`);\n  if (!owner.match(validOwner)) {\n    throw new Error(`Invalid repository owner: ${JSON.stringify(owner)}`);\n  }\n  if (!name.match(validRepo)) {\n    throw new Error(`Invalid repository name: ${JSON.stringify(name)}`);\n  }\n  return {owner, name};\n}\n\nexport function stringToRepoId(x: string): RepoId {\n  const pieces = x.split(\"/\");\n  if (pieces.length !== 2) {\n    throw new Error(`Invalid repo string: ${x}`);\n  }\n  return makeRepoId(pieces[0], pieces[1]);\n}\n\nexport function repoIdToString(x: RepoId): RepoIdString {\n  return `${x.owner}/${x.name}`;\n}\n","// @flow\nimport fetch from \"cross-fetch\";\nimport {decode as base64Decode} from \"base-64\";\n\nimport {Ledger} from \"../../core/ledger/ledger\";\nimport type {GithubToken} from \"../../plugins/github/token\";\nimport {\n  type RepoIdString,\n  type RepoId,\n  stringToRepoId,\n} from \"../../plugins/github/repoId\";\nimport type {LedgerStorage} from \"../ledgerManager\";\n\nconst GET_LEDGER_QUERY = `\nquery getLedger($owner: String!, $repo: String!, $expression:String!) {\n  repository(owner: $owner, name: $repo) {\n    object(expression: $expression) {\n      ... on Blob {\n        oid\n      }\n    }\n  }\n}\n`;\n\ntype CreateBlobRes = {\n  sha: string,\n  url: string,\n};\n\ntype Opts = {\n  apiToken: GithubToken,\n  repo: RepoIdString,\n  branch: string,\n};\n\nexport class GithubStorage implements LedgerStorage {\n  static ENDPOINT: string = \"https://api.github.com\";\n\n  constructor(opts: Opts) {\n    this._token = opts.apiToken;\n    this._repoId = stringToRepoId(opts.repo);\n    this._branch = opts.branch;\n  }\n\n  _token: GithubToken;\n  _repoId: RepoId;\n  _branch: string;\n\n  _getRepoEndpoint(): string {\n    const {owner, name} = this._repoId;\n    return `${GithubStorage.ENDPOINT}/repos/${owner}/${name}`;\n  }\n\n  async read(): Promise<Ledger> {\n    const options = {\n      method: \"POST\",\n      headers: {\n        Authorization: `Bearer ${this._token}`,\n      },\n      body: JSON.stringify({\n        query: GET_LEDGER_QUERY,\n        variables: {\n          owner: this._repoId.owner,\n          repo: this._repoId.name,\n          expression: `${this._branch}:data/ledger.json`,\n        },\n      }),\n    };\n\n    const result = await fetch(`${GithubStorage.ENDPOINT}/graphql`, options);\n\n    const {data} = await result.json();\n    const blobSha = data.repository.object.oid;\n\n    const ledgerBlobRes = await fetch(\n      `${this._getRepoEndpoint()}/git/blobs/${blobSha}`,\n      {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${this._token}`,\n        },\n      }\n    );\n    const ledgerDataBase64 = await ledgerBlobRes.json();\n\n    const rawLedger = base64Decode(ledgerDataBase64.content);\n\n    return Ledger.parse(rawLedger);\n  }\n\n  async write(ledger: Ledger, message?: string) {\n    const ledgerData = ledger.serialize();\n\n    // Get latest commit hash of target branch\n    const targetBranchResult = await fetch(\n      `${this._getRepoEndpoint()}/git/ref/heads/${this._branch}`,\n      {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${this._token}`,\n        },\n      }\n    );\n\n    const targetBranchData = await targetBranchResult.json();\n    const baseCommit = targetBranchData.object.sha;\n\n    // Create a new tree from the latest commit and update the ledger blob\n    const uploadLedgerBlobResult = await fetch(\n      `${this._getRepoEndpoint()}/git/trees`,\n      {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${this._token}`,\n        },\n        body: JSON.stringify({\n          tree: [\n            {\n              content: ledgerData,\n              type: \"blob\",\n              path: \"data/ledger.json\",\n              mode: \"100644\", // see https://docs.github.com/en/rest/reference/git#create-a-tree\n            },\n          ],\n          base_tree: baseCommit,\n        }),\n      }\n    );\n\n    const uploadLedgerBlobTree: CreateBlobRes = await uploadLedgerBlobResult.json();\n\n    // Create a commit with the new tree on top of the target branch\n    const commitLedgerResult = await fetch(\n      `${this._getRepoEndpoint()}/git/commits`,\n      {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${this._token}`,\n        },\n        body: JSON.stringify({\n          message: `Ledger Update${message ? `: ${message}` : \"\"}`,\n          tree: uploadLedgerBlobTree.sha,\n          parents: [baseCommit],\n          author: {\n            name: \"credbot\",\n            email: \"credbot@users.noreply.github.com\",\n          },\n        }),\n      }\n    );\n    const newLedgerCommit = await commitLedgerResult.json();\n\n    // Update the target branch to point to the new commit\n    await fetch(`${this._getRepoEndpoint()}/git/refs/heads/${this._branch}`, {\n      method: \"PATCH\",\n      headers: {\n        Authorization: `Bearer ${this._token}`,\n      },\n      body: JSON.stringify({\n        sha: newLedgerCommit.sha,\n      }),\n    });\n  }\n}\n","// @flow\n\nimport * as C from \"./combo\";\n\n/**\n * We have a convention of using TimestampMs as our default representation.\n * However TimestampISO has the benefit of being human readable / writable,\n * so it's used for serialization and display as well.\n * We'll validate types at runtime, as there's a fair chance we'll use these\n * functions to parse data that came from a Flow `any` type (like JSON).\n */\n\n// A timestamp representation in ms since epoch.\nexport type TimestampMs = number;\n\n// A timestamp representation in ISO 8601 format.\nexport opaque type TimestampISO: string = string;\n\n/**\n * Creates a TimestampISO from a TimestampMs-like input.\n *\n * Since much of the previous types have used `number` as a type instead of\n * TimestampMs. Accepting `number` will give an easier upgrade path, rather\n * than a forced refactor across the codebase.\n */\nexport function toISO(timestampLike: TimestampMs | number): TimestampISO {\n  const timestampMs: TimestampMs = validateTimestampMs(timestampLike);\n  return new Date(timestampMs).toISOString();\n}\n\n/**\n * Creates a TimestampMs from a TimestampISO.\n */\nexport function fromISO(timestampISO: TimestampISO | string): TimestampMs {\n  if (typeof timestampISO !== \"string\") {\n    throw new TypeError(\n      `TimestampISO values must be strings, ` +\n        `received: ${String(timestampISO)}`\n    );\n  }\n  const parsed = Date.parse(timestampISO);\n  if (Number.isNaN(parsed)) {\n    throw new RangeError(\n      `Could not parse TimestampISO, are you sure it's a valid ISO format? ` +\n        `received: ${String(timestampISO)}`\n    );\n  }\n  return parsed;\n}\n\n/**\n * Validate that a number is potentially a valid timestamp.\n *\n * This checks that the number is a finite integer, which avoids some potential\n * numbers that are not valid timestamps.\n */\nexport function validateTimestampMs(timestampMs: number): TimestampMs {\n  const asNumber = Number(timestampMs);\n  if (\n    timestampMs === null ||\n    timestampMs === undefined ||\n    !Number.isInteger(asNumber)\n  ) {\n    throw new TypeError(\n      `Numbers representing TimestampMs values must be finite integers, ` +\n        `received: ${String(timestampMs)}`\n    );\n  }\n  return new Date(asNumber).valueOf();\n}\n\nexport function validateTimestampISO(timestampISO: string): TimestampISO {\n  // Verify that it can be converted without throwing an error\n  fromISO(timestampISO);\n  return timestampISO;\n}\n\nexport const timestampMsParser: C.Parser<TimestampMs> = C.fmap(\n  C.number,\n  validateTimestampMs\n);\nexport const timestampISOParser: C.Parser<TimestampISO> = C.fmap(\n  C.string,\n  validateTimestampISO\n);\n","// @flow\n\n/**\n * This module defines configuration for the Dependencies system, a system\n * which allows a project to mint excess Cred for its dependencies.\n *\n * To learn about the semantics of the dependencies system, read the module\n * docstring for core/bonusMinting.js\n *\n * At a high level, this config type allows the instance maintainer to specify\n * identities (usually PROJECT-type identities) to mint extra Cred over time,\n * as a fraction of the baseline instance Cred.\n *\n * In the future, we'll likely build a UI to manage this config. However, right\n * now it's designed for hand-editability. Also, we really want to be able to\n * ship a default config that adds a SourceCred account (if one doesn't already\n * exist), activates it (if it was just created), and then flows it some Cred.\n *\n * With that in mind, here's how the config works:\n * - User makes a new config, specifying a name for the identity. The user does\n *   not manually write in an id.\n * - The config is validated against the ledger. If the config has an id, we\n *   verify that there's a matching identity in the ledger with that name\n *   (erroring if not). If the config doesn't have an id, we check if there is\n *   an identity in the ledger with that name. If there is, we write the id\n *   into the config. If there isn't, we create a new identity with the name,\n *   activate it (if told to do so by the config), and then write the id into\n *   the config.\n * - Afterwards, we save the config (which is guaranteed to have an id) back to\n *   disk.\n *\n * You'll note that the state in the config is a mix of human generated\n * (choosing the name) and automatically maintained (the id). It's something of\n * a weird compromise, but it accomplishes the design objective of having state\n * that's easy for humans to write by hand, but also tracks the vital\n * information by identity id (which is immutable) rather than by name (which\n * is re-nameable).\n *\n * Note that at present, when the identity in question is re-named, the config\n * must be manually updated to account for the rename. In the future (when the\n * config is automatically maintained) we'll remove this requirement. (Likely\n * we'll stop tracking the identities by name at all in the config; that's an\n * affordance to make the files generatable by hand.)\n */\nimport * as C from \"../util/combo\";\nimport {Ledger} from \"../core/ledger/ledger\";\nimport {\n  type TimestampISO,\n  timestampISOParser,\n  fromISO,\n  toISO,\n} from \"../util/timestamp\";\nimport {type IdentityId, type Name, nameParser} from \"../core/identity\";\nimport {parser as uuidParser} from \"../util/uuid\";\nimport {type BonusPolicy} from \"../core/bonusMinting\";\n\n// A finite nonnegative value (usually in range [0, 1]) which specifies how\n// much extra Cred to mint for a given dependency, as a proportion of the raw\n// contributor Cred in the instance. Thus, if a dependency has a weight of 0.1,\n// then extra Cred will be minted for the dependency equal to 10% of the raw Cred\n// in the instance. (Raw Cred being Cred before doing any dependency minting.)\nexport type DependencyWeight = number;\n\nexport type DependencyConfig = {|\n  // The id of the dependency in the ledger. If unset, it will be set automatically\n  // the first time the dependency config is used in cred analysis.\n  +id?: IdentityId,\n  // The Name of the dependency in question. This is intended as a convenience\n  // for the user; the user can write in a name here, and it will be used to\n  // automatically add the dependency to the ledger (if needed) and then to\n  // automatically add the id to the config.\n  //\n  // If the id is set on the config, and the name doesn't match the identity name\n  // in the ledger, an error will be thrown. This is to prevent users from changing\n  // the name here in the config and (incorrectly) believing that suffices to start\n  // flowing Cred to a new identity, after the id has already been set.\n  //\n  // Thus, if the dependency identity is re-named in the ledger, this file will\n  // also need to be edited to reflect the new name.\n  +name: Name,\n  // The time periods for which we're minting Cred. Each period has a start time and a\n  // mint weight; it is assumed to end as soon as the next period begins.\n  +periods: $ReadOnlyArray<MintPeriod>,\n  // Whether the dependency should be \"active\" for Grain collection by default.\n  // If this is true, then when the corresponding account is auto-created in the\n  // ledger, it will also be automatically activated.\n  // (Mostly included so we can have SourceCred default opt-in to receiving Grain\n  // in new instances.)\n  // Defaults to false if unset.\n  +autoActivateOnIdentityCreation?: boolean,\n\n  // If this is set, then a default time period will be injected in the\n  // dependency config with the weight set to this value (e.g. 0.05 = 5% additional cred minted).\n  // (Mostly included so we can have SourceCred receiving cred by default)\n  // Does not inject a starting period if unset.\n  +autoInjectStartingPeriodWeight?: number,\n|};\n\nexport type MintPeriod = {|\n  +startTime: TimestampISO,\n  +weight: number,\n|};\n\nexport const mintPeriodParser: C.Parser<MintPeriod> = C.object({\n  startTime: timestampISOParser,\n  weight: C.number,\n});\n\nfunction checkWeightValid(x: number): number {\n  if (x < 0) throw new Error(`must be a non-negative number, got ${x}`);\n  return x;\n}\n\nexport const dependencyConfigParser: C.Parser<DependencyConfig> = C.object(\n  {\n    name: nameParser,\n    periods: C.array(mintPeriodParser),\n  },\n  {\n    id: uuidParser,\n    autoActivateOnIdentityCreation: C.boolean,\n    autoInjectStartingPeriodWeight: C.fmap(C.number, checkWeightValid),\n  }\n);\n\nexport type DependenciesConfig = $ReadOnlyArray<DependencyConfig>;\nexport const parser: C.Parser<DependenciesConfig> = C.array(\n  dependencyConfigParser\n);\n\nexport function ensureIdentityExists(\n  dep: DependencyConfig,\n  ledger: Ledger\n): DependencyConfig {\n  const depId = dep.id;\n  if (depId == null) {\n    const existingAccount = ledger.accountByName(dep.name);\n    if (existingAccount != null) {\n      // Already created an account; let's just return a config with the id\n      // set.\n      const id = existingAccount.identity.id;\n      return {...dep, id};\n    } else {\n      // Create a new Identity for this dependency.\n      const id = ledger.createIdentity(\"PROJECT\", dep.name);\n      if (dep.autoActivateOnIdentityCreation) {\n        ledger.activate(id);\n      }\n      const weight = dep.autoInjectStartingPeriodWeight;\n      if (weight != null && !dep.periods.length) {\n        return {\n          ...dep,\n          id,\n          periods: [\n            {\n              \"startTime\": toISO(Date.now()),\n              weight,\n            },\n          ],\n        };\n      }\n      return {...dep, id};\n    }\n  } else {\n    // Will throw if the id is not in the ledger.\n    const identity = ledger.account(depId).identity;\n    if (identity.name !== dep.name) {\n      throw new Error(\n        `dependency name discrepancy: dep has name ${dep.name} in ` +\n          `config, but name ${identity.name} in the ledger. ` +\n          `if you deliberately renamed this dep in the ledger, please re-name it in the config as well.`\n      );\n    }\n    return dep;\n  }\n}\n\nexport function toBonusPolicy(\n  config: DependencyConfig,\n  ledger: Ledger\n): BonusPolicy {\n  const {id} = config;\n  if (id == null) {\n    throw new Error(\n      `cannot convert config to policy before it has an id. ensureIdentityExists must be called first.`\n    );\n  }\n  const address = ledger.account(id).identity.address;\n  const periods = config.periods.map(({startTime, weight}) => ({\n    weight,\n    startTimeMs: fromISO(startTime),\n  }));\n  return {address, periods};\n}\n","// @flow\n\n/**\n * This module adds a system for specifying \"bonus minting\" policies. The core\n * idea for bonus minting is that extra Cred is conjured out of thin air (as a\n * \"bonus\") and distributed to a chosen recipient. This system is intended to\n * be used for minting Cred for project-level dependencies. For example, we\n * would like users of SourceCred to mint some extra Cred and flow it to the\n * SourceCred project.\n *\n * In CredRank, we handle this by creating extra nodes in the graph which mint\n * the bonus Cred, and it flows directly from those nodes to the intended\n * recipients.\n *\n * The total amount of Cred that may be minted is unbounded; for example, if\n * the dependencies have a total weight of 0.2, then the total Cred will be\n * 120% of the base Cred, but if the dependencies had a total weight of 1, then\n * the total Cred would be double the base Cred. This was a deliberate design\n * decision so that dependency minting would feel \"non-rival\", i.e. there is\n * not a fixed budget of dependency cred that must be split between the\n * dependencies. In some cases, it may be reasonable for the total Cred flowing\n * to a project's dependencies to be larger than the total Cred flowing\n * directly to the project's contributors; consider that the total amount of\n * time/effort invested in building all the dependencies may be orders of\n * magnitude larger than investment in the project itself.\n */\nimport {\n  type NodeAddressT,\n  NodeAddress,\n  type Node as GraphNode,\n  type Edge as GraphEdge,\n  type EdgeAddressT,\n  EdgeAddress,\n  Graph,\n} from \"./graph\";\nimport {type WeightedGraph as WeightedGraphT} from \"./weightedGraph\";\nimport {empty as emptyWeights, type EdgeWeight} from \"./weights\";\nimport {type TimestampMs} from \"../util/timestamp\";\nimport {type IntervalSequence, type Interval, partitionGraph} from \"./interval\";\nimport {nodeWeightEvaluator} from \"./algorithm/weightEvaluator\";\n\nexport type BonusPolicy = {|\n  // The node address that will receieve the extra minted Cred\n  +address: NodeAddressT,\n  // Information on how the Cred minting weight varies in time.\n  +periods: $ReadOnlyArray<BonusPeriod>,\n|};\n\nexport type BonusPeriod = {|\n  // What proportion of the project's raw Cred should be minted to this\n  // dependency during this period. For example, if the weight is 0.05, and the\n  // project has a pre-dependencies total Cred of 1000 in a given interval,\n  // then this dependency will receive an additional 50 Cred.\n  +weight: number,\n  // Timestamp or number because we allow -Infinity as the first \"timestamp\"\n  // Within any policy, the period timestamps must be in sorted order, or else\n  // an error will be thrown.\n  +startTimeMs: TimestampMs | number,\n|};\n\nexport type ComputedBonusMinting = $ReadOnlyArray<BonusMintOverTime>;\n\nexport type BonusMintOverTime = {|\n  +recipient: GraphNode,\n  // Recipient's bonus minting in each interval.\n  +bonusIntervals: $ReadOnlyArray<BonusInterval>,\n|};\n\nexport type BonusInterval = {|\n  +interval: Interval,\n  // The amount of bonus Cred to mint in this interval.\n  +amount: number,\n|};\n\nexport function computeBonusMinting(\n  wg: WeightedGraphT,\n  policies: $ReadOnlyArray<BonusPolicy>\n): ComputedBonusMinting {\n  const mintIntervals = _computeMintIntervals(wg);\n  return policies.map((policy) => {\n    const recipient = wg.graph.node(policy.address);\n    if (recipient == null) {\n      throw new Error(\n        `bonus recipient not in graph: ${NodeAddress.toString(policy.address)}`\n      );\n    }\n    return {\n      recipient,\n      bonusIntervals: _bonusIntervals(mintIntervals, policy.periods),\n    };\n  });\n}\n\nexport function _bonusIntervals(\n  mintIntervals: $ReadOnlyArray<MintInterval>,\n  periods: $ReadOnlyArray<BonusPeriod>\n): $ReadOnlyArray<BonusInterval> {\n  let nextIndex = 0;\n  let weight = 0;\n\n  return mintIntervals.map(({interval, totalMint}) => {\n    while (\n      nextIndex < periods.length &&\n      periods[nextIndex].startTimeMs <= interval.startTimeMs\n    ) {\n      weight = periods[nextIndex].weight;\n      nextIndex++;\n    }\n    return {\n      interval,\n      amount: totalMint * weight,\n    };\n  });\n}\n\nexport function createBonusGraph(\n  bonusMints: ComputedBonusMinting\n): WeightedGraphT {\n  const graph = new Graph();\n  const weights = emptyWeights();\n  for (const {recipient, bonusIntervals} of bonusMints) {\n    graph.addNode(recipient);\n    for (const {interval, amount} of bonusIntervals) {\n      if (amount === 0) {\n        continue;\n      }\n      graph.addNode(bonusNode(recipient, interval));\n      graph.addEdge(bonusEdge(recipient, interval));\n      weights.nodeWeights.set(bonusNodeAddress(recipient, interval), amount);\n    }\n  }\n  weights.edgeWeights.set(BONUS_EDGE_PREFIX, BONUS_EDGE_WEIGHT);\n  return {graph, weights};\n}\n\nexport const BONUS_NODE_PREFIX: NodeAddressT = NodeAddress.fromParts([\n  \"sourcecred\",\n  \"core\",\n  \"BONUS\",\n]);\n\nexport function bonusNodeAddress(\n  recipient: GraphNode,\n  interval: Interval\n): NodeAddressT {\n  return NodeAddress.append(\n    BONUS_NODE_PREFIX,\n    String(interval.startTimeMs),\n    ...NodeAddress.toParts(recipient.address)\n  );\n}\n\nexport function bonusNode(recipient: GraphNode, interval: Interval): GraphNode {\n  return {\n    address: bonusNodeAddress(recipient, interval),\n    timestampMs: interval.startTimeMs,\n    description: `bonus minting for ${recipient.description} starting ${interval.startTimeMs}`,\n  };\n}\n\nexport const BONUS_EDGE_PREFIX: EdgeAddressT = EdgeAddress.fromParts([\n  \"sourcecred\",\n  \"core\",\n  \"BONUS\",\n]);\n\nexport const BONUS_EDGE_WEIGHT: EdgeWeight = Object.freeze({\n  forwards: 1,\n  // setting the backward weight to non-zero has a material effect on the\n  // resultant Cred scores, since it means that the bonus minting node acts as\n  // a mini Cred accumulator in a tight loop with the recipient. Setting this\n  // to 0 results in somewhat lower Cred for the mint recipient, and I like\n  // biasing conservatively here.\n  backwards: 0,\n});\n\nexport function bonusEdgeAddress(\n  recipient: GraphNode,\n  interval: Interval\n): EdgeAddressT {\n  return EdgeAddress.append(\n    BONUS_EDGE_PREFIX,\n    String(interval.startTimeMs),\n    ...NodeAddress.toParts(recipient.address)\n  );\n}\n\nexport function bonusEdge(recipient: GraphNode, interval: Interval): GraphEdge {\n  return {\n    src: bonusNodeAddress(recipient, interval),\n    dst: recipient.address,\n    address: bonusEdgeAddress(recipient, interval),\n    timestampMs: interval.startTimeMs,\n  };\n}\n\n// How much total Cred minting occured in a particular interval, for a particular graph?\nexport type MintInterval = {|\n  +interval: Interval,\n  +totalMint: number,\n|};\nexport function _computeMintIntervals(\n  wg: WeightedGraphT\n): $ReadOnlyArray<MintInterval> {\n  const nwe = nodeWeightEvaluator(wg.weights);\n  const partition = partitionGraph(wg.graph);\n  return partition.map(({interval, nodes}) => {\n    let totalMint = 0;\n    for (const {address} of nodes) {\n      totalMint += nwe(address);\n    }\n    return {interval, totalMint};\n  });\n}\n\n// ========================= DEPRECATED =========================\n// Everything below this line has TimelineCred specific logic, and will be\n// removed when we switch to CredRank.\n\n/**\n * The ProcessedBonusPolicy is a BonusPolicy which has\n * been transformed so that it matches the abstractions available when\n * we're doing raw cred computation: instead of an address, we track an index\n * into the canonical node order, and rather than arbitrary client-provided\n * periods, we compute the weight for each Interval.\n *\n * TODO(#1686, @decentralion): Remove this once we switch to CredRank.\n */\nexport type ProcessedBonusPolicy = {|\n  +nodeIndex: number,\n  +intervalWeights: $ReadOnlyArray<number>,\n|};\n\nexport function processBonusPolicy(\n  policy: BonusPolicy,\n  nodeOrder: $ReadOnlyArray<NodeAddressT>,\n  intervals: IntervalSequence\n): ProcessedBonusPolicy {\n  const {address, periods} = policy;\n  const nodeIndex = nodeOrder.indexOf(address);\n  if (nodeIndex === -1) {\n    throw new Error(\n      `address not in nodeOrder: ${NodeAddress.toString(address)}`\n    );\n  }\n  const intervalStarts = intervals.map((i) => i.startTimeMs);\n  const intervalWeights = _alignPeriodsToIntervals(periods, intervalStarts);\n  return {nodeIndex, intervalWeights};\n}\n\nexport function _alignPeriodsToIntervals(\n  periods: $ReadOnlyArray<BonusPeriod>,\n  intervalStarts: $ReadOnlyArray<TimestampMs>\n): $ReadOnlyArray<number> {\n  if (periods.length === 0) {\n    return intervalStarts.map(() => 0);\n  }\n  // Validate the periods to make sure they are in order and the weights\n  // are finite and non-negative\n  let currentStartTimeMs = periods[0].startTimeMs;\n  for (const {startTimeMs, weight} of periods) {\n    if (currentStartTimeMs > startTimeMs) {\n      throw new Error(\n        `mint periods out of order: ${currentStartTimeMs} > ${startTimeMs}`\n      );\n    }\n    currentStartTimeMs = startTimeMs;\n    if (weight < 0 || !Number.isFinite(weight)) {\n      throw new Error(`invalid mint weight: ${weight}`);\n    }\n  }\n  let currentPeriodIndex = -1;\n  let currentWeight = 0;\n  // We always return the weight of the latest period whose startTimeMs was\n  // less than or equal to the interval's start.\n  return intervalStarts.map((s) => {\n    while (\n      currentPeriodIndex < periods.length - 1 &&\n      periods[currentPeriodIndex + 1].startTimeMs <= s\n    ) {\n      currentPeriodIndex++;\n      currentWeight = periods[currentPeriodIndex].weight;\n    }\n    return currentWeight;\n  });\n}\n","// @flow\n\nimport {sum} from \"d3-array\";\nimport findLast from \"lodash.findlast\";\nimport * as NullUtil from \"../util/null\";\nimport * as Weights from \"./weights\";\nimport * as C from \"../util/combo\";\nimport {type NodeAddressT, NodeAddress} from \"./graph\";\nimport {type WeightedGraph as WeightedGraphT} from \"./weightedGraph\";\nimport {\n  nodeWeightEvaluator,\n  type NodeWeightEvaluator,\n} from \"./algorithm/weightEvaluator\";\nimport {partitionGraph, type GraphIntervalPartition} from \"./interval\";\nimport type {TimestampMs} from \"../util/timestamp\";\n\n/**\n * This module adds logic for imposing a Cred minting budget on a graph.\n *\n * Basically, we allow specifiying a budget where nodes matching a particular\n * address may mint at most a fixed amount of Cred per period. Since every\n * plugin writes nodes with a distinct prefix, this may be used to specify\n * plugin-level Cred budgets. The same mechanism could also be used to\n * implement more finely-grained budgets, e.g. for specific node types.\n */\n\nexport type IntervalLength = \"WEEKLY\";\n\nexport const intervalLengthParser: C.Parser<IntervalLength> = C.exactly([\n  \"WEEKLY\",\n]);\n\nexport type BudgetPeriod = {|\n  // When this budget policy starts\n  +startTimeMs: TimestampMs,\n  // How much Cred can be minted per interval\n  +budgetValue: number,\n|};\n\nexport type BudgetEntry = {|\n  +prefix: NodeAddressT,\n  +periods: $ReadOnlyArray<BudgetPeriod>,\n|};\n\nexport type Budget = {|\n  +entries: $ReadOnlyArray<BudgetEntry>,\n  +intervalLength: IntervalLength,\n|};\n\n/**\n * Given a WeightedGraph and a budget, return a new WeightedGraph which ensures\n * that the budget constraint is satisfied.\n *\n * Concretely, this means that the weights in the Graph may be reduced, as\n * necessary, in order to bring the total minted Cred within an interval down\n * to the budget's requirements.\n */\nexport function applyBudget(\n  wg: WeightedGraphT,\n  budget: Budget\n): WeightedGraphT {\n  // It'd be really nice to support the case where some budgets are subsets of\n  // other budgets. As an example, imagine saying: The GitHub plugin can mint\n  // at most 1000 Cred per week, and within that, this particular GitHub repo\n  // can mint at most 200, that one can mint at most 400, etc. However, I\n  // didn't want to figure out the math for solving those constraints just yet,\n  // since the initial use case of limiting minting per plugin doesn't need to\n  // worry about intersections between the budgets.\n  //\n  // So let's just throw an error if there are any overlapping prefixes for\n  // now, and we can improve the implementation later once we want to do more\n  // sophisticated budget policies.\n  if (_anyCommonPrefixes(budget.entries.map((x) => x.prefix))) {\n    throw new Error(`budget prefix conflict detected`);\n  }\n  if (budget.intervalLength !== \"WEEKLY\") {\n    throw new Error(`non-weekly budgets not supported`);\n  }\n\n  const reweighting = _computeReweighting(wg, budget);\n  return _reweightGraph(wg, reweighting);\n}\n\nexport type AddressWeight = {|+address: NodeAddressT, +weight: number|};\n\n// Interpreted as an array of mutiplicative weight changes,\n// i.e. for each AddressWeight, the node at the address\n// should be re-weighted by the corresponding weight\nexport type Reweighting = $ReadOnlyArray<AddressWeight>;\n\n/**\n * Given the WeightedGraph and the Budget, returns an array of every {addres,\n * weight} pair where the address needs to be re-weighted in order to satisfy\n * the budget constraint.\n */\nexport function _computeReweighting(\n  wg: WeightedGraphT,\n  budget: Budget\n): Reweighting {\n  const evaluator = nodeWeightEvaluator(wg.weights);\n  const partition = partitionGraph(wg.graph);\n  const reweightingsForEachBudget: $ReadOnlyArray<Reweighting> = budget.entries.map(\n    (entry) => _reweightingForEntry({evaluator, partition, entry})\n  );\n  return [].concat(...reweightingsForEachBudget);\n}\n\n/**\n * Given a the time-partitioned graph, the weight evaluator, and a particular\n * entry for the budget, return every {address, weight} pair where the\n * corresponding address needs to be reweighted in order to satisfy this budget\n * entry.\n */\nexport function _reweightingForEntry(args: {\n  evaluator: NodeWeightEvaluator,\n  partition: GraphIntervalPartition,\n  entry: BudgetEntry,\n}): Reweighting {\n  const {evaluator, partition, entry} = args;\n  const {periods, prefix} = entry;\n\n  // Check that the budget's periods are in time-sorted order.\n  if (!inSortedOrder(periods.map((x) => x.startTimeMs))) {\n    throw new Error(\n      `budget for ${NodeAddress.toString(prefix)} has periods out-of-order`\n    );\n  }\n\n  const results = [];\n  for (const {interval, nodes} of partition) {\n    const budgetValue = _findCurrentBudgetValue(periods, interval.startTimeMs);\n    const addresses = nodes.map((n) => n.address);\n    const filteredAddresses = addresses.filter((a) =>\n      NodeAddress.hasPrefix(a, prefix)\n    );\n    const addressWeights = filteredAddresses.map((a) => ({\n      address: a,\n      weight: evaluator(a),\n    }));\n    const normalizer = _computeWeightNormalizer(addressWeights, budgetValue);\n    // If the normalizer is exactly 1, no re-weighting is necessary.\n    if (normalizer !== 1) {\n      // Re-weight every address matching this budget entry\n      // equally.\n      for (const address of filteredAddresses) {\n        results.push({address, weight: normalizer});\n      }\n    }\n  }\n  return results;\n}\n\n/**\n * Given a WeightedGraph and the reweighting, return a new WeightedGraph which\n * has had its weights updated accordingly, without mutating the original\n * WeightedGraph.\n */\nexport function _reweightGraph(\n  wg: WeightedGraphT,\n  reweighting: Reweighting\n): WeightedGraphT {\n  const newWeights = Weights.copy(wg.weights);\n  for (const {address, weight} of reweighting) {\n    const existingWeight = NullUtil.orElse(\n      wg.weights.nodeWeights.get(address),\n      1\n    );\n    newWeights.nodeWeights.set(address, existingWeight * weight);\n  }\n\n  return {graph: wg.graph.copy(), weights: newWeights};\n}\n\n/**\n * Given an array of node addresses, return true if any node address is a prefix\n * of another address.\n *\n * This method runs in O(n^2). This should be fine because it's intended to be\n * run on small arrays (~one per plugin). If this becomes a performance\n * hotpsot, we can write a more performant version.\n */\nexport function _anyCommonPrefixes(\n  addresses: $ReadOnlyArray<NodeAddressT>\n): boolean {\n  for (let i = 0; i < addresses.length; i++) {\n    for (let j = i; j < addresses.length; j++) {\n      if (i === j) {\n        continue;\n      }\n      // Check both if A is prefix of B and if B is prefix of A\n      // (not symmetrical)\n      if (NodeAddress.hasPrefix(addresses[i], addresses[j])) {\n        return true;\n      }\n      if (NodeAddress.hasPrefix(addresses[j], addresses[i])) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nfunction inSortedOrder(xs: $ReadOnlyArray<number>): boolean {\n  let last = -Infinity;\n  for (const x of xs) {\n    if (x < last) {\n      return false;\n    }\n    last = x;\n  }\n  return true;\n}\n\n// Given an array of periods, and a timestamp, choose the last period whose\n// startTimeMs is <= the timestamp, and then return its budget. Returns\n// Infinity if there is no matching budget.\nexport function _findCurrentBudgetValue(\n  periods: $ReadOnlyArray<BudgetPeriod>,\n  timestamp: TimestampMs\n): number {\n  const currentPeriod = findLast(\n    periods,\n    (period) => period.startTimeMs <= timestamp\n  );\n  return currentPeriod ? currentPeriod.budgetValue : Infinity;\n}\n\n// For the given array of AddressWeights, and a budget that they must fit within, return\n// a normalization coefficient which can be used to reweight all of these AddressWeights\n// so that they fit within the budget. Will be a number in the range [0, 1], where 0\n// implies the budget is 0 (so everything gets set to 0) and 1 implies the AddressWeights\n// are already fitting within the budget.\nexport function _computeWeightNormalizer(\n  aws: $ReadOnlyArray<AddressWeight>,\n  budgetValue: number\n): number {\n  const totalWeight = sum(aws, (aw) => aw.weight);\n  if (totalWeight <= budgetValue) {\n    return 1;\n  } else {\n    return budgetValue / totalWeight;\n  }\n}\n","// @flow\n\nimport {sum} from \"d3-array\";\nimport * as NullUtil from \"../../util/null\";\nimport {\n  findStationaryDistribution,\n  type PagerankParams,\n  type PagerankOptions,\n} from \"../algorithm/markovChain\";\n\nimport {distributionToNodeDistribution} from \"../algorithm/graphToMarkovChain\";\n\nimport {uniformDistribution} from \"../algorithm/distribution\";\nimport {accumulatorGadget} from \"./nodeGadgets\";\nimport {\n  MarkovProcessGraph,\n  type Parameters as MarkovProcessGraphParameters,\n} from \"./markovProcessGraph\";\nimport {type PersonalAttributions} from \"./personalAttribution\";\nimport {CredGraph} from \"./credGraph\";\nimport {type WeightedGraph} from \"../weightedGraph\";\nimport {Ledger} from \"../ledger/ledger\";\nimport {graphIntervals} from \"../interval\";\n\nexport const DEFAULT_MAX_ITERATIONS = 255;\nexport const DEFAULT_CONVERGENCE_THRESHOLD = 1e-7;\nexport const DEFAULT_YIELD_AFTER_MS = 30;\nexport const DEFAULT_VERBOSE = false;\n\nconst DEFAULT_ALPHA = 0.1;\nconst DEFAULT_BETA = 0.4;\nconst DEFAULT_GAMMA_FORWARD = 0.1;\nconst DEFAULT_GAMMA_BACKWARD = 0.1;\n\n/**\n * Compute CredRank results given a WeightedGraph, a Ledger, and optional\n * parameters.\n */\nexport function credrank(\n  weightedGraph: WeightedGraph,\n  ledger: Ledger,\n  personalAttributions?: PersonalAttributions = [],\n  markovProcessGraphParameters?: $Shape<MarkovProcessGraphParameters> = {},\n  pagerankOptions?: $Shape<PagerankOptions>\n): Promise<CredGraph> {\n  const defaultParameters: MarkovProcessGraphParameters = {\n    alpha: DEFAULT_ALPHA,\n    beta: DEFAULT_BETA,\n    gammaForward: DEFAULT_GAMMA_FORWARD,\n    gammaBackward: DEFAULT_GAMMA_BACKWARD,\n  };\n\n  const parameters: MarkovProcessGraphParameters = {\n    ...defaultParameters,\n    ...markovProcessGraphParameters,\n  };\n  const participants = ledger.accounts().map(({identity}) => ({\n    description: identity.name,\n    address: identity.address,\n    id: identity.id,\n  }));\n  const intervals = graphIntervals(weightedGraph.graph);\n  const mpg = MarkovProcessGraph.new({\n    weightedGraph,\n    participants,\n    parameters,\n    intervals,\n    personalAttributions,\n  });\n  return markovProcessGraphPagerank(mpg, pagerankOptions);\n}\n\n/**\n * Given a MarkovProcessGraph, compute PageRank scores on it.\n */\nexport async function markovProcessGraphPagerank(\n  mpg: MarkovProcessGraph,\n  options?: $Shape<PagerankOptions> = {}\n): Promise<CredGraph> {\n  const defaultOptions: PagerankOptions = {\n    maxIterations: DEFAULT_MAX_ITERATIONS,\n    convergenceThreshold: DEFAULT_CONVERGENCE_THRESHOLD,\n    yieldAfterMs: DEFAULT_YIELD_AFTER_MS,\n    verbose: DEFAULT_VERBOSE,\n  };\n  options = {...defaultOptions, ...options};\n  const osmc = mpg.toMarkovChain();\n  const params: PagerankParams = {\n    chain: osmc.chain,\n    pi0: uniformDistribution(osmc.nodeOrder.length),\n    seed: uniformDistribution(osmc.nodeOrder.length),\n    alpha: 0,\n  };\n  const distributionResult = await findStationaryDistribution(params, options);\n  const pi = distributionToNodeDistribution(\n    osmc.nodeOrder,\n    distributionResult.pi\n  );\n\n  const matchingScore = sum(\n    Array.from(mpg.nodes({prefix: accumulatorGadget.prefix})).map((n) =>\n      NullUtil.get(pi.get(n.address))\n    )\n  );\n  let totalNodeWeight = 0;\n  for (const {mint: weight} of mpg.nodes()) {\n    totalNodeWeight += weight;\n  }\n  const scores = osmc.nodeOrder.map(\n    (_, i) => (distributionResult.pi[i] / matchingScore) * totalNodeWeight\n  );\n  return new CredGraph(mpg, scores);\n}\n","// @flow\n\nimport {\n  type IdentityId,\n  type Name,\n  identityIdParser,\n  nameParser,\n} from \"../../core/identity\";\nimport {type Ledger} from \"../../core/ledger/ledger\";\nimport {\n  type TimestampISO,\n  timestampISOParser,\n  fromISO,\n} from \"../../util/timestamp\";\nimport * as C from \"../../util/combo\";\nimport {type PersonalAttributions} from \"../../core/credrank/personalAttribution\";\n\n/**\n  This type resembles the JSON schema for configuring personal attributions,\n  which allows participants to attribute their cred to other participants.\n  This feature should not be used to make cred sellable/transferable, but\n  instead is intended to allow participants to acknowledge that a portion of\n  their credited outputs are directly generated/supported by the labor of\n  others. (e.g. when a contributor has a personal assistant working behind the \n  scenes)\n */\nexport type PersonalAttributionsConfig = Array<{|\n  // The name of a participant that is flowing cred to others\n  fromParticipantName: Name,\n  // The id of the participant. Will be autopopulated if absent.\n  fromParticipantId?: IdentityId,\n  +recipients: Array<{|\n    // The name of a participant that is receiving cred\n    // from the \"fromParticipant\"\n    toParticipantName: Name,\n    // The id of the participant. Will be autopopulated if absent.\n    toParticipantId?: IdentityId,\n    // A chronological log of changes to the proportion of cred flowing from the\n    // fromParticipant to the toParticipant each epoch. Each proportion\n    // continues to be in effect each epoch until a new proportion takes effect.\n    +proportions: Array<{|\n      // The Month/Day/Year that the decimalProportion should take effect,\n      // e.g. \"1/30/2021\"\n      +startDate: TimestampISO,\n      // The 0-1 representation of the percentage of cred that should flow from\n      // the fromParticipant to the toParticipant each epoch\n      +decimalProportion: number,\n    |}>,\n  |}>,\n|}>;\n\n/**\n  Adds the IdentityIds where only IdentityNames are provided, and updates names\n  and ids to reflect the account's current identity after merging/renaming.\n */\nexport function updatePersonalAttributionsConfig(\n  config: PersonalAttributionsConfig,\n  ledger: Ledger\n): PersonalAttributionsConfig {\n  return config.map(({fromParticipantId, fromParticipantName, recipients}) => {\n    const id = fromParticipantId\n      ? ledger.account(fromParticipantId).identity.id\n      : ledger.accountByName(fromParticipantName)?.identity.id;\n    if (!id) throw new Error(`${fromParticipantName} does not exist.`);\n    const name = ledger.account(id).identity.name;\n    return {\n      fromParticipantId: id,\n      fromParticipantName: name,\n      recipients: recipients.map(\n        ({toParticipantId, toParticipantName, proportions}) => {\n          const id = toParticipantId\n            ? ledger.account(toParticipantId).identity.id\n            : ledger.accountByName(toParticipantName)?.identity.id;\n          if (!id) throw new Error(`${toParticipantName} does not exist.`);\n          const name = ledger.account(id).identity.name;\n          return {\n            toParticipantId: id,\n            toParticipantName: name,\n            proportions,\n          };\n        }\n      ),\n    };\n  });\n}\n\nexport function toPersonalAttributions(\n  config: PersonalAttributionsConfig\n): PersonalAttributions {\n  return config.map(({fromParticipantId, recipients}) => {\n    if (!fromParticipantId)\n      throw new Error(\"PersonalAttributionConfig must be updated before use.\");\n    return {\n      fromParticipantId,\n      recipients: recipients.map(({toParticipantId, proportions}) => {\n        if (!toParticipantId)\n          throw new Error(\n            \"PersonalAttributionConfig must be updated before use.\"\n          );\n        return {\n          toParticipantId,\n          proportions: proportions.map(({startDate, decimalProportion}) => ({\n            timestampMs: fromISO(startDate),\n            proportionValue: decimalProportion,\n          })),\n        };\n      }),\n    };\n  });\n}\n\nconst proportionParser = C.fmap(C.number, (n) => {\n  if (n < 0 || n > 1) {\n    throw new Error(`Proportion ${n} is not in range [0,1]`);\n  }\n  return n;\n});\n\nexport const personalAttributionsConfigParser: C.Parser<PersonalAttributionsConfig> = C.array(\n  C.object(\n    {\n      fromParticipantName: nameParser,\n      recipients: C.array(\n        C.object(\n          {\n            toParticipantName: nameParser,\n            proportions: C.array(\n              C.object({\n                startDate: timestampISOParser,\n                decimalProportion: proportionParser,\n              })\n            ),\n          },\n          {\n            toParticipantId: identityIdParser,\n          }\n        )\n      ),\n    },\n    {fromParticipantId: identityIdParser}\n  )\n);\n","// @flow\n\nimport {CredGraph} from \"../../core/credrank/credGraph\";\nimport {CredGrainView} from \"../../core/credGrainView\";\nimport {\n  type WeightedGraph,\n  merge,\n  overrideWeights,\n} from \"../../core/weightedGraph\";\nimport {\n  ensureIdentityExists,\n  toBonusPolicy,\n  type DependenciesConfig,\n} from \"../../api/dependenciesConfig\";\nimport {Ledger} from \"../../core/ledger/ledger\";\nimport {computeBonusMinting, createBonusGraph} from \"../../core/bonusMinting\";\nimport {applyBudget, type Budget} from \"../../core/mintBudget\";\nimport {type WeightsT} from \"../../core/weights\";\nimport {contractions as identityContractions} from \"../../core/identity\";\nimport {credrank as computeCredrank} from \"../../core/credrank/compute\";\nimport {\n  type PersonalAttributionsConfig,\n  updatePersonalAttributionsConfig,\n  toPersonalAttributions,\n} from \"../config/personalAttributionsConfig\";\n\nexport type CredrankInput = {|\n  +pluginGraphs: $ReadOnlyArray<WeightedGraph>,\n  +ledger: Ledger,\n  +dependencies: DependenciesConfig,\n  +weightOverrides: WeightsT,\n  +pluginsBudget: Budget | null,\n  +personalAttributions: PersonalAttributionsConfig,\n|};\n\nexport type CredrankOutput = {|\n  +credGraph: CredGraph,\n  +credGrainView: CredGrainView,\n  +ledger: Ledger,\n  +dependencies: DependenciesConfig,\n  +personalAttributions: PersonalAttributionsConfig,\n|};\n\n/**\n  A primary SourceCred API that combines the given inputs into a single\n  WeightedGraph and then runs the CredRank algorithm on it to create a CredGraph\n  containing the cred scores of nodes/participants.\n\n  Might mutate the ledger that is passed in.\n */\nexport async function credrank(input: CredrankInput): Promise<CredrankOutput> {\n  let weightedGraph = overrideWeights(\n    merge(input.pluginGraphs),\n    input.weightOverrides\n  );\n\n  // important that this happens before identity contractions\n  const dependenciesWithIds = input.dependencies.map((d) =>\n    // This mutates the ledger, adding new identities when needed.\n    ensureIdentityExists(d, input.ledger)\n  );\n  const identities = input.ledger.accounts().map((a) => a.identity);\n  const contractedGraph = weightedGraph.graph.contractNodes(\n    identityContractions(identities)\n  );\n  weightedGraph = {\n    graph: contractedGraph,\n    weights: weightedGraph.weights,\n  };\n  if (input.pluginsBudget) {\n    weightedGraph = applyBudget(weightedGraph, input.pluginsBudget);\n  }\n\n  const dependencyBonuses = dependenciesWithIds.map((d) =>\n    toBonusPolicy(d, input.ledger)\n  );\n  const bonusGraph = createBonusGraph(\n    computeBonusMinting(weightedGraph, dependencyBonuses)\n  );\n  weightedGraph = merge([weightedGraph, bonusGraph]);\n\n  const updatedPersonalAttributionsConfig = updatePersonalAttributionsConfig(\n    input.personalAttributions,\n    input.ledger\n  );\n\n  const credGraph = await computeCredrank(\n    weightedGraph,\n    input.ledger,\n    toPersonalAttributions(updatedPersonalAttributionsConfig)\n  );\n  return {\n    credGraph,\n    credGrainView: CredGrainView.fromCredGraphAndLedger(\n      credGraph,\n      input.ledger\n    ),\n    ledger: input.ledger,\n    dependencies: dependenciesWithIds,\n    personalAttributions: updatedPersonalAttributionsConfig,\n  };\n}\n","// @flow\n\nconst chalk = require(\"chalk\");\n\nexport type TaskId = string;\n\ntype MsSinceEpoch = number;\ntype ConsoleLog = (string) => void;\ntype GetTime = () => MsSinceEpoch;\n\nexport interface TaskReporter {\n  start(taskId: TaskId): TaskReporter;\n  finish(taskId: TaskId): TaskReporter;\n}\n\n/**\n * This class is a lightweight utility for reporting task progress to the\n * command line.\n *\n * - When a task is started, it's printed to the CLI with a \" GO \" label.\n * - When it's finished, it's printed with a \"DONE\" label, along with the time\n * elapsed.\n * - Tasks are tracked and represented by string id.\n * - The same task id may be re-used after the first task with that id is\n * finished.\n */\nexport class LoggingTaskReporter implements TaskReporter {\n  // Maps the task to the time\n  activeTasks: Map<TaskId, MsSinceEpoch>;\n  _consoleLog: ConsoleLog;\n  _getTime: GetTime;\n\n  constructor(consoleLog?: ConsoleLog, getTime?: GetTime) {\n    this._consoleLog = consoleLog || console.log;\n    this._getTime =\n      getTime ||\n      function () {\n        return +new Date();\n      };\n    this.activeTasks = new Map();\n  }\n\n  start(taskId: TaskId): this {\n    if (this.activeTasks.has(taskId)) {\n      throw new Error(`task ${taskId} already registered`);\n    }\n    this.activeTasks.set(taskId, this._getTime());\n    this._consoleLog(startMessage(taskId));\n    return this;\n  }\n\n  finish(taskId: TaskId): this {\n    const startTime = this.activeTasks.get(taskId);\n    if (startTime == null) {\n      throw new Error(`task ${taskId} not registered`);\n    }\n    const elapsedTime = this._getTime() - startTime;\n    this._consoleLog(finishMessage(taskId, elapsedTime));\n    this.activeTasks.delete(taskId);\n    return this;\n  }\n}\n\nexport type TaskEntry = {taskId: TaskId, type: \"START\" | \"FINISH\"};\n/**\n * SilentTaskReporter is a task reporter that collects some information, but does not\n * emit any visible notifications.\n *\n * It can be used for testing purposes, or as a default TaskReporter for cases where\n * we don't want to default to emitting anything to console.\n *\n * Rather than emitting any messages or taking timing information, it allows retrieving\n * the sequence of task updates that were sent to the reporter.\n * This makes it easy for test code to verify that the TaskReporter was sent the right\n * sequence of tasks.\n *\n * Callers can also check what tasks are still active (e.g. to verify that there are no\n * active tasks unfinished at the end of a method.)\n */\nexport class SilentTaskReporter implements TaskReporter {\n  _activeTasks: Set<TaskId>;\n  _entries: TaskEntry[];\n  constructor() {\n    this._activeTasks = new Set();\n    this._entries = [];\n  }\n  start(taskId: TaskId): this {\n    if (this._activeTasks.has(taskId)) {\n      throw new Error(`task ${taskId} already active`);\n    }\n    this._activeTasks.add(taskId);\n    this._entries.push({taskId, type: \"START\"});\n    return this;\n  }\n  finish(taskId: TaskId): this {\n    if (!this._activeTasks.has(taskId)) {\n      throw new Error(`task ${taskId} not active`);\n    }\n    this._activeTasks.delete(taskId);\n    this._entries.push({taskId, type: \"FINISH\"});\n    return this;\n  }\n  entries(): TaskEntry[] {\n    return this._entries.slice();\n  }\n  activeTasks(): TaskId[] {\n    return Array.from(this._activeTasks);\n  }\n}\n\n/**\n * ScopedTaskReporter is a higher-order task reporter\n * for generating opaque scopes meant to be passed into child contexts.\n *\n * In this case, a scope is a log prefix indicating the parent context\n * in which the current task is running.\n *\n * This allows for reliable filtering and searching on existing tasks\n * by prefix. Care should be taken to ensure that the same prefix does\n * not exist in peer task contexts, so far as error handling is concerned,\n * or a filter may incorrectly catch and finish a still-running task while\n * error-handling. This risk can be mitigated by only designating prefixes via\n * a Scoped Task Reporter, as opposed to passing prefixes into the `start`\n * and `finish` methods manually. For example, this block will always throw:\n *\n * function f(top: SilentTaskReporter) {\n *  top.start(\"my-prefix: foo\");\n *  const scoped = new ScopedTaskReporter(top, \"my-prefix\");\n *  scoped.start(\"foo\"); // Error: task my-prefix: foo already active\n * }\n */\nexport class ScopedTaskReporter implements TaskReporter {\n  _delegate: TaskReporter;\n  _prefix: string;\n\n  constructor(delegate: TaskReporter, prefix: string) {\n    this._delegate = delegate;\n    this._prefix = prefix;\n  }\n\n  _scoped(taskId: TaskId): TaskId {\n    return `${this._prefix}: ${taskId}`;\n  }\n\n  start(taskId: TaskId): this {\n    this._delegate.start(this._scoped(taskId));\n    return this;\n  }\n\n  finish(taskId: TaskId): this {\n    this._delegate.finish(this._scoped(taskId));\n    return this;\n  }\n}\n\nexport function formatTimeElapsed(elapsed: MsSinceEpoch): string {\n  if (elapsed < 0) {\n    throw new Error(\"nonegative time expected\");\n  }\n  if (elapsed < 10 * 1000) {\n    return `${elapsed}ms`;\n  }\n  const seconds = Math.round(elapsed / 1000);\n  const minutes = Math.floor(seconds / 60);\n  if (minutes === 0) return `${seconds}s`;\n  const hours = Math.floor(minutes / 60);\n  if (hours === 0) return `${minutes}m ${seconds % 60}s`;\n  const days = Math.floor(hours / 24);\n  if (days === 0) return `${hours}h ${minutes % 60}m`;\n  return `${days}d ${hours % 24}h`;\n}\n\nexport function startMessage(taskId: string): string {\n  const label = chalk.bgBlue.bold.white(\"  GO  \");\n  const message = `${label} ${taskId}`;\n  return message;\n}\n\nexport function finishMessage(taskId: string, elapsedTimeMs: number): string {\n  const elapsed = formatTimeElapsed(elapsedTimeMs);\n  const label = chalk.bgGreen.bold.white(\" DONE \");\n  const message = `${label} ${taskId}: ${elapsed}`;\n  return message;\n}\n","//@flow\n\nimport type {NodeAddressT} from \"../graph\";\nimport type {ReferenceDetector, URL} from \"./referenceDetector\";\n\n/**\n * A class for composing ReferenceDetectors. Calls ReferenceDetectors in the order\n * they're given in the constructor, returning the first NodeAddressT it encounters.\n */\nexport class CascadingReferenceDetector implements ReferenceDetector {\n  refs: $ReadOnlyArray<ReferenceDetector>;\n\n  constructor(refs: $ReadOnlyArray<ReferenceDetector>) {\n    this.refs = refs;\n  }\n\n  addressFromUrl(url: URL): ?NodeAddressT {\n    for (const ref of this.refs) {\n      const addr = ref.addressFromUrl(url);\n      if (addr) return addr;\n    }\n  }\n}\n","// @flow\n\nimport {type WeightedGraph} from \"../../core/weightedGraph\";\nimport {Ledger} from \"../../core/ledger/ledger\";\nimport type {PluginDirectoryContext} from \"../plugin\";\nimport {type PluginId} from \"../pluginId\";\nimport {Plugin} from \"../plugin\";\nimport {type TaskReporter, SilentTaskReporter} from \"../../util/taskReporter\";\nimport {CascadingReferenceDetector} from \"../../core/references/cascadingReferenceDetector\";\nimport {type ReferenceDetector} from \"../../core/references/referenceDetector\";\nimport {ensureIdentityExists} from \"../../core/ledger/identityProposal\";\n\nexport type GraphInput = {|\n  +plugins: Array<{|\n    +plugin: Plugin,\n    +directoryContext: PluginDirectoryContext,\n    +pluginId: PluginId,\n  |}>,\n  +ledger: Ledger,\n|};\n\nexport type GraphOutput = {|\n  +pluginGraphs: $ReadOnlyArray<{|\n    +pluginId: PluginId,\n    +weightedGraph: WeightedGraph,\n  |}>,\n  +ledger: Ledger,\n|};\n\n/**\n Iterates through the provided plugins, runs their `graph` and `identities`\n processes, and updates the ledger with any new IdentityProposals.\n \n Might mutate the ledger that is passed in.\n */\nexport async function graph(\n  input: GraphInput,\n  // Specifies which of the plugins in the GraphInput should be run.\n  // If omitted, all plugins in the GraphInput are run.\n  scope?: $ReadOnlyArray<PluginId>,\n  taskReporter: TaskReporter = new SilentTaskReporter()\n): Promise<GraphOutput> {\n  // Build Reference Detector\n  const rds = [];\n  for (const {pluginId, plugin, directoryContext} of input.plugins) {\n    const task = `reference detector for ${pluginId}`;\n    taskReporter.start(task);\n    const rd = await plugin.referenceDetector(directoryContext, taskReporter);\n    rds.push(rd);\n    taskReporter.finish(task);\n  }\n  rds.push(_hackyIdentityNameReferenceDetector(input.ledger));\n  const rd = new CascadingReferenceDetector(rds);\n  // Build graphs\n  const pluginGraphs = [];\n  for (const {pluginId, plugin, directoryContext} of input.plugins) {\n    if (!scope || scope.includes(pluginId)) {\n      const task = `generating graph for ${pluginId}`;\n      taskReporter.start(task);\n      pluginGraphs.push({\n        pluginId: pluginId,\n        weightedGraph: await plugin.graph(directoryContext, rd, taskReporter),\n      });\n      const identities = await plugin.identities(\n        directoryContext,\n        taskReporter\n      );\n      for (const identityProposal of identities) {\n        ensureIdentityExists(input.ledger, identityProposal);\n      }\n      taskReporter.finish(task);\n    }\n  }\n  return {\n    pluginGraphs,\n    ledger: input.ledger,\n  };\n}\n\n// Hack to support old-school (deprecated) \"initiatives files\":\n// We need to be able to parse references to usernames, e.g. \"@yalor\", so\n// we need a reference detector that will match these to identities in the\n// Ledger. This isn't a robust addressing scheme, since identities are re-nameable;\n// in v2 the initiatives plugin will be re-written to use identity node addresses instead.\n// This hack can be safely deleted once we no longer support initiatives files that refer\n// to identities by their names instead of their IDs.\nexport function _hackyIdentityNameReferenceDetector(\n  ledger: Ledger\n): ReferenceDetector {\n  const usernameToAddress = new Map(\n    ledger\n      .accounts()\n      .map((a) => [a.identity.name.toLowerCase(), a.identity.address])\n  );\n  function addressFromUrl(potentialUsername: string) {\n    const prepped = potentialUsername.replace(\"@\", \"\").toLowerCase();\n    return usernameToAddress.get(prepped);\n  }\n  return {addressFromUrl};\n}\n","// @flow\n\nimport type {GrainIntegrationFunction} from \"../core/ledger/grainIntegration\";\nimport * as C from \"../util/combo\";\n\nimport {csvIntegration} from \"@sourcecred/grain-integration-csv\";\n\nexport type GrainIntegration = {|\n  name: string,\n  function: GrainIntegrationFunction,\n|};\n\ntype AllowedDeclarations = {[pluginKey: string]: GrainIntegrationFunction};\n\nconst allowedDeclarations: AllowedDeclarations = {\n  \"csv\": csvIntegration,\n};\n\nexport function bundledGrainIntegrations(\n  integrationKey: string\n): GrainIntegrationFunction {\n  const integration = allowedDeclarations[integrationKey];\n  if (!integration)\n    throw new Error(\n      \"grain integration not found; enter a valid `integration` value in config/grain.json\"\n    );\n  return integration;\n}\n\nexport const parser: C.Parser<GrainIntegration> = C.fmap(\n  C.exactly([\"csv\"]),\n  (integrationKey) => ({\n    name: integrationKey,\n    function: bundledGrainIntegrations(integrationKey),\n  })\n);\n","// @flow\n\nimport {type DistributionPolicy} from \"../core/ledger/applyDistributions\";\nimport * as C from \"../util/combo\";\nimport * as NullUtil from \"../util/null\";\nimport * as G from \"../core/ledger/grain\";\nimport {\n  type AllocationPolicy,\n  policyConfigParser,\n} from \"../core/ledger/policies\";\nimport {\n  fromInteger as toNonnegativeGrain,\n  numberOrFloatStringParser,\n  type NonnegativeGrain,\n} from \"../core/ledger/nonnegativeGrain\";\nimport {toDiscount} from \"../core/ledger/policies/recent\";\nimport {type Name, parser as nameParser} from \"../core/identity/name\";\nimport {\n  type GrainIntegration,\n  parser as bundledGrainIntegrationParser,\n} from \"./bundledGrainIntegrations\";\n\nexport type GrainConfig = {|\n  +immediatePerWeek?: NonnegativeGrain, // (deprecated)\n  +balancedPerWeek?: NonnegativeGrain, // (deprecated)\n  +recentPerWeek?: NonnegativeGrain, // (deprecated)\n  +recentWeeklyDecayRate?: number, // (deprecated)\n  +allocationPolicies?: $ReadOnlyArray<AllocationPolicy>,\n  +maxSimultaneousDistributions?: number,\n  +sinkIdentity?: Name,\n  +processDistributions?: boolean,\n  +integration?: GrainIntegration,\n|};\n\nexport const parser: C.Parser<GrainConfig> = C.object(\n  {},\n  {\n    allocationPolicies: C.array<AllocationPolicy>(policyConfigParser),\n    maxSimultaneousDistributions: C.number,\n    immediatePerWeek: numberOrFloatStringParser,\n    balancedPerWeek: numberOrFloatStringParser,\n    recentPerWeek: numberOrFloatStringParser,\n    recentWeeklyDecayRate: C.number,\n    sinkIdentity: nameParser,\n    processDistributions: C.boolean,\n    integration: bundledGrainIntegrationParser,\n  }\n);\n\n/**\n * Create a DistributionPolicy from GrainConfig, checking that config\n * fields can form valid policies.\n *\n * Moving forward, policies will need to be passed in the `allocationPolicies`\n * parameter; however to avoid backcompatability issues, we optionally allow\n * the deprecated fields for the time being.\n */\nexport function toDistributionPolicy(x: GrainConfig): DistributionPolicy {\n  const allocationPolicies = NullUtil.orElse(x.allocationPolicies, []);\n  const POSITIVE_ZERO = toNonnegativeGrain(0);\n  const immediatePerWeek = NullUtil.orElse(x.immediatePerWeek, POSITIVE_ZERO);\n  const recentPerWeek = NullUtil.orElse(x.recentPerWeek, POSITIVE_ZERO);\n  const balancedPerWeek = NullUtil.orElse(x.balancedPerWeek, POSITIVE_ZERO);\n\n  const allocationPoliciesDeprecated = [];\n  if (G.gt(immediatePerWeek, G.ZERO)) {\n    allocationPoliciesDeprecated.push({\n      budget: immediatePerWeek,\n      policyType: \"IMMEDIATE\",\n      numIntervalsLookback: 1, // TODO(eli): no customization until after #2600.\n    });\n  }\n  if (G.gt(recentPerWeek, G.ZERO)) {\n    const {recentWeeklyDecayRate} = x;\n    if (recentWeeklyDecayRate == null) {\n      throw new Error(`no recentWeeklyDecayRate specified for recent policy`);\n    }\n    allocationPoliciesDeprecated.push({\n      budget: recentPerWeek,\n      policyType: \"RECENT\",\n      discount: toDiscount(recentWeeklyDecayRate),\n    });\n  }\n  if (G.gt(balancedPerWeek, G.ZERO)) {\n    allocationPoliciesDeprecated.push({\n      budget: balancedPerWeek,\n      policyType: \"BALANCED\",\n      numIntervalsLookback: 0, // Zero means use the whole history\n    });\n  }\n  const maxSimultaneousDistributions = NullUtil.orElse(\n    x.maxSimultaneousDistributions,\n    Infinity\n  );\n  return {\n    allocationPolicies: allocationPolicies.concat(allocationPoliciesDeprecated),\n    maxSimultaneousDistributions,\n  };\n}\n","// @flow\n\nimport {CredGraph} from \"../../core/credrank/credGraph\";\nimport {Ledger} from \"../../core/ledger/ledger\";\nimport {type CurrencyDetails} from \"../currencyConfig\";\nimport {type GrainConfig, toDistributionPolicy} from \"../grainConfig\";\nimport {type Distribution} from \"../../core/ledger/distribution\";\nimport {applyDistributions} from \"../../core/ledger/applyDistributions\";\n\nexport type GrainInput = {|\n  +credGraph: CredGraph,\n  +ledger: Ledger,\n  +grainConfig: GrainConfig,\n  +currencyDetails: CurrencyDetails,\n  allowMultipleDistributionsPerInterval?: boolean,\n|};\n\nexport type GrainOutput = {|\n  +distributions: $ReadOnlyArray<Distribution>,\n  +ledger: Ledger,\n|};\n\n/**\n  A primary SourceCred API that combines the given inputs into a list of\n  grain distributions.\n\n  May mutate the ledger that is passed in.\n */\nexport async function grain(input: GrainInput): Promise<GrainOutput> {\n  const distributionPolicy = toDistributionPolicy(input.grainConfig);\n  const distributions = applyDistributions(\n    distributionPolicy,\n    input.credGraph,\n    input.ledger,\n    +Date.now(),\n    input.allowMultipleDistributionsPerInterval || false\n  );\n  return {distributions, ledger: input.ledger};\n}\n","// @flow\n\nimport type {PluginDeclaration} from \"../analysis/pluginDeclaration\";\nimport {declaration as githubDeclaration} from \"../plugins/github/declaration\";\nimport {declaration as discourseDeclaration} from \"../plugins/discourse/declaration\";\nimport {declaration as discordDeclaration} from \"../plugins/discord/declaration\";\nimport {declaration as initiativesDeclaration} from \"../plugins/initiatives/declaration\";\nimport {declaration as ethereumDeclaration} from \"../plugins/ethereum/declaration\";\nimport {type RawInstanceConfig} from \"./rawInstanceConfig\";\nimport {type PluginId, getPluginOwner} from \"./pluginId\";\nimport {DataStorage} from \"../core/storage\";\nimport {\n  ExternalPlugin,\n  ExternalPluginIdOwner,\n} from \"../plugins/external/plugin\";\n\nexport async function getPluginDeclaration(\n  pluginId: PluginId,\n  storage: DataStorage\n): Promise<PluginDeclaration> {\n  const mapping = {\n    \"sourcecred/github\": githubDeclaration,\n    \"sourcecred/discourse\": discourseDeclaration,\n    \"sourcecred/discord\": discordDeclaration,\n    \"sourcecred/initiatives\": initiativesDeclaration,\n    \"sourcecred/ethereum\": ethereumDeclaration,\n  };\n  if (mapping[pluginId.toString()]) return mapping[pluginId.toString()];\n  if (getPluginOwner(pluginId) === ExternalPluginIdOwner)\n    return await new ExternalPlugin({pluginId, storage}).declaration();\n  throw \"Bad declaration: \" + JSON.stringify(pluginId);\n}\n\nexport async function upgradeRawInstanceConfig(\n  raw: RawInstanceConfig,\n  storage: DataStorage\n): Promise<$ReadOnlyMap<PluginId, PluginDeclaration>> {\n  const bundledPlugins = new Map();\n  for (const id of raw.bundledPlugins) {\n    const plugin = await getPluginDeclaration(id, storage);\n    if (plugin == null) {\n      throw new Error(\"bad bundled declaration: \" + JSON.stringify(id));\n    }\n    bundledPlugins.set(id, plugin);\n  }\n  return bundledPlugins;\n}\n","// @flow\n\nimport {\n  type IntervalLength,\n  type Budget,\n  type BudgetPeriod,\n  intervalLengthParser,\n} from \"../core/mintBudget\";\nimport {\n  type PluginId,\n  parser as pluginIdParser,\n  fromString as pluginIdFromString,\n} from \"./pluginId\";\nimport {\n  type TimestampISO,\n  fromISO,\n  timestampISOParser,\n} from \"../util/timestamp\";\nimport * as C from \"../util/combo\";\nimport {getPluginDeclaration} from \"./bundledDeclarations\";\nimport {DataStorage} from \"../core/storage\";\n\n/**\n * This module contains logic for setting Cred minting budgets over time on a per-plugin basis.\n * As an example, suppose we want to limit the GitHub plugin to mint only 200 Cred per week,\n * and we want the Discord plugin to mint 100 Cred per Week until Jan 1, 2020 and 200 Cred per\n * week thereafter. We could do so with the following config:\n * ```json\n * {\n *   \"intervalLength\": \"WEEKLY\",\n *   \"plugins\": {\n *     \"sourcecred/github\": [\n *        {\"startTime\": \"2018-01-01\", \"budget\": 200}\n *     ],\n *     \"sourcecred/discord\": [\n *       {\"startTime\": \"2018-01-01\", \"budget\": 100},\n *       {\"startTime\": \"2020-01-01\", \"budget\": 200},\n *     ],\n *   }\n * }\n * ```\n */\n\ntype RawPluginBudgetConfig = {|\n  +intervalLength: IntervalLength,\n  +plugins: {[PluginId]: $ReadOnlyArray<RawBudgetPeriod>},\n|};\n\ntype RawBudgetPeriod = {|\n  +startTime: TimestampISO,\n  +budget: number,\n|};\n\nconst rawPeriodParser: C.Parser<RawBudgetPeriod> = C.object({\n  startTime: timestampISOParser,\n  budget: C.number,\n});\n\nexport const rawParser: C.Parser<RawPluginBudgetConfig> = C.object({\n  intervalLength: intervalLengthParser,\n  plugins: C.dict(C.array(rawPeriodParser), pluginIdParser),\n});\n\nfunction upgradeRawPeriod(p: RawBudgetPeriod): BudgetPeriod {\n  return {budgetValue: p.budget, startTimeMs: fromISO(p.startTime)};\n}\n\nexport async function upgrade(\n  config: RawPluginBudgetConfig,\n  storage: DataStorage\n): Promise<Budget> {\n  const entries = await Promise.all(\n    Object.keys(config.plugins).map(async (key) => {\n      const id = pluginIdFromString(key);\n      const declaration = await getPluginDeclaration(id, storage);\n      if (id == null) {\n        throw new Error(`No available plugin with id ${id}`);\n      }\n      const prefix = declaration.nodePrefix;\n      const periods = config.plugins[id].map(upgradeRawPeriod);\n      return {prefix, periods};\n    })\n  );\n  return {entries, intervalLength: config.intervalLength};\n}\n","// @flow\nimport * as pluginId from \"./pluginId\";\nimport * as P from \"../util/combo\";\n\nexport type RawInstanceConfig = {|\n  // Plugin identifier, like `sourcecred/identity`. Version number is\n  // implicit from the SourceCred version. This is a stopgap until we have\n  // a plugin system that admits external, dynamically loaded\n  // dependencies.\n  +bundledPlugins: $ReadOnlyArray<pluginId.PluginId>,\n|};\n\nexport const rawParser: P.Parser<RawInstanceConfig> = P.object({\n  bundledPlugins: P.array(pluginId.parser),\n});\n","// @flow\n\n// This module reimplements Node's `require(\"path\").posix.normalize`\n// function, so that it can be bundled in the browser.\n//\n// The code is copied directly from the Node implementation in\n// `lib/path.js` at Git commit e0395247c899af101f8a1f76a8554be1ff14040a.\n// The code being copied is published under the MIT License.\n//\n// The `normalize` function and its transitive dependencies are\n// included. Flow types have been added where necessary, and the code\n// has been run through Prettier. Declarations with `var` have been\n// changed to `let` or `const`. Added comments are marked with `NOTE`.\n// The rest of the code is verbatim except where noted.\n\n// NOTE(@wchargin): The following documentation comment is adapted from\n// the Node documentation in `doc/api/path.md` (at the aforementioned\n// Git commit).\n\n/**\n * Normalize the given POSIX path, resolving \"..\" and \".\" segments.\n *\n * When multiple, sequential forward slashes are found, they are\n * replaced by a single forward slash. A trailing forward slash is\n * preserved if present, but not added if absent.\n *\n * If the path is a zero-length string, \".\" is returned, representing\n * the current working directory.\n *\n * A `TypeError` is thrown if `path` is not a string.\n */\nexport default function normalize(path: string): string {\n  assertPath(path);\n\n  if (path.length === 0) return \".\";\n\n  const isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n  const trailingSeparator =\n    path.charCodeAt(path.length - 1) === CHAR_FORWARD_SLASH;\n\n  // Normalize the path\n  path = normalizeString(path, !isAbsolute, \"/\", isPosixPathSeparator);\n\n  if (path.length === 0 && !isAbsolute) path = \".\";\n  if (path.length > 0 && trailingSeparator) path += \"/\";\n\n  if (isAbsolute) return \"/\" + path;\n  return path;\n}\n\nconst CHAR_DOT: number = 46;\nconst CHAR_FORWARD_SLASH: number = 47;\n\nfunction assertPath(path: string) {\n  if (typeof path !== \"string\") {\n    // NOTE(@wchargin): The exact error text used here has been changed\n    // from the Node version to simplify the implementation.\n    throw new TypeError(\"Path must be a string. Received \" + String(path));\n  }\n}\n\nfunction isPosixPathSeparator(code: number): boolean {\n  return code === CHAR_FORWARD_SLASH;\n}\n\n// Resolves . and .. elements in a path with directory names\n// NOTE(@wchargin): This function does not do exactly what the preceding\n// comment (from the Node source) suggests. For instance, `/a/b` becomes\n// `a/b`. Caveat lector.\n// NOTE(@wchargin): PRECONDITION(A): `path` must not be empty.\n// NOTE(@wchargin): PRECONDITION(B): `separator` must be \"/\" or \"\\\\\".\n// NOTE(@wchargin): PRECONDITION(C): `isPathSeparator` must return\n//   `true` given `separator.charCodeAt(0)`.\n// NOTE(@wchargin): PRECONDITION(D): `isPathSeparator` must return\n//   `true` given `CHAR_FORWARD_SLASH`.\nfunction normalizeString(\n  path: string,\n  allowAboveRoot: boolean,\n  separator: string,\n  isPathSeparator: (code: number) => boolean\n): string {\n  // NOTE(@wchargin): INVARIANT(E): `res` does not end with `separator`.\n  //   Proof: By induction, at initialization and at every assignment to\n  //   `res`. The base case holds because `res` is empty and `separator`\n  //   is not, by PRECONDITION(B). Assignments will be justified inline.\n  // NOTE(@wchargin):  INVARIANT(F): `res` does not contain two\n  //   consecutive separators. Proof: By induction, at initialization and\n  //   at every assignment to `res`. The base case is immediate.\n  //   Assignments will be justified inline.\n  let res = \"\";\n  let lastSegmentLength = 0;\n  // NOTE(@wchargin): INVARIANT(G): `lastSlash` is always an integer,\n  //   and `i` is always an integer. Proof: By induction. The initial\n  //   values of each are integers. The only assignment to `i` is to\n  //   increment it (`++i` in the loop declaration), which preserves\n  //   integrality. The only reassignment to `lastSlash` is to assign it\n  //   the value of `i`, which is known by induction to be an integer.\n  // NOTE(@wchargin): INVARIANT(H): Once the loop index `i` is\n  //   initialized, it holds that `lastSlash <= i`. Proof: By induction,\n  //   at initialization of `i` and at every assignment to `i` or\n  //   `lastSlash`. The base case is clear: `i` is initialized to `0`,\n  //   at which point `lastSlash` is `-1`. The only assignment to `i` is\n  //   `++i`, which preserves the invariant. The only assignments to\n  //   `lastSlash` are to set its value to `i`, which also preserve the\n  //   invariant.\n  let lastSlash = -1;\n  let dots = 0;\n  let code: number;\n  // NOTE(@wchargin): INVARIANT(I): Loop invariant:\n  //   `path.slice(lastSlash + 1, i)` does not contain a `separator`\n  //   (once `i` has been initialized). We refer to this expression as\n  //   \"the slice\". Proof: By induction: at initialization of `i`, and\n  //   at every assignment to `lastSlash`, `i`, or `path`. The base case\n  //   is clear: initially, the slice has domain `(0, 0)`, so is empty.\n  //   Assignments will be justified inline.\n  // NOTE(@wchargin): LEMMA(J): If `lastSlash` is assigned the value `i`\n  //   and neither `lastSlash` nor `i` nor `path` is modified before the\n  //   next iteration of the loop, then INVARIANT(I) is preserved both\n  //   (a) at the assignment and (b) at the iteration boundary. Proof:\n  //   At the assignment, the slice has domain `(i + 1, i)`, so is\n  //   empty. After `++i`, the slice has domain `(i + 1, i + 1)`, which\n  //   is still empty. The empty string does not contain a `separator`,\n  //   because `separator` is non-empty by PRECONDITION(B). This is\n  //   sufficient to maintain the INVARIANT(I).\n  // NOTE(@wchargin): INVARIANT(K): At the top of the loop,\n  //   `lastSlash < i`. Proof: By cases on the iteration of the loop.\n  //   For the first iteration of the loop, `lastSlash === -1` and\n  //   `i === 0`. For subsequent iterations, note that INVARIANT(H) held\n  //   at the bottom of the previous iteration of the loop, before `i`\n  //   was incremented: that is, the previous value of `lastSlash` was\n  //   less than or equal to the previous value of `i`. Since then,\n  //   `lastSlash` has not been reassigned, and `i` has been\n  //   incremented, so it follows that `lastSlash <= i - 1`, and\n  //   therefore `lastSlash < i`.\n  for (let i = 0; i <= path.length; ++i) {\n    if (i < path.length) code = path.charCodeAt(i);\n    // NOTE(@wchargin): The following cast is required because `code`\n    //   could in principle be uninitialized. However, PRECONDITION(A)\n    //   requires that the input be non-empty, which means that the\n    //   above guard `if (i < path.length)` will at some point have\n    //   taken the `true` branch, which means that `code` will have been\n    //   assigned.\n    // NOTE(@wchargin): The `then`-branch has been changed from `break;`\n    //   to `return res;` to help Flow deduce that, after this block,\n    //   `code` must be initialized. (The change is semantics-preserving\n    //   because the statement after the loop is to `return res;`.)\n    else if (isPathSeparator((code: any))) return res;\n    else code = CHAR_FORWARD_SLASH;\n\n    if (isPathSeparator(code)) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (\n          res.length < 2 ||\n          lastSegmentLength !== 2 ||\n          res.charCodeAt(res.length - 1) !== CHAR_DOT ||\n          res.charCodeAt(res.length - 2) !== CHAR_DOT\n        ) {\n          if (res.length > 2) {\n            const lastSlashIndex = res.lastIndexOf(separator);\n            // NOTE(@wchargin): The `else`-branch of this `if`-statement\n            //   is not reachable. See that branch for a proof. (The\n            //   coverage pragma was added and is not present in the\n            //   original Node source.)\n            // istanbul ignore else\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                // NOTE(@wchargin): JUSTIFICATION: This assignment\n                //   trivially preserves INVARIANT(E) and INVARIANT(F).\n                res = \"\";\n                lastSegmentLength = 0;\n              } else {\n                // NOTE(@wchargin): JUSTIFICATION: This assignment\n                // preserves INVARIANT(E):\n                //     - By control flow, we know that\n                //       `lastSlashIndex !== -1`.\n                //     - By definition of `lastIndexOf`, this means that\n                //       `res` contains a `separator` at index\n                //       `lastSlashIndex`.\n                //     - By INVARIANT(F), `res` does not contain two\n                //       consecutive `separator`s. Therefore, `res` does\n                //       not contain a `separator` at index\n                //       `lastSlashIndex - 1`.\n                //     - Therefore, the new value for `res` does not\n                //       contain a `separator` at `lastSlashIndex - 1`,\n                //       so it does not end with a `separator`.\n                // NOTE(@wchargin): JUSTIFICATION: This assignment\n                //   preserves INVARIANT(F). By INVARIANT(F), we know\n                //   inductively that `res` does not contain two\n                //   consecutive `separator`s. It is immediate that no\n                //   slice of `res` contains two consecutive\n                //   `separator`s.\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf(separator);\n              }\n              // NOTE(@wchargin): JUSTIFICATION: This assignment\n              //   preserves INVARIANT(I) by LEMMA(J).\n              lastSlash = i;\n              dots = 0;\n              // NOTE(@wchargin): JUSTIFICATION: This loop boundary\n              //   preserves INVARIANT(I) by LEMMA(J).\n              continue;\n            } else {\n              // NOTE(@wchargin): This `else`-branch was added by\n              //   @wchargin; it is not present in the original Node\n              //   source. It is unreachable. Proof: INVARIANT(E)\n              //   indicates that `res` does not end in a `separator`,\n              //   which means that `lastSlashIndex !== res.length - 1`,\n              //   which is the guard for the enclosing `if`-statement.\n              throw new Error(\n                \"normalize: invariant violation: \" +\n                  JSON.stringify({path, allowAboveRoot, separator})\n              );\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            // NOTE(@wchargin): JUSTIFICATION: This assignment trivially\n            //   preserves INVARIANT(E) and INVARIANT(F).\n            res = \"\";\n            lastSegmentLength = 0;\n            // NOTE(@wchargin): JUSTIFICATION: This assignment preserves\n            //   INVARIANT(I) by LEMMA(J).\n            lastSlash = i;\n            dots = 0;\n            // NOTE(@wchargin): JUSTIFICATION: This loop boundary\n            //   preserves INVARIANT(I) by LEMMA(J).\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          // NOTE(@wchargin): JUSTIFICATION: This assignment preserves\n          //   INVARIANT(E) because `separator` is either \"/\" or \"\\\\\" by\n          //   PRECONDITION(B), and so the new value of `res`, which\n          //   ends with \".\", does not end with `separator`.\n          // NOTE(@wchargin): JUSTIFICATION: This assignment preserves\n          //   INVARIANT(F). We know by INVARIANT(E) that `res` does not\n          //   end with a separator. Therefore, appending a `separator`\n          //   does not introduce two consecutive `separator`s, and\n          //   appending two copies of \".\" does not introduce two\n          //   consecutive separators because, by PRECONDITION(B),\n          //   `separator` is either \"/\" or \"\\\\\" and so does not contain\n          //   \".\".\n          if (res.length > 0) res += `${separator}..`;\n          // NOTE(@wchargin): JUSTIFICATION: This assignment preserves\n          //   INVARIANT(E) and INVARIANT(F) because `separator` is\n          //   either \"/\" or \"\\\\\" by PRECONDITION(B), and so does not\n          //   appear in the new value for `res` at all (either at the\n          //   end or twice consecutively).\n          else res = \"..\";\n          lastSegmentLength = 2;\n        }\n      } else {\n        // NOTE(@wchargin): JUSTIFICATION: This assignment preserves\n        // INVARIANT(D) and INVARIANT(E):\n        //   - By INVARIANT(K), `lastSlash` was less than `i` at the top\n        //     of the loop body. By control flow, neither `lastSlash`\n        //     nor `i` has since been reassigned, so it still holds that\n        //     `lastSlash < i`.\n        //   - At this point in the loop body, we have not assigned to\n        //     `lastSlash`.\n        //   - By control flow, we also have `lastSlash !== i - 1`.\n        //   - By INVARIANT(G), both `lastSlash` and `i` are integers.\n        //   - Therefore, `lastSlash < i - 1`, so `lastSlash + 1 < i`.\n        //     This indicates that the domain of the slice is nonempty;\n        //     we still must show that it is within the bounds of the\n        //     string being sliced.\n        //   - By the loop guard, `i <= path.length`.\n        //   - Therefore, `lastSlash + 1 < path.length`.\n        //   - Therefore, `path.slice(lastSlash + 1, i)` is nonempty.\n        //   - By INVARIANT(I), this slice does not contain a\n        //     `separator`.\n        //   - Because the slice is nonempty, the new value of `res`\n        //     will end in the last character of the slice, which is not a\n        //     `separator`, so INVARIANT(E) is preserved.\n        //   - Because `res` does not end with a separator, appending a\n        //     separator to `res` does not introduce two consecutive\n        //     separators. Because the slice does not contain a\n        //     separator, subsequently appending the slice also does not\n        //     introduce two consecutive separators, so INVARIANT(F) is\n        //     preserved.\n        if (res.length > 0) res += separator + path.slice(lastSlash + 1, i);\n        // NOTE(@wchargin): JUSTIFICATION: This assignment preserves\n        //   INVARIANT(E) and INVARIANT(F), because we know from\n        //   INVARIANT(I) that the slice does not contain a separator at\n        //   all, so the new value of `res` neither ends in a separator\n        //   nor contains two consecutive separators.\n        else res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      // NOTE(@wchargin): JUSTIFICATION: This assignment preserves\n      //   INVARIANT(I) by LEMMA(J).\n      lastSlash = i;\n      dots = 0;\n      // NOTE(@wchargin): JUSTIFICATION: This loop boundary preserves\n      //   INVARIANT(I) by LEMMA(J).\n    } else if (code === CHAR_DOT && dots !== -1) {\n      ++dots;\n      // NOTE(@wchargin): JUSTIFICATION: This loop boundary preserves\n      //   INVARIANT(I). We know by that `path.slice(lastSlash + 1, i)`\n      //   does not contain a separator, by induction. We know from\n      //   control flow that `code` is `CHAR_DOT`, so `path[i]` is not a\n      //   separator. Thus, `path.slice(lastSlash + 1, i + 1)` does not\n      //   contain a separator, so INVARIANT(I) holds.\n    } else {\n      dots = -1;\n      // NOTE(@wchargin): JUSTIFICATION: This loop boundary preserves\n      // INVARIANT(I):\n      //   - We know that `path.slice(lastSlash + 1, i)` does not\n      //     contain a separator, by induction.\n      //   - We know from control flow that `!isPathSeparator(code)`.\n      //   - We also know from control flow that `code` is either\n      //     `path.charCodeAt(i)` or `CHAR_FORWARD_SLASH`.\n      //   - PRECONDITION(D) shows that `code` cannot be\n      //     `CHAR_FORWARD_SLASH`, because `!isPathSeparator(code)`, so\n      //     `code` must be `path.charCodeAt(i)`.\n      //   - PRECONDITION(C) shows that `code` cannot be\n      //     `separator.charCodeAt(0)`.\n      //   - This implies that `path[i]` is not `separator`.\n      //   - Thus, `path.slice(lastSlash + 1, i + 1)` does not contain a\n      //     separator, so INVARIANT(I) holds.\n    }\n  }\n  return res;\n}\n","// @flow\n\nimport {DataStorage} from \"./index\";\nimport normalize from \"../../util/pathNormalize\";\nimport {join as pathJoin, isAbsolute} from \"path\";\nimport fetch from \"cross-fetch\";\n\n/**\n * This class serves as a simple wrapper for http GET requests using fetch.\n */\nexport class OriginStorage implements DataStorage {\n  _base: string;\n  constructor(base: string) {\n    this._base = normalize(base);\n  }\n\n  /**\n   * This get method will error if a non-200 or 300-level status was returned.\n   */\n  async get(resource: string): Promise<Uint8Array> {\n    const path = normalize(pathJoin(this._base, resource));\n    if (\n      !path.startsWith(this._base) &&\n      (path.startsWith(\"..\") || isAbsolute(path) || this._base !== \".\")\n    )\n      throw new Error(\n        `Path traversal is not allowed. ${path} is not a subpath of ${this._base}`\n      );\n    const result = await fetch(path);\n    if (!result.ok) {\n      const error = new Error(\n        `Error fetching ${resource}: ${result.status} ${result.statusText}`\n      );\n      error.number = result.status;\n      throw error;\n    }\n\n    return new Uint8Array(await result.arrayBuffer());\n  }\n}\n","// @flow\n\nimport {ReadOnlyInstance} from \"./instance\";\nimport {type CredrankInput} from \"../main/credrank\";\nimport {\n  type WeightedGraph,\n  type WeightedGraphJSON,\n  fromJSON as weightedGraphFromJSON,\n} from \"../../core/weightedGraph\";\nimport {type GraphInput} from \"../main/graph\";\nimport {type GrainInput} from \"../main/grain\";\nimport {type AnalysisInput} from \"../main/analysis\";\nimport {\n  type WeightsT,\n  parser as weightsParser,\n  empty as emptyWeights,\n} from \"../../core/weights\";\nimport {join as pathJoin} from \"path\";\nimport {\n  loadJson,\n  loadFileWithDefault,\n  loadJsonWithDefault,\n} from \"../../util/storage\";\nimport {\n  CredGraph,\n  parser as credGraphParser,\n} from \"../../core/credrank/credGraph\";\nimport {CredGrainView, credGrainViewParser} from \"../../core/credGrainView\";\nimport {Ledger} from \"../../core/ledger/ledger\";\nimport {\n  parser as dependenciesParser,\n  type DependenciesConfig,\n} from \"../dependenciesConfig\";\nimport {type Budget} from \"../../core/mintBudget\";\nimport {\n  rawParser as pluginBudgetParser,\n  upgrade as pluginBudgetUpgrader,\n} from \"../pluginBudgetConfig\";\nimport {\n  rawParser as rawConfigParser,\n  type RawInstanceConfig,\n} from \"../rawInstanceConfig\";\nimport {NetworkStorage} from \"../../core/storage/networkStorage\";\nimport {OriginStorage} from \"../../core/storage/originStorage\";\nimport {ZipStorage} from \"../../core/storage/zip\";\nimport {DataStorage} from \"../../core/storage\";\nimport {type GrainConfig, parser as grainConfigParser} from \"../grainConfig\";\nimport {\n  parser as currencyConfigParser,\n  type CurrencyDetails,\n} from \"../currencyConfig\";\nimport {defaultCurrencyConfig} from \"../currencyConfig\";\nimport {\n  type PersonalAttributionsConfig,\n  personalAttributionsConfigParser,\n} from \"../config/personalAttributionsConfig\";\nimport * as Combo from \"../../util/combo\";\n\nexport const getNetworkReadInstance = (base: string): ReadInstance =>\n  new ReadInstance(new NetworkStorage(base));\nexport const getOriginReadInstance = (base: string): ReadInstance =>\n  new ReadInstance(new OriginStorage(base));\n\nconst DEPENDENCIES_PATH: $ReadOnlyArray<string> = [\n  \"config\",\n  \"dependencies.json\",\n];\nconst WEIGHT_OVERRIDES_PATH: $ReadOnlyArray<string> = [\n  \"config\",\n  \"weights.json\",\n];\nconst BUDGET_PATH: $ReadOnlyArray<string> = [\"config\", \"pluginBudgets.json\"];\nconst GRAIN_PATH: $ReadOnlyArray<string> = [\"config\", \"grain.json\"];\nconst CURRENCY_PATH: $ReadOnlyArray<string> = [\n  \"config\",\n  \"currencyDetails.json\",\n];\nconst PERSONAL_ATTRIBUTIONS_PATH: $ReadOnlyArray<string> = [\n  \"config\",\n  \"personalAttributions.json\",\n];\nconst RAW_INSTANCE_CONFIG_PATH: $ReadOnlyArray<string> = [\"sourcecred.json\"];\nconst LEDGER_PATH: $ReadOnlyArray<string> = [\"data\", \"ledger.json\"];\nconst CREDGRAPH_PATH: $ReadOnlyArray<string> = [\"output\", \"credGraph\"];\nconst CREDGRAINVIEW_PATH: $ReadOnlyArray<string> = [\"output\", \"credGrainView\"];\nconst GRAPHS_DIRECTORY: $ReadOnlyArray<string> = [\"output\", \"graphs\"];\nconst GRAPHS_PATH: $ReadOnlyArray<string> = [\"graph\"];\n\nconst JSON_SUFFIX: string = \".json\";\nconst ZIP_SUFFIX: string = \"\";\n\n/**\nThis is an Instance implementation that reads and writes using relative paths\non the given base URL. The base URL given should end with a trailing slash.\n */\nexport class ReadInstance implements ReadOnlyInstance {\n  _storage: DataStorage;\n  _zipStorage: ZipStorage;\n\n  constructor(storage: DataStorage) {\n    this._storage = storage;\n    this._zipStorage = new ZipStorage(this._storage);\n  }\n\n  async readGraphInput(): Promise<GraphInput> {\n    throw \"not yet implemented\";\n  }\n\n  async readCredrankInput(): Promise<CredrankInput> {\n    const [\n      pluginGraphs,\n      ledger,\n      weightOverrides,\n      dependencies,\n      pluginsBudget,\n      personalAttributions,\n    ] = await Promise.all([\n      this.readPluginGraphs(),\n      this.readLedger(),\n      this.readWeightOverrides(),\n      this.readDependencies(),\n      this.readPluginsBudget(),\n      this.readPersonalAttributions(),\n    ]);\n    return {\n      pluginGraphs,\n      ledger,\n      weightOverrides,\n      dependencies,\n      pluginsBudget,\n      personalAttributions,\n    };\n  }\n\n  async readGrainInput(): Promise<GrainInput> {\n    const [\n      credGraph,\n      ledger,\n      grainConfig,\n      currencyDetails,\n    ] = await Promise.all([\n      this.readCredGraph(),\n      this.readLedger(),\n      this.readGrainConfig(),\n      this.readCurrencyDetails(),\n    ]);\n    return {\n      credGraph,\n      ledger,\n      grainConfig,\n      currencyDetails,\n    };\n  }\n\n  async readAnalysisInput(): Promise<AnalysisInput> {\n    const [credGraph, ledger] = await Promise.all([\n      this.readCredGraph(),\n      this.readLedger(),\n    ]);\n    return {\n      credGraph,\n      ledger,\n    };\n  }\n\n  async readWeightedGraphForPlugin(pluginId: string): Promise<WeightedGraph> {\n    const outputPath = pathJoin(\n      this.createPluginGraphDirectory(pluginId),\n      ...GRAPHS_PATH\n    );\n    const graphJSON = await loadJson(\n      this._zipStorage,\n      outputPath,\n      ((Combo.raw: any): Combo.Parser<WeightedGraphJSON>)\n    );\n    return weightedGraphFromJSON(graphJSON);\n  }\n\n  async readCredGraph(): Promise<CredGraph> {\n    const credGraphPath = pathJoin(...CREDGRAPH_PATH);\n    return await loadJson(\n      this._zipStorage,\n      credGraphPath + ZIP_SUFFIX,\n      credGraphParser\n    ).catch(() =>\n      loadJson(this._storage, credGraphPath + JSON_SUFFIX, credGraphParser)\n    );\n  }\n\n  async readCredGrainView(): Promise<CredGrainView> {\n    const path = pathJoin(...CREDGRAINVIEW_PATH);\n    return loadJson(\n      this._zipStorage,\n      path + ZIP_SUFFIX,\n      credGrainViewParser\n    ).catch(() =>\n      loadJson(this._storage, path + JSON_SUFFIX, credGrainViewParser)\n    );\n  }\n\n  async readLedger(): Promise<Ledger> {\n    const ledgerPath = pathJoin(...LEDGER_PATH);\n    return loadFileWithDefault(this._storage, ledgerPath, () =>\n      new Ledger().serialize()\n    ).then((result) => Ledger.parse(result));\n  }\n\n  async readGrainConfig(): Promise<GrainConfig> {\n    const grainConfigPath = pathJoin(...GRAIN_PATH);\n    return loadJson(this._storage, grainConfigPath, grainConfigParser);\n  }\n\n  async readCurrencyDetails(): Promise<CurrencyDetails> {\n    const currencyDetailsPath = pathJoin(...CURRENCY_PATH);\n    return loadJsonWithDefault(\n      this._storage,\n      currencyDetailsPath,\n      currencyConfigParser,\n      defaultCurrencyConfig\n    );\n  }\n\n  // Private Functions\n\n  async readRawInstanceConfig(): Promise<RawInstanceConfig> {\n    const pluginsConfigPath = pathJoin(...RAW_INSTANCE_CONFIG_PATH);\n    return loadJson(this._storage, pluginsConfigPath, rawConfigParser);\n  }\n\n  async readPersonalAttributions(): Promise<PersonalAttributionsConfig> {\n    const path = pathJoin(...PERSONAL_ATTRIBUTIONS_PATH);\n    return loadJsonWithDefault(\n      this._storage,\n      path,\n      personalAttributionsConfigParser,\n      () => []\n    );\n  }\n\n  async readPluginGraphs(): Promise<Array<WeightedGraph>> {\n    const instanceConfig = await this.readRawInstanceConfig();\n    const pluginNames = instanceConfig.bundledPlugins;\n    return await Promise.all(\n      pluginNames.map(async (name) => {\n        const outputDir = this.createPluginDirectory(GRAPHS_DIRECTORY, name);\n        const outputPath = pathJoin(outputDir, ...GRAPHS_PATH);\n        const graphJSON = await loadJson(\n          this._zipStorage,\n          outputPath + ZIP_SUFFIX,\n          ((Combo.raw: any): Combo.Parser<WeightedGraphJSON>)\n        ).catch(() =>\n          loadJson(\n            this._storage,\n            outputPath + JSON_SUFFIX,\n            ((Combo.raw: any): Combo.Parser<WeightedGraphJSON>)\n          )\n        );\n        return weightedGraphFromJSON(graphJSON);\n      })\n    );\n  }\n\n  async readWeightOverrides(): Promise<WeightsT> {\n    const weightsPath = pathJoin(...WEIGHT_OVERRIDES_PATH);\n    return loadJsonWithDefault(\n      this._storage,\n      weightsPath,\n      weightsParser,\n      emptyWeights\n    );\n  }\n\n  async readDependencies(): Promise<DependenciesConfig> {\n    const dependenciesPath = pathJoin(...DEPENDENCIES_PATH);\n    return loadJsonWithDefault(\n      this._storage,\n      dependenciesPath,\n      dependenciesParser,\n      () => []\n    );\n  }\n\n  async readPluginsBudget(): Promise<Budget | null> {\n    const budgetPath = pathJoin(...BUDGET_PATH);\n    const raw = await loadJsonWithDefault(\n      this._storage,\n      budgetPath,\n      pluginBudgetParser,\n      () => null\n    );\n    return raw ? await pluginBudgetUpgrader(raw, this._storage) : null;\n  }\n\n  createPluginDirectory(\n    components: $ReadOnlyArray<string>,\n    pluginId: string\n  ): string {\n    const idParts = pluginId.split(\"/\");\n    if (idParts.length !== 2) {\n      throw new Error(`Bad plugin name: ${pluginId}`);\n    }\n    const [pluginOwner, pluginName] = idParts;\n    const pathComponents = [...components, pluginOwner, pluginName];\n    return pathJoin(...pathComponents);\n  }\n\n  createPluginGraphDirectory(pluginId: string): string {\n    return this.createPluginDirectory(GRAPHS_DIRECTORY, pluginId);\n  }\n}\n","// @flow\n\nimport deepFreeze from \"deep-freeze\";\n\n// Exports for calling SourceCred code programmatically. Both the\n// structure and the contents of this API are experimental and subject\n// to change.\nimport * as discourseAddress from \"../plugins/discourse/address\";\nimport * as discourseDeclaration from \"../plugins/discourse/declaration\";\nimport * as discordDeclaration from \"../plugins/discord/declaration\";\nimport * as discordUtils from \"../plugins/discord/utils\";\n\nimport * as initiativesDeclaration from \"../plugins/initiatives/declaration\";\nimport * as githubDeclaration from \"../plugins/github/declaration\";\nimport * as githubEdges from \"../plugins/github/edges\";\nimport * as githubNodes from \"../plugins/github/nodes\";\nimport * as ethereumDeclaration from \"../plugins/ethereum/declaration\";\nimport * as ethereumUtils from \"../plugins/ethereum/utils\";\nimport {declarationParser} from \"../analysis/pluginDeclaration\";\nimport {identityProposalsParser} from \"../core/ledger/identityProposal\";\nimport {ConstructorPlugin} from \"../plugins/external/plugin\";\nimport {coerce as coerceNameFromString} from \"../core/identity/name\";\n\nimport * as address from \"../core/address\";\nimport * as graph from \"../core/graph\";\nimport * as weightedGraph from \"../core/weightedGraph\";\nimport * as weights from \"../core/weights\";\nimport * as graphToMarkovChain from \"../core/algorithm/graphToMarkovChain\";\nimport * as markovChain from \"../core/algorithm/markovChain\";\nimport * as credGraph from \"../core/credrank/credGraph\";\nimport {CredGrainView} from \"../core/credGrainView\";\nimport * as ledger from \"../core/ledger/ledger\";\nimport * as ledgerUtils from \"../core/ledger/utils\";\nimport * as grain from \"../core/ledger/grain\";\nimport * as identity from \"../core/identity\";\n\nimport * as manager from \"./ledgerManager\";\nimport * as storage from \"./ledgerStorage\";\nimport * as credrank from \"./main/credrank\";\nimport * as graphApi from \"./main/graph\";\nimport * as grainApi from \"./main/grain\";\nimport * as readInstance from \"../api/instance/readInstance\";\n\nconst api = {\n  api: {\n    graph: graphApi,\n    credrank,\n    grain: grainApi,\n  },\n  instance: {\n    readInstance,\n  },\n  core: {\n    address,\n    algorithm: {\n      markovChain,\n      graphToMarkovChain,\n    },\n    graph,\n    weightedGraph,\n    weights,\n    credGraph,\n    CredGrainView,\n  },\n  ledger: {\n    ledger,\n    identity,\n    grain,\n    utils: ledgerUtils,\n    manager,\n    storage,\n  },\n  plugins: {\n    ConstructorPlugin,\n    github: {\n      declaration: githubDeclaration,\n      edges: githubEdges,\n      nodes: githubNodes,\n    },\n    ethereum: {\n      declaration: ethereumDeclaration,\n      utils: ethereumUtils,\n    },\n    discourse: {\n      address: discourseAddress,\n      declaration: discourseDeclaration,\n    },\n    discord: {\n      declaration: discordDeclaration,\n      utils: discordUtils,\n    },\n    initiatives: {\n      declaration: initiativesDeclaration,\n    },\n    declarationParser,\n    identityProposalsParser,\n    coerceNameFromString,\n  },\n};\n\nexport default (deepFreeze(api): typeof api);\n"],"sourceRoot":""}